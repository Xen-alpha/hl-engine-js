{
 var newModule = (function(fb, parentModule) {
  var Module = {};
  var args = [];
  Module.arguments = [];
  Module.print = parentModule.print;
  Module.printErr = parentModule.printErr;
  Module.cleanups = [];
  var gb = 0;
  var STACKTOP = getMemory(TOTAL_STACK);
  assert(STACKTOP % 8 == 0);
  var STACK_MAX = STACKTOP + TOTAL_STACK;
  Module.cleanups.push((function() {
   parentModule["_free"](STACKTOP);
   parentModule["_free"](gb);
  }));
  var ASM_CONSTS = [];
  gb = Runtime.alignMemory(getMemory(14e4, 8 || 1));
  __ATINIT__.push({
   func: (function() {
    __GLOBAL__sub_I_cdll_int_cpp();
   })
  });
  allocate([ 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 57, 113, 0, 0, 2, 106, 0, 0, 89, 103, 0, 0, 235, 36, 0, 0, 100, 69, 0, 0, 157, 42, 0, 0, 118, 112, 0, 0, 12, 34, 0, 0, 217, 24, 0, 0, 245, 18, 0, 0, 134, 69, 0, 0, 217, 85, 0, 0, 187, 76, 0, 0, 182, 80, 0, 0, 82, 42, 0, 0, 135, 78, 0, 0, 187, 105, 0, 0, 218, 111, 0, 0, 191, 72, 0, 0, 249, 100, 0, 0, 128, 33, 0, 0, 122, 102, 0, 0, 79, 93, 0, 0, 52, 71, 0, 0, 75, 127, 0, 0, 228, 18, 0, 0, 234, 12, 0, 0, 19, 7, 0, 0, 219, 11, 0, 0, 239, 95, 0, 0, 223, 71, 0, 0, 59, 1, 0, 0, 142, 104, 0, 0, 139, 3, 0, 0, 38, 94, 0, 0, 82, 48, 0, 0, 202, 37, 0, 0, 156, 11, 0, 0, 232, 40, 0, 0, 108, 64, 0, 0, 155, 88, 0, 0, 9, 45, 0, 0, 64, 109, 0, 0, 198, 118, 0, 0, 157, 51, 0, 0, 15, 9, 0, 0, 68, 92, 0, 0, 183, 65, 0, 0, 29, 39, 0, 0, 220, 92, 0, 0, 63, 84, 0, 0, 227, 4, 0, 0, 123, 76, 0, 0, 89, 79, 0, 0, 65, 71, 0, 0, 178, 117, 0, 0, 210, 32, 0, 0, 71, 81, 0, 0, 218, 106, 0, 0, 1, 28, 0, 0, 219, 82, 0, 0, 141, 67, 0, 0, 34, 21, 0, 0, 23, 75, 0, 0, 15, 40, 0, 0, 208, 87, 0, 0, 252, 106, 0, 0, 218, 38, 0, 0, 12, 61, 0, 0, 69, 95, 0, 0, 156, 67, 0, 0, 66, 9, 0, 0, 58, 37, 0, 0, 195, 123, 0, 0, 71, 101, 0, 0, 15, 92, 0, 0, 174, 45, 0, 0, 29, 103, 0, 0, 90, 127, 0, 0, 183, 58, 0, 0, 79, 71, 0, 0, 174, 68, 0, 0, 142, 5, 0, 0, 163, 112, 0, 0, 55, 92, 0, 0, 53, 49, 0, 0, 122, 80, 0, 0, 154, 39, 0, 0, 92, 20, 0, 0, 228, 4, 0, 0, 90, 39, 0, 0, 126, 90, 0, 0, 111, 77, 0, 0, 179, 123, 0, 0, 14, 23, 0, 0, 54, 96, 0, 0, 4, 74, 0, 0, 250, 55, 0, 0, 102, 58, 0, 0, 235, 34, 0, 0, 244, 91, 0, 0, 63, 83, 0, 0, 156, 87, 0, 0, 119, 87, 0, 0, 255, 13, 0, 0, 76, 113, 0, 0, 34, 119, 0, 0, 26, 73, 0, 0, 182, 16, 0, 0, 133, 9, 0, 0, 158, 87, 0, 0, 111, 13, 0, 0, 153, 110, 0, 0, 121, 90, 0, 0, 52, 99, 0, 0, 159, 52, 0, 0, 124, 75, 0, 0, 183, 59, 0, 0, 3, 10, 0, 0, 213, 73, 0, 0, 47, 51, 0, 0, 227, 65, 0, 0, 242, 37, 0, 0, 242, 55, 0, 0, 93, 59, 0, 0, 9, 105, 0, 0, 172, 75, 0, 0, 129, 102, 0, 0, 181, 124, 0, 0, 48, 57, 0, 0, 233, 44, 0, 0, 237, 34, 0, 0, 72, 39, 0, 0, 51, 25, 0, 0, 240, 111, 0, 0, 241, 41, 0, 0, 50, 54, 0, 0, 204, 67, 0, 0, 89, 32, 0, 0, 81, 101, 0, 0, 125, 6, 0, 0, 242, 18, 0, 0, 24, 29, 0, 0, 200, 49, 0, 0, 66, 85, 0, 0, 101, 21, 0, 0, 183, 39, 0, 0, 65, 65, 0, 0, 17, 105, 0, 0, 135, 34, 0, 0, 227, 120, 0, 0, 74, 109, 0, 0, 147, 106, 0, 0, 109, 96, 0, 0, 42, 126, 0, 0, 197, 13, 0, 0, 110, 48, 0, 0, 54, 112, 0, 0, 3, 37, 0, 0, 224, 39, 0, 0, 105, 2, 0, 0, 155, 52, 0, 0, 15, 87, 0, 0, 72, 9, 0, 0, 209, 23, 0, 0, 200, 102, 0, 0, 158, 11, 0, 0, 154, 35, 0, 0, 27, 85, 0, 0, 106, 109, 0, 0, 117, 18, 0, 0, 27, 60, 0, 0, 202, 12, 0, 0, 10, 42, 0, 0, 207, 123, 0, 0, 168, 67, 0, 0, 148, 71, 0, 0, 153, 48, 0, 0, 161, 65, 0, 0, 240, 106, 0, 0, 192, 87, 0, 0, 76, 29, 0, 0, 34, 22, 0, 0, 224, 70, 0, 0, 210, 59, 0, 0, 170, 124, 0, 0, 139, 123, 0, 0, 95, 25, 0, 0, 106, 20, 0, 0, 227, 121, 0, 0, 27, 9, 0, 0, 60, 18, 0, 0, 106, 49, 0, 0, 99, 71, 0, 0, 95, 1, 0, 0, 100, 28, 0, 0, 87, 122, 0, 0, 167, 117, 0, 0, 176, 29, 0, 0, 89, 11, 0, 0, 2, 54, 0, 0, 79, 44, 0, 0, 253, 50, 0, 0, 223, 60, 0, 0, 103, 117, 0, 0, 117, 121, 0, 0, 203, 19, 0, 0, 249, 2, 0, 0, 213, 37, 0, 0, 62, 43, 0, 0, 121, 83, 0, 0, 19, 106, 0, 0, 79, 14, 0, 0, 174, 103, 0, 0, 201, 78, 0, 0, 129, 47, 0, 0, 51, 60, 0, 0, 193, 118, 0, 0, 156, 29, 0, 0, 40, 124, 0, 0, 25, 35, 0, 0, 183, 114, 0, 0, 253, 81, 0, 0, 123, 55, 0, 0, 254, 115, 0, 0, 175, 82, 0, 0, 97, 40, 0, 0, 170, 6, 0, 0, 162, 111, 0, 0, 119, 3, 0, 0, 45, 13, 0, 0, 21, 76, 0, 0, 46, 56, 0, 0, 163, 2, 0, 0, 121, 27, 0, 0, 7, 59, 0, 0, 26, 102, 0, 0, 220, 47, 0, 0, 20, 121, 0, 0, 161, 83, 0, 0, 78, 100, 0, 0, 123, 72, 0, 0, 200, 51, 0, 0, 20, 91, 0, 0, 135, 87, 0, 0, 87, 65, 0, 0, 223, 3, 0, 0, 20, 36, 0, 0, 253, 20, 0, 0, 218, 114, 0, 0, 229, 23, 0, 0, 137, 59, 0, 0, 67, 108, 0, 0, 91, 75, 0, 0, 176, 77, 0, 0, 135, 77, 0, 0, 154, 153, 25, 63, 205, 204, 76, 63, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 128, 62, 0, 0, 128, 62, 154, 153, 25, 63, 0, 0, 128, 63, 154, 153, 25, 63, 0, 0, 128, 63, 51, 51, 51, 63, 0, 0, 0, 0, 205, 204, 76, 63, 205, 204, 76, 63, 205, 204, 76, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 16, 0, 16, 0, 64, 0, 0, 64, 0, 0, 8, 0, 32, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 1, 0, 0, 0, 0, 0, 64, 0, 0, 128, 0, 0, 2, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 13, 0, 0, 0, 13, 0, 0, 0, 13, 0, 0, 0, 13, 0, 0, 0, 13, 0, 0, 0, 12, 0, 0, 0, 11, 0, 0, 0, 10, 0, 0, 0, 9, 0, 0, 0, 8, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 20, 0, 0, 0, 20, 0, 0, 0, 20, 0, 0, 0, 20, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 25, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 29, 0, 0, 0, 29, 0, 0, 0, 29, 0, 0, 0, 29, 0, 0, 0, 29, 0, 0, 0, 29, 0, 0, 0, 28, 0, 0, 0, 27, 0, 0, 0, 26, 0, 0, 0, 25, 0, 0, 0, 24, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 160, 64, 0, 0, 12, 66, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 154, 153, 153, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 204, 204, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 154, 153, 153, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 64, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 6, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 6, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 0, 0, 128, 127, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 109, 111, 100, 101, 108, 115, 47, 119, 95, 99, 114, 111, 115, 115, 98, 111, 119, 46, 109, 100, 108, 0, 98, 111, 108, 116, 115, 0, 57, 67, 67, 114, 111, 115, 115, 98, 111, 119, 0, 49, 51, 67, 67, 114, 111, 115, 115, 98, 111, 119, 65, 109, 109, 111, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 99, 114, 111, 115, 115, 98, 111, 119, 95, 99, 108, 105, 112, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 99, 114, 111, 119, 98, 97, 114, 46, 109, 100, 108, 0, 119, 101, 97, 112, 111, 110, 115, 47, 99, 98, 97, 114, 95, 104, 105, 116, 49, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 99, 98, 97, 114, 95, 104, 105, 116, 50, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 99, 98, 97, 114, 95, 104, 105, 116, 98, 111, 100, 49, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 99, 98, 97, 114, 95, 104, 105, 116, 98, 111, 100, 50, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 99, 98, 97, 114, 95, 104, 105, 116, 98, 111, 100, 51, 46, 119, 97, 118, 0, 56, 67, 67, 114, 111, 119, 98, 97, 114, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 101, 103, 111, 110, 46, 109, 100, 108, 0, 115, 112, 114, 105, 116, 101, 115, 47, 88, 83, 112, 97, 114, 107, 49, 46, 115, 112, 114, 0, 53, 67, 69, 103, 111, 110, 0, 57, 67, 69, 103, 111, 110, 65, 109, 109, 111, 0, 100, 101, 98, 114, 105, 115, 47, 119, 111, 111, 100, 49, 46, 119, 97, 118, 0, 100, 101, 98, 114, 105, 115, 47, 119, 111, 111, 100, 50, 46, 119, 97, 118, 0, 100, 101, 98, 114, 105, 115, 47, 119, 111, 111, 100, 51, 46, 119, 97, 118, 0, 100, 101, 98, 114, 105, 115, 47, 103, 108, 97, 115, 115, 49, 46, 119, 97, 118, 0, 100, 101, 98, 114, 105, 115, 47, 103, 108, 97, 115, 115, 50, 46, 119, 97, 118, 0, 100, 101, 98, 114, 105, 115, 47, 103, 108, 97, 115, 115, 51, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 98, 117, 108, 108, 101, 116, 95, 104, 105, 116, 49, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 98, 117, 108, 108, 101, 116, 95, 104, 105, 116, 50, 46, 119, 97, 118, 0, 123, 98, 114, 101, 97, 107, 37, 105, 0, 123, 98, 112, 114, 111, 111, 102, 49, 0, 123, 115, 104, 111, 116, 37, 105, 0, 119, 101, 97, 112, 111, 110, 115, 47, 114, 105, 99, 49, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 114, 105, 99, 50, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 114, 105, 99, 51, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 114, 105, 99, 52, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 114, 105, 99, 53, 46, 119, 97, 118, 0, 114, 95, 100, 101, 99, 97, 108, 115, 0, 119, 101, 97, 112, 111, 110, 115, 47, 99, 98, 97, 114, 95, 109, 105, 115, 115, 49, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 120, 98, 111, 119, 95, 102, 105, 114, 101, 49, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 120, 98, 111, 119, 95, 114, 101, 108, 111, 97, 100, 49, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 120, 98, 111, 119, 95, 104, 105, 116, 98, 111, 100, 49, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 120, 98, 111, 119, 95, 104, 105, 116, 98, 111, 100, 50, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 120, 98, 111, 119, 95, 104, 105, 116, 49, 46, 119, 97, 118, 0, 109, 111, 100, 101, 108, 115, 47, 99, 114, 111, 115, 115, 98, 111, 119, 95, 98, 111, 108, 116, 46, 109, 100, 108, 0, 119, 101, 97, 112, 111, 110, 115, 47, 101, 103, 111, 110, 95, 119, 105, 110, 100, 117, 112, 50, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 101, 103, 111, 110, 95, 114, 117, 110, 51, 46, 119, 97, 118, 0, 115, 112, 114, 105, 116, 101, 115, 47, 120, 98, 101, 97, 109, 49, 46, 115, 112, 114, 0, 119, 101, 97, 112, 111, 110, 115, 47, 101, 103, 111, 110, 95, 111, 102, 102, 49, 46, 119, 97, 118, 0, 97, 103, 114, 117, 110, 116, 47, 97, 103, 95, 102, 105, 114, 101, 49, 46, 119, 97, 118, 0, 97, 103, 114, 117, 110, 116, 47, 97, 103, 95, 102, 105, 114, 101, 50, 46, 119, 97, 118, 0, 97, 103, 114, 117, 110, 116, 47, 97, 103, 95, 102, 105, 114, 101, 51, 46, 119, 97, 118, 0, 112, 108, 97, 116, 115, 47, 116, 116, 114, 97, 105, 110, 49, 46, 119, 97, 118, 0, 112, 108, 97, 116, 115, 47, 116, 116, 114, 97, 105, 110, 50, 46, 119, 97, 118, 0, 112, 108, 97, 116, 115, 47, 116, 116, 114, 97, 105, 110, 51, 46, 119, 97, 118, 0, 112, 108, 97, 116, 115, 47, 116, 116, 114, 97, 105, 110, 52, 46, 119, 97, 118, 0, 112, 108, 97, 116, 115, 47, 116, 116, 114, 97, 105, 110, 54, 46, 119, 97, 118, 0, 112, 108, 97, 116, 115, 47, 116, 116, 114, 97, 105, 110, 55, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 101, 108, 101, 99, 116, 114, 111, 52, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 101, 108, 101, 99, 116, 114, 111, 53, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 101, 108, 101, 99, 116, 114, 111, 54, 46, 119, 97, 118, 0, 115, 111, 117, 110, 100, 32, 115, 116, 97, 116, 101, 32, 37, 100, 10, 0, 117, 114, 97, 110, 105, 117, 109, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 103, 97, 117, 115, 115, 46, 109, 100, 108, 0, 119, 101, 97, 112, 111, 110, 115, 47, 103, 97, 117, 115, 115, 50, 46, 119, 97, 118, 0, 97, 109, 98, 105, 101, 110, 99, 101, 47, 112, 117, 108, 115, 101, 109, 97, 99, 104, 105, 110, 101, 46, 119, 97, 118, 0, 115, 112, 114, 105, 116, 101, 115, 47, 104, 111, 116, 103, 108, 111, 119, 46, 115, 112, 114, 0, 115, 112, 114, 105, 116, 101, 115, 47, 115, 109, 111, 107, 101, 46, 115, 112, 114, 0, 54, 67, 71, 97, 117, 115, 115, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 103, 97, 117, 115, 115, 97, 109, 109, 111, 46, 109, 100, 108, 0, 49, 48, 67, 71, 97, 117, 115, 115, 65, 109, 109, 111, 0, 72, 97, 110, 100, 32, 71, 114, 101, 110, 97, 100, 101, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 103, 114, 101, 110, 97, 100, 101, 46, 109, 100, 108, 0, 49, 50, 67, 72, 97, 110, 100, 71, 114, 101, 110, 97, 100, 101, 0, 49, 49, 67, 66, 97, 115, 101, 69, 110, 116, 105, 116, 121, 0, 49, 48, 67, 66, 97, 115, 101, 68, 101, 108, 97, 121, 0, 49, 52, 67, 66, 97, 115, 101, 65, 110, 105, 109, 97, 116, 105, 110, 103, 0, 49, 49, 67, 66, 97, 115, 101, 84, 111, 103, 103, 108, 101, 0, 56, 67, 71, 114, 101, 110, 97, 100, 101, 0, 49, 50, 67, 66, 97, 115, 101, 77, 111, 110, 115, 116, 101, 114, 0, 49, 55, 67, 66, 97, 115, 101, 80, 108, 97, 121, 101, 114, 87, 101, 97, 112, 111, 110, 0, 49, 53, 67, 66, 97, 115, 101, 80, 108, 97, 121, 101, 114, 73, 116, 101, 109, 0, 49, 53, 67, 66, 97, 115, 101, 80, 108, 97, 121, 101, 114, 65, 109, 109, 111, 0, 101, 118, 101, 110, 116, 115, 47, 103, 97, 117, 115, 115, 46, 115, 99, 0, 101, 118, 101, 110, 116, 115, 47, 103, 97, 117, 115, 115, 115, 112, 105, 110, 46, 115, 99, 0, 101, 118, 101, 110, 116, 115, 47, 116, 114, 97, 105, 110, 46, 115, 99, 0, 101, 118, 101, 110, 116, 115, 47, 99, 114, 111, 119, 98, 97, 114, 46, 115, 99, 0, 101, 118, 101, 110, 116, 115, 47, 99, 114, 111, 115, 115, 98, 111, 119, 49, 46, 115, 99, 0, 101, 118, 101, 110, 116, 115, 47, 99, 114, 111, 115, 115, 98, 111, 119, 50, 46, 115, 99, 0, 101, 118, 101, 110, 116, 115, 47, 101, 103, 111, 110, 95, 102, 105, 114, 101, 46, 115, 99, 0, 101, 118, 101, 110, 116, 115, 47, 101, 103, 111, 110, 95, 115, 116, 111, 112, 46, 115, 99, 0, 49, 49, 67, 66, 97, 115, 101, 80, 108, 97, 121, 101, 114, 0, 99, 108, 58, 32, 32, 0, 99, 58, 92, 104, 108, 46, 108, 111, 103, 0, 37, 46, 52, 102, 32, 0, 37, 105, 32, 0, 72, 111, 114, 110, 101, 116, 115, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 104, 103, 117, 110, 46, 109, 100, 108, 0, 101, 118, 101, 110, 116, 115, 47, 102, 105, 114, 101, 104, 111, 114, 110, 101, 116, 46, 115, 99, 0, 53, 67, 72, 103, 117, 110, 0, 65, 82, 103, 114, 101, 110, 97, 100, 101, 115, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 57, 109, 109, 65, 82, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 57, 109, 109, 65, 82, 99, 108, 105, 112, 46, 109, 100, 108, 0, 105, 116, 101, 109, 115, 47, 99, 108, 105, 112, 105, 110, 115, 101, 114, 116, 49, 46, 119, 97, 118, 0, 105, 116, 101, 109, 115, 47, 99, 108, 105, 112, 114, 101, 108, 101, 97, 115, 101, 49, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 104, 107, 115, 49, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 104, 107, 115, 50, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 104, 107, 115, 51, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 103, 108, 97, 117, 110, 99, 104, 101, 114, 50, 46, 119, 97, 118, 0, 101, 118, 101, 110, 116, 115, 47, 109, 112, 53, 46, 115, 99, 0, 101, 118, 101, 110, 116, 115, 47, 109, 112, 53, 50, 46, 115, 99, 0, 119, 101, 97, 112, 111, 110, 95, 57, 109, 109, 65, 82, 0, 52, 67, 77, 80, 53, 0, 49, 50, 67, 77, 80, 53, 65, 109, 109, 111, 67, 108, 105, 112, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 99, 104, 97, 105, 110, 97, 109, 109, 111, 46, 109, 100, 108, 0, 49, 51, 67, 77, 80, 53, 67, 104, 97, 105, 110, 97, 109, 109, 111, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 65, 82, 103, 114, 101, 110, 97, 100, 101, 46, 109, 100, 108, 0, 49, 53, 67, 77, 80, 53, 65, 109, 109, 111, 71, 114, 101, 110, 97, 100, 101, 0, 119, 101, 97, 112, 111, 110, 115, 47, 51, 53, 55, 95, 114, 101, 108, 111, 97, 100, 49, 46, 119, 97, 118, 0, 51, 53, 55, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 51, 53, 55, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 51, 53, 55, 97, 109, 109, 111, 98, 111, 120, 46, 109, 100, 108, 0, 119, 101, 97, 112, 111, 110, 115, 47, 51, 53, 55, 95, 115, 104, 111, 116, 49, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 51, 53, 55, 95, 115, 104, 111, 116, 50, 46, 119, 97, 118, 0, 101, 118, 101, 110, 116, 115, 47, 112, 121, 116, 104, 111, 110, 46, 115, 99, 0, 119, 101, 97, 112, 111, 110, 95, 51, 53, 55, 0, 55, 67, 80, 121, 116, 104, 111, 110, 0, 49, 49, 67, 80, 121, 116, 104, 111, 110, 65, 109, 109, 111, 0, 114, 111, 99, 107, 101, 116, 115, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 114, 112, 103, 46, 109, 100, 108, 0, 119, 101, 97, 112, 111, 110, 115, 47, 114, 111, 99, 107, 101, 116, 102, 105, 114, 101, 49, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 103, 108, 97, 117, 110, 99, 104, 101, 114, 46, 119, 97, 118, 0, 101, 118, 101, 110, 116, 115, 47, 114, 112, 103, 46, 115, 99, 0, 52, 67, 82, 112, 103, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 114, 112, 103, 97, 109, 109, 111, 46, 109, 100, 108, 0, 56, 67, 82, 112, 103, 65, 109, 109, 111, 0, 119, 101, 97, 112, 111, 110, 115, 47, 103, 95, 98, 111, 117, 110, 99, 101, 49, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 103, 95, 98, 111, 117, 110, 99, 101, 50, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 103, 95, 98, 111, 117, 110, 99, 101, 51, 46, 119, 97, 118, 0, 109, 111, 100, 101, 108, 115, 47, 103, 114, 101, 110, 97, 100, 101, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 115, 97, 116, 99, 104, 101, 108, 46, 109, 100, 108, 0, 49, 52, 67, 83, 97, 116, 99, 104, 101, 108, 67, 104, 97, 114, 103, 101, 0, 116, 114, 105, 112, 0, 104, 105, 118, 101, 0, 109, 111, 110, 115, 116, 101, 114, 95, 115, 97, 116, 99, 104, 101, 108, 0, 83, 97, 116, 99, 104, 101, 108, 32, 67, 104, 97, 114, 103, 101, 0, 56, 67, 83, 97, 116, 99, 104, 101, 108, 0, 119, 101, 97, 112, 111, 110, 115, 47, 115, 99, 111, 99, 107, 49, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 114, 101, 108, 111, 97, 100, 49, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 114, 101, 108, 111, 97, 100, 51, 46, 119, 97, 118, 0, 98, 117, 99, 107, 115, 104, 111, 116, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 115, 104, 111, 116, 103, 117, 110, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 115, 104, 111, 116, 103, 117, 110, 115, 104, 101, 108, 108, 46, 109, 100, 108, 0, 119, 101, 97, 112, 111, 110, 115, 47, 100, 98, 97, 114, 114, 101, 108, 49, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 115, 98, 97, 114, 114, 101, 108, 49, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 51, 53, 55, 95, 99, 111, 99, 107, 49, 46, 119, 97, 118, 0, 101, 118, 101, 110, 116, 115, 47, 115, 104, 111, 116, 103, 117, 110, 49, 46, 115, 99, 0, 101, 118, 101, 110, 116, 115, 47, 115, 104, 111, 116, 103, 117, 110, 50, 46, 115, 99, 0, 56, 67, 83, 104, 111, 116, 103, 117, 110, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 115, 104, 111, 116, 98, 111, 120, 46, 109, 100, 108, 0, 49, 50, 67, 83, 104, 111, 116, 103, 117, 110, 65, 109, 109, 111, 0, 115, 113, 117, 101, 101, 107, 47, 115, 113, 107, 95, 104, 117, 110, 116, 50, 46, 119, 97, 118, 0, 115, 113, 117, 101, 101, 107, 47, 115, 113, 107, 95, 104, 117, 110, 116, 51, 46, 119, 97, 118, 0, 83, 110, 97, 114, 107, 115, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 115, 113, 107, 110, 101, 115, 116, 46, 109, 100, 108, 0, 101, 118, 101, 110, 116, 115, 47, 115, 110, 97, 114, 107, 102, 105, 114, 101, 46, 115, 99, 0, 55, 67, 83, 113, 117, 101, 97, 107, 0, 84, 114, 105, 112, 32, 77, 105, 110, 101, 0, 101, 118, 101, 110, 116, 115, 47, 116, 114, 105, 112, 102, 105, 114, 101, 46, 115, 99, 0, 57, 67, 84, 114, 105, 112, 109, 105, 110, 101, 0, 57, 109, 109, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 57, 109, 109, 104, 97, 110, 100, 103, 117, 110, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 115, 104, 101, 108, 108, 46, 109, 100, 108, 0, 105, 116, 101, 109, 115, 47, 57, 109, 109, 99, 108, 105, 112, 49, 46, 119, 97, 118, 0, 105, 116, 101, 109, 115, 47, 57, 109, 109, 99, 108, 105, 112, 50, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 112, 108, 95, 103, 117, 110, 49, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 112, 108, 95, 103, 117, 110, 50, 46, 119, 97, 118, 0, 119, 101, 97, 112, 111, 110, 115, 47, 112, 108, 95, 103, 117, 110, 51, 46, 119, 97, 118, 0, 101, 118, 101, 110, 116, 115, 47, 103, 108, 111, 99, 107, 49, 46, 115, 99, 0, 101, 118, 101, 110, 116, 115, 47, 103, 108, 111, 99, 107, 50, 46, 115, 99, 0, 119, 101, 97, 112, 111, 110, 95, 57, 109, 109, 104, 97, 110, 100, 103, 117, 110, 0, 54, 67, 71, 108, 111, 99, 107, 0, 109, 111, 100, 101, 108, 115, 47, 119, 95, 57, 109, 109, 99, 108, 105, 112, 46, 109, 100, 108, 0, 49, 48, 67, 71, 108, 111, 99, 107, 65, 109, 109, 111, 0, 99, 111, 109, 109, 111, 110, 47, 119, 112, 110, 95, 115, 101, 108, 101, 99, 116, 46, 119, 97, 118, 0, 98, 117, 99, 107, 101, 116, 49, 0, 115, 101, 108, 101, 99, 116, 105, 111, 110, 0, 115, 112, 114, 105, 116, 101, 115, 47, 37, 115, 46, 116, 120, 116, 0, 99, 114, 111, 115, 115, 104, 97, 105, 114, 0, 97, 117, 116, 111, 97, 105, 109, 0, 122, 111, 111, 109, 95, 97, 117, 116, 111, 97, 105, 109, 0, 119, 101, 97, 112, 111, 110, 0, 119, 101, 97, 112, 111, 110, 95, 115, 0, 97, 109, 109, 111, 0, 97, 109, 109, 111, 50, 0, 67, 117, 114, 87, 101, 97, 112, 111, 110, 0, 87, 101, 97, 112, 111, 110, 76, 105, 115, 116, 0, 65, 109, 109, 111, 80, 105, 99, 107, 117, 112, 0, 87, 101, 97, 112, 80, 105, 99, 107, 117, 112, 0, 73, 116, 101, 109, 80, 105, 99, 107, 117, 112, 0, 72, 105, 100, 101, 87, 101, 97, 112, 111, 110, 0, 65, 109, 109, 111, 88, 0, 115, 108, 111, 116, 49, 0, 115, 108, 111, 116, 50, 0, 115, 108, 111, 116, 51, 0, 115, 108, 111, 116, 52, 0, 115, 108, 111, 116, 53, 0, 115, 108, 111, 116, 54, 0, 115, 108, 111, 116, 55, 0, 115, 108, 111, 116, 56, 0, 115, 108, 111, 116, 57, 0, 115, 108, 111, 116, 49, 48, 0, 99, 97, 110, 99, 101, 108, 115, 101, 108, 101, 99, 116, 0, 105, 110, 118, 110, 101, 120, 116, 0, 105, 110, 118, 112, 114, 101, 118, 0, 104, 117, 100, 95, 102, 97, 115, 116, 115, 119, 105, 116, 99, 104, 0, 99, 111, 109, 109, 111, 110, 47, 119, 112, 110, 95, 104, 117, 100, 111, 102, 102, 46, 119, 97, 118, 0, 101, 115, 99, 97, 112, 101, 0, 99, 111, 109, 109, 111, 110, 47, 119, 112, 110, 95, 104, 117, 100, 111, 110, 46, 119, 97, 118, 0, 99, 111, 109, 109, 111, 110, 47, 119, 112, 110, 95, 109, 111, 118, 101, 115, 101, 108, 101, 99, 116, 46, 119, 97, 118, 0, 56, 67, 72, 117, 100, 65, 109, 109, 111, 0, 56, 67, 72, 117, 100, 66, 97, 115, 101, 0, 83, 101, 99, 65, 109, 109, 111, 86, 97, 108, 0, 83, 101, 99, 65, 109, 109, 111, 73, 99, 111, 110, 0, 49, 55, 67, 72, 117, 100, 65, 109, 109, 111, 83, 101, 99, 111, 110, 100, 97, 114, 121, 0, 104, 117, 100, 95, 100, 114, 97, 119, 104, 105, 115, 116, 111, 114, 121, 95, 116, 105, 109, 101, 0, 115, 117, 105, 116, 95, 101, 109, 112, 116, 121, 0, 115, 117, 105, 116, 95, 102, 117, 108, 108, 0, 66, 97, 116, 116, 101, 114, 121, 0, 49, 49, 67, 72, 117, 100, 66, 97, 116, 116, 101, 114, 121, 0, 99, 58, 92, 104, 108, 108, 111, 103, 46, 116, 120, 116, 0, 97, 43, 116, 0, 102, 117, 110, 99, 0, 100, 95, 115, 107, 117, 108, 108, 0, 68, 101, 97, 116, 104, 77, 115, 103, 0, 104, 117, 100, 95, 100, 101, 97, 116, 104, 110, 111, 116, 105, 99, 101, 95, 116, 105, 109, 101, 0, 54, 0, 100, 95, 0, 100, 95, 116, 101, 97, 109, 109, 97, 116, 101, 0, 32, 107, 105, 108, 108, 101, 100, 32, 97, 32, 0, 10, 0, 100, 95, 119, 111, 114, 108, 100, 0, 32, 100, 105, 101, 100, 0, 32, 107, 105, 108, 108, 101, 100, 32, 115, 101, 108, 102, 0, 32, 107, 105, 108, 108, 101, 100, 32, 104, 105, 115, 32, 116, 101, 97, 109, 109, 97, 116, 101, 32, 0, 32, 107, 105, 108, 108, 101, 100, 32, 0, 32, 119, 105, 116, 104, 32, 0, 101, 103, 111, 110, 0, 100, 95, 103, 108, 117, 111, 110, 32, 103, 117, 110, 0, 103, 97, 117, 115, 115, 0, 100, 95, 116, 97, 117, 32, 99, 97, 110, 110, 111, 110, 0, 49, 53, 67, 72, 117, 100, 68, 101, 97, 116, 104, 78, 111, 116, 105, 99, 101, 0, 85, 110, 107, 110, 111, 119, 110, 32, 100, 101, 109, 111, 32, 98, 117, 102, 102, 101, 114, 32, 116, 121, 112, 101, 44, 32, 115, 107, 105, 112, 112, 105, 110, 103, 46, 10, 0, 102, 108, 97, 115, 104, 108, 105, 103, 104, 116, 0, 102, 108, 97, 115, 104, 95, 101, 109, 112, 116, 121, 0, 102, 108, 97, 115, 104, 95, 102, 117, 108, 108, 0, 102, 108, 97, 115, 104, 95, 98, 101, 97, 109, 0, 70, 108, 97, 115, 104, 108, 105, 103, 104, 116, 0, 70, 108, 97, 115, 104, 66, 97, 116, 0, 49, 52, 67, 72, 117, 100, 70, 108, 97, 115, 104, 108, 105, 103, 104, 116, 0, 50, 52, 67, 71, 97, 109, 101, 83, 116, 117, 100, 105, 111, 77, 111, 100, 101, 108, 82, 101, 110, 100, 101, 114, 101, 114, 0, 112, 108, 97, 121, 101, 114, 47, 103, 101, 105, 103, 101, 114, 37, 100, 46, 119, 97, 118, 0, 71, 101, 105, 103, 101, 114, 0, 49, 48, 67, 72, 117, 100, 71, 101, 105, 103, 101, 114, 0, 115, 112, 114, 105, 116, 101, 115, 47, 37, 100, 95, 112, 97, 105, 110, 46, 115, 112, 114, 0, 100, 109, 103, 95, 98, 105, 111, 0, 99, 114, 111, 115, 115, 0, 72, 101, 97, 108, 116, 104, 0, 68, 97, 109, 97, 103, 101, 0, 49, 48, 67, 72, 117, 100, 72, 101, 97, 108, 116, 104, 0, 76, 111, 103, 111, 0, 82, 101, 115, 101, 116, 72, 85, 68, 0, 71, 97, 109, 101, 77, 111, 100, 101, 0, 73, 110, 105, 116, 72, 85, 68, 0, 86, 105, 101, 119, 77, 111, 100, 101, 0, 83, 101, 116, 70, 79, 86, 0, 67, 111, 110, 99, 117, 115, 115, 0, 43, 99, 111, 109, 109, 97, 110, 100, 109, 101, 110, 117, 0, 45, 99, 111, 109, 109, 97, 110, 100, 109, 101, 110, 117, 0, 70, 111, 114, 99, 101, 67, 108, 111, 115, 101, 67, 111, 109, 109, 97, 110, 100, 77, 101, 110, 117, 0, 115, 112, 101, 99, 105, 97, 108, 0, 116, 111, 103, 103, 108, 101, 98, 114, 111, 119, 115, 101, 114, 0, 86, 97, 108, 67, 108, 97, 115, 115, 0, 84, 101, 97, 109, 78, 97, 109, 101, 115, 0, 70, 101, 105, 103, 110, 0, 68, 101, 116, 112, 97, 99, 107, 0, 66, 117, 105, 108, 100, 83, 116, 0, 82, 97, 110, 100, 111, 109, 80, 67, 0, 83, 101, 114, 118, 101, 114, 78, 97, 109, 101, 0, 83, 112, 101, 99, 116, 97, 116, 111, 114, 0, 65, 108, 108, 111, 119, 83, 112, 101, 99, 0, 86, 71, 85, 73, 77, 101, 110, 117, 0, 104, 117, 100, 95, 99, 108, 97, 115, 115, 97, 117, 116, 111, 107, 105, 108, 108, 0, 104, 117, 100, 95, 116, 97, 107, 101, 115, 115, 104, 111, 116, 115, 0, 104, 117, 100, 95, 116, 101, 120, 116, 109, 111, 100, 101, 0, 49, 46, 50, 0, 104, 117, 100, 95, 99, 97, 112, 116, 117, 114, 101, 109, 111, 117, 115, 101, 0, 104, 117, 100, 95, 100, 114, 97, 119, 0, 99, 108, 95, 108, 119, 0, 115, 112, 114, 105, 116, 101, 115, 47, 104, 117, 100, 46, 116, 120, 116, 0, 115, 112, 114, 105, 116, 101, 115, 47, 37, 115, 46, 115, 112, 114, 0, 110, 117, 109, 98, 101, 114, 95, 48, 0, 100, 109, 103, 95, 99, 111, 110, 99, 117, 115, 115, 0, 122, 111, 111, 109, 95, 115, 101, 110, 115, 105, 116, 105, 118, 105, 116, 121, 95, 114, 97, 116, 105, 111, 0, 115, 112, 114, 105, 116, 101, 115, 47, 37, 100, 95, 108, 111, 103, 111, 46, 115, 112, 114, 0, 127, 127, 127, 255, 0, 0, 0, 255, 0, 255, 255, 0, 0, 0, 255, 0, 255, 255, 255, 0, 255, 240, 180, 24, 100, 101, 102, 97, 117, 108, 116, 95, 102, 111, 118, 0, 73, 110, 118, 97, 108, 105, 100, 32, 115, 112, 101, 99, 116, 97, 116, 111, 114, 32, 109, 111, 100, 101, 46, 10, 0, 35, 83, 112, 101, 99, 95, 77, 111, 100, 101, 37, 100, 0, 37, 99, 37, 115, 0, 102, 111, 108, 108, 111, 119, 110, 101, 120, 116, 32, 37, 105, 0, 78, 111, 32, 111, 98, 115, 101, 114, 118, 101, 114, 32, 116, 97, 114, 103, 101, 116, 115, 46, 10, 0, 116, 114, 105, 103, 103, 101, 114, 95, 99, 97, 109, 101, 114, 97, 0, 105, 110, 102, 111, 95, 112, 108, 97, 121, 101, 114, 95, 115, 116, 97, 114, 116, 0, 105, 110, 102, 111, 95, 112, 108, 97, 121, 101, 114, 95, 100, 101, 97, 116, 104, 109, 97, 116, 99, 104, 0, 105, 110, 102, 111, 95, 112, 108, 97, 121, 101, 114, 95, 99, 111, 111, 112, 0, 85, 84, 73, 76, 95, 70, 105, 110, 100, 69, 110, 116, 105, 116, 121, 73, 110, 77, 97, 112, 58, 32, 69, 79, 70, 32, 119, 105, 116, 104, 111, 117, 116, 32, 99, 108, 111, 115, 105, 110, 103, 32, 98, 114, 97, 99, 101, 10, 0, 85, 84, 73, 76, 95, 70, 105, 110, 100, 69, 110, 116, 105, 116, 121, 73, 110, 77, 97, 112, 58, 32, 101, 120, 112, 101, 99, 116, 101, 100, 32, 123, 10, 0, 85, 84, 73, 76, 95, 70, 105, 110, 100, 69, 110, 116, 105, 116, 121, 73, 110, 77, 97, 112, 58, 32, 99, 108, 111, 115, 105, 110, 103, 32, 98, 114, 97, 99, 101, 32, 119, 105, 116, 104, 111, 117, 116, 32, 100, 97, 116, 97, 0, 99, 108, 97, 115, 115, 110, 97, 109, 101, 0, 97, 110, 103, 108, 101, 0, 97, 110, 103, 108, 101, 115, 0, 111, 114, 105, 103, 105, 110, 0, 111, 118, 101, 114, 118, 105, 101, 119, 115, 47, 37, 115, 46, 116, 120, 116, 0, 67, 111, 117, 108, 100, 110, 39, 116, 32, 111, 112, 101, 110, 32, 102, 105, 108, 101, 32, 37, 115, 46, 32, 85, 115, 105, 110, 103, 32, 100, 101, 102, 97, 117, 108, 116, 32, 118, 97, 108, 117, 101, 115, 32, 102, 111, 114, 32, 111, 118, 101, 114, 105, 101, 119, 32, 109, 111, 100, 101, 46, 10, 0, 103, 108, 111, 98, 97, 108, 0, 123, 0, 69, 114, 114, 111, 114, 32, 112, 97, 114, 115, 105, 110, 103, 32, 111, 118, 101, 114, 118, 105, 101, 119, 32, 102, 105, 108, 101, 32, 37, 115, 46, 32, 40, 101, 120, 112, 101, 99, 116, 101, 100, 32, 123, 32, 41, 10, 0, 125, 0, 122, 111, 111, 109, 0, 114, 111, 116, 97, 116, 101, 100, 0, 105, 110, 115, 101, 116, 0, 69, 114, 114, 111, 114, 32, 112, 97, 114, 115, 105, 110, 103, 32, 111, 118, 101, 114, 118, 105, 101, 119, 32, 102, 105, 108, 101, 32, 37, 115, 46, 32, 40, 37, 115, 32, 117, 110, 107, 111, 119, 110, 41, 10, 0, 108, 97, 121, 101, 114, 0, 69, 114, 114, 111, 114, 32, 112, 97, 114, 115, 105, 110, 103, 32, 111, 118, 101, 114, 118, 105, 101, 119, 32, 102, 105, 108, 101, 32, 37, 115, 46, 32, 40, 32, 116, 111, 111, 32, 109, 97, 110, 121, 32, 108, 97, 121, 101, 114, 115, 32, 41, 10, 0, 105, 109, 97, 103, 101, 0, 104, 101, 105, 103, 104, 116, 0, 115, 112, 114, 105, 116, 101, 115, 47, 105, 112, 108, 97, 121, 101, 114, 46, 115, 112, 114, 0, 115, 112, 114, 105, 116, 101, 115, 47, 105, 112, 108, 97, 121, 101, 114, 98, 108, 117, 101, 46, 115, 112, 114, 0, 115, 112, 114, 105, 116, 101, 115, 47, 105, 112, 108, 97, 121, 101, 114, 114, 101, 100, 46, 115, 112, 114, 0, 115, 112, 114, 105, 116, 101, 115, 47, 105, 112, 108, 97, 121, 101, 114, 100, 101, 97, 100, 46, 115, 112, 114, 0, 115, 112, 114, 105, 116, 101, 115, 47, 116, 105, 108, 101, 46, 115, 112, 114, 0, 115, 112, 114, 105, 116, 101, 115, 47, 108, 97, 115, 101, 114, 98, 101, 97, 109, 46, 115, 112, 114, 0, 115, 112, 114, 105, 116, 101, 115, 47, 99, 114, 111, 115, 115, 104, 97, 105, 114, 115, 46, 115, 112, 114, 0, 115, 112, 101, 99, 95, 109, 111, 100, 101, 0, 115, 112, 101, 99, 95, 100, 101, 99, 97, 108, 0, 115, 112, 101, 99, 95, 104, 101, 108, 112, 0, 115, 112, 101, 99, 95, 109, 101, 110, 117, 0, 116, 111, 103, 103, 108, 101, 115, 99, 111, 114, 101, 115, 0, 115, 112, 101, 99, 95, 100, 114, 97, 119, 110, 97, 109, 101, 115, 0, 115, 112, 101, 99, 95, 100, 114, 97, 119, 99, 111, 110, 101, 0, 115, 112, 101, 99, 95, 100, 114, 97, 119, 115, 116, 97, 116, 117, 115, 0, 115, 112, 101, 99, 95, 97, 117, 116, 111, 100, 105, 114, 101, 99, 116, 111, 114, 0, 115, 112, 101, 99, 95, 112, 105, 112, 0, 69, 82, 82, 79, 82, 33, 32, 67, 111, 117, 108, 100, 110, 39, 116, 32, 114, 101, 103, 105, 115, 116, 101, 114, 32, 97, 108, 108, 32, 115, 112, 101, 99, 116, 97, 116, 111, 114, 32, 118, 97, 114, 105, 97, 98, 108, 101, 115, 46, 10, 0, 117, 115, 97, 103, 101, 58, 32, 32, 115, 112, 101, 99, 95, 109, 101, 110, 117, 32, 60, 48, 124, 49, 62, 10, 0, 35, 83, 112, 101, 99, 95, 72, 101, 108, 112, 95, 84, 101, 120, 116, 0, 37, 99, 0, 100, 114, 99, 95, 115, 112, 114, 97, 121, 32, 37, 46, 50, 102, 32, 37, 46, 50, 102, 32, 37, 46, 50, 102, 32, 37, 105, 0, 117, 115, 97, 103, 101, 58, 32, 32, 115, 112, 101, 99, 95, 109, 111, 100, 101, 32, 60, 77, 97, 105, 110, 32, 77, 111, 100, 101, 62, 32, 91, 60, 73, 110, 115, 101, 116, 32, 77, 111, 100, 101, 62, 93, 10, 0, 49, 51, 67, 72, 117, 100, 83, 112, 101, 99, 116, 97, 116, 111, 114, 0, 72, 85, 68, 95, 77, 69, 83, 83, 65, 71, 69, 0, 67, 72, 117, 100, 83, 112, 101, 99, 116, 97, 116, 111, 114, 58, 58, 68, 105, 114, 101, 99, 116, 111, 114, 77, 101, 115, 115, 97, 103, 101, 58, 32, 117, 110, 107, 110, 111, 119, 110, 32, 99, 111, 109, 109, 97, 110, 100, 32, 37, 105, 46, 10, 0, 105, 103, 110, 111, 114, 101, 109, 115, 103, 32, 37, 105, 0, 99, 97, 109, 95, 99, 111, 109, 109, 97, 110, 100, 0, 43, 99, 97, 109, 112, 105, 116, 99, 104, 117, 112, 0, 45, 99, 97, 109, 112, 105, 116, 99, 104, 117, 112, 0, 43, 99, 97, 109, 112, 105, 116, 99, 104, 100, 111, 119, 110, 0, 45, 99, 97, 109, 112, 105, 116, 99, 104, 100, 111, 119, 110, 0, 43, 99, 97, 109, 121, 97, 119, 108, 101, 102, 116, 0, 45, 99, 97, 109, 121, 97, 119, 108, 101, 102, 116, 0, 43, 99, 97, 109, 121, 97, 119, 114, 105, 103, 104, 116, 0, 45, 99, 97, 109, 121, 97, 119, 114, 105, 103, 104, 116, 0, 43, 99, 97, 109, 105, 110, 0, 45, 99, 97, 109, 105, 110, 0, 43, 99, 97, 109, 111, 117, 116, 0, 45, 99, 97, 109, 111, 117, 116, 0, 116, 104, 105, 114, 100, 112, 101, 114, 115, 111, 110, 0, 102, 105, 114, 115, 116, 112, 101, 114, 115, 111, 110, 0, 43, 99, 97, 109, 109, 111, 117, 115, 101, 109, 111, 118, 101, 0, 45, 99, 97, 109, 109, 111, 117, 115, 101, 109, 111, 118, 101, 0, 43, 99, 97, 109, 100, 105, 115, 116, 97, 110, 99, 101, 0, 45, 99, 97, 109, 100, 105, 115, 116, 97, 110, 99, 101, 0, 115, 110, 97, 112, 116, 111, 0, 99, 97, 109, 95, 115, 110, 97, 112, 116, 111, 0, 99, 97, 109, 95, 105, 100, 101, 97, 108, 121, 97, 119, 0, 57, 48, 0, 99, 97, 109, 95, 105, 100, 101, 97, 108, 112, 105, 116, 99, 104, 0, 99, 97, 109, 95, 105, 100, 101, 97, 108, 100, 105, 115, 116, 0, 54, 52, 0, 99, 97, 109, 95, 99, 111, 110, 116, 97, 105, 110, 0, 99, 95, 109, 97, 120, 112, 105, 116, 99, 104, 0, 57, 48, 46, 48, 0, 99, 95, 109, 105, 110, 112, 105, 116, 99, 104, 0, 48, 46, 48, 0, 99, 95, 109, 97, 120, 121, 97, 119, 0, 49, 51, 53, 46, 48, 0, 99, 95, 109, 105, 110, 121, 97, 119, 0, 45, 49, 51, 53, 46, 48, 0, 99, 95, 109, 97, 120, 100, 105, 115, 116, 97, 110, 99, 101, 0, 50, 48, 48, 46, 48, 0, 99, 95, 109, 105, 110, 100, 105, 115, 116, 97, 110, 99, 101, 0, 51, 48, 46, 48, 0, 105, 110, 95, 103, 114, 97, 112, 104, 0, 105, 110, 95, 109, 108, 111, 111, 107, 0, 105, 110, 95, 106, 108, 111, 111, 107, 0, 84, 104, 114, 101, 101, 32, 107, 101, 121, 115, 32, 100, 111, 119, 110, 32, 102, 111, 114, 32, 97, 32, 98, 117, 116, 116, 111, 110, 32, 39, 37, 99, 39, 32, 39, 37, 99, 39, 32, 39, 37, 99, 39, 33, 10, 0, 43, 109, 111, 118, 101, 117, 112, 0, 45, 109, 111, 118, 101, 117, 112, 0, 43, 109, 111, 118, 101, 100, 111, 119, 110, 0, 45, 109, 111, 118, 101, 100, 111, 119, 110, 0, 43, 108, 101, 102, 116, 0, 45, 108, 101, 102, 116, 0, 43, 114, 105, 103, 104, 116, 0, 45, 114, 105, 103, 104, 116, 0, 43, 102, 111, 114, 119, 97, 114, 100, 0, 45, 102, 111, 114, 119, 97, 114, 100, 0, 43, 98, 97, 99, 107, 0, 45, 98, 97, 99, 107, 0, 43, 108, 111, 111, 107, 117, 112, 0, 45, 108, 111, 111, 107, 117, 112, 0, 43, 108, 111, 111, 107, 100, 111, 119, 110, 0, 45, 108, 111, 111, 107, 100, 111, 119, 110, 0, 43, 115, 116, 114, 97, 102, 101, 0, 45, 115, 116, 114, 97, 102, 101, 0, 43, 109, 111, 118, 101, 108, 101, 102, 116, 0, 45, 109, 111, 118, 101, 108, 101, 102, 116, 0, 43, 109, 111, 118, 101, 114, 105, 103, 104, 116, 0, 45, 109, 111, 118, 101, 114, 105, 103, 104, 116, 0, 43, 115, 112, 101, 101, 100, 0, 45, 115, 112, 101, 101, 100, 0, 43, 97, 116, 116, 97, 99, 107, 0, 45, 97, 116, 116, 97, 99, 107, 0, 43, 97, 116, 116, 97, 99, 107, 50, 0, 45, 97, 116, 116, 97, 99, 107, 50, 0, 43, 117, 115, 101, 0, 45, 117, 115, 101, 0, 43, 106, 117, 109, 112, 0, 45, 106, 117, 109, 112, 0, 105, 109, 112, 117, 108, 115, 101, 0, 43, 107, 108, 111, 111, 107, 0, 45, 107, 108, 111, 111, 107, 0, 43, 109, 108, 111, 111, 107, 0, 45, 109, 108, 111, 111, 107, 0, 43, 106, 108, 111, 111, 107, 0, 45, 106, 108, 111, 111, 107, 0, 43, 100, 117, 99, 107, 0, 45, 100, 117, 99, 107, 0, 43, 114, 101, 108, 111, 97, 100, 0, 45, 114, 101, 108, 111, 97, 100, 0, 43, 97, 108, 116, 49, 0, 45, 97, 108, 116, 49, 0, 43, 103, 114, 97, 112, 104, 0, 45, 103, 114, 97, 112, 104, 0, 43, 98, 114, 101, 97, 107, 0, 45, 98, 114, 101, 97, 107, 0, 108, 111, 111, 107, 115, 116, 114, 97, 102, 101, 0, 108, 111, 111, 107, 115, 112, 114, 105, 110, 103, 0, 99, 108, 95, 97, 110, 103, 108, 101, 115, 112, 101, 101, 100, 107, 101, 121, 0, 48, 46, 54, 55, 0, 99, 108, 95, 121, 97, 119, 115, 112, 101, 101, 100, 0, 50, 49, 48, 0, 99, 108, 95, 112, 105, 116, 99, 104, 115, 112, 101, 101, 100, 0, 50, 50, 53, 0, 99, 108, 95, 117, 112, 115, 112, 101, 101, 100, 0, 51, 50, 48, 0, 99, 108, 95, 102, 111, 114, 119, 97, 114, 100, 115, 112, 101, 101, 100, 0, 52, 48, 48, 0, 99, 108, 95, 98, 97, 99, 107, 115, 112, 101, 101, 100, 0, 99, 108, 95, 115, 105, 100, 101, 115, 112, 101, 101, 100, 0, 99, 108, 95, 109, 111, 118, 101, 115, 112, 101, 101, 100, 107, 101, 121, 0, 99, 108, 95, 112, 105, 116, 99, 104, 117, 112, 0, 56, 57, 0, 99, 108, 95, 112, 105, 116, 99, 104, 100, 111, 119, 110, 0, 48, 46, 48, 53, 0, 109, 95, 112, 105, 116, 99, 104, 0, 48, 46, 48, 50, 50, 0, 109, 95, 121, 97, 119, 0, 109, 95, 102, 111, 114, 119, 97, 114, 100, 0, 109, 95, 115, 105, 100, 101, 0, 83, 104, 111, 119, 77, 101, 110, 117, 0, 56, 67, 72, 117, 100, 77, 101, 110, 117, 0, 109, 101, 110, 117, 115, 101, 108, 101, 99, 116, 32, 37, 100, 10, 0, 67, 117, 115, 116, 111, 109, 0, 116, 105, 116, 108, 101, 95, 104, 97, 108, 102, 0, 116, 105, 116, 108, 101, 95, 108, 105, 102, 101, 0, 72, 117, 100, 84, 101, 120, 116, 0, 71, 97, 109, 101, 84, 105, 116, 108, 101, 0, 71, 65, 77, 69, 84, 73, 84, 76, 69, 0, 49, 49, 67, 72, 117, 100, 77, 101, 115, 115, 97, 103, 101, 0, 115, 112, 114, 105, 116, 101, 115, 47, 114, 105, 110, 103, 46, 115, 112, 114, 0, 115, 112, 114, 105, 116, 101, 115, 47, 99, 97, 109, 101, 114, 97, 46, 115, 112, 114, 0, 49, 50, 67, 72, 117, 100, 79, 118, 101, 114, 118, 105, 101, 119, 0, 83, 97, 121, 84, 101, 120, 116, 0, 104, 117, 100, 95, 115, 97, 121, 116, 101, 120, 116, 0, 104, 117, 100, 95, 115, 97, 121, 116, 101, 120, 116, 95, 116, 105, 109, 101, 0, 53, 0, 109, 105, 115, 99, 47, 116, 97, 108, 107, 46, 119, 97, 118, 0, 49, 49, 67, 72, 117, 100, 83, 97, 121, 84, 101, 120, 116, 0, 83, 116, 97, 116, 117, 115, 73, 99, 111, 110, 0, 103, 114, 101, 110, 97, 100, 101, 0, 119, 101, 97, 112, 111, 110, 115, 47, 116, 105, 109, 101, 114, 46, 119, 97, 118, 0, 49, 53, 67, 72, 117, 100, 83, 116, 97, 116, 117, 115, 73, 99, 111, 110, 115, 0, 104, 117, 100, 95, 99, 101, 110, 116, 101, 114, 105, 100, 0, 42, 42, 42, 42, 42, 42, 0, 83, 116, 97, 116, 117, 115, 84, 101, 120, 116, 0, 83, 116, 97, 116, 117, 115, 86, 97, 108, 117, 101, 0, 49, 51, 67, 72, 117, 100, 83, 116, 97, 116, 117, 115, 66, 97, 114, 0, 66, 105, 112, 48, 49, 0, 66, 105, 112, 48, 49, 32, 80, 101, 108, 118, 105, 115, 0, 66, 105, 112, 48, 49, 32, 76, 32, 76, 101, 103, 0, 66, 105, 112, 48, 49, 32, 76, 32, 76, 101, 103, 49, 0, 66, 105, 112, 48, 49, 32, 76, 32, 70, 111, 111, 116, 0, 66, 105, 112, 48, 49, 32, 82, 32, 76, 101, 103, 0, 66, 105, 112, 48, 49, 32, 82, 32, 76, 101, 103, 49, 0, 66, 105, 112, 48, 49, 32, 82, 32, 70, 111, 111, 116, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 97, 116, 116, 97, 99, 104, 109, 101, 110, 116, 115, 32, 111, 110, 32, 37, 115, 10, 0, 108, 111, 97, 100, 105, 110, 103, 32, 37, 115, 10, 0, 99, 108, 95, 104, 105, 109, 111, 100, 101, 108, 115, 0, 100, 101, 118, 101, 108, 111, 112, 101, 114, 0, 114, 95, 100, 114, 97, 119, 101, 110, 116, 105, 116, 105, 101, 115, 0, 50, 48, 67, 83, 116, 117, 100, 105, 111, 77, 111, 100, 101, 108, 82, 101, 110, 100, 101, 114, 101, 114, 0, 84, 101, 120, 116, 77, 115, 103, 0, 49, 53, 67, 72, 117, 100, 84, 101, 120, 116, 77, 101, 115, 115, 97, 103, 101, 0, 115, 112, 114, 105, 116, 101, 115, 47, 37, 100, 95, 116, 114, 97, 105, 110, 46, 115, 112, 114, 0, 84, 114, 97, 105, 110, 0, 57, 67, 72, 117, 100, 84, 114, 97, 105, 110, 0, 118, 95, 105, 121, 97, 119, 95, 99, 121, 99, 108, 101, 0, 118, 95, 105, 114, 111, 108, 108, 95, 99, 121, 99, 108, 101, 0, 48, 46, 53, 0, 118, 95, 105, 112, 105, 116, 99, 104, 95, 99, 121, 99, 108, 101, 0, 49, 0, 118, 95, 105, 121, 97, 119, 95, 108, 101, 118, 101, 108, 0, 48, 46, 51, 0, 118, 95, 105, 114, 111, 108, 108, 95, 108, 101, 118, 101, 108, 0, 48, 46, 49, 0, 118, 95, 105, 112, 105, 116, 99, 104, 95, 108, 101, 118, 101, 108, 0, 99, 108, 95, 118, 115, 109, 111, 111, 116, 104, 105, 110, 103, 0, 109, 111, 100, 101, 108, 115, 47, 112, 95, 99, 114, 111, 115, 115, 98, 111, 119, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 118, 95, 99, 114, 111, 115, 115, 98, 111, 119, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 112, 95, 99, 114, 111, 119, 98, 97, 114, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 118, 95, 99, 114, 111, 119, 98, 97, 114, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 112, 95, 101, 103, 111, 110, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 118, 95, 101, 103, 111, 110, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 112, 95, 103, 97, 117, 115, 115, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 118, 95, 103, 97, 117, 115, 115, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 112, 95, 57, 109, 109, 104, 97, 110, 100, 103, 117, 110, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 118, 95, 57, 109, 109, 104, 97, 110, 100, 103, 117, 110, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 112, 95, 103, 114, 101, 110, 97, 100, 101, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 118, 95, 103, 114, 101, 110, 97, 100, 101, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 112, 95, 104, 103, 117, 110, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 118, 95, 104, 103, 117, 110, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 112, 95, 57, 109, 109, 65, 82, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 118, 95, 57, 109, 109, 65, 82, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 112, 95, 51, 53, 55, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 118, 95, 51, 53, 55, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 112, 95, 114, 112, 103, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 118, 95, 114, 112, 103, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 112, 95, 115, 104, 111, 116, 103, 117, 110, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 118, 95, 115, 104, 111, 116, 103, 117, 110, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 112, 95, 115, 113, 117, 101, 97, 107, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 118, 95, 115, 113, 117, 101, 97, 107, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 112, 95, 116, 114, 105, 112, 109, 105, 110, 101, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 118, 95, 116, 114, 105, 112, 109, 105, 110, 101, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 112, 95, 115, 97, 116, 99, 104, 101, 108, 95, 114, 97, 100, 105, 111, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 118, 95, 115, 97, 116, 99, 104, 101, 108, 95, 114, 97, 100, 105, 111, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 112, 95, 115, 97, 116, 99, 104, 101, 108, 46, 109, 100, 108, 0, 109, 111, 100, 101, 108, 115, 47, 118, 95, 115, 97, 116, 99, 104, 101, 108, 46, 109, 100, 108, 0, 115, 99, 114, 95, 111, 102, 115, 120, 0, 115, 99, 114, 95, 111, 102, 115, 121, 0, 115, 99, 114, 95, 111, 102, 115, 122, 0, 118, 95, 99, 101, 110, 116, 101, 114, 109, 111, 118, 101, 0, 48, 46, 49, 53, 0, 118, 95, 99, 101, 110, 116, 101, 114, 115, 112, 101, 101, 100, 0, 53, 48, 48, 0, 99, 108, 95, 98, 111, 98, 99, 121, 99, 108, 101, 0, 48, 46, 56, 0, 99, 108, 95, 98, 111, 98, 0, 48, 46, 48, 49, 0, 99, 108, 95, 98, 111, 98, 117, 112, 0, 99, 108, 95, 119, 97, 116, 101, 114, 100, 105, 115, 116, 0, 52, 0, 99, 108, 95, 99, 104, 97, 115, 101, 100, 105, 115, 116, 0, 49, 49, 50, 0, 115, 101, 110, 115, 105, 116, 105, 118, 105, 116, 121, 0, 51, 0, 106, 111, 121, 115, 116, 105, 99, 107, 0, 99, 108, 95, 108, 97, 100, 100, 101, 114, 109, 111, 100, 101, 0, 50, 0, 80, 108, 97, 121, 101, 114, 0, 84, 101, 97, 109, 115, 0, 107, 105, 108, 108, 115, 0, 47, 0, 100, 101, 97, 116, 104, 115, 0, 108, 97, 116, 101, 110, 99, 121, 0, 112, 107, 116, 32, 108, 111, 115, 115, 0, 37, 100, 0, 32, 32, 37, 100, 0, 32, 33, 33, 33, 33, 0, 43, 115, 104, 111, 119, 115, 99, 111, 114, 101, 115, 0, 45, 115, 104, 111, 119, 115, 99, 111, 114, 101, 115, 0, 83, 99, 111, 114, 101, 73, 110, 102, 111, 0, 84, 101, 97, 109, 83, 99, 111, 114, 101, 0, 84, 101, 97, 109, 73, 110, 102, 111, 0, 99, 108, 95, 115, 104, 111, 119, 112, 97, 99, 107, 101, 116, 108, 111, 115, 115, 0, 48, 0, 49, 52, 67, 72, 117, 100, 83, 99, 111, 114, 101, 98, 111, 97, 114, 100, 0, 77, 79, 84, 68, 0, 56, 67, 72, 117, 100, 77, 79, 84, 68, 0, 115, 111, 117, 110, 100, 47, 109, 97, 116, 101, 114, 105, 97, 108, 115, 46, 116, 120, 116, 0, 112, 109, 95, 115, 104, 97, 114, 101, 100, 95, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 100, 0, 46, 46, 47, 112, 109, 95, 115, 104, 97, 114, 101, 100, 47, 112, 109, 95, 115, 104, 97, 114, 101, 100, 46, 99, 0, 80, 77, 95, 70, 105, 110, 100, 84, 101, 120, 116, 117, 114, 101, 84, 121, 112, 101, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 115, 116, 101, 112, 49, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 115, 116, 101, 112, 51, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 115, 116, 101, 112, 50, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 115, 116, 101, 112, 52, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 109, 101, 116, 97, 108, 49, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 109, 101, 116, 97, 108, 51, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 109, 101, 116, 97, 108, 50, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 109, 101, 116, 97, 108, 52, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 100, 105, 114, 116, 49, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 100, 105, 114, 116, 51, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 100, 105, 114, 116, 50, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 100, 105, 114, 116, 52, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 100, 117, 99, 116, 49, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 100, 117, 99, 116, 51, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 100, 117, 99, 116, 50, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 100, 117, 99, 116, 52, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 103, 114, 97, 116, 101, 49, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 103, 114, 97, 116, 101, 51, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 103, 114, 97, 116, 101, 50, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 103, 114, 97, 116, 101, 52, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 116, 105, 108, 101, 49, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 116, 105, 108, 101, 51, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 116, 105, 108, 101, 50, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 116, 105, 108, 101, 52, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 116, 105, 108, 101, 53, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 115, 108, 111, 115, 104, 49, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 115, 108, 111, 115, 104, 51, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 115, 108, 111, 115, 104, 50, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 115, 108, 111, 115, 104, 52, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 119, 97, 100, 101, 49, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 119, 97, 100, 101, 50, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 119, 97, 100, 101, 51, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 119, 97, 100, 101, 52, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 108, 97, 100, 100, 101, 114, 49, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 108, 97, 100, 100, 101, 114, 51, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 108, 97, 100, 100, 101, 114, 50, 46, 119, 97, 118, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 108, 97, 100, 100, 101, 114, 52, 46, 119, 97, 118, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 101, 110, 116, 105, 116, 105, 101, 115, 32, 119, 101, 114, 101, 32, 116, 111, 117, 99, 104, 101, 100, 33, 10, 0, 80, 77, 32, 32, 71, 111, 116, 32, 97, 32, 78, 97, 78, 32, 118, 101, 108, 111, 99, 105, 116, 121, 32, 37, 105, 10, 0, 80, 77, 32, 32, 71, 111, 116, 32, 97, 32, 78, 97, 78, 32, 111, 114, 105, 103, 105, 110, 32, 111, 110, 32, 37, 105, 10, 0, 80, 77, 32, 32, 71, 111, 116, 32, 97, 32, 118, 101, 108, 111, 99, 105, 116, 121, 32, 116, 111, 111, 32, 104, 105, 103, 104, 32, 111, 110, 32, 37, 105, 10, 0, 80, 77, 32, 32, 71, 111, 116, 32, 97, 32, 118, 101, 108, 111, 99, 105, 116, 121, 32, 116, 111, 111, 32, 108, 111, 119, 32, 111, 110, 32, 37, 105, 10, 0, 116, 102, 99, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 121, 114, 106, 109, 112, 56, 46, 119, 97, 118, 0, 115, 108, 106, 0, 112, 108, 97, 121, 101, 114, 47, 112, 108, 95, 102, 97, 108, 108, 112, 97, 105, 110, 51, 46, 119, 97, 118, 0, 66, 111, 103, 117, 115, 32, 112, 109, 111, 118, 101, 32, 112, 108, 97, 121, 101, 114, 32, 109, 111, 118, 101, 116, 121, 112, 101, 32, 37, 105, 32, 111, 110, 32, 40, 37, 105, 41, 32, 48, 61, 99, 108, 32, 49, 61, 115, 118, 10, 0, 80, 77, 95, 77, 111, 118, 101, 0, 33, 112, 109, 95, 115, 104, 97, 114, 101, 100, 95, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 100, 0, 80, 77, 95, 73, 110, 105, 116, 0 ], "i8", ALLOC_NONE, gb);
  function ___cxa_atexit() {
   return parentModule["___cxa_atexit"].apply(null, arguments);
  }
  function _rand() {
   return parentModule["_rand"].apply(null, arguments);
  }
  function _malloc() {
   return parentModule["_malloc"].apply(null, arguments);
  }
  function ___assert_fail() {
   return parentModule["___assert_fail"].apply(null, arguments);
  }
  function _srand() {
   return parentModule["_srand"].apply(null, arguments);
  }
  function _fclose() {
   return parentModule["_fclose"].apply(null, arguments);
  }
  function _strcat() {
   return parentModule["_strcat"].apply(null, arguments);
  }
  function _toupper() {
   return parentModule["_toupper"].apply(null, arguments);
  }
  function _fopen() {
   return parentModule["_fopen"].apply(null, arguments);
  }
  function _strlen() {
   return parentModule["_strlen"].apply(null, arguments);
  }
  function _strncpy() {
   return parentModule["_strncpy"].apply(null, arguments);
  }
  function _strncat() {
   return parentModule["_strncat"].apply(null, arguments);
  }
  function __ZdaPv() {
   return parentModule["__ZdaPv"].apply(null, arguments);
  }
  function _isalnum() {
   return parentModule["_isalnum"].apply(null, arguments);
  }
  function _strncmp() {
   return parentModule["_strncmp"].apply(null, arguments);
  }
  function _strcasecmp() {
   return parentModule["_strcasecmp"].apply(null, arguments);
  }
  function _fputs() {
   return parentModule["_fputs"].apply(null, arguments);
  }
  function _isalpha() {
   return parentModule["_isalpha"].apply(null, arguments);
  }
  function _exit() {
   return parentModule["_exit"].apply(null, arguments);
  }
  function _sprintf() {
   return parentModule["_sprintf"].apply(null, arguments);
  }
  function __ZdlPv() {
   return parentModule["__ZdlPv"].apply(null, arguments);
  }
  function _isspace() {
   return parentModule["_isspace"].apply(null, arguments);
  }
  function _memset() {
   return parentModule["_memset"].apply(null, arguments);
  }
  function _time() {
   return parentModule["_time"].apply(null, arguments);
  }
  function _free() {
   return parentModule["_free"].apply(null, arguments);
  }
  function ___cxa_guard_acquire() {
   return parentModule["___cxa_guard_acquire"].apply(null, arguments);
  }
  function _atoi() {
   return parentModule["_atoi"].apply(null, arguments);
  }
  function _atof() {
   return parentModule["_atof"].apply(null, arguments);
  }
  function _memcpy() {
   return parentModule["_memcpy"].apply(null, arguments);
  }
  function __Znaj() {
   return parentModule["__Znaj"].apply(null, arguments);
  }
  function _strstr() {
   return parentModule["_strstr"].apply(null, arguments);
  }
  function _memmove() {
   return parentModule["_memmove"].apply(null, arguments);
  }
  function _strncasecmp() {
   return parentModule["_strncasecmp"].apply(null, arguments);
  }
  function ___gxx_personality_v0() {
   return parentModule["___gxx_personality_v0"].apply(null, arguments);
  }
  function _strcpy() {
   return parentModule["_strcpy"].apply(null, arguments);
  }
  function _llvm_sqrt_f32() {
   return parentModule["_llvm_sqrt_f32"].apply(null, arguments);
  }
  function _llvm_trap() {
   return parentModule["_llvm_trap"].apply(null, arguments);
  }
  function ___cxa_guard_release() {
   return parentModule["___cxa_guard_release"].apply(null, arguments);
  }
  function _vsprintf() {
   return parentModule["_vsprintf"].apply(null, arguments);
  }
  function _strcmp() {
   return parentModule["_strcmp"].apply(null, arguments);
  }
  function __ZTVN10__cxxabiv117__class_type_infoE() {
   return parentModule["__ZTVN10__cxxabiv117__class_type_infoE"].apply(null, arguments);
  }
  function __ZTVN10__cxxabiv120__si_class_type_infoE() {
   return parentModule["__ZTVN10__cxxabiv120__si_class_type_infoE"].apply(null, arguments);
  }
  function ___dso_handle() {
   return parentModule["___dso_handle"].apply(null, arguments);
  }
  var setTempRet0 = Runtime.setTempRet0, getTempRet0 = Runtime.getTempRet0;
  function invoke_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
   try {
    return Module["dynCall_iiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_iiiiiiii(x, a0, a1, a2, a3, a4, a5, a6) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_iiiiiiii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'iiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_iiiiiiii"][x](a0, a1, a2, a3, a4, a5, a6);
  }
  function invoke_viiiii(index, a1, a2, a3, a4, a5) {
   try {
    Module["dynCall_viiiii"](index, a1, a2, a3, a4, a5);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_viiiii(x, a0, a1, a2, a3, a4) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_viiiii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_viiiii"][x](a0, a1, a2, a3, a4);
  }
  function invoke_vddd(index, a1, a2, a3) {
   try {
    Module["dynCall_vddd"](index, a1, a2, a3);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_vddd(x, a0, a1, a2) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_vddd"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'vddd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_vddd"][x](a0, a1, a2);
  }
  function invoke_vid(index, a1, a2) {
   try {
    Module["dynCall_vid"](index, a1, a2);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_vid(x, a0, a1) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_vid"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'vid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_vid"][x](a0, a1);
  }
  function invoke_iiiidi(index, a1, a2, a3, a4, a5) {
   try {
    return Module["dynCall_iiiidi"](index, a1, a2, a3, a4, a5);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_iiiidi(x, a0, a1, a2, a3, a4) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_iiiidi"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'iiiidi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_iiiidi"][x](a0, a1, a2, a3, a4);
  }
  function invoke_vi(index, a1) {
   try {
    Module["dynCall_vi"](index, a1);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_vi(x, a0) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_vi"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_vi"][x](a0);
  }
  function invoke_iiiidd(index, a1, a2, a3, a4, a5) {
   try {
    return Module["dynCall_iiiidd"](index, a1, a2, a3, a4, a5);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_iiiidd(x, a0, a1, a2, a3, a4) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_iiiidd"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'iiiidd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_iiiidd"][x](a0, a1, a2, a3, a4);
  }
  function invoke_vii(index, a1, a2) {
   try {
    Module["dynCall_vii"](index, a1, a2);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_vii(x, a0, a1) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_vii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_vii"][x](a0, a1);
  }
  function invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {
   try {
    return Module["dynCall_iiiiiii"](index, a1, a2, a3, a4, a5, a6);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_iiiiiii(x, a0, a1, a2, a3, a4, a5) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_iiiiiii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'iiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_iiiiiii"][x](a0, a1, a2, a3, a4, a5);
  }
  function invoke_ii(index, a1) {
   try {
    return Module["dynCall_ii"](index, a1);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_ii(x, a0) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_ii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_ii"][x](a0);
  }
  function invoke_viiiiidddid(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
   try {
    Module["dynCall_viiiiidddid"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_viiiiidddid(x, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_viiiiidddid"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'viiiiidddid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_viiiiidddid"][x](a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
  }
  function invoke_viidiii(index, a1, a2, a3, a4, a5, a6) {
   try {
    Module["dynCall_viidiii"](index, a1, a2, a3, a4, a5, a6);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_viidiii(x, a0, a1, a2, a3, a4, a5) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_viidiii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'viidiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_viidiii"][x](a0, a1, a2, a3, a4, a5);
  }
  function invoke_iidd(index, a1, a2, a3) {
   try {
    return Module["dynCall_iidd"](index, a1, a2, a3);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_iidd(x, a0, a1, a2) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_iidd"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'iidd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_iidd"][x](a0, a1, a2);
  }
  function invoke_viidiiii(index, a1, a2, a3, a4, a5, a6, a7) {
   try {
    Module["dynCall_viidiiii"](index, a1, a2, a3, a4, a5, a6, a7);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_viidiiii(x, a0, a1, a2, a3, a4, a5, a6) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_viidiiii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'viidiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_viidiiii"][x](a0, a1, a2, a3, a4, a5, a6);
  }
  function invoke_iidi(index, a1, a2, a3) {
   try {
    return Module["dynCall_iidi"](index, a1, a2, a3);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_iidi(x, a0, a1, a2) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_iidi"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'iidi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_iidi"][x](a0, a1, a2);
  }
  function invoke_viidddii(index, a1, a2, a3, a4, a5, a6, a7) {
   try {
    Module["dynCall_viidddii"](index, a1, a2, a3, a4, a5, a6, a7);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_viidddii(x, a0, a1, a2, a3, a4, a5, a6) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_viidddii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'viidddii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_viidddii"][x](a0, a1, a2, a3, a4, a5, a6);
  }
  function invoke_iiiidddddidddd(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {
   try {
    return Module["dynCall_iiiidddddidddd"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_iiiidddddidddd(x, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_iiiidddddidddd"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'iiiidddddidddd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_iiiidddddidddd"][x](a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  }
  function invoke_iiiiii(index, a1, a2, a3, a4, a5) {
   try {
    return Module["dynCall_iiiiii"](index, a1, a2, a3, a4, a5);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_iiiiii(x, a0, a1, a2, a3, a4) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_iiiiii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_iiiiii"][x](a0, a1, a2, a3, a4);
  }
  function invoke_vidi(index, a1, a2, a3) {
   try {
    Module["dynCall_vidi"](index, a1, a2, a3);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_vidi(x, a0, a1, a2) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_vidi"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'vidi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_vidi"][x](a0, a1, a2);
  }
  function invoke_vidiiii(index, a1, a2, a3, a4, a5, a6) {
   try {
    Module["dynCall_vidiiii"](index, a1, a2, a3, a4, a5, a6);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_vidiiii(x, a0, a1, a2, a3, a4, a5) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_vidiiii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'vidiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_vidiiii"][x](a0, a1, a2, a3, a4, a5);
  }
  function invoke_iiiidii(index, a1, a2, a3, a4, a5, a6) {
   try {
    return Module["dynCall_iiiidii"](index, a1, a2, a3, a4, a5, a6);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_iiiidii(x, a0, a1, a2, a3, a4, a5) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_iiiidii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'iiiidii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_iiiidii"][x](a0, a1, a2, a3, a4, a5);
  }
  function invoke_vidd(index, a1, a2, a3) {
   try {
    Module["dynCall_vidd"](index, a1, a2, a3);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_vidd(x, a0, a1, a2) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_vidd"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'vidd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_vidd"][x](a0, a1, a2);
  }
  function invoke_iiii(index, a1, a2, a3) {
   try {
    return Module["dynCall_iiii"](index, a1, a2, a3);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_iiii(x, a0, a1, a2) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_iiii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_iiii"][x](a0, a1, a2);
  }
  function invoke_viiiiddii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
   try {
    Module["dynCall_viiiiddii"](index, a1, a2, a3, a4, a5, a6, a7, a8);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_viiiiddii(x, a0, a1, a2, a3, a4, a5, a6, a7) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_viiiiddii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'viiiiddii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_viiiiddii"][x](a0, a1, a2, a3, a4, a5, a6, a7);
  }
  function invoke_viiiiid(index, a1, a2, a3, a4, a5, a6) {
   try {
    Module["dynCall_viiiiid"](index, a1, a2, a3, a4, a5, a6);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_viiiiid(x, a0, a1, a2, a3, a4, a5) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_viiiiid"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'viiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_viiiiid"][x](a0, a1, a2, a3, a4, a5);
  }
  function invoke_viiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
   try {
    Module["dynCall_viiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_viiiiiiii(x, a0, a1, a2, a3, a4, a5, a6, a7) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_viiiiiiii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'viiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_viiiiiiii"][x](a0, a1, a2, a3, a4, a5, a6, a7);
  }
  function invoke_diiii(index, a1, a2, a3, a4) {
   try {
    return Module["dynCall_diiii"](index, a1, a2, a3, a4);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_diiii(x, a0, a1, a2, a3) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_diiii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'diiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_diiii"][x](a0, a1, a2, a3);
  }
  function invoke_ddd(index, a1, a2) {
   try {
    return Module["dynCall_ddd"](index, a1, a2);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_ddd(x, a0, a1) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_ddd"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'ddd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_ddd"][x](a0, a1);
  }
  function invoke_viid(index, a1, a2, a3) {
   try {
    Module["dynCall_viid"](index, a1, a2, a3);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_viid(x, a0, a1, a2) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_viid"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'viid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_viid"][x](a0, a1, a2);
  }
  function invoke_di(index, a1) {
   try {
    return Module["dynCall_di"](index, a1);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_di(x, a0) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_di"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'di'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_di"][x](a0);
  }
  function invoke_viiiid(index, a1, a2, a3, a4, a5) {
   try {
    Module["dynCall_viiiid"](index, a1, a2, a3, a4, a5);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_viiiid(x, a0, a1, a2, a3, a4) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_viiiid"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'viiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_viiiid"][x](a0, a1, a2, a3, a4);
  }
  function invoke_viidii(index, a1, a2, a3, a4, a5) {
   try {
    Module["dynCall_viidii"](index, a1, a2, a3, a4, a5);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_viidii(x, a0, a1, a2, a3, a4) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_viidii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'viidii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_viidii"][x](a0, a1, a2, a3, a4);
  }
  function invoke_iid(index, a1, a2) {
   try {
    return Module["dynCall_iid"](index, a1, a2);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_iid(x, a0, a1) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_iid"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'iid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_iid"][x](a0, a1);
  }
  function invoke_viiddd(index, a1, a2, a3, a4, a5) {
   try {
    Module["dynCall_viiddd"](index, a1, a2, a3, a4, a5);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_viiddd(x, a0, a1, a2, a3, a4) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_viiddd"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'viiddd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_viiddd"][x](a0, a1, a2, a3, a4);
  }
  function invoke_iiidiiiddi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
   try {
    return Module["dynCall_iiidiiiddi"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_iiidiiiddi(x, a0, a1, a2, a3, a4, a5, a6, a7, a8) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_iiidiiiddi"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'iiidiiiddi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_iiidiiiddi"][x](a0, a1, a2, a3, a4, a5, a6, a7, a8);
  }
  function invoke_iii(index, a1, a2) {
   try {
    return Module["dynCall_iii"](index, a1, a2);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_iii(x, a0, a1) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_iii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_iii"][x](a0, a1);
  }
  function invoke_dii(index, a1, a2) {
   try {
    return Module["dynCall_dii"](index, a1, a2);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_dii(x, a0, a1) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_dii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'dii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_dii"][x](a0, a1);
  }
  function invoke_viiidiiddiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {
   try {
    Module["dynCall_viiidiiddiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_viiidiiddiiii(x, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_viiidiiddiiii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'viiidiiddiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_viiidiiddiiii"][x](a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  }
  function invoke_d(index) {
   try {
    return Module["dynCall_d"](index);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_d(x) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_d"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_d"][x]();
  }
  function invoke_viii(index, a1, a2, a3) {
   try {
    Module["dynCall_viii"](index, a1, a2, a3);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_viii(x, a0, a1, a2) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_viii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_viii"][x](a0, a1, a2);
  }
  function invoke_i(index) {
   try {
    return Module["dynCall_i"](index);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_i(x) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_i"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_i"][x]();
  }
  function invoke_iiiii(index, a1, a2, a3, a4) {
   try {
    return Module["dynCall_iiiii"](index, a1, a2, a3, a4);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_iiiii(x, a0, a1, a2, a3) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_iiiii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_iiiii"][x](a0, a1, a2, a3);
  }
  function invoke_viiid(index, a1, a2, a3, a4) {
   try {
    Module["dynCall_viiid"](index, a1, a2, a3, a4);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_viiid(x, a0, a1, a2, a3) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_viiid"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'viiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_viiid"][x](a0, a1, a2, a3);
  }
  function invoke_vdddd(index, a1, a2, a3, a4) {
   try {
    Module["dynCall_vdddd"](index, a1, a2, a3, a4);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_vdddd(x, a0, a1, a2, a3) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_vdddd"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'vdddd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_vdddd"][x](a0, a1, a2, a3);
  }
  function invoke_vdd(index, a1, a2) {
   try {
    Module["dynCall_vdd"](index, a1, a2);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_vdd(x, a0, a1) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_vdd"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'vdd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_vdd"][x](a0, a1);
  }
  function invoke_v(index) {
   try {
    Module["dynCall_v"](index);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_v(x) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_v"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_v"][x]();
  }
  function invoke_vdi(index, a1, a2) {
   try {
    Module["dynCall_vdi"](index, a1, a2);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_vdi(x, a0, a1) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_vdi"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'vdi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_vdi"][x](a0, a1);
  }
  function invoke_viiddii(index, a1, a2, a3, a4, a5, a6) {
   try {
    Module["dynCall_viiddii"](index, a1, a2, a3, a4, a5, a6);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_viiddii(x, a0, a1, a2, a3, a4, a5) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_viiddii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'viiddii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_viiddii"][x](a0, a1, a2, a3, a4, a5);
  }
  function invoke_vidiii(index, a1, a2, a3, a4, a5) {
   try {
    Module["dynCall_vidiii"](index, a1, a2, a3, a4, a5);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_vidiii(x, a0, a1, a2, a3, a4) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_vidiii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'vidiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_vidiii"][x](a0, a1, a2, a3, a4);
  }
  function invoke_viiii(index, a1, a2, a3, a4) {
   try {
    Module["dynCall_viiii"](index, a1, a2, a3, a4);
   } catch (e) {
    if (typeof e !== "number" && e !== "longjmp") throw e;
    asm["setThrew"](1, 0);
   }
  }
  function ftCall_viiii(x, a0, a1, a2, a3) {
   if (x < 0 || x >= parentModule["FUNCTION_TABLE_viiii"].length) {
    Module.printErr("Function table mask error (out of range)");
    Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
    Module["printErr"]("Build with ASSERTIONS=2 for more info.");
    abort(x);
   }
   return parentModule["FUNCTION_TABLE_viiii"][x](a0, a1, a2, a3);
  }
  var g$__ZTVN10__cxxabiv117__class_type_infoE = (function() {
   return parentModule["__ZTVN10__cxxabiv117__class_type_infoE"];
  });
  var g$__ZTVN10__cxxabiv120__si_class_type_infoE = (function() {
   return parentModule["__ZTVN10__cxxabiv120__si_class_type_infoE"];
  });
  var g$___dso_handle = (function() {
   return parentModule["___dso_handle"];
  });
  var dynCall_iiiiiiii = ftCall_iiiiiiii;
  var dynCall_viiiii = ftCall_viiiii;
  var dynCall_vddd = ftCall_vddd;
  var dynCall_vid = ftCall_vid;
  var dynCall_iiiidi = ftCall_iiiidi;
  var dynCall_vi = ftCall_vi;
  var dynCall_iiiidd = ftCall_iiiidd;
  var dynCall_vii = ftCall_vii;
  var dynCall_iiiiiii = ftCall_iiiiiii;
  var dynCall_ii = ftCall_ii;
  var dynCall_viiiiidddid = ftCall_viiiiidddid;
  var dynCall_viidiii = ftCall_viidiii;
  var dynCall_iidd = ftCall_iidd;
  var dynCall_viidiiii = ftCall_viidiiii;
  var dynCall_iidi = ftCall_iidi;
  var dynCall_viidddii = ftCall_viidddii;
  var dynCall_iiiidddddidddd = ftCall_iiiidddddidddd;
  var dynCall_iiiiii = ftCall_iiiiii;
  var dynCall_vidi = ftCall_vidi;
  var dynCall_vidiiii = ftCall_vidiiii;
  var dynCall_iiiidii = ftCall_iiiidii;
  var dynCall_vidd = ftCall_vidd;
  var dynCall_iiii = ftCall_iiii;
  var dynCall_viiiiddii = ftCall_viiiiddii;
  var dynCall_viiiiid = ftCall_viiiiid;
  var dynCall_viiiiiiii = ftCall_viiiiiiii;
  var dynCall_diiii = ftCall_diiii;
  var dynCall_ddd = ftCall_ddd;
  var dynCall_viid = ftCall_viid;
  var dynCall_di = ftCall_di;
  var dynCall_viiiid = ftCall_viiiid;
  var dynCall_viidii = ftCall_viidii;
  var dynCall_iid = ftCall_iid;
  var dynCall_viiddd = ftCall_viiddd;
  var dynCall_iiidiiiddi = ftCall_iiidiiiddi;
  var dynCall_iii = ftCall_iii;
  var dynCall_dii = ftCall_dii;
  var dynCall_viiidiiddiiii = ftCall_viiidiiddiiii;
  var dynCall_d = ftCall_d;
  var dynCall_viii = ftCall_viii;
  var dynCall_i = ftCall_i;
  var dynCall_iiiii = ftCall_iiiii;
  var dynCall_viiid = ftCall_viiid;
  var dynCall_vdddd = ftCall_vdddd;
  var dynCall_vdd = ftCall_vdd;
  var dynCall_v = ftCall_v;
  var dynCall_vdi = ftCall_vdi;
  var dynCall_viiddii = ftCall_viiddii;
  var dynCall_vidiii = ftCall_vidiii;
  var dynCall_viiii = ftCall_viiii;
  Module.asmGlobalArg = {
   "Math": Math,
   "Int8Array": Int8Array,
   "Int16Array": Int16Array,
   "Int32Array": Int32Array,
   "Uint8Array": Uint8Array,
   "Uint16Array": Uint16Array,
   "Uint32Array": Uint32Array,
   "Float32Array": Float32Array,
   "Float64Array": Float64Array,
   "NaN": NaN,
   "Infinity": Infinity
  };
  Module.asmLibraryArg = {
   "abort": abort,
   "assert": assert,
   "enlargeMemory": enlargeMemory,
   "getTotalMemory": getTotalMemory,
   "abortOnCannotGrowMemory": abortOnCannotGrowMemory,
   "setTempRet0": setTempRet0,
   "getTempRet0": getTempRet0,
   "invoke_iiiiiiii": invoke_iiiiiiii,
   "ftCall_iiiiiiii": ftCall_iiiiiiii,
   "invoke_viiiii": invoke_viiiii,
   "ftCall_viiiii": ftCall_viiiii,
   "invoke_vddd": invoke_vddd,
   "ftCall_vddd": ftCall_vddd,
   "invoke_vid": invoke_vid,
   "ftCall_vid": ftCall_vid,
   "invoke_iiiidi": invoke_iiiidi,
   "ftCall_iiiidi": ftCall_iiiidi,
   "invoke_vi": invoke_vi,
   "ftCall_vi": ftCall_vi,
   "invoke_iiiidd": invoke_iiiidd,
   "ftCall_iiiidd": ftCall_iiiidd,
   "invoke_vii": invoke_vii,
   "ftCall_vii": ftCall_vii,
   "invoke_iiiiiii": invoke_iiiiiii,
   "ftCall_iiiiiii": ftCall_iiiiiii,
   "invoke_ii": invoke_ii,
   "ftCall_ii": ftCall_ii,
   "invoke_viiiiidddid": invoke_viiiiidddid,
   "ftCall_viiiiidddid": ftCall_viiiiidddid,
   "invoke_viidiii": invoke_viidiii,
   "ftCall_viidiii": ftCall_viidiii,
   "invoke_iidd": invoke_iidd,
   "ftCall_iidd": ftCall_iidd,
   "invoke_viidiiii": invoke_viidiiii,
   "ftCall_viidiiii": ftCall_viidiiii,
   "invoke_iidi": invoke_iidi,
   "ftCall_iidi": ftCall_iidi,
   "invoke_viidddii": invoke_viidddii,
   "ftCall_viidddii": ftCall_viidddii,
   "invoke_iiiidddddidddd": invoke_iiiidddddidddd,
   "ftCall_iiiidddddidddd": ftCall_iiiidddddidddd,
   "invoke_iiiiii": invoke_iiiiii,
   "ftCall_iiiiii": ftCall_iiiiii,
   "invoke_vidi": invoke_vidi,
   "ftCall_vidi": ftCall_vidi,
   "invoke_vidiiii": invoke_vidiiii,
   "ftCall_vidiiii": ftCall_vidiiii,
   "invoke_iiiidii": invoke_iiiidii,
   "ftCall_iiiidii": ftCall_iiiidii,
   "invoke_vidd": invoke_vidd,
   "ftCall_vidd": ftCall_vidd,
   "invoke_iiii": invoke_iiii,
   "ftCall_iiii": ftCall_iiii,
   "invoke_viiiiddii": invoke_viiiiddii,
   "ftCall_viiiiddii": ftCall_viiiiddii,
   "invoke_viiiiid": invoke_viiiiid,
   "ftCall_viiiiid": ftCall_viiiiid,
   "invoke_viiiiiiii": invoke_viiiiiiii,
   "ftCall_viiiiiiii": ftCall_viiiiiiii,
   "invoke_diiii": invoke_diiii,
   "ftCall_diiii": ftCall_diiii,
   "invoke_ddd": invoke_ddd,
   "ftCall_ddd": ftCall_ddd,
   "invoke_viid": invoke_viid,
   "ftCall_viid": ftCall_viid,
   "invoke_di": invoke_di,
   "ftCall_di": ftCall_di,
   "invoke_viiiid": invoke_viiiid,
   "ftCall_viiiid": ftCall_viiiid,
   "invoke_viidii": invoke_viidii,
   "ftCall_viidii": ftCall_viidii,
   "invoke_iid": invoke_iid,
   "ftCall_iid": ftCall_iid,
   "invoke_viiddd": invoke_viiddd,
   "ftCall_viiddd": ftCall_viiddd,
   "invoke_iiidiiiddi": invoke_iiidiiiddi,
   "ftCall_iiidiiiddi": ftCall_iiidiiiddi,
   "invoke_iii": invoke_iii,
   "ftCall_iii": ftCall_iii,
   "invoke_dii": invoke_dii,
   "ftCall_dii": ftCall_dii,
   "invoke_viiidiiddiiii": invoke_viiidiiddiiii,
   "ftCall_viiidiiddiiii": ftCall_viiidiiddiiii,
   "invoke_d": invoke_d,
   "ftCall_d": ftCall_d,
   "invoke_viii": invoke_viii,
   "ftCall_viii": ftCall_viii,
   "invoke_i": invoke_i,
   "ftCall_i": ftCall_i,
   "invoke_iiiii": invoke_iiiii,
   "ftCall_iiiii": ftCall_iiiii,
   "invoke_viiid": invoke_viiid,
   "ftCall_viiid": ftCall_viiid,
   "invoke_vdddd": invoke_vdddd,
   "ftCall_vdddd": ftCall_vdddd,
   "invoke_vdd": invoke_vdd,
   "ftCall_vdd": ftCall_vdd,
   "invoke_v": invoke_v,
   "ftCall_v": ftCall_v,
   "invoke_vdi": invoke_vdi,
   "ftCall_vdi": ftCall_vdi,
   "invoke_viiddii": invoke_viiddii,
   "ftCall_viiddii": ftCall_viiddii,
   "invoke_vidiii": invoke_vidiii,
   "ftCall_vidiii": ftCall_vidiii,
   "invoke_viiii": invoke_viiii,
   "ftCall_viiii": ftCall_viiii,
   "_isalnum": _isalnum,
   "__Znaj": __Znaj,
   "_strlen": _strlen,
   "_strcat": _strcat,
   "_strncasecmp": _strncasecmp,
   "___cxa_guard_acquire": ___cxa_guard_acquire,
   "___gxx_personality_v0": ___gxx_personality_v0,
   "_strncat": _strncat,
   "___assert_fail": ___assert_fail,
   "__ZTVN10__cxxabiv120__si_class_type_infoE": __ZTVN10__cxxabiv120__si_class_type_infoE,
   "_atoi": _atoi,
   "_llvm_sqrt_f32": _llvm_sqrt_f32,
   "___cxa_guard_release": ___cxa_guard_release,
   "_time": _time,
   "_strncpy": _strncpy,
   "_memset": _memset,
   "_atof": _atof,
   "___dso_handle": ___dso_handle,
   "_strcasecmp": _strcasecmp,
   "__ZdaPv": __ZdaPv,
   "_isalpha": _isalpha,
   "__ZTVN10__cxxabiv117__class_type_infoE": __ZTVN10__cxxabiv117__class_type_infoE,
   "_srand": _srand,
   "_isspace": _isspace,
   "_vsprintf": _vsprintf,
   "_fclose": _fclose,
   "_sprintf": _sprintf,
   "_toupper": _toupper,
   "__ZdlPv": __ZdlPv,
   "_rand": _rand,
   "_strcmp": _strcmp,
   "_free": _free,
   "___cxa_atexit": ___cxa_atexit,
   "_memmove": _memmove,
   "_strstr": _strstr,
   "_malloc": _malloc,
   "_memcpy": _memcpy,
   "_strncmp": _strncmp,
   "_fputs": _fputs,
   "_llvm_trap": _llvm_trap,
   "_fopen": _fopen,
   "_exit": _exit,
   "_strcpy": _strcpy,
   "g$__ZTVN10__cxxabiv117__class_type_infoE": g$__ZTVN10__cxxabiv117__class_type_infoE,
   "g$__ZTVN10__cxxabiv120__si_class_type_infoE": g$__ZTVN10__cxxabiv120__si_class_type_infoE,
   "g$___dso_handle": g$___dso_handle,
   "STACKTOP": STACKTOP,
   "STACK_MAX": STACK_MAX,
   "DYNAMICTOP_PTR": DYNAMICTOP_PTR,
   "tempDoublePtr": tempDoublePtr,
   "ABORT": ABORT,
   "gb": gb,
   "fb": fb
  };
  // EMSCRIPTEN_START_ASM

  var asm = (function(global,env,buffer) {

 "use asm";
 var HEAP8 = new global.Int8Array(buffer);
 var HEAP16 = new global.Int16Array(buffer);
 var HEAP32 = new global.Int32Array(buffer);
 var HEAPU8 = new global.Uint8Array(buffer);
 var HEAPU16 = new global.Uint16Array(buffer);
 var HEAPU32 = new global.Uint32Array(buffer);
 var HEAPF32 = new global.Float32Array(buffer);
 var HEAPF64 = new global.Float64Array(buffer);
 var STACKTOP = env.STACKTOP | 0;
 var STACK_MAX = env.STACK_MAX | 0;
 var DYNAMICTOP_PTR = env.DYNAMICTOP_PTR | 0;
 var tempDoublePtr = env.tempDoublePtr | 0;
 var ABORT = env.ABORT | 0;
 var gb = env.gb | 0;
 var fb = env.fb | 0;
 var __THREW__ = 0;
 var threwValue = 0;
 var setjmpId = 0;
 var undef = 0;
 var nan = global.NaN, inf = global.Infinity;
 var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0;
 var tempRet0 = 0;
 var Math_floor = global.Math.floor;
 var Math_abs = global.Math.abs;
 var Math_sqrt = global.Math.sqrt;
 var Math_pow = global.Math.pow;
 var Math_cos = global.Math.cos;
 var Math_sin = global.Math.sin;
 var Math_tan = global.Math.tan;
 var Math_acos = global.Math.acos;
 var Math_asin = global.Math.asin;
 var Math_atan = global.Math.atan;
 var Math_atan2 = global.Math.atan2;
 var Math_exp = global.Math.exp;
 var Math_log = global.Math.log;
 var Math_ceil = global.Math.ceil;
 var Math_imul = global.Math.imul;
 var Math_min = global.Math.min;
 var Math_max = global.Math.max;
 var Math_clz32 = global.Math.clz32;
 var abort = env.abort;
 var assert = env.assert;
 var enlargeMemory = env.enlargeMemory;
 var getTotalMemory = env.getTotalMemory;
 var abortOnCannotGrowMemory = env.abortOnCannotGrowMemory;
 var setTempRet0 = env.setTempRet0;
 var getTempRet0 = env.getTempRet0;
 var invoke_iiiiiiii = env.invoke_iiiiiiii;
 var ftCall_iiiiiiii = env.ftCall_iiiiiiii;
 var invoke_viiiii = env.invoke_viiiii;
 var ftCall_viiiii = env.ftCall_viiiii;
 var invoke_vddd = env.invoke_vddd;
 var ftCall_vddd = env.ftCall_vddd;
 var invoke_vid = env.invoke_vid;
 var ftCall_vid = env.ftCall_vid;
 var invoke_iiiidi = env.invoke_iiiidi;
 var ftCall_iiiidi = env.ftCall_iiiidi;
 var invoke_vi = env.invoke_vi;
 var ftCall_vi = env.ftCall_vi;
 var invoke_iiiidd = env.invoke_iiiidd;
 var ftCall_iiiidd = env.ftCall_iiiidd;
 var invoke_vii = env.invoke_vii;
 var ftCall_vii = env.ftCall_vii;
 var invoke_iiiiiii = env.invoke_iiiiiii;
 var ftCall_iiiiiii = env.ftCall_iiiiiii;
 var invoke_ii = env.invoke_ii;
 var ftCall_ii = env.ftCall_ii;
 var invoke_viiiiidddid = env.invoke_viiiiidddid;
 var ftCall_viiiiidddid = env.ftCall_viiiiidddid;
 var invoke_viidiii = env.invoke_viidiii;
 var ftCall_viidiii = env.ftCall_viidiii;
 var invoke_iidd = env.invoke_iidd;
 var ftCall_iidd = env.ftCall_iidd;
 var invoke_viidiiii = env.invoke_viidiiii;
 var ftCall_viidiiii = env.ftCall_viidiiii;
 var invoke_iidi = env.invoke_iidi;
 var ftCall_iidi = env.ftCall_iidi;
 var invoke_viidddii = env.invoke_viidddii;
 var ftCall_viidddii = env.ftCall_viidddii;
 var invoke_iiiidddddidddd = env.invoke_iiiidddddidddd;
 var ftCall_iiiidddddidddd = env.ftCall_iiiidddddidddd;
 var invoke_iiiiii = env.invoke_iiiiii;
 var ftCall_iiiiii = env.ftCall_iiiiii;
 var invoke_vidi = env.invoke_vidi;
 var ftCall_vidi = env.ftCall_vidi;
 var invoke_vidiiii = env.invoke_vidiiii;
 var ftCall_vidiiii = env.ftCall_vidiiii;
 var invoke_iiiidii = env.invoke_iiiidii;
 var ftCall_iiiidii = env.ftCall_iiiidii;
 var invoke_vidd = env.invoke_vidd;
 var ftCall_vidd = env.ftCall_vidd;
 var invoke_iiii = env.invoke_iiii;
 var ftCall_iiii = env.ftCall_iiii;
 var invoke_viiiiddii = env.invoke_viiiiddii;
 var ftCall_viiiiddii = env.ftCall_viiiiddii;
 var invoke_viiiiid = env.invoke_viiiiid;
 var ftCall_viiiiid = env.ftCall_viiiiid;
 var invoke_viiiiiiii = env.invoke_viiiiiiii;
 var ftCall_viiiiiiii = env.ftCall_viiiiiiii;
 var invoke_diiii = env.invoke_diiii;
 var ftCall_diiii = env.ftCall_diiii;
 var invoke_ddd = env.invoke_ddd;
 var ftCall_ddd = env.ftCall_ddd;
 var invoke_viid = env.invoke_viid;
 var ftCall_viid = env.ftCall_viid;
 var invoke_di = env.invoke_di;
 var ftCall_di = env.ftCall_di;
 var invoke_viiiid = env.invoke_viiiid;
 var ftCall_viiiid = env.ftCall_viiiid;
 var invoke_viidii = env.invoke_viidii;
 var ftCall_viidii = env.ftCall_viidii;
 var invoke_iid = env.invoke_iid;
 var ftCall_iid = env.ftCall_iid;
 var invoke_viiddd = env.invoke_viiddd;
 var ftCall_viiddd = env.ftCall_viiddd;
 var invoke_iiidiiiddi = env.invoke_iiidiiiddi;
 var ftCall_iiidiiiddi = env.ftCall_iiidiiiddi;
 var invoke_iii = env.invoke_iii;
 var ftCall_iii = env.ftCall_iii;
 var invoke_dii = env.invoke_dii;
 var ftCall_dii = env.ftCall_dii;
 var invoke_viiidiiddiiii = env.invoke_viiidiiddiiii;
 var ftCall_viiidiiddiiii = env.ftCall_viiidiiddiiii;
 var invoke_d = env.invoke_d;
 var ftCall_d = env.ftCall_d;
 var invoke_viii = env.invoke_viii;
 var ftCall_viii = env.ftCall_viii;
 var invoke_i = env.invoke_i;
 var ftCall_i = env.ftCall_i;
 var invoke_iiiii = env.invoke_iiiii;
 var ftCall_iiiii = env.ftCall_iiiii;
 var invoke_viiid = env.invoke_viiid;
 var ftCall_viiid = env.ftCall_viiid;
 var invoke_vdddd = env.invoke_vdddd;
 var ftCall_vdddd = env.ftCall_vdddd;
 var invoke_vdd = env.invoke_vdd;
 var ftCall_vdd = env.ftCall_vdd;
 var invoke_v = env.invoke_v;
 var ftCall_v = env.ftCall_v;
 var invoke_vdi = env.invoke_vdi;
 var ftCall_vdi = env.ftCall_vdi;
 var invoke_viiddii = env.invoke_viiddii;
 var ftCall_viiddii = env.ftCall_viiddii;
 var invoke_vidiii = env.invoke_vidiii;
 var ftCall_vidiii = env.ftCall_vidiii;
 var invoke_viiii = env.invoke_viiii;
 var ftCall_viiii = env.ftCall_viiii;
 var _isalnum = env._isalnum;
 var __Znaj = env.__Znaj;
 var _strlen = env._strlen;
 var _strcat = env._strcat;
 var _strncasecmp = env._strncasecmp;
 var ___cxa_guard_acquire = env.___cxa_guard_acquire;
 var ___gxx_personality_v0 = env.___gxx_personality_v0;
 var _strncat = env._strncat;
 var ___assert_fail = env.___assert_fail;
 var __ZTVN10__cxxabiv120__si_class_type_infoE = env.__ZTVN10__cxxabiv120__si_class_type_infoE;
 var _atoi = env._atoi;
 var _llvm_sqrt_f32 = env._llvm_sqrt_f32;
 var ___cxa_guard_release = env.___cxa_guard_release;
 var _time = env._time;
 var _strncpy = env._strncpy;
 var _memset = env._memset;
 var _atof = env._atof;
 var ___dso_handle = env.___dso_handle;
 var _strcasecmp = env._strcasecmp;
 var __ZdaPv = env.__ZdaPv;
 var _isalpha = env._isalpha;
 var __ZTVN10__cxxabiv117__class_type_infoE = env.__ZTVN10__cxxabiv117__class_type_infoE;
 var _srand = env._srand;
 var _isspace = env._isspace;
 var _vsprintf = env._vsprintf;
 var _fclose = env._fclose;
 var _sprintf = env._sprintf;
 var _toupper = env._toupper;
 var __ZdlPv = env.__ZdlPv;
 var _rand = env._rand;
 var _strcmp = env._strcmp;
 var _free = env._free;
 var ___cxa_atexit = env.___cxa_atexit;
 var _memmove = env._memmove;
 var _strstr = env._strstr;
 var _malloc = env._malloc;
 var _memcpy = env._memcpy;
 var _strncmp = env._strncmp;
 var _fputs = env._fputs;
 var _llvm_trap = env._llvm_trap;
 var _fopen = env._fopen;
 var _exit = env._exit;
 var _strcpy = env._strcpy;
 var g$__ZTVN10__cxxabiv117__class_type_infoE = env.g$__ZTVN10__cxxabiv117__class_type_infoE;
 var g$__ZTVN10__cxxabiv120__si_class_type_infoE = env.g$__ZTVN10__cxxabiv120__si_class_type_infoE;
 var g$___dso_handle = env.g$___dso_handle;
 var tempFloat = 0;
 
// EMSCRIPTEN_START_FUNCS
function __Z18V_CalcNormalRefdefP12ref_params_s(i15) {
 i15 = i15 | 0;
 var i1 = 0, d2 = 0.0, d3 = 0.0, i4 = 0, d5 = 0.0, i6 = 0, i7 = 0, d8 = 0.0, d9 = 0.0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0, i17 = 0, d18 = 0.0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if (!(mftCall_i(HEAP32[gb + 92340 + 352 >> 2] | 0) | 0)) i14 = mftCall_i(HEAP32[gb + 92340 + 204 >> 2] | 0) | 0; else i14 = mftCall_ii(HEAP32[gb + 92340 + 212 >> 2] | 0, HEAP32[gb + 121108 >> 2] | 0) | 0;
 i13 = mftCall_i(HEAP32[gb + 92340 + 208 >> 2] | 0) | 0;
 d9 = +__Z9V_CalcBobP12ref_params_s(i15);
 i11 = i15 + 100 + 4 | 0;
 d5 = +HEAPF32[i11 >> 2];
 i12 = i15 + 100 + 8 | 0;
 d8 = d9 + +HEAPF32[i12 >> 2];
 HEAPF32[i15 >> 2] = +HEAPF32[i15 + 100 >> 2] + +HEAPF32[i15 + 112 >> 2];
 HEAPF32[i15 + 4 >> 2] = d5 + +HEAPF32[i15 + 112 + 4 >> 2];
 HEAPF32[i15 + 8 >> 2] = d8 + +HEAPF32[i15 + 112 + 8 >> 2];
 if ((HEAP32[i15 + 140 >> 2] | 0) < 1) {
  HEAP32[i15 + 12 >> 2] = HEAP32[gb + 118484 >> 2];
  HEAP32[i15 + 12 + 4 >> 2] = HEAP32[gb + 118484 + 4 >> 2];
  HEAP32[i15 + 12 + 8 >> 2] = HEAP32[gb + 118484 + 8 >> 2];
 } else {
  HEAP32[i15 + 12 >> 2] = HEAP32[i15 + 128 >> 2];
  HEAP32[i15 + 12 + 4 >> 2] = HEAP32[i15 + 128 + 4 >> 2];
  HEAP32[i15 + 12 + 8 >> 2] = HEAP32[i15 + 128 + 8 >> 2];
 }
 mftCall_v(HEAP32[gb + 92340 + 220 >> 2] | 0);
 mftCall_viid(HEAP32[gb + 92340 + 224 >> 2] | 0, i15 | 0, i15 + 12 | 0, 1.0);
 HEAPF32[i15 >> 2] = +HEAPF32[i15 >> 2] + .03125;
 HEAPF32[i15 + 4 >> 2] = +HEAPF32[i15 + 4 >> 2] + .03125;
 d2 = +HEAPF32[i15 + 8 >> 2] + .03125;
 HEAPF32[i15 + 8 >> 2] = d2;
 if ((HEAP32[i15 + 84 >> 2] | 0) > 1) {
  i4 = ~~+HEAPF32[(HEAP32[gb + 116348 >> 2] | 0) + 12 >> 2];
  if (HEAP32[i15 + 192 >> 2] | 0) {
   i1 = mftCall_ii(HEAP32[gb + 92340 + 232 >> 2] | 0, i15 + 100 | 0) | 0;
   if ((i1 | 0) > -1) if ((i1 | 0) < (HEAP32[i15 + 184 >> 2] | 0)) {
    i1 = mftCall_ii(HEAP32[gb + 92340 + 212 >> 2] | 0, i1 | 0) | 0;
    if (i1) if (HEAP32[i1 + 2964 >> 2] | 0) i4 = ~~(+(i4 | 0) + +HEAPF32[i1 + 752 >> 2] * 16.0);
   }
  }
  HEAP32[i16 + 12 >> 2] = HEAP32[i15 >> 2];
  HEAP32[i16 + 12 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
  i7 = HEAP32[i15 + 8 >> 2] | 0;
  i6 = i16 + 12 + 8 | 0;
  HEAP32[i6 >> 2] = i7;
  d8 = +(i4 | 0);
  d3 = (HEAP32[tempDoublePtr >> 2] = i7, +HEAPF32[tempDoublePtr >> 2]);
  if ((HEAP32[i15 + 84 >> 2] | 0) == 2) {
   HEAPF32[i6 >> 2] = d3 - d8;
   if ((i4 | 0) > 0) {
    i1 = 0;
    while (1) {
     i7 = (mftCall_iii(HEAP32[gb + 92340 + 228 >> 2] | 0, i16 + 12 | 0, 0) | 0) > -3;
     d2 = +HEAPF32[i6 >> 2];
     if (i7) break;
     HEAPF32[i6 >> 2] = d2 + 1.0;
     i1 = i1 + 1 | 0;
     if ((i1 | 0) >= (i4 | 0)) {
      d2 = d2 + 1.0;
      break;
     }
    }
    d5 = d2;
    d3 = +HEAPF32[i15 + 8 >> 2];
   } else d5 = d3 - d8;
   d2 = d3;
   d3 = d8 + d5 - d3;
  } else {
   HEAPF32[i6 >> 2] = d8 + d3;
   if ((i4 | 0) > 0) {
    i1 = 0;
    while (1) {
     i7 = (mftCall_iii(HEAP32[gb + 92340 + 228 >> 2] | 0, i16 + 12 | 0, 0) | 0) < -2;
     d2 = +HEAPF32[i6 >> 2];
     if (i7) break;
     HEAPF32[i6 >> 2] = d2 + -1.0;
     i1 = i1 + 1 | 0;
     if ((i1 | 0) >= (i4 | 0)) {
      d2 = d2 + -1.0;
      break;
     }
    }
    d5 = d2;
    d3 = +HEAPF32[i15 + 8 >> 2];
   } else d5 = d8 + d3;
   d2 = d3;
   d3 = d5 - d8 - d3;
  }
 } else d3 = 0.0;
 HEAPF32[i15 + 8 >> 2] = d2 + d3;
 __Z14V_CalcViewRollP12ref_params_s(i15);
 __Z9V_AddIdleP12ref_params_s(i15);
 if ((HEAP32[i15 + 140 >> 2] | 0) < 1) {
  HEAP32[i16 + 72 >> 2] = HEAP32[gb + 118484 >> 2];
  HEAP32[i16 + 72 + 4 >> 2] = HEAP32[gb + 118484 + 4 >> 2];
  HEAP32[i16 + 72 + 8 >> 2] = HEAP32[gb + 118484 + 8 >> 2];
  i1 = i16 + 72 | 0;
 } else {
  HEAP32[i16 + 72 >> 2] = HEAP32[i15 + 128 >> 2];
  HEAP32[i16 + 72 + 4 >> 2] = HEAP32[i15 + 128 + 4 >> 2];
  HEAP32[i16 + 72 + 8 >> 2] = HEAP32[i15 + 128 + 8 >> 2];
  i1 = i16 + 72 | 0;
 }
 mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i1 | 0, i15 + 24 | 0, i15 + 36 | 0, i15 + 48 | 0);
 if ((HEAP32[i15 + 172 >> 2] | 0) < 2) {
  i4 = (HEAP32[gb + 116316 >> 2] | 0) + 12 | 0;
  i6 = (HEAP32[gb + 116320 >> 2] | 0) + 12 | 0;
  i7 = (HEAP32[gb + 116324 >> 2] | 0) + 12 | 0;
  i1 = 0;
  do {
   i17 = i15 + (i1 << 2) | 0;
   HEAPF32[i17 >> 2] = +HEAPF32[i17 >> 2] + (+HEAPF32[i4 >> 2] * +HEAPF32[i15 + 24 + (i1 << 2) >> 2] + +HEAPF32[i6 >> 2] * +HEAPF32[i15 + 36 + (i1 << 2) >> 2] + +HEAPF32[i7 >> 2] * +HEAPF32[i15 + 48 + (i1 << 2) >> 2]);
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) != 3);
 }
 if (_CL_IsThirdPerson() | 0) {
  HEAPF32[i16 + 12 + 8 >> 2] = 0.0;
  HEAPF32[i16 + 12 + 4 >> 2] = 0.0;
  HEAPF32[i16 + 12 >> 2] = 0.0;
  _CL_CameraOffset(i16 + 12 | 0);
  HEAP32[i16 + 60 >> 2] = HEAP32[i16 + 12 >> 2];
  HEAP32[i16 + 60 + 4 >> 2] = HEAP32[i16 + 12 + 4 >> 2];
  HEAPF32[i16 + 60 + 8 >> 2] = 0.0;
  mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i16 + 60 | 0, i16 + 48 | 0, i16 + 36 | 0, i16 + 24 | 0);
  d2 = +HEAPF32[i16 + 12 + 8 >> 2];
  i1 = 0;
  do {
   i17 = i15 + (i1 << 2) | 0;
   HEAPF32[i17 >> 2] = +HEAPF32[i17 >> 2] - d2 * +HEAPF32[i16 + 48 + (i1 << 2) >> 2];
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) != 3);
 }
 if ((HEAP32[i15 + 140 >> 2] | 0) < 1) {
  HEAP32[i13 + 2900 >> 2] = HEAP32[gb + 118484 >> 2];
  HEAP32[i13 + 2900 + 4 >> 2] = HEAP32[gb + 118484 + 4 >> 2];
  HEAP32[i13 + 2900 + 8 >> 2] = HEAP32[gb + 118484 + 8 >> 2];
  i4 = i13 + 2900 | 0;
 } else {
  HEAP32[i13 + 2900 >> 2] = HEAP32[i15 + 128 >> 2];
  HEAP32[i13 + 2900 + 4 >> 2] = HEAP32[i15 + 128 + 4 >> 2];
  HEAP32[i13 + 2900 + 8 >> 2] = HEAP32[i15 + 128 + 8 >> 2];
  i4 = i13 + 2900 | 0;
 }
 __Z14V_CalcGunAngleP12ref_params_s(i15);
 i17 = HEAP32[i15 + 100 >> 2] | 0;
 HEAP32[i13 + 2888 >> 2] = i17;
 i1 = HEAP32[i11 >> 2] | 0;
 HEAP32[i13 + 2888 + 4 >> 2] = i1;
 i7 = i13 + 2888 + 8 | 0;
 d8 = d3 + +HEAPF32[i12 >> 2];
 HEAPF32[i7 >> 2] = d8;
 HEAPF32[i13 + 2888 >> 2] = (HEAP32[tempDoublePtr >> 2] = i17, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[i15 + 112 >> 2];
 HEAPF32[i13 + 2888 + 4 >> 2] = (HEAP32[tempDoublePtr >> 2] = i1, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[i15 + 112 + 4 >> 2];
 HEAPF32[i7 >> 2] = d8 + +HEAPF32[i15 + 112 + 8 >> 2];
 mftCall_viid(HEAP32[gb + 92340 + 224 >> 2] | 0, i13 + 2888 | 0, i4 | 0, .8999999761581421);
 i1 = 0;
 do {
  i17 = i13 + 2888 + (i1 << 2) | 0;
  HEAPF32[i17 >> 2] = +HEAPF32[i17 >> 2] + d9 * .4 * +HEAPF32[i15 + 24 + (i1 << 2) >> 2];
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != 3);
 d3 = d9 + +HEAPF32[i7 >> 2];
 HEAPF32[i7 >> 2] = d3;
 HEAPF32[i13 + 2900 + 4 >> 2] = +HEAPF32[i13 + 2900 + 4 >> 2] - d9 * .5;
 HEAPF32[i13 + 2900 + 8 >> 2] = +HEAPF32[i13 + 2900 + 8 >> 2] - d9;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] - d9 * .3;
 HEAPF32[i7 >> 2] = d3 + -1.0;
 d2 = +HEAPF32[i15 + 156 >> 2];
 do if (d2 == 110.0) HEAPF32[i7 >> 2] = d3 + -1.0 + 1.0; else {
  if (d2 == 100.0) {
   HEAPF32[i7 >> 2] = d3 + -1.0 + 2.0;
   break;
  }
  if (d2 == 90.0) {
   HEAPF32[i7 >> 2] = d3 + -1.0 + 1.0;
   break;
  }
  if (d2 == 80.0) HEAPF32[i7 >> 2] = d3 + -1.0 + .5;
 } while (0);
 d8 = +HEAPF32[i15 + 12 + 4 >> 2] + +HEAPF32[i15 + 160 + 4 >> 2];
 d9 = +HEAPF32[i15 + 12 + 8 >> 2] + +HEAPF32[i15 + 160 + 8 >> 2];
 HEAPF32[i15 + 12 >> 2] = +HEAPF32[i15 + 12 >> 2] + +HEAPF32[i15 + 160 >> 2] + +HEAPF32[gb + 116304 >> 2];
 HEAPF32[i15 + 12 + 4 >> 2] = d8 + +HEAPF32[gb + 116304 + 4 >> 2];
 HEAPF32[i15 + 12 + 8 >> 2] = d9 + +HEAPF32[gb + 116304 + 8 >> 2];
 __Z16V_DropPunchAnglefPf(+HEAPF32[i15 + 60 >> 2], gb + 116304 | 0);
 i4 = (HEAP32[i15 + 196 >> 2] | 0) == 0;
 if (i4) if (!(HEAP32[i15 + 80 >> 2] | 0)) i10 = 53; else {
  d2 = +HEAPF32[i12 >> 2];
  d3 = +HEAPF32[gb + 116368 >> 2];
  if (d2 - d3 > 0.0) {
   d9 = +HEAPF32[i15 + 64 >> 2] - +HEAPF32[gb + 116372 >> 2];
   d3 = d3 + (d9 < 0.0 ? 0.0 : d9) * 150.0;
   d3 = d3 > d2 ? d2 : d3;
   d3 = d2 - d3 > 18.0 ? d2 + -18.0 : d3;
   HEAPF32[gb + 116368 >> 2] = d3;
   HEAPF32[i15 + 8 >> 2] = +HEAPF32[i15 + 8 >> 2] + (d3 - d2);
   HEAPF32[i7 >> 2] = +HEAPF32[i7 >> 2] + (d3 - d2);
   d3 = +HEAPF32[i12 >> 2];
  } else i10 = 53;
 } else i10 = 53;
 if ((i10 | 0) == 53) {
  i17 = HEAP32[i12 >> 2] | 0;
  HEAP32[gb + 116368 >> 2] = i17;
  d3 = (HEAP32[tempDoublePtr >> 2] = i17, +HEAPF32[tempDoublePtr >> 2]);
 }
 d2 = +HEAPF32[i15 + 100 >> 2];
 HEAPF32[i16 + 12 >> 2] = d2 - +HEAPF32[gb + 116376 >> 2];
 HEAPF32[i16 + 12 + 4 >> 2] = +HEAPF32[i11 >> 2] - +HEAPF32[gb + 116380 >> 2];
 HEAPF32[i16 + 12 + 8 >> 2] = d3 - +HEAPF32[gb + 116384 >> 2];
 if (+_Length(i16 + 12 | 0) != 0.0) {
  HEAPF32[gb + 116388 + ((HEAP32[gb + 116388 + 2048 >> 2] & 63) * 12 | 0) >> 2] = d2;
  HEAP32[gb + 116388 + ((HEAP32[gb + 116388 + 2048 >> 2] & 63) * 12 | 0) + 4 >> 2] = HEAP32[i11 >> 2];
  HEAP32[gb + 116388 + ((HEAP32[gb + 116388 + 2048 >> 2] & 63) * 12 | 0) + 8 >> 2] = HEAP32[i12 >> 2];
  HEAP32[gb + 116388 + 768 + ((HEAP32[gb + 116388 + 2048 >> 2] & 63) << 2) >> 2] = HEAP32[i15 + 64 >> 2];
  HEAP32[gb + 116388 + 2048 >> 2] = (HEAP32[gb + 116388 + 2048 >> 2] | 0) + 1;
  HEAP32[gb + 116376 >> 2] = HEAP32[i15 + 100 >> 2];
  HEAP32[gb + 116380 >> 2] = HEAP32[i11 >> 2];
  HEAP32[gb + 116384 >> 2] = HEAP32[i12 >> 2];
 }
 i1 = HEAP32[gb + 94004 >> 2] | 0;
 L78 : do if (i1 | 0) {
  d2 = +HEAPF32[i1 + 12 >> 2];
  if (!(d2 == 0.0 | i4)) if ((HEAP32[i15 + 172 >> 2] | 0) > 1) {
   if (d2 < 0.0) {
    mftCall_vid(HEAP32[gb + 92340 + 148 >> 2] | 0, gb + 43929 | 0, 0.0);
    d2 = +HEAPF32[(HEAP32[gb + 94004 >> 2] | 0) + 12 >> 2];
   }
   d5 = +HEAPF32[i15 + 64 >> 2] - d2;
   i1 = HEAP32[gb + 116388 + 2048 >> 2] | 0;
   i4 = 1;
   while (1) {
    i6 = i1 + ~i4 | 0;
    d3 = +HEAPF32[gb + 116388 + 768 + ((i6 & 63) << 2) >> 2];
    i4 = i4 + 1 | 0;
    if (d3 <= d5) break;
    if ((i4 | 0) >= 63) break L78;
   }
   if (d3 != 0.0) {
    d2 = +HEAPF32[gb + 116388 + 768 + ((i6 + 1 & 63) << 2) >> 2] - d3;
    if (d2 > 0.0) {
     i17 = gb + 116388 + ((i6 & 63) * 12 | 0) | 0;
     HEAPF32[i16 + 12 >> 2] = +HEAPF32[gb + 116388 + ((i6 + 1 & 63) * 12 | 0) >> 2] - +HEAPF32[i17 >> 2];
     HEAPF32[i16 + 12 + 4 >> 2] = +HEAPF32[gb + 116388 + ((i6 + 1 & 63) * 12 | 0) + 4 >> 2] - +HEAPF32[gb + 116388 + ((i6 & 63) * 12 | 0) + 4 >> 2];
     HEAPF32[i16 + 12 + 8 >> 2] = +HEAPF32[gb + 116388 + ((i6 + 1 & 63) * 12 | 0) + 8 >> 2] - +HEAPF32[gb + 116388 + ((i6 & 63) * 12 | 0) + 8 >> 2];
     _VectorMA(i17, (d5 - d3) / d2 > 1.0 ? 1.0 : (d5 - d3) / d2, i16 + 12 | 0, i16);
     if (+_Length(i16 + 12 | 0) < 64.0) {
      d18 = +HEAPF32[i15 + 100 >> 2];
      d5 = +HEAPF32[i16 >> 2] - d18;
      HEAPF32[i16 + 12 >> 2] = d5;
      d2 = +HEAPF32[i11 >> 2];
      d8 = +HEAPF32[i16 + 4 >> 2] - d2;
      HEAPF32[i16 + 12 + 4 >> 2] = d8;
      d3 = +HEAPF32[i12 >> 2];
      d9 = +HEAPF32[i16 + 8 >> 2] - d3;
      HEAPF32[i16 + 12 + 8 >> 2] = d9;
      HEAPF32[i15 + 100 >> 2] = d18 + d5;
      HEAPF32[i11 >> 2] = d2 + d8;
      HEAPF32[i12 >> 2] = d3 + d9;
      HEAPF32[i15 >> 2] = d5 + +HEAPF32[i15 >> 2];
      HEAPF32[i15 + 4 >> 2] = d8 + +HEAPF32[i15 + 4 >> 2];
      HEAPF32[i15 + 8 >> 2] = d9 + +HEAPF32[i15 + 8 >> 2];
      HEAPF32[i13 + 2888 >> 2] = d5 + +HEAPF32[i13 + 2888 >> 2];
      HEAPF32[i13 + 2888 + 4 >> 2] = d8 + +HEAPF32[i13 + 2888 + 4 >> 2];
      HEAPF32[i7 >> 2] = d9 + +HEAPF32[i7 >> 2];
     }
    }
   }
  }
 } while (0);
 HEAP32[gb + 116248 >> 2] = HEAP32[i15 + 12 >> 2];
 HEAP32[gb + 116248 + 4 >> 2] = HEAP32[i15 + 12 + 4 >> 2];
 HEAP32[gb + 116248 + 8 >> 2] = HEAP32[i15 + 12 + 8 >> 2];
 HEAP32[gb + 116284 >> 2] = HEAP32[i15 + 12 >> 2];
 HEAP32[gb + 116284 + 4 >> 2] = HEAP32[i15 + 12 + 4 >> 2];
 HEAP32[gb + 116284 + 8 >> 2] = HEAP32[i15 + 12 + 8 >> 2];
 if (_CL_IsThirdPerson() | 0) {
  i17 = HEAP32[i16 + 60 >> 2] | 0;
  HEAP32[i15 + 12 >> 2] = i17;
  HEAP32[i15 + 12 + 4 >> 2] = HEAP32[i16 + 60 + 4 >> 2];
  HEAP32[i15 + 12 + 8 >> 2] = HEAP32[i16 + 60 + 8 >> 2];
  d2 = (HEAP32[tempDoublePtr >> 2] = i17, +HEAPF32[tempDoublePtr >> 2]);
  if (d2 > 180.0) d2 = d2 + -360.0; else if (d2 < -180.0) d2 = d2 + 360.0;
  d18 = d2 * -.3333333333333333;
  HEAPF32[i14 + 2900 >> 2] = d18;
  HEAPF32[i14 + 716 >> 2] = d18;
  HEAPF32[i14 + 376 >> 2] = d18;
  HEAPF32[i14 + 2856 >> 2] = d18;
 }
 i1 = HEAP32[i15 + 176 >> 2] | 0;
 if ((i1 | 0) > (HEAP32[i15 + 172 >> 2] | 0)) {
  i1 = mftCall_ii(HEAP32[gb + 92340 + 212 >> 2] | 0, i1 | 0) | 0;
  if (i1 | 0) {
   HEAP32[i15 >> 2] = HEAP32[i1 + 2888 >> 2];
   HEAP32[i15 + 4 >> 2] = HEAP32[i1 + 2888 + 4 >> 2];
   HEAP32[i15 + 8 >> 2] = HEAP32[i1 + 2888 + 8 >> 2];
   HEAP32[i15 + 12 >> 2] = HEAP32[i1 + 2900 >> 2];
   HEAP32[i15 + 12 + 4 >> 2] = HEAP32[i1 + 2900 + 4 >> 2];
   HEAP32[i15 + 12 + 8 >> 2] = HEAP32[i1 + 2900 + 8 >> 2];
   HEAP32[gb + 116248 >> 2] = HEAP32[i15 + 12 >> 2];
   HEAP32[gb + 116248 + 4 >> 2] = HEAP32[i15 + 12 + 4 >> 2];
   HEAP32[gb + 116248 + 8 >> 2] = HEAP32[i15 + 12 + 8 >> 2];
  }
 }
 HEAP32[gb + 116372 >> 2] = HEAP32[i15 + 64 >> 2];
 HEAP32[gb + 116236 >> 2] = HEAP32[i15 >> 2];
 HEAP32[gb + 116236 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
 HEAP32[gb + 116236 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
 STACKTOP = i16;
 return;
}

function __ZN11cl_entity_sC2ERKS_(i5, i4) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i5 + 4 >> 2] = i1;
 HEAP32[i5 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
 HEAP32[i5 + 8 + 4 >> 2] = HEAP32[i4 + 8 + 4 >> 2];
 HEAP32[i5 + 8 + 8 >> 2] = HEAP32[i4 + 8 + 8 >> 2];
 HEAP32[i5 + 8 + 12 >> 2] = HEAP32[i4 + 8 + 12 >> 2];
 HEAP32[i5 + 24 >> 2] = HEAP32[i4 + 24 >> 2];
 HEAP32[i5 + 28 >> 2] = HEAP32[i4 + 28 >> 2];
 HEAP32[i5 + 32 >> 2] = HEAP32[i4 + 32 >> 2];
 HEAP32[i5 + 36 >> 2] = HEAP32[i4 + 36 >> 2];
 HEAP32[i5 + 40 >> 2] = HEAP32[i4 + 40 >> 2];
 HEAP32[i5 + 44 >> 2] = HEAP32[i4 + 44 >> 2];
 i1 = i5 + 48 | 0;
 i2 = i4 + 48 | 0;
 i3 = i1 + 72 | 0;
 do {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 } while ((i1 | 0) < (i3 | 0));
 HEAP32[i5 + 120 >> 2] = HEAP32[i4 + 120 >> 2];
 HEAP32[i5 + 124 >> 2] = HEAP32[i4 + 124 >> 2];
 HEAP32[i5 + 128 >> 2] = HEAP32[i4 + 128 >> 2];
 HEAP32[i5 + 132 >> 2] = HEAP32[i4 + 132 >> 2];
 HEAP32[i5 + 136 >> 2] = HEAP32[i4 + 136 >> 2];
 HEAP32[i5 + 140 >> 2] = HEAP32[i4 + 140 >> 2];
 HEAP32[i5 + 144 >> 2] = HEAP32[i4 + 144 >> 2];
 HEAP32[i5 + 148 >> 2] = HEAP32[i4 + 148 >> 2];
 HEAP32[i5 + 152 >> 2] = HEAP32[i4 + 152 >> 2];
 i1 = i5 + 156 | 0;
 i2 = i4 + 156 | 0;
 i3 = i1 + 40 | 0;
 do {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 } while ((i1 | 0) < (i3 | 0));
 HEAP32[i5 + 196 >> 2] = HEAP32[i4 + 196 >> 2];
 HEAP32[i5 + 200 >> 2] = HEAP32[i4 + 200 >> 2];
 HEAP32[i5 + 204 >> 2] = HEAP32[i4 + 204 >> 2];
 HEAP32[i5 + 208 >> 2] = HEAP32[i4 + 208 >> 2];
 HEAP32[i5 + 208 + 4 >> 2] = HEAP32[i4 + 208 + 4 >> 2];
 HEAP32[i5 + 208 + 8 >> 2] = HEAP32[i4 + 208 + 8 >> 2];
 HEAP32[i5 + 208 + 12 >> 2] = HEAP32[i4 + 208 + 12 >> 2];
 HEAP32[i5 + 208 + 16 >> 2] = HEAP32[i4 + 208 + 16 >> 2];
 HEAP32[i5 + 208 + 20 >> 2] = HEAP32[i4 + 208 + 20 >> 2];
 HEAP32[i5 + 208 + 24 >> 2] = HEAP32[i4 + 208 + 24 >> 2];
 HEAP32[i5 + 236 >> 2] = HEAP32[i4 + 236 >> 2];
 HEAP32[i5 + 240 >> 2] = HEAP32[i4 + 240 >> 2];
 HEAP32[i5 + 244 >> 2] = HEAP32[i4 + 244 >> 2];
 HEAP32[i5 + 248 >> 2] = HEAP32[i4 + 248 >> 2];
 HEAP32[i5 + 252 >> 2] = HEAP32[i4 + 252 >> 2];
 HEAP32[i5 + 256 >> 2] = HEAP32[i4 + 256 >> 2];
 i1 = i5 + 260 | 0;
 i2 = i4 + 260 | 0;
 i3 = i1 + 40 | 0;
 do {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 } while ((i1 | 0) < (i3 | 0));
 HEAP32[i5 + 300 >> 2] = HEAP32[i4 + 300 >> 2];
 HEAP32[i5 + 304 >> 2] = HEAP32[i4 + 304 >> 2];
 HEAP32[i5 + 308 >> 2] = HEAP32[i4 + 308 >> 2];
 HEAP32[i5 + 312 >> 2] = HEAP32[i4 + 312 >> 2];
 HEAP32[i5 + 316 >> 2] = HEAP32[i4 + 316 >> 2];
 HEAP32[i5 + 320 >> 2] = HEAP32[i4 + 320 >> 2];
 HEAP32[i5 + 324 >> 2] = HEAP32[i4 + 324 >> 2];
 HEAP32[i5 + 328 >> 2] = HEAP32[i4 + 328 >> 2];
 HEAP32[i5 + 332 >> 2] = HEAP32[i4 + 332 >> 2];
 HEAP32[i5 + 336 >> 2] = HEAP32[i4 + 336 >> 2];
 HEAP32[i5 + 340 >> 2] = HEAP32[i4 + 340 >> 2];
 HEAP32[i5 + 344 >> 2] = HEAP32[i4 + 344 >> 2];
 HEAP32[i5 + 348 >> 2] = HEAP32[i4 + 348 >> 2];
 HEAP32[i5 + 348 + 4 >> 2] = HEAP32[i4 + 348 + 4 >> 2];
 HEAP32[i5 + 348 + 8 >> 2] = HEAP32[i4 + 348 + 8 >> 2];
 HEAP32[i5 + 348 + 12 >> 2] = HEAP32[i4 + 348 + 12 >> 2];
 HEAP32[i5 + 364 >> 2] = HEAP32[i4 + 364 >> 2];
 HEAP32[i5 + 368 >> 2] = HEAP32[i4 + 368 >> 2];
 HEAP32[i5 + 372 >> 2] = HEAP32[i4 + 372 >> 2];
 HEAP32[i5 + 376 >> 2] = HEAP32[i4 + 376 >> 2];
 HEAP32[i5 + 380 >> 2] = HEAP32[i4 + 380 >> 2];
 HEAP32[i5 + 384 >> 2] = HEAP32[i4 + 384 >> 2];
 i1 = i5 + 388 | 0;
 i2 = i4 + 388 | 0;
 i3 = i1 + 72 | 0;
 do {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 } while ((i1 | 0) < (i3 | 0));
 HEAP32[i5 + 460 >> 2] = HEAP32[i4 + 460 >> 2];
 HEAP32[i5 + 464 >> 2] = HEAP32[i4 + 464 >> 2];
 HEAP32[i5 + 468 >> 2] = HEAP32[i4 + 468 >> 2];
 HEAP32[i5 + 472 >> 2] = HEAP32[i4 + 472 >> 2];
 HEAP32[i5 + 476 >> 2] = HEAP32[i4 + 476 >> 2];
 HEAP32[i5 + 480 >> 2] = HEAP32[i4 + 480 >> 2];
 HEAP32[i5 + 484 >> 2] = HEAP32[i4 + 484 >> 2];
 HEAP32[i5 + 488 >> 2] = HEAP32[i4 + 488 >> 2];
 HEAP32[i5 + 492 >> 2] = HEAP32[i4 + 492 >> 2];
 i1 = i5 + 496 | 0;
 i2 = i4 + 496 | 0;
 i3 = i1 + 40 | 0;
 do {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 } while ((i1 | 0) < (i3 | 0));
 HEAP32[i5 + 536 >> 2] = HEAP32[i4 + 536 >> 2];
 HEAP32[i5 + 540 >> 2] = HEAP32[i4 + 540 >> 2];
 HEAP32[i5 + 544 >> 2] = HEAP32[i4 + 544 >> 2];
 HEAP32[i5 + 548 >> 2] = HEAP32[i4 + 548 >> 2];
 HEAP32[i5 + 548 + 4 >> 2] = HEAP32[i4 + 548 + 4 >> 2];
 HEAP32[i5 + 548 + 8 >> 2] = HEAP32[i4 + 548 + 8 >> 2];
 HEAP32[i5 + 548 + 12 >> 2] = HEAP32[i4 + 548 + 12 >> 2];
 HEAP32[i5 + 548 + 16 >> 2] = HEAP32[i4 + 548 + 16 >> 2];
 HEAP32[i5 + 548 + 20 >> 2] = HEAP32[i4 + 548 + 20 >> 2];
 HEAP32[i5 + 548 + 24 >> 2] = HEAP32[i4 + 548 + 24 >> 2];
 HEAP32[i5 + 576 >> 2] = HEAP32[i4 + 576 >> 2];
 HEAP32[i5 + 580 >> 2] = HEAP32[i4 + 580 >> 2];
 HEAP32[i5 + 584 >> 2] = HEAP32[i4 + 584 >> 2];
 HEAP32[i5 + 588 >> 2] = HEAP32[i4 + 588 >> 2];
 HEAP32[i5 + 592 >> 2] = HEAP32[i4 + 592 >> 2];
 HEAP32[i5 + 596 >> 2] = HEAP32[i4 + 596 >> 2];
 i1 = i5 + 600 | 0;
 i2 = i4 + 600 | 0;
 i3 = i1 + 40 | 0;
 do {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 } while ((i1 | 0) < (i3 | 0));
 HEAP32[i5 + 640 >> 2] = HEAP32[i4 + 640 >> 2];
 HEAP32[i5 + 644 >> 2] = HEAP32[i4 + 644 >> 2];
 HEAP32[i5 + 648 >> 2] = HEAP32[i4 + 648 >> 2];
 HEAP32[i5 + 652 >> 2] = HEAP32[i4 + 652 >> 2];
 HEAP32[i5 + 656 >> 2] = HEAP32[i4 + 656 >> 2];
 HEAP32[i5 + 660 >> 2] = HEAP32[i4 + 660 >> 2];
 HEAP32[i5 + 664 >> 2] = HEAP32[i4 + 664 >> 2];
 HEAP32[i5 + 668 >> 2] = HEAP32[i4 + 668 >> 2];
 HEAP32[i5 + 672 >> 2] = HEAP32[i4 + 672 >> 2];
 HEAP32[i5 + 676 >> 2] = HEAP32[i4 + 676 >> 2];
 HEAP32[i5 + 680 >> 2] = HEAP32[i4 + 680 >> 2];
 HEAP32[i5 + 684 >> 2] = HEAP32[i4 + 684 >> 2];
 HEAP32[i5 + 688 >> 2] = HEAP32[i4 + 688 >> 2];
 HEAP32[i5 + 688 + 4 >> 2] = HEAP32[i4 + 688 + 4 >> 2];
 HEAP32[i5 + 688 + 8 >> 2] = HEAP32[i4 + 688 + 8 >> 2];
 HEAP32[i5 + 688 + 12 >> 2] = HEAP32[i4 + 688 + 12 >> 2];
 HEAP32[i5 + 704 >> 2] = HEAP32[i4 + 704 >> 2];
 HEAP32[i5 + 708 >> 2] = HEAP32[i4 + 708 >> 2];
 HEAP32[i5 + 712 >> 2] = HEAP32[i4 + 712 >> 2];
 HEAP32[i5 + 716 >> 2] = HEAP32[i4 + 716 >> 2];
 HEAP32[i5 + 720 >> 2] = HEAP32[i4 + 720 >> 2];
 HEAP32[i5 + 724 >> 2] = HEAP32[i4 + 724 >> 2];
 i1 = i5 + 728 | 0;
 i2 = i4 + 728 | 0;
 i3 = i1 + 72 | 0;
 do {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 } while ((i1 | 0) < (i3 | 0));
 HEAP32[i5 + 800 >> 2] = HEAP32[i4 + 800 >> 2];
 HEAP32[i5 + 804 >> 2] = HEAP32[i4 + 804 >> 2];
 HEAP32[i5 + 808 >> 2] = HEAP32[i4 + 808 >> 2];
 HEAP32[i5 + 812 >> 2] = HEAP32[i4 + 812 >> 2];
 HEAP32[i5 + 816 >> 2] = HEAP32[i4 + 816 >> 2];
 HEAP32[i5 + 820 >> 2] = HEAP32[i4 + 820 >> 2];
 HEAP32[i5 + 824 >> 2] = HEAP32[i4 + 824 >> 2];
 HEAP32[i5 + 828 >> 2] = HEAP32[i4 + 828 >> 2];
 HEAP32[i5 + 832 >> 2] = HEAP32[i4 + 832 >> 2];
 i1 = i5 + 836 | 0;
 i2 = i4 + 836 | 0;
 i3 = i1 + 40 | 0;
 do {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 } while ((i1 | 0) < (i3 | 0));
 HEAP32[i5 + 876 >> 2] = HEAP32[i4 + 876 >> 2];
 HEAP32[i5 + 880 >> 2] = HEAP32[i4 + 880 >> 2];
 HEAP32[i5 + 884 >> 2] = HEAP32[i4 + 884 >> 2];
 HEAP32[i5 + 888 >> 2] = HEAP32[i4 + 888 >> 2];
 HEAP32[i5 + 888 + 4 >> 2] = HEAP32[i4 + 888 + 4 >> 2];
 HEAP32[i5 + 888 + 8 >> 2] = HEAP32[i4 + 888 + 8 >> 2];
 HEAP32[i5 + 888 + 12 >> 2] = HEAP32[i4 + 888 + 12 >> 2];
 HEAP32[i5 + 888 + 16 >> 2] = HEAP32[i4 + 888 + 16 >> 2];
 HEAP32[i5 + 888 + 20 >> 2] = HEAP32[i4 + 888 + 20 >> 2];
 HEAP32[i5 + 888 + 24 >> 2] = HEAP32[i4 + 888 + 24 >> 2];
 HEAP32[i5 + 916 >> 2] = HEAP32[i4 + 916 >> 2];
 HEAP32[i5 + 920 >> 2] = HEAP32[i4 + 920 >> 2];
 HEAP32[i5 + 924 >> 2] = HEAP32[i4 + 924 >> 2];
 HEAP32[i5 + 928 >> 2] = HEAP32[i4 + 928 >> 2];
 HEAP32[i5 + 932 >> 2] = HEAP32[i4 + 932 >> 2];
 HEAP32[i5 + 936 >> 2] = HEAP32[i4 + 936 >> 2];
 i1 = i5 + 940 | 0;
 i2 = i4 + 940 | 0;
 i3 = i1 + 40 | 0;
 do {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 } while ((i1 | 0) < (i3 | 0));
 HEAP32[i5 + 980 >> 2] = HEAP32[i4 + 980 >> 2];
 HEAP32[i5 + 984 >> 2] = HEAP32[i4 + 984 >> 2];
 HEAP32[i5 + 988 >> 2] = HEAP32[i4 + 988 >> 2];
 HEAP32[i5 + 992 >> 2] = HEAP32[i4 + 992 >> 2];
 HEAP32[i5 + 996 >> 2] = HEAP32[i4 + 996 >> 2];
 HEAP32[i5 + 1e3 >> 2] = HEAP32[i4 + 1e3 >> 2];
 HEAP32[i5 + 1004 >> 2] = HEAP32[i4 + 1004 >> 2];
 HEAP32[i5 + 1008 >> 2] = HEAP32[i4 + 1008 >> 2];
 HEAP32[i5 + 1012 >> 2] = HEAP32[i4 + 1012 >> 2];
 HEAP32[i5 + 1016 >> 2] = HEAP32[i4 + 1016 >> 2];
 HEAP32[i5 + 1020 >> 2] = HEAP32[i4 + 1020 >> 2];
 HEAP32[i5 + 1024 >> 2] = HEAP32[i4 + 1024 >> 2];
 HEAP32[i5 + 1028 >> 2] = HEAP32[i4 + 1028 >> 2];
 i1 = 0;
 do {
  HEAP32[i5 + 1032 + (i1 * 28 | 0) >> 2] = HEAP32[i4 + 1032 + (i1 * 28 | 0) >> 2];
  HEAP32[i5 + 1032 + (i1 * 28 | 0) + 4 >> 2] = HEAP32[i4 + 1032 + (i1 * 28 | 0) + 4 >> 2];
  HEAP32[i5 + 1032 + (i1 * 28 | 0) + 8 >> 2] = HEAP32[i4 + 1032 + (i1 * 28 | 0) + 8 >> 2];
  HEAP32[i5 + 1032 + (i1 * 28 | 0) + 12 >> 2] = HEAP32[i4 + 1032 + (i1 * 28 | 0) + 12 >> 2];
  HEAP32[i5 + 1032 + (i1 * 28 | 0) + 16 >> 2] = HEAP32[i4 + 1032 + (i1 * 28 | 0) + 16 >> 2];
  HEAP32[i5 + 1032 + (i1 * 28 | 0) + 20 >> 2] = HEAP32[i4 + 1032 + (i1 * 28 | 0) + 20 >> 2];
  HEAP32[i5 + 1032 + (i1 * 28 | 0) + 24 >> 2] = HEAP32[i4 + 1032 + (i1 * 28 | 0) + 24 >> 2];
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != 64);
 i1 = HEAP32[i4 + 2824 + 4 >> 2] | 0;
 HEAP32[i5 + 2824 >> 2] = HEAP32[i4 + 2824 >> 2];
 HEAP32[i5 + 2824 + 4 >> 2] = i1;
 HEAP32[i5 + 2832 >> 2] = HEAP32[i4 + 2832 >> 2];
 HEAP32[i5 + 2832 + 4 >> 2] = HEAP32[i4 + 2832 + 4 >> 2];
 HEAP16[i5 + 2832 + 8 >> 1] = HEAP16[i4 + 2832 + 8 >> 1] | 0;
 HEAP32[i5 + 2844 >> 2] = HEAP32[i4 + 2844 >> 2];
 HEAP32[i5 + 2848 >> 2] = HEAP32[i4 + 2848 >> 2];
 HEAP32[i5 + 2852 >> 2] = HEAP32[i4 + 2852 >> 2];
 HEAP32[i5 + 2856 >> 2] = HEAP32[i4 + 2856 >> 2];
 HEAP32[i5 + 2860 >> 2] = HEAP32[i4 + 2860 >> 2];
 HEAP32[i5 + 2864 >> 2] = HEAP32[i4 + 2864 >> 2];
 HEAP32[i5 + 2868 >> 2] = HEAP32[i4 + 2868 >> 2];
 HEAP32[i5 + 2868 + 4 >> 2] = HEAP32[i4 + 2868 + 4 >> 2];
 HEAP32[i5 + 2868 + 8 >> 2] = HEAP32[i4 + 2868 + 8 >> 2];
 HEAP16[i5 + 2868 + 12 >> 1] = HEAP16[i4 + 2868 + 12 >> 1] | 0;
 HEAP32[i5 + 2884 >> 2] = HEAP32[i4 + 2884 >> 2];
 HEAP32[i5 + 2888 >> 2] = HEAP32[i4 + 2888 >> 2];
 HEAP32[i5 + 2892 >> 2] = HEAP32[i4 + 2892 >> 2];
 HEAP32[i5 + 2896 >> 2] = HEAP32[i4 + 2896 >> 2];
 HEAP32[i5 + 2900 >> 2] = HEAP32[i4 + 2900 >> 2];
 HEAP32[i5 + 2904 >> 2] = HEAP32[i4 + 2904 >> 2];
 HEAP32[i5 + 2908 >> 2] = HEAP32[i4 + 2908 >> 2];
 i1 = 0;
 do {
  HEAP32[i5 + 2912 + (i1 * 12 | 0) >> 2] = HEAP32[i4 + 2912 + (i1 * 12 | 0) >> 2];
  HEAP32[i5 + 2912 + (i1 * 12 | 0) + 4 >> 2] = HEAP32[i4 + 2912 + (i1 * 12 | 0) + 4 >> 2];
  HEAP32[i5 + 2912 + (i1 * 12 | 0) + 8 >> 2] = HEAP32[i4 + 2912 + (i1 * 12 | 0) + 8 >> 2];
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != 4);
 i1 = i5 + 2960 | 0;
 i2 = i4 + 2960 | 0;
 i3 = i1 + 40 | 0;
 do {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 } while ((i1 | 0) < (i3 | 0));
 return;
}

function _HUD_TempEntUpdate(d17, d16, d15, i19, i18, i20, i14) {
 d17 = +d17;
 d16 = +d16;
 d15 = +d15;
 i19 = i19 | 0;
 i18 = i18 | 0;
 i20 = i20 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, d5 = 0.0, i6 = 0, d7 = 0.0, i8 = 0, d9 = 0.0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i21 = 0, i22 = 0, d23 = 0.0, d24 = 0.0, d25 = 0.0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if (HEAP32[i18 >> 2] | 0) {
  mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 40 >> 2] | 0, 0, 1);
  mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 44 >> 2] | 0);
  mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 52 >> 2] | 0, -1);
  HEAP32[gb + 93728 >> 2] = (HEAP32[gb + 93728 >> 2] | 0) + 1 & 31;
  i1 = HEAP32[i18 >> 2] | 0;
  L3 : do if (!(d17 <= 0.0)) {
   if (i1 | 0) {
    i2 = 0;
    do {
     i8 = (i2 | 0) == 0;
     i6 = i2 + 44 | 0;
     i2 = i1;
     while (1) {
      i13 = i2 + 4 | 0;
      d5 = +HEAPF32[i13 >> 2] - d16;
      i3 = i2 + 44 | 0;
      i1 = HEAP32[i3 >> 2] | 0;
      i10 = HEAP32[i2 >> 2] | 0;
      if (!(d5 < 0.0)) {
       i6 = 18;
       break;
      }
      if (i10 & 128 | 0) {
       i4 = i2 + 828 | 0;
       if (!(HEAP32[i4 >> 2] | 0)) HEAP32[i4 >> 2] = 2;
       i12 = ~~(+(HEAP32[i2 + 152 >> 2] | 0) * (d5 * +HEAPF32[i2 + 24 >> 2] + 1.0));
       HEAP32[i2 + 832 >> 2] = i12;
       if ((i12 | 0) > 0) {
        i6 = 18;
        break;
       }
      }
      HEAP32[i3 >> 2] = HEAP32[i19 >> 2];
      HEAP32[i19 >> 2] = i2;
      if (i8) {
       i6 = 16;
       break;
      }
      HEAP32[i6 >> 2] = i1;
      if (!i1) break L3; else i2 = i1;
     }
     do if ((i6 | 0) == 16) {
      HEAP32[i18 >> 2] = i1;
      i2 = 0;
     } else if ((i6 | 0) == 18) {
      i6 = 0;
      i12 = i2 + 68 | 0;
      i8 = i2 + 2956 | 0;
      i3 = HEAP32[i8 >> 2] | 0;
      i11 = i2 + 432 | 0;
      HEAP32[i11 >> 2] = i3;
      i4 = HEAP32[i8 + 4 >> 2] | 0;
      HEAP32[i11 + 4 >> 2] = i4;
      i22 = HEAP32[i8 + 8 >> 2] | 0;
      HEAP32[i11 + 8 >> 2] = i22;
      d5 = (HEAP32[tempDoublePtr >> 2] = i22, +HEAPF32[tempDoublePtr >> 2]);
      d7 = (HEAP32[tempDoublePtr >> 2] = i3, +HEAPF32[tempDoublePtr >> 2]);
      d9 = (HEAP32[tempDoublePtr >> 2] = i4, +HEAPF32[tempDoublePtr >> 2]);
      do if (!(i10 & 131072)) {
       if (i10 & 32768 | 0) {
        i10 = (mftCall_ii(HEAP32[gb + 92340 + 212 >> 2] | 0, HEAP16[i2 + 52 >> 1] | 0) | 0) + 2888 | 0;
        i22 = i2 + 56 | 0;
        HEAPF32[i8 >> 2] = +HEAPF32[i10 >> 2] + +HEAPF32[i22 >> 2];
        HEAPF32[i8 + 4 >> 2] = +HEAPF32[i10 + 4 >> 2] + +HEAPF32[i22 + 4 >> 2];
        HEAPF32[i8 + 8 >> 2] = +HEAPF32[i10 + 8 >> 2] + +HEAPF32[i22 + 8 >> 2];
        break;
       }
       if (i10 & 1 | 0) {
        i22 = i2 + 92 | 0;
        i10 = i2 + 12 | 0;
        d25 = +HEAPF32[i10 >> 2] + +HEAPF32[i22 >> 2] * d17;
        HEAPF32[i10 >> 2] = d25;
        i10 = i2 + 16 | 0;
        d23 = +HEAPF32[i10 >> 2] + +HEAPF32[i22 + 4 >> 2] * d17;
        HEAPF32[i10 >> 2] = d23;
        d9 = +HEAPF32[i22 + 8 >> 2];
        d24 = +Math_sin(+(d9 + +HEAPF32[i2 + 464 >> 2] * d16));
        d7 = +HEAPF32[i2 + 852 >> 2];
        HEAPF32[i8 >> 2] = d25 + d24 * d7 * 10.0;
        HEAPF32[i8 + 4 >> 2] = d23 + +Math_sin(+(d16 * 5.5 + d9 + .7)) * d7 * 8.0;
        HEAPF32[i8 + 8 >> 2] = d5 + d9 * d17;
        break;
       }
       i4 = i2 + 92 | 0;
       if (i10 & 1024 | 0) {
        d25 = +(i2 | 0);
        HEAPF32[i8 >> 2] = d7 + (+HEAPF32[i4 >> 2] * d17 + +Math_sin(+(d16 * 20.0 + d25)) * 8.0);
        HEAPF32[i8 + 4 >> 2] = d9 + (+HEAPF32[i4 + 4 >> 2] * d17 + +Math_sin(+(d16 * 30.0 + d25)) * 4.0);
        HEAPF32[i8 + 8 >> 2] = d5 + +HEAPF32[i4 + 8 >> 2] * d17;
        break;
       }
       HEAPF32[i8 >> 2] = d7 + +HEAPF32[i4 >> 2] * d17;
       HEAPF32[i8 + 4 >> 2] = d9 + +HEAPF32[i4 + 4 >> 2] * d17;
       i3 = 2;
       do {
        HEAPF32[i8 + (i3 << 2) >> 2] = +HEAPF32[i8 + (i3 << 2) >> 2] + +HEAPF32[i4 + (i3 << 2) >> 2] * d17;
        i3 = i3 + 1 | 0;
       } while ((i3 | 0) != 3);
      } else {
       i3 = i2 + 140 | 0;
       if (+HEAPF32[i3 >> 2] < d16) {
        mftCall_viiii(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 132 >> 2] | 0, i8 | 0, 8, -200, 200);
        i22 = i2 + 172 | 0;
        d25 = +HEAPF32[i22 >> 2] + -.1;
        HEAPF32[i22 >> 2] = d25;
        if (!(d25 <= 0.0)) {
         HEAPF32[i13 >> 2] = d16 + .5;
         HEAPF32[i3 >> 2] = d16 + .1;
         break;
        } else {
         HEAPF32[i13 >> 2] = d16;
         break;
        }
       }
      } while (0);
      i3 = HEAP32[i2 >> 2] | 0;
      if (!(i3 & 256)) {
       if (i3 & 2048 | 0) {
        i4 = i2 + 804 | 0;
        d5 = d17 * 10.0 + +HEAPF32[i4 >> 2];
        HEAPF32[i4 >> 2] = d5;
        if (d5 >= +HEAPF32[i2 + 8 >> 2]) HEAPF32[i4 >> 2] = d5 - +(~~d5 | 0);
       }
      } else {
       i4 = i2 + 804 | 0;
       d5 = +HEAPF32[i4 >> 2] + +HEAPF32[i2 + 852 >> 2] * d17;
       HEAPF32[i4 >> 2] = d5;
       if (d5 >= +HEAPF32[i2 + 8 >> 2]) {
        HEAPF32[i4 >> 2] = d5 - +(~~d5 | 0);
        if (!(i3 & 65536)) {
         HEAPF32[i13 >> 2] = d16;
         break;
        }
       }
      }
      if (i3 & 4 | 0) {
       i10 = i2 + 104 | 0;
       i22 = i2 + 2968 | 0;
       d23 = +HEAPF32[i22 >> 2] + +HEAPF32[i10 >> 2] * d17;
       HEAPF32[i22 >> 2] = d23;
       d24 = +HEAPF32[i22 + 4 >> 2] + +HEAPF32[i10 + 4 >> 2] * d17;
       HEAPF32[i22 + 4 >> 2] = d24;
       d25 = +HEAPF32[i22 + 8 >> 2] + +HEAPF32[i10 + 8 >> 2] * d17;
       HEAPF32[i22 + 8 >> 2] = d25;
       i22 = i2 + 2924 | 0;
       HEAPF32[i22 >> 2] = d23;
       HEAPF32[i22 + 4 >> 2] = d24;
       HEAPF32[i22 + 8 >> 2] = d25;
      }
      if (i3 & 4128) {
       HEAPF32[i21 + 68 >> 2] = 0.0;
       HEAPF32[i21 + 68 + 4 >> 2] = 0.0;
       HEAPF32[i21 + 68 + 8 >> 2] = 0.0;
       if (!(i3 & 4096)) {
        if (i3 & 32 | 0) {
         mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 56 >> 2] | 0, 2);
         mftCall_viiiii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 60 >> 2] | 0, i11 | 0, i8 | 0, 10, -1, i21 | 0);
         d5 = +HEAPF32[i21 + 16 >> 2];
         if (d5 != 1.0) {
          HEAP32[i21 + 68 >> 2] = HEAP32[i21 + 32 >> 2];
          HEAP32[i21 + 68 + 4 >> 2] = HEAP32[i21 + 32 + 4 >> 2];
          HEAP32[i21 + 68 + 8 >> 2] = HEAP32[i21 + 32 + 8 >> 2];
          if (HEAP32[i2 >> 2] & 131072 | 0) {
           i22 = i2 + 92 | 0;
           _VectorScale(i22, .6000000238418579, i22);
           if (+_Length(i22) < 10.0) HEAPF32[i2 + 172 >> 2] = 0.0;
          }
          i3 = HEAP32[i2 + 36 >> 2] | 0;
          if (i3) mftCall_vii(i3 | 0, i2 | 0, i21 | 0);
         } else d5 = 1.0;
         i6 = 57;
        }
       } else {
        mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 56 >> 2] | 0, 2);
        mftCall_viiiii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 60 >> 2] | 0, i11 | 0, i8 | 0, 2, -1, i21 | 0);
        do if (+HEAPF32[i21 + 16 >> 2] != 1.0) {
         i3 = mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 36 >> 2] | 0, HEAP32[i21 + 48 >> 2] | 0) | 0;
         if (HEAP32[i21 + 48 >> 2] | 0) if ((HEAP32[i3 + 80 >> 2] | 0) == (HEAP16[i2 + 52 >> 1] | 0)) {
          d5 = 1.0;
          break;
         }
         d5 = +HEAPF32[i21 + 16 >> 2];
         HEAP32[i21 + 68 >> 2] = HEAP32[i21 + 32 >> 2];
         HEAP32[i21 + 68 + 4 >> 2] = HEAP32[i21 + 32 + 4 >> 2];
         HEAP32[i21 + 68 + 8 >> 2] = HEAP32[i21 + 32 + 8 >> 2];
         i3 = HEAP32[i2 + 36 >> 2] | 0;
         if (i3) mftCall_vii(i3 | 0, i2 | 0, i21 | 0);
        } else d5 = 1.0; while (0);
        i6 = 57;
       }
       do if ((i6 | 0) == 57) if (d5 != 1.0) {
        i6 = i2 + 92 | 0;
        _VectorMA(i11, d5 * d17, i6, i8);
        d5 = +HEAPF32[i2 + 28 >> 2];
        i3 = HEAP32[i2 >> 2] | 0;
        if (i3 & 10) if (+HEAPF32[i21 + 68 + 8 >> 2] > .9) {
         d7 = +HEAPF32[i6 + 8 >> 2];
         if (!(d7 <= 0.0)) d5 = d5 * .5; else {
          i4 = i2 + 2968 | 0;
          if (!(d7 >= d17 * d15 * -3.0)) d5 = d5 * .5; else {
           HEAP32[i2 >> 2] = i3 & -63;
           HEAPF32[i4 >> 2] = 0.0;
           HEAPF32[i4 + 8 >> 2] = 0.0;
           i3 = i3 & -63;
           d5 = 0.0;
          }
         }
        } else d5 = d5 * .5;
        if (HEAP32[i2 + 32 >> 2] | 0) {
         mftCall_vid(i14 | 0, i2 | 0, +d5);
         i3 = HEAP32[i2 >> 2] | 0;
        }
        if (i3 & 16384 | 0) {
         HEAP32[i2 >> 2] = i3 & -129;
         HEAPF32[i13 >> 2] = d16;
         break;
        }
        if (d5 != 0.0) {
         _VectorMA(i6, (+HEAPF32[i6 >> 2] * +HEAPF32[i21 + 68 >> 2] + +HEAPF32[i6 + 4 >> 2] * +HEAPF32[i21 + 68 + 4 >> 2] + +HEAPF32[i6 + 8 >> 2] * +HEAPF32[i21 + 68 + 8 >> 2]) * -2.0, i21 + 68 | 0, i6);
         i22 = i2 + 2968 + 4 | 0;
         HEAPF32[i22 >> 2] = -+HEAPF32[i22 >> 2];
        }
        if (d5 != 1.0) {
         _VectorScale(i6, d5, i6);
         i22 = i2 + 2968 | 0;
         _VectorScale(i22, .8999999761581421, i22);
        }
       } while (0);
       i3 = HEAP32[i2 >> 2] | 0;
      }
      if (i3 & 64) if ((HEAP32[gb + 93728 >> 2] | 0) == (HEAP32[i2 + 816 >> 2] | 0)) {
       i3 = mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 256 >> 2] | 0, 0) | 0;
       HEAP32[i3 >> 2] = HEAP32[i8 >> 2];
       HEAP32[i3 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
       HEAP32[i3 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
       HEAPF32[i3 + 12 >> 2] = 60.0;
       HEAP8[i3 + 16 >> 0] = -1;
       HEAP8[i3 + 17 >> 0] = 120;
       HEAP8[i3 + 18 >> 0] = 0;
       HEAPF32[i3 + 20 >> 2] = d16 + .01;
       i3 = HEAP32[i2 >> 2] | 0;
      }
      if (i3 & 16) {
       mftCall_viii(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 120 >> 2] | 0, i11 | 0, i8 | 0, 1);
       i3 = HEAP32[i2 >> 2] | 0;
      }
      if (!(i3 & 2)) {
       if (i3 & 8 | 0) {
        i22 = i2 + 92 + 8 | 0;
        HEAPF32[i22 >> 2] = +HEAPF32[i22 >> 2] - d17 * d15 * .5;
       }
      } else {
       i22 = i2 + 92 + 8 | 0;
       HEAPF32[i22 >> 2] = +HEAPF32[i22 >> 2] - d17 * d15;
      }
      if (i3 & 524288) {
       i4 = HEAP32[i2 + 40 >> 2] | 0;
       if (i4) {
        mftCall_vidd(i4 | 0, i2 | 0, +d17, +d16);
        i3 = HEAP32[i2 >> 2] | 0;
       }
      }
      if (!(i3 & 262144)) if (!(mftCall_ii(i20 | 0, i12 | 0) | 0)) {
       i3 = HEAP32[i2 >> 2] | 0;
       if (!(i3 & 8192)) {
        HEAPF32[i13 >> 2] = d16;
        HEAP32[i2 >> 2] = i3 & -129;
       }
      }
     } while (0);
    } while ((i1 | 0) != 0);
   }
  } else if (i1 | 0) do {
   if (!(HEAP32[i1 >> 2] & 262144)) mftCall_ii(i20 | 0, i1 + 68 | 0) | 0;
   i1 = HEAP32[i1 + 44 >> 2] | 0;
  } while ((i1 | 0) != 0); while (0);
  mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 48 >> 2] | 0);
 }
 STACKTOP = i21;
 return;
}

function __Z20HUD_WeaponsPostThinkP13local_state_sS0_P9usercmd_sdj(i7, i11, i10, d3, i4) {
 i7 = i7 | 0;
 i11 = i11 | 0;
 i10 = i10 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i12 = 0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0;
 __Z21HUD_InitClientWeaponsv();
 HEAPF32[HEAP32[gb + 57604 >> 2] >> 2] = d3;
 do switch (HEAP32[i7 + 444 >> 2] | 0) {
 case 1:
  {
   i8 = gb + 23108 | 0;
   break;
  }
 case 2:
  {
   i8 = gb + 22904 | 0;
   break;
  }
 case 3:
  {
   i8 = gb + 23368 | 0;
   break;
  }
 case 4:
  {
   i8 = gb + 23576 | 0;
   break;
  }
 case 6:
  {
   i8 = gb + 23784 | 0;
   break;
  }
 case 7:
  {
   i8 = gb + 23988 | 0;
   break;
  }
 case 8:
  {
   i8 = gb + 24200 | 0;
   break;
  }
 case 9:
  {
   i8 = gb + 24412 | 0;
   break;
  }
 case 10:
  {
   i8 = gb + 24632 | 0;
   break;
  }
 case 11:
  {
   i8 = gb + 24868 | 0;
   break;
  }
 case 12:
  {
   i8 = gb + 25080 | 0;
   break;
  }
 case 14:
  {
   i8 = gb + 25276 | 0;
   break;
  }
 case 13:
  {
   i8 = gb + 25472 | 0;
   break;
  }
 case 15:
  {
   i8 = gb + 25672 | 0;
   break;
  }
 default:
  i8 = 0;
 } while (0);
 HEAP32[gb + 92900 >> 2] = i11;
 if (HEAP32[gb + 92896 >> 2] | 0) {
  d3 = +HEAPF32[i11 + 404 >> 2];
  i1 = HEAP32[gb + 81316 >> 2] | 0;
  if (d3 <= 0.0 & (i1 | 0) > 0) {
   i1 = HEAP32[gb + 26408 + 1224 >> 2] | 0;
   if (i1 | 0) mftCall_vii(HEAP32[(HEAP32[i1 >> 2] | 0) + 256 >> 2] | 0, i1 | 0, 0);
   HEAP32[gb + 59360 >> 2] = 0;
  } else if (d3 > 0.0 & (i1 | 0) < 1) {
   i1 = HEAP32[gb + 26408 + 1224 >> 2] | 0;
   if (i1 | 0) mftCall_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 248 >> 2] | 0, i1 | 0) | 0;
   HEAP32[gb + 59360 >> 2] = 0;
  }
  HEAP32[gb + 81316 >> 2] = ~~+HEAPF32[i11 + 404 >> 2];
 }
 if (i8 | 0) {
  i2 = 0;
  do {
   i1 = HEAP32[gb + 81012 + (i2 << 2) >> 2] | 0;
   if (i1 | 0) {
    HEAP32[i1 + 188 >> 2] = HEAP32[i7 + 816 + (i2 * 88 | 0) + 20 >> 2];
    HEAP32[i1 + 152 >> 2] = HEAP32[i7 + 816 + (i2 * 88 | 0) + 24 >> 2];
    HEAP32[i1 + 176 >> 2] = HEAP32[i7 + 816 + (i2 * 88 | 0) + 4 >> 2];
    HEAP32[i1 + 156 >> 2] = HEAP32[i7 + 816 + (i2 * 88 | 0) + 8 >> 2];
    HEAP32[i1 + 160 >> 2] = HEAP32[i7 + 816 + (i2 * 88 | 0) + 12 >> 2];
    HEAP32[i1 + 164 >> 2] = HEAP32[i7 + 816 + (i2 * 88 | 0) + 16 >> 2];
    HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 596 >> 2] = HEAP32[i7 + 816 + (i2 * 88 | 0) + 72 >> 2];
    HEAP32[i1 + 80 >> 2] = HEAP32[i7 + 816 + (i2 * 88 | 0) + 76 >> 2];
    HEAP32[i1 + 84 >> 2] = HEAP32[i7 + 816 + (i2 * 88 | 0) + 80 >> 2];
    HEAP32[i1 + 88 >> 2] = HEAP32[i7 + 816 + (i2 * 88 | 0) + 56 >> 2];
    HEAP32[i1 + 92 >> 2] = HEAP32[i7 + 816 + (i2 * 88 | 0) + 60 >> 2];
    HEAP32[i1 + 96 >> 2] = HEAP32[i7 + 816 + (i2 * 88 | 0) + 64 >> 2];
    HEAP32[i1 + 172 >> 2] = ~~+HEAPF32[i7 + 792 + 8 >> 2];
    i9 = ~~+HEAPF32[i7 + 804 >> 2];
    HEAP32[i1 + 168 >> 2] = i9;
    HEAP32[gb + 26408 + 1236 + (i9 << 2) >> 2] = ~~+HEAPF32[i7 + 804 + 4 >> 2];
    HEAP32[gb + 26408 + 1236 + (HEAP32[i1 + 172 >> 2] << 2) >> 2] = ~~+HEAPF32[i7 + 804 + 8 >> 2];
   }
   i2 = i2 + 1 | 0;
  } while ((i2 | 0) != 32);
  HEAP32[gb + 26408 + 680 >> 2] = i4;
  i1 = HEAP32[i7 + 204 >> 2] | 0;
  HEAP32[gb + 26408 + 716 >> 2] = i1;
  i2 = HEAPU16[i10 + 30 >> 1] | 0;
  HEAP32[gb + 26408 + 720 >> 2] = (i2 ^ i1) & i2;
  HEAP32[gb + 26408 + 724 >> 2] = (i2 ^ i1) & ~i2;
  i1 = HEAP32[gb + 26408 + 4 >> 2] | 0;
  HEAP32[i1 + 384 >> 2] = i2;
  HEAP32[i1 + 32 >> 2] = HEAP32[i7 + 352 >> 2];
  HEAP32[i1 + 32 + 4 >> 2] = HEAP32[i7 + 352 + 4 >> 2];
  HEAP32[i1 + 32 + 8 >> 2] = HEAP32[i7 + 352 + 8 >> 2];
  HEAP32[i1 + 420 >> 2] = HEAP32[i7 + 380 >> 2];
  i2 = HEAP32[i7 + 476 >> 2] | 0;
  HEAP32[i1 + 368 >> 2] = i2;
  HEAP32[i1 + 448 >> 2] = HEAP32[i7 + 384 >> 2];
  HEAP32[i1 + 528 >> 2] = HEAP32[i7 + 432 >> 2];
  HEAP32[i1 + 532 >> 2] = HEAP32[i7 + 436 >> 2];
  HEAP32[i1 + 536 >> 2] = HEAP32[i7 + 440 >> 2];
  i4 = HEAP32[i7 + 364 >> 2] | 0;
  HEAP32[i1 + 188 >> 2] = i4;
  HEAP32[gb + 26408 + 612 >> 2] = HEAP32[i7 + 464 >> 2];
  HEAP32[gb + 26408 + 1592 >> 2] = HEAP32[i7 + 756 >> 2];
  HEAP32[gb + 26408 + 1584 >> 2] = HEAP32[i7 + 760 >> 2];
  HEAP32[gb + 26408 + 48 >> 2] = ~~+HEAPF32[i7 + 768 >> 2];
  HEAP32[gb + 26408 + 52 >> 2] = ~~+HEAPF32[i7 + 768 + 4 >> 2];
  HEAP32[gb + 26408 + 76 >> 2] = ~~+HEAPF32[i7 + 768 + 8 >> 2];
  HEAP32[gb + 26408 + 56 >> 2] = HEAP32[i7 + 452 >> 2];
  HEAP32[gb + 26408 + 60 >> 2] = HEAP32[i7 + 448 >> 2];
  HEAP32[gb + 26408 + 68 >> 2] = HEAP32[i7 + 456 >> 2];
  HEAP32[gb + 26408 + 72 >> 2] = ~~+HEAPF32[i7 + 780 >> 2];
  HEAP32[gb + 26408 + 64 >> 2] = HEAP32[i7 + 460 >> 2];
  i1 = HEAP32[i7 + 444 >> 2] | 0;
  if (!i1) {
   i6 = HEAP32[gb + 26408 + 1224 >> 2] | 0;
   i5 = i6;
  } else {
   i6 = HEAP32[gb + 81012 + (i1 << 2) >> 2] | 0;
   HEAP32[gb + 26408 + 1224 >> 2] = i6;
   i5 = i6;
  }
  if ((HEAP32[i5 + 136 >> 2] | 0) == 8) {
   HEAP32[i6 + 200 >> 2] = ~~+HEAPF32[i7 + 780 + 4 >> 2];
   HEAP32[i6 + 204 >> 2] = ~~+HEAPF32[i7 + 780 + 8 >> 2];
  }
  if ((i2 | 0) != 5) if (!(__Z9CL_IsDeadv() | 0)) if ((i4 | 0) != 0 & (HEAP32[gb + 121104 >> 2] | 0) == 0 & +HEAPF32[gb + 26408 + 612 >> 2] <= 0.0) {
   mftCall_vi(HEAP32[(HEAP32[i8 >> 2] | 0) + 268 >> 2] | 0, i8 | 0);
   i1 = HEAP32[i7 + 444 >> 2] | 0;
  }
  HEAP32[i11 + 444 >> 2] = i1;
  i1 = HEAP8[i10 + 33 >> 0] | 0;
  if (i1 << 24 >> 24) if ((HEAP32[(HEAP32[gb + 26408 + 4 >> 2] | 0) + 368 >> 2] | 0) != 5) if ((HEAP32[i7 + 816 + ((i1 & 255) * 88 | 0) >> 2] | 0) == (i1 & 255 | 0)) {
   i2 = HEAP32[gb + 81012 + ((i1 & 255) << 2) >> 2] | 0;
   if (!((i2 | 0) == 0 | (i2 | 0) == (i8 | 0))) {
    i1 = HEAP32[gb + 26408 + 1224 >> 2] | 0;
    if (i1) {
     mftCall_vii(HEAP32[(HEAP32[i1 >> 2] | 0) + 256 >> 2] | 0, i1 | 0, 0);
     i1 = HEAP32[gb + 26408 + 1224 >> 2] | 0;
    }
    HEAP32[gb + 26408 + 1232 >> 2] = i1;
    HEAP32[gb + 26408 + 1224 >> 2] = i2;
    mftCall_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 248 >> 2] | 0, i2 | 0) | 0;
    HEAP32[i11 + 444 >> 2] = HEAPU8[i10 + 33 >> 0];
   }
  }
  i1 = HEAP32[gb + 26408 + 4 >> 2] | 0;
  HEAP32[i11 + 364 >> 2] = HEAP32[i1 + 188 >> 2];
  HEAP32[i11 + 436 >> 2] = HEAP32[i1 + 532 >> 2];
  i2 = HEAP32[i1 + 536 >> 2] | 0;
  HEAP32[i11 + 440 >> 2] = i2;
  HEAP32[i11 + 464 >> 2] = HEAP32[gb + 26408 + 612 >> 2];
  HEAP32[i11 + 756 >> 2] = HEAP32[gb + 26408 + 1592 >> 2];
  HEAP32[i11 + 760 >> 2] = HEAP32[gb + 26408 + 1584 >> 2];
  HEAP32[i11 + 432 >> 2] = HEAP32[i1 + 528 >> 2];
  HEAPF32[i11 + 768 >> 2] = +(HEAP32[gb + 26408 + 48 >> 2] | 0);
  HEAPF32[i11 + 768 + 4 >> 2] = +(HEAP32[gb + 26408 + 52 >> 2] | 0);
  HEAPF32[i11 + 768 + 8 >> 2] = +(HEAP32[gb + 26408 + 76 >> 2] | 0);
  HEAP32[i11 + 452 >> 2] = HEAP32[gb + 26408 + 56 >> 2];
  HEAP32[i11 + 448 >> 2] = HEAP32[gb + 26408 + 60 >> 2];
  HEAP32[i11 + 456 >> 2] = HEAP32[gb + 26408 + 68 >> 2];
  HEAPF32[i11 + 780 >> 2] = +(HEAP32[gb + 26408 + 72 >> 2] | 0);
  HEAP32[i11 + 460 >> 2] = HEAP32[gb + 26408 + 64 >> 2];
  i1 = HEAP32[gb + 26408 + 1224 >> 2] | 0;
  if ((HEAP32[i1 + 136 >> 2] | 0) == 8) {
   HEAPF32[i7 + 780 + 4 >> 2] = +(HEAP32[i1 + 200 >> 2] | 0);
   HEAPF32[i7 + 780 + 8 >> 2] = +(HEAP32[i1 + 204 >> 2] | 0);
  }
  if (HEAP32[gb + 92896 >> 2] | 0) if ((__Z17HUD_GetWeaponAnimv() | 0) != (i2 | 0)) {
   i1 = (i8 | 0) == (gb + 25472 | 0) ? 0 : 2;
   if ((i8 | 0) == (gb + 23368 | 0)) {
    i9 = (mftCall_i(HEAP32[gb + 92340 + 144 >> 2] | 0) | 0) != 1;
    i2 = HEAP32[i11 + 440 >> 2] | 0;
    i1 = i9 ? 1 : i1;
   }
   __Z18HUD_SendWeaponAnimiii(i2, i1, 1);
  }
  i9 = 0;
  do {
   i1 = HEAP32[gb + 81012 + (i9 << 2) >> 2] | 0;
   if (!i1) {
    i1 = i11 + 816 + (i9 * 88 | 0) | 0;
    i2 = i1 + 88 | 0;
    do {
     HEAP32[i1 >> 2] = 0;
     i1 = i1 + 4 | 0;
    } while ((i1 | 0) < (i2 | 0));
   } else {
    HEAP32[i11 + 816 + (i9 * 88 | 0) + 20 >> 2] = HEAP32[i1 + 188 >> 2];
    HEAP32[i11 + 816 + (i9 * 88 | 0) + 24 >> 2] = HEAP32[i1 + 152 >> 2];
    HEAP32[i11 + 816 + (i9 * 88 | 0) + 4 >> 2] = HEAP32[i1 + 176 >> 2];
    d16 = +HEAPF32[i1 + 156 >> 2];
    i5 = i11 + 816 + (i9 * 88 | 0) + 8 | 0;
    d15 = +HEAPF32[i1 + 160 >> 2];
    i7 = i11 + 816 + (i9 * 88 | 0) + 12 | 0;
    d14 = +HEAPF32[i1 + 164 >> 2];
    i8 = i11 + 816 + (i9 * 88 | 0) + 16 | 0;
    d13 = +HEAPF32[(HEAP32[i1 + 4 >> 2] | 0) + 596 >> 2];
    i2 = i11 + 816 + (i9 * 88 | 0) + 72 | 0;
    HEAP32[i11 + 816 + (i9 * 88 | 0) + 76 >> 2] = HEAP32[i1 + 80 >> 2];
    HEAP32[i11 + 816 + (i9 * 88 | 0) + 80 >> 2] = HEAP32[i1 + 84 >> 2];
    HEAP32[i11 + 816 + (i9 * 88 | 0) + 56 >> 2] = HEAP32[i1 + 88 >> 2];
    HEAP32[i11 + 816 + (i9 * 88 | 0) + 60 >> 2] = HEAP32[i1 + 92 >> 2];
    HEAP32[i11 + 816 + (i9 * 88 | 0) + 64 >> 2] = HEAP32[i1 + 96 >> 2];
    d3 = +(HEAPU8[i10 + 2 >> 0] | 0) * .001;
    i6 = i11 + 816 + (i9 * 88 | 0) + 28 | 0;
    HEAPF32[i6 >> 2] = +HEAPF32[i6 >> 2] - d3;
    i4 = i11 + 816 + (i9 * 88 | 0) + 44 | 0;
    HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] - d3;
    HEAPF32[i5 >> 2] = d16 - d3;
    HEAPF32[i7 >> 2] = d15 - d3;
    HEAPF32[i8 >> 2] = d14 - d3;
    HEAPF32[i2 >> 2] = d13 - d3;
    i12 = HEAP32[i1 + 172 >> 2] | 0;
    HEAPF32[i11 + 792 + 8 >> 2] = +(i12 | 0);
    i1 = HEAP32[i1 + 168 >> 2] | 0;
    HEAPF32[i11 + 804 >> 2] = +(i1 | 0);
    HEAPF32[i11 + 804 + 4 >> 2] = +(HEAP32[gb + 26408 + 1236 + (i1 << 2) >> 2] | 0);
    HEAPF32[i11 + 804 + 8 >> 2] = +(HEAP32[gb + 26408 + 1236 + (i12 << 2) >> 2] | 0);
    if (+HEAPF32[i4 >> 2] < -1.0) HEAPF32[i4 >> 2] = -1.0;
    if (+HEAPF32[i5 >> 2] < -1.0) HEAPF32[i5 >> 2] = -1.0;
    if (+HEAPF32[i7 >> 2] < -.001) HEAPF32[i7 >> 2] = -1.0000000474974513e-03;
    if (+HEAPF32[i8 >> 2] < -.001) HEAPF32[i8 >> 2] = -1.0000000474974513e-03;
    if (+HEAPF32[i6 >> 2] < -.001) HEAPF32[i6 >> 2] = -1.0000000474974513e-03;
    if (+HEAPF32[i2 >> 2] < -.001) HEAPF32[i2 >> 2] = -1.0000000474974513e-03;
   }
   i9 = i9 + 1 | 0;
  } while ((i9 | 0) != 32);
  d16 = +(HEAPU8[i10 + 2 >> 0] | 0) * .001;
  d15 = +HEAPF32[i11 + 464 >> 2] - d16;
  HEAPF32[i11 + 464 >> 2] = d15 < -.001 ? -1.0000000474974513e-03 : d15;
  d15 = +HEAPF32[i11 + 756 >> 2] - d16;
  HEAPF32[i11 + 756 >> 2] = d15 < -.001 ? -1.0000000474974513e-03 : d15;
  d16 = +HEAPF32[i11 + 760 >> 2] - d16;
  HEAPF32[i11 + 760 >> 2] = d16 < -.001 ? -1.0000000474974513e-03 : d16;
  i1 = HEAP32[gb + 92900 >> 2] | 0;
  i2 = 0;
  do {
   HEAPF32[gb + 59364 + (i2 << 2) >> 2] = +HEAPF32[i1 + 16 + (i2 << 2) >> 2] + +HEAPF32[i1 + 392 + (i2 << 2) >> 2];
   i2 = i2 + 1 | 0;
  } while ((i2 | 0) != 3);
  HEAP32[gb + 92900 >> 2] = 0;
 }
 return;
}

function __ZN13CHudSpectator20DrawOverviewEntitiesEv(i8) {
 i8 = i8 | 0;
 var d1 = 0.0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i9 = 0, i10 = 0, d11 = 0.0, d12 = 0.0, d13 = 0.0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 d7 = +HEAPF32[gb + 116248 >> 2];
 d1 = +HEAPF32[i8 + 1488 >> 2];
 mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 40 >> 2] | 0, 1);
 i2 = 0;
 do {
  HEAPF32[i8 + 3888 + (i2 * 12 | 0) + 8 >> 2] = -1.0;
  i2 = i2 + 1 | 0;
 } while ((i2 | 0) != 64);
 d1 = d1 * (90.0 - d7) * .011111111380159855;
 i5 = i9 + 144 + 4 | 0;
 i6 = i9 + 144 + 8 | 0;
 i3 = i9 + 120 + 8 | 0;
 i4 = 0;
 do {
  i2 = HEAP32[i8 + 1768 + (i4 << 4) >> 2] | 0;
  if (i2 | 0) {
   i10 = mftCall_ii(HEAP32[gb + 92340 + 248 >> 2] | 0, i2 | 0) | 0;
   i2 = HEAP32[i8 + 1768 + (i4 << 4) + 4 >> 2] | 0;
   mftCall_iii(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 44 >> 2] | 0, i10 | 0, 0) | 0;
   mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 4 >> 2] | 0, 2);
   mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i2 + 2900 | 0, i9 + 96 | 0, i9 + 72 | 0, 0);
   HEAP32[i9 + 144 >> 2] = HEAP32[i2 + 2888 >> 2];
   HEAP32[i5 >> 2] = HEAP32[i2 + 2888 + 4 >> 2];
   HEAP32[i6 >> 2] = HEAP32[i2 + 2888 + 8 >> 2];
   mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 8 >> 2] | 0, 2);
   mftCall_vdddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 16 >> 2] | 0, 1.0, 1.0, 1.0, 1.0);
   mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 1.0, 0.0);
   _VectorMA(i9 + 144 | 0, 64.0, i9 + 72 | 0, i9 + 120 | 0);
   _VectorMA(i9 + 120 | 0, 64.0, i9 + 96 | 0, i9 + 120 | 0);
   HEAPF32[i3 >> 2] = (90.0 - d7) * .011111111380159855 * +HEAPF32[i3 >> 2];
   mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 28 >> 2] | 0, i9 + 120 | 0);
   mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 0.0, 0.0);
   _VectorMA(i9 + 144 | 0, 64.0, i9 + 72 | 0, i9 + 120 | 0);
   _VectorMA(i9 + 120 | 0, -64.0, i9 + 96 | 0, i9 + 120 | 0);
   HEAPF32[i3 >> 2] = (90.0 - d7) * .011111111380159855 * +HEAPF32[i3 >> 2];
   mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 28 >> 2] | 0, i9 + 120 | 0);
   mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 0.0, 1.0);
   _VectorMA(i9 + 144 | 0, -64.0, i9 + 72 | 0, i9 + 120 | 0);
   _VectorMA(i9 + 120 | 0, -64.0, i9 + 96 | 0, i9 + 120 | 0);
   HEAPF32[i3 >> 2] = (90.0 - d7) * .011111111380159855 * +HEAPF32[i3 >> 2];
   mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 28 >> 2] | 0, i9 + 120 | 0);
   mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 1.0, 1.0);
   _VectorMA(i9 + 144 | 0, -64.0, i9 + 72 | 0, i9 + 120 | 0);
   _VectorMA(i9 + 120 | 0, 64.0, i9 + 96 | 0, i9 + 120 | 0);
   HEAPF32[i3 >> 2] = (90.0 - d7) * .011111111380159855 * +HEAPF32[i3 >> 2];
   mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 28 >> 2] | 0, i9 + 120 | 0);
   mftCall_v(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 12 >> 2] | 0);
   if (HEAP32[i2 + 4 >> 2] | 0) {
    HEAPF32[i6 >> 2] = (90.0 - d7) * .011111111380159855 * +HEAPF32[i6 >> 2];
    mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 4 >> 2] | 0, 5);
    i10 = mftCall_ii(HEAP32[gb + 92340 + 248 >> 2] | 0, HEAP32[i8 + 4684 >> 2] | 0) | 0;
    mftCall_iii(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 44 >> 2] | 0, i10 | 0, 0) | 0;
    mftCall_vdddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 16 >> 2] | 0, 1.0, .6274510025978088, 0.0, .30000001192092896);
    mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 8 >> 2] | 0, 2);
    mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 1.0, 0.0);
    mftCall_vddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 32 >> 2] | 0, +(+HEAPF32[i9 + 144 >> 2] + 4.0), +(+HEAPF32[i5 >> 2] + 4.0), +(+HEAPF32[i6 >> 2] - (90.0 - d7) * .011111111380159855));
    mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 0.0, 0.0);
    mftCall_vddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 32 >> 2] | 0, +(+HEAPF32[i9 + 144 >> 2] + -4.0), +(+HEAPF32[i5 >> 2] + -4.0), +(+HEAPF32[i6 >> 2] - (90.0 - d7) * .011111111380159855));
    mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 0.0, 1.0);
    mftCall_vddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 32 >> 2] | 0, +(+HEAPF32[i9 + 144 >> 2] + -4.0), +(+HEAPF32[i5 >> 2] + -4.0), +d1);
    mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 1.0, 1.0);
    mftCall_vddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 32 >> 2] | 0, +(+HEAPF32[i9 + 144 >> 2] + 4.0), +(+HEAPF32[i5 >> 2] + 4.0), +d1);
    mftCall_v(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 12 >> 2] | 0);
    mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 8 >> 2] | 0, 2);
    mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 1.0, 0.0);
    mftCall_vddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 32 >> 2] | 0, +(+HEAPF32[i9 + 144 >> 2] + -4.0), +(+HEAPF32[i5 >> 2] + 4.0), +(+HEAPF32[i6 >> 2] - (90.0 - d7) * .011111111380159855));
    mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 0.0, 0.0);
    mftCall_vddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 32 >> 2] | 0, +(+HEAPF32[i9 + 144 >> 2] + 4.0), +(+HEAPF32[i5 >> 2] + -4.0), +(+HEAPF32[i6 >> 2] - (90.0 - d7) * .011111111380159855));
    mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 0.0, 1.0);
    mftCall_vddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 32 >> 2] | 0, +(+HEAPF32[i9 + 144 >> 2] + 4.0), +(+HEAPF32[i5 >> 2] + -4.0), +d1);
    mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 1.0, 1.0);
    mftCall_vddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 32 >> 2] | 0, +(+HEAPF32[i9 + 144 >> 2] + -4.0), +(+HEAPF32[i5 >> 2] + 4.0), +d1);
    mftCall_v(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 12 >> 2] | 0);
    if (!(mftCall_iii(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 48 >> 2] | 0, i9 + 144 | 0, i9 + 60 | 0) | 0)) {
     HEAPF32[i9 + 60 >> 2] = (+HEAPF32[i9 + 60 >> 2] + 1.0) * +(HEAP32[gb + 46040 + 8112 >> 2] | 0) * .5;
     HEAPF32[i9 + 60 + 4 >> 2] = (1.0 - +HEAPF32[i9 + 60 + 4 >> 2]) * +(HEAP32[gb + 46040 + 8116 >> 2] | 0) * .5;
     HEAPF32[i9 + 60 + 8 >> 2] = 0.0;
     HEAPF32[i9 + 144 >> 2] = +HEAPF32[i9 + 144 >> 2] + 32.0;
     HEAPF32[i5 >> 2] = +HEAPF32[i5 >> 2] + 32.0;
     mftCall_iii(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 48 >> 2] | 0, i9 + 144 | 0, i9 + 48 | 0) | 0;
     d13 = (1.0 - +HEAPF32[i9 + 48 + 4 >> 2]) * +(HEAP32[gb + 46040 + 8116 >> 2] | 0) * .5;
     d12 = +HEAPF32[i9 + 60 >> 2];
     HEAPF32[i9 + 48 >> 2] = (+HEAPF32[i9 + 48 >> 2] + 1.0) * +(HEAP32[gb + 46040 + 8112 >> 2] | 0) * .5 - d12;
     d11 = +HEAPF32[i9 + 60 + 4 >> 2];
     HEAPF32[i9 + 48 + 4 >> 2] = d13 - d11;
     HEAPF32[i9 + 48 + 8 >> 2] = -+HEAPF32[i9 + 60 + 8 >> 2];
     i10 = i8 + 3888 + (((HEAP32[i2 >> 2] | 0) + -1 | 0) * 12 | 0) | 0;
     HEAPF32[i10 >> 2] = d12;
     HEAPF32[i10 + 4 >> 2] = d11 + +_Length(i9 + 48 | 0);
     HEAPF32[i10 + 8 >> 2] = 1.0;
    }
   }
  }
  i4 = i4 + 1 | 0;
 } while ((i4 | 0) != 128);
 d1 = +HEAPF32[(HEAP32[i8 + 3856 >> 2] | 0) + 12 >> 2];
 if (d1 != 0.0) if (+HEAPF32[(HEAP32[i8 + 3844 >> 2] | 0) + 12 >> 2] != 0.0) {
  i2 = HEAP32[gb + 121104 >> 2] | 0;
  do if (d1 == 2.0 | (i2 | 0) == 4) {
   __Z13V_GetInEyePosiPfS_(HEAP32[gb + 121108 >> 2] | 0, i9 + 144 | 0, i9 + 132 | 0);
   i2 = i9 + 132 | 0;
  } else {
   if (d1 == 1.0 | (i2 | 0) == 2) {
    __Z13V_GetChasePosiPfS_S_(HEAP32[gb + 121108 >> 2] | 0, gb + 116260 | 0, i9 + 144 | 0, i9 + 132 | 0);
    i2 = i9 + 132 | 0;
    break;
   }
   if ((i2 | 0) == 3) {
    HEAP32[i9 + 144 >> 2] = HEAP32[gb + 116272 >> 2];
    HEAP32[i5 >> 2] = HEAP32[gb + 116272 + 4 >> 2];
    HEAP32[i6 >> 2] = HEAP32[gb + 116272 + 8 >> 2];
    HEAP32[i9 + 132 >> 2] = HEAP32[gb + 116260 >> 2];
    HEAP32[i9 + 132 + 4 >> 2] = HEAP32[gb + 116260 + 4 >> 2];
    HEAP32[i9 + 132 + 8 >> 2] = HEAP32[gb + 116260 + 8 >> 2];
    i2 = i9 + 132 | 0;
    break;
   } else {
    __Z13V_GetChasePosiPfS_S_(HEAP32[gb + 121108 >> 2] | 0, 0, i9 + 144 | 0, i9 + 132 | 0);
    i2 = i9 + 132 | 0;
    break;
   }
  } while (0);
  d11 = +HEAPF32[i9 + 144 >> 2];
  d12 = +HEAPF32[i5 >> 2];
  d13 = +HEAPF32[i6 >> 2];
  HEAPF32[i2 >> 2] = 0.0;
  i10 = mftCall_ii(HEAP32[gb + 92340 + 248 >> 2] | 0, HEAP32[i8 + 4668 >> 2] | 0) | 0;
  mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 4 >> 2] | 0, 5);
  mftCall_iii(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 44 >> 2] | 0, i10 | 0, 0) | 0;
  mftCall_vdddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 16 >> 2] | 0, 1.0, .6274510025978088, 0.0, 1.0);
  mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i2 | 0, i9 + 108 | 0, 0, 0);
  _VectorScale(i9 + 108 | 0, 512.0, i9 + 108 | 0);
  HEAPF32[i9 + 48 >> 2] = 0.0;
  HEAPF32[i9 + 48 + 4 >> 2] = 45.0;
  HEAPF32[i9 + 48 + 8 >> 2] = 0.0;
  _AngleMatrix(i9 + 48 | 0, i9);
  _VectorTransform(i9 + 108 | 0, i9, i9 + 96 | 0);
  HEAPF32[i9 + 48 + 4 >> 2] = -45.0;
  _AngleMatrix(i9 + 48 | 0, i9);
  _VectorTransform(i9 + 108 | 0, i9, i9 + 84 | 0);
  mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 8 >> 2] | 0, 0);
  mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 0.0, 0.0);
  mftCall_vddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 32 >> 2] | 0, +(d11 + +HEAPF32[i9 + 96 >> 2]), +(d12 + +HEAPF32[i9 + 96 + 4 >> 2]), +((90.0 - d7) * .011111111380159855 * (d13 + +HEAPF32[i9 + 96 + 8 >> 2])));
  mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 0.0, 1.0);
  mftCall_vddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 32 >> 2] | 0, +d11, +d12, +((90.0 - d7) * .011111111380159855 * d13));
  mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 1.0, 1.0);
  mftCall_vddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 32 >> 2] | 0, +(d11 + +HEAPF32[i9 + 84 >> 2]), +(d12 + +HEAPF32[i9 + 84 + 4 >> 2]), +((90.0 - d7) * .011111111380159855 * (d13 + +HEAPF32[i9 + 84 + 8 >> 2])));
  mftCall_v(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 12 >> 2] | 0);
 }
 STACKTOP = i9;
 return;
}

function __Z21HUD_InitClientWeaponsv() {
 var i1 = 0, i2 = 0, i3 = 0, d4 = 0.0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if (!(HEAP32[gb + 81140 >> 2] | 0)) {
  HEAP32[gb + 81140 >> 2] = 1;
  HEAP32[gb + 57604 >> 2] = gb + 81144;
  d4 = +mftCall_d(HEAP32[gb + 92340 + 216 >> 2] | 0);
  HEAPF32[HEAP32[gb + 57604 >> 2] >> 2] = d4;
  HEAP32[gb + 56972 >> 2] = fb + 155;
  HEAP32[gb + 56972 + 4 >> 2] = fb + 156;
  HEAP32[gb + 56972 + 316 >> 2] = fb + 157;
  HEAP32[gb + 56972 + 8 >> 2] = fb + 41;
  HEAP32[gb + 56972 + 408 >> 2] = fb + 2;
  HEAP32[gb + 56972 + 492 >> 2] = fb + 1;
  HEAP32[gb + 56972 + 244 >> 2] = fb + 13;
  HEAP32[gb + 56972 + 488 >> 2] = HEAP32[gb + 92340 + 256 >> 2];
  HEAP32[gb + 56972 + 364 >> 2] = HEAP32[gb + 92340 + 268 >> 2];
  HEAP32[gb + 56972 + 360 >> 2] = HEAP32[gb + 92340 + 272 >> 2];
  i3 = HEAP32[gb + 59376 >> 2] | 0;
  i2 = gb + 59380 + (i3 * 676 | 0) | 0;
  _memset(i2 | 0, 0, 676) | 0;
  HEAP32[gb + 59376 >> 2] = i3 + 1;
  HEAP32[gb + 26408 + 4 >> 2] = i2;
  mftCall_vi(HEAP32[(HEAP32[gb + 26408 >> 2] | 0) + 4 >> 2] | 0, gb + 26408 | 0);
  mftCall_vi(HEAP32[HEAP32[gb + 26408 >> 2] >> 2] | 0, gb + 26408 | 0);
  i2 = HEAP32[gb + 59376 >> 2] | 0;
  i3 = gb + 59380 + (i2 * 676 | 0) | 0;
  _memset(i3 | 0, 0, 676) | 0;
  HEAP32[gb + 59376 >> 2] = i2 + 1;
  HEAP32[gb + 22904 + 4 >> 2] = i3;
  mftCall_vi(HEAP32[(HEAP32[gb + 22904 >> 2] | 0) + 4 >> 2] | 0, gb + 22904 | 0);
  mftCall_vi(HEAP32[HEAP32[gb + 22904 >> 2] >> 2] | 0, gb + 22904 | 0);
  HEAP32[gb + 22904 + 128 >> 2] = gb + 26408;
  mftCall_iii(HEAP32[(HEAP32[gb + 22904 >> 2] | 0) + 240 >> 2] | 0, gb + 22904 | 0, i1 | 0) | 0;
  HEAP32[gb + 81012 + (HEAP32[i1 + 32 >> 2] << 2) >> 2] = gb + 22904;
  i3 = HEAP32[gb + 59376 >> 2] | 0;
  i2 = gb + 59380 + (i3 * 676 | 0) | 0;
  _memset(i2 | 0, 0, 676) | 0;
  HEAP32[gb + 59376 >> 2] = i3 + 1;
  HEAP32[gb + 23108 + 4 >> 2] = i2;
  mftCall_vi(HEAP32[(HEAP32[gb + 23108 >> 2] | 0) + 4 >> 2] | 0, gb + 23108 | 0);
  mftCall_vi(HEAP32[HEAP32[gb + 23108 >> 2] >> 2] | 0, gb + 23108 | 0);
  HEAP32[gb + 23108 + 128 >> 2] = gb + 26408;
  mftCall_iii(HEAP32[(HEAP32[gb + 23108 >> 2] | 0) + 240 >> 2] | 0, gb + 23108 | 0, i1 | 0) | 0;
  HEAP32[gb + 81012 + (HEAP32[i1 + 32 >> 2] << 2) >> 2] = gb + 23108;
  i2 = HEAP32[gb + 59376 >> 2] | 0;
  i3 = gb + 59380 + (i2 * 676 | 0) | 0;
  _memset(i3 | 0, 0, 676) | 0;
  HEAP32[gb + 59376 >> 2] = i2 + 1;
  HEAP32[gb + 23368 + 4 >> 2] = i3;
  mftCall_vi(HEAP32[(HEAP32[gb + 23368 >> 2] | 0) + 4 >> 2] | 0, gb + 23368 | 0);
  mftCall_vi(HEAP32[HEAP32[gb + 23368 >> 2] >> 2] | 0, gb + 23368 | 0);
  HEAP32[gb + 23368 + 128 >> 2] = gb + 26408;
  mftCall_iii(HEAP32[(HEAP32[gb + 23368 >> 2] | 0) + 240 >> 2] | 0, gb + 23368 | 0, i1 | 0) | 0;
  HEAP32[gb + 81012 + (HEAP32[i1 + 32 >> 2] << 2) >> 2] = gb + 23368;
  i3 = HEAP32[gb + 59376 >> 2] | 0;
  i2 = gb + 59380 + (i3 * 676 | 0) | 0;
  _memset(i2 | 0, 0, 676) | 0;
  HEAP32[gb + 59376 >> 2] = i3 + 1;
  HEAP32[gb + 23576 + 4 >> 2] = i2;
  mftCall_vi(HEAP32[(HEAP32[gb + 23576 >> 2] | 0) + 4 >> 2] | 0, gb + 23576 | 0);
  mftCall_vi(HEAP32[HEAP32[gb + 23576 >> 2] >> 2] | 0, gb + 23576 | 0);
  HEAP32[gb + 23576 + 128 >> 2] = gb + 26408;
  mftCall_iii(HEAP32[(HEAP32[gb + 23576 >> 2] | 0) + 240 >> 2] | 0, gb + 23576 | 0, i1 | 0) | 0;
  HEAP32[gb + 81012 + (HEAP32[i1 + 32 >> 2] << 2) >> 2] = gb + 23576;
  i2 = HEAP32[gb + 59376 >> 2] | 0;
  i3 = gb + 59380 + (i2 * 676 | 0) | 0;
  _memset(i3 | 0, 0, 676) | 0;
  HEAP32[gb + 59376 >> 2] = i2 + 1;
  HEAP32[gb + 23784 + 4 >> 2] = i3;
  mftCall_vi(HEAP32[(HEAP32[gb + 23784 >> 2] | 0) + 4 >> 2] | 0, gb + 23784 | 0);
  mftCall_vi(HEAP32[HEAP32[gb + 23784 >> 2] >> 2] | 0, gb + 23784 | 0);
  HEAP32[gb + 23784 + 128 >> 2] = gb + 26408;
  mftCall_iii(HEAP32[(HEAP32[gb + 23784 >> 2] | 0) + 240 >> 2] | 0, gb + 23784 | 0, i1 | 0) | 0;
  HEAP32[gb + 81012 + (HEAP32[i1 + 32 >> 2] << 2) >> 2] = gb + 23784;
  i3 = HEAP32[gb + 59376 >> 2] | 0;
  i2 = gb + 59380 + (i3 * 676 | 0) | 0;
  _memset(i2 | 0, 0, 676) | 0;
  HEAP32[gb + 59376 >> 2] = i3 + 1;
  HEAP32[gb + 23988 + 4 >> 2] = i2;
  mftCall_vi(HEAP32[(HEAP32[gb + 23988 >> 2] | 0) + 4 >> 2] | 0, gb + 23988 | 0);
  mftCall_vi(HEAP32[HEAP32[gb + 23988 >> 2] >> 2] | 0, gb + 23988 | 0);
  HEAP32[gb + 23988 + 128 >> 2] = gb + 26408;
  mftCall_iii(HEAP32[(HEAP32[gb + 23988 >> 2] | 0) + 240 >> 2] | 0, gb + 23988 | 0, i1 | 0) | 0;
  HEAP32[gb + 81012 + (HEAP32[i1 + 32 >> 2] << 2) >> 2] = gb + 23988;
  i2 = HEAP32[gb + 59376 >> 2] | 0;
  i3 = gb + 59380 + (i2 * 676 | 0) | 0;
  _memset(i3 | 0, 0, 676) | 0;
  HEAP32[gb + 59376 >> 2] = i2 + 1;
  HEAP32[gb + 24200 + 4 >> 2] = i3;
  mftCall_vi(HEAP32[(HEAP32[gb + 24200 >> 2] | 0) + 4 >> 2] | 0, gb + 24200 | 0);
  mftCall_vi(HEAP32[HEAP32[gb + 24200 >> 2] >> 2] | 0, gb + 24200 | 0);
  HEAP32[gb + 24200 + 128 >> 2] = gb + 26408;
  mftCall_iii(HEAP32[(HEAP32[gb + 24200 >> 2] | 0) + 240 >> 2] | 0, gb + 24200 | 0, i1 | 0) | 0;
  HEAP32[gb + 81012 + (HEAP32[i1 + 32 >> 2] << 2) >> 2] = gb + 24200;
  i3 = HEAP32[gb + 59376 >> 2] | 0;
  i2 = gb + 59380 + (i3 * 676 | 0) | 0;
  _memset(i2 | 0, 0, 676) | 0;
  HEAP32[gb + 59376 >> 2] = i3 + 1;
  HEAP32[gb + 24412 + 4 >> 2] = i2;
  mftCall_vi(HEAP32[(HEAP32[gb + 24412 >> 2] | 0) + 4 >> 2] | 0, gb + 24412 | 0);
  mftCall_vi(HEAP32[HEAP32[gb + 24412 >> 2] >> 2] | 0, gb + 24412 | 0);
  HEAP32[gb + 24412 + 128 >> 2] = gb + 26408;
  mftCall_iii(HEAP32[(HEAP32[gb + 24412 >> 2] | 0) + 240 >> 2] | 0, gb + 24412 | 0, i1 | 0) | 0;
  HEAP32[gb + 81012 + (HEAP32[i1 + 32 >> 2] << 2) >> 2] = gb + 24412;
  i2 = HEAP32[gb + 59376 >> 2] | 0;
  i3 = gb + 59380 + (i2 * 676 | 0) | 0;
  _memset(i3 | 0, 0, 676) | 0;
  HEAP32[gb + 59376 >> 2] = i2 + 1;
  HEAP32[gb + 24632 + 4 >> 2] = i3;
  mftCall_vi(HEAP32[(HEAP32[gb + 24632 >> 2] | 0) + 4 >> 2] | 0, gb + 24632 | 0);
  mftCall_vi(HEAP32[HEAP32[gb + 24632 >> 2] >> 2] | 0, gb + 24632 | 0);
  HEAP32[gb + 24632 + 128 >> 2] = gb + 26408;
  mftCall_iii(HEAP32[(HEAP32[gb + 24632 >> 2] | 0) + 240 >> 2] | 0, gb + 24632 | 0, i1 | 0) | 0;
  HEAP32[gb + 81012 + (HEAP32[i1 + 32 >> 2] << 2) >> 2] = gb + 24632;
  i3 = HEAP32[gb + 59376 >> 2] | 0;
  i2 = gb + 59380 + (i3 * 676 | 0) | 0;
  _memset(i2 | 0, 0, 676) | 0;
  HEAP32[gb + 59376 >> 2] = i3 + 1;
  HEAP32[gb + 24868 + 4 >> 2] = i2;
  mftCall_vi(HEAP32[(HEAP32[gb + 24868 >> 2] | 0) + 4 >> 2] | 0, gb + 24868 | 0);
  mftCall_vi(HEAP32[HEAP32[gb + 24868 >> 2] >> 2] | 0, gb + 24868 | 0);
  HEAP32[gb + 24868 + 128 >> 2] = gb + 26408;
  mftCall_iii(HEAP32[(HEAP32[gb + 24868 >> 2] | 0) + 240 >> 2] | 0, gb + 24868 | 0, i1 | 0) | 0;
  HEAP32[gb + 81012 + (HEAP32[i1 + 32 >> 2] << 2) >> 2] = gb + 24868;
  i2 = HEAP32[gb + 59376 >> 2] | 0;
  i3 = gb + 59380 + (i2 * 676 | 0) | 0;
  _memset(i3 | 0, 0, 676) | 0;
  HEAP32[gb + 59376 >> 2] = i2 + 1;
  HEAP32[gb + 25080 + 4 >> 2] = i3;
  mftCall_vi(HEAP32[(HEAP32[gb + 25080 >> 2] | 0) + 4 >> 2] | 0, gb + 25080 | 0);
  mftCall_vi(HEAP32[HEAP32[gb + 25080 >> 2] >> 2] | 0, gb + 25080 | 0);
  HEAP32[gb + 25080 + 128 >> 2] = gb + 26408;
  mftCall_iii(HEAP32[(HEAP32[gb + 25080 >> 2] | 0) + 240 >> 2] | 0, gb + 25080 | 0, i1 | 0) | 0;
  HEAP32[gb + 81012 + (HEAP32[i1 + 32 >> 2] << 2) >> 2] = gb + 25080;
  i3 = HEAP32[gb + 59376 >> 2] | 0;
  i2 = gb + 59380 + (i3 * 676 | 0) | 0;
  _memset(i2 | 0, 0, 676) | 0;
  HEAP32[gb + 59376 >> 2] = i3 + 1;
  HEAP32[gb + 25276 + 4 >> 2] = i2;
  mftCall_vi(HEAP32[(HEAP32[gb + 25276 >> 2] | 0) + 4 >> 2] | 0, gb + 25276 | 0);
  mftCall_vi(HEAP32[HEAP32[gb + 25276 >> 2] >> 2] | 0, gb + 25276 | 0);
  HEAP32[gb + 25276 + 128 >> 2] = gb + 26408;
  mftCall_iii(HEAP32[(HEAP32[gb + 25276 >> 2] | 0) + 240 >> 2] | 0, gb + 25276 | 0, i1 | 0) | 0;
  HEAP32[gb + 81012 + (HEAP32[i1 + 32 >> 2] << 2) >> 2] = gb + 25276;
  i2 = HEAP32[gb + 59376 >> 2] | 0;
  i3 = gb + 59380 + (i2 * 676 | 0) | 0;
  _memset(i3 | 0, 0, 676) | 0;
  HEAP32[gb + 59376 >> 2] = i2 + 1;
  HEAP32[gb + 25472 + 4 >> 2] = i3;
  mftCall_vi(HEAP32[(HEAP32[gb + 25472 >> 2] | 0) + 4 >> 2] | 0, gb + 25472 | 0);
  mftCall_vi(HEAP32[HEAP32[gb + 25472 >> 2] >> 2] | 0, gb + 25472 | 0);
  HEAP32[gb + 25472 + 128 >> 2] = gb + 26408;
  mftCall_iii(HEAP32[(HEAP32[gb + 25472 >> 2] | 0) + 240 >> 2] | 0, gb + 25472 | 0, i1 | 0) | 0;
  HEAP32[gb + 81012 + (HEAP32[i1 + 32 >> 2] << 2) >> 2] = gb + 25472;
  i3 = HEAP32[gb + 59376 >> 2] | 0;
  i2 = gb + 59380 + (i3 * 676 | 0) | 0;
  _memset(i2 | 0, 0, 676) | 0;
  HEAP32[gb + 59376 >> 2] = i3 + 1;
  HEAP32[gb + 25672 + 4 >> 2] = i2;
  mftCall_vi(HEAP32[(HEAP32[gb + 25672 >> 2] | 0) + 4 >> 2] | 0, gb + 25672 | 0);
  mftCall_vi(HEAP32[HEAP32[gb + 25672 >> 2] >> 2] | 0, gb + 25672 | 0);
  HEAP32[gb + 25672 + 128 >> 2] = gb + 26408;
  mftCall_iii(HEAP32[(HEAP32[gb + 25672 >> 2] | 0) + 240 >> 2] | 0, gb + 25672 | 0, i1 | 0) | 0;
  HEAP32[gb + 81012 + (HEAP32[i1 + 32 >> 2] << 2) >> 2] = gb + 25672;
 }
 STACKTOP = i1;
 return;
}

function _EV_FireGauss(i1) {
 i1 = i1 | 0;
 var d2 = 0.0, d3 = 0.0, d4 = 0.0, d5 = 0.0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, d15 = 0.0, d16 = 0.0, d17 = 0.0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i23 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 d2 = +HEAPF32[i1 + 48 >> 2];
 i21 = HEAP32[i1 + 64 >> 2] | 0;
 i22 = HEAP32[i1 + 4 >> 2] | 0;
 HEAP32[i23 + 244 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i23 + 244 + 4 >> 2] = HEAP32[i1 + 12 >> 2];
 HEAP32[i23 + 244 + 8 >> 2] = HEAP32[i1 + 16 >> 2];
 HEAP32[i23 + 232 >> 2] = HEAP32[i1 + 20 >> 2];
 HEAP32[i23 + 232 + 4 >> 2] = HEAP32[i1 + 24 >> 2];
 HEAP32[i23 + 232 + 8 >> 2] = HEAP32[i1 + 28 >> 2];
 L1 : do if (!(HEAP32[i1 + 68 >> 2] | 0)) {
  __Z17EV_GetGunPositionP12event_args_sPfS1_(i1, i23 + 220 | 0, i23 + 244 | 0);
  i13 = mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 12 >> 2] | 0, gb + 37752 | 0) | 0;
  i14 = mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 12 >> 2] | 0, gb + 37732 | 0) | 0;
  mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i23 + 232 | 0, i23 + 36 | 0, i23 + 48 | 0, i23 + 60 | 0);
  _VectorMA(i23 + 220 | 0, 8192.0, i23 + 36 | 0, i23 + 208 | 0);
  if (__Z10EV_IsLocali(i22) | 0) {
   __Z11V_PunchAxisif(0, -2.0);
   mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0, 6, 2);
   if (!i21) HEAPF32[gb + 59356 >> 2] = d2;
  }
  i19 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0;
  i20 = (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 31) | 0) + 85 | 0;
  mftCall_viiiiddii(i19 | 0, i22 | 0, i23 + 244 | 0, 1, gb + 37687 | 0, +(d2 * .0025 + .5), .800000011920929, 0, i20 | 0);
  if (d2 > 10.0) {
   i20 = i23 + 140 + 20 | 0;
   d17 = i21 | 0 ? 1.0 : 2.5;
   d15 = i21 | 0 ? 128.0 : 255.0;
   d16 = i21 | 0 ? 0.0 : 255.0;
   i11 = i23 + 36 + 4 | 0;
   i12 = i23 + 36 + 8 | 0;
   i19 = i23 + 140 + 32 | 0;
   i18 = i23 + 72 + 20 | 0;
   i7 = 1;
   i9 = 0;
   i1 = 10;
   while (1) {
    while (1) {
     d3 = i21 | 0 ? 128.0 : d2;
     i8 = i1;
     while (1) {
      i10 = i8 + -1 | 0;
      mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 40 >> 2] | 0, 0, 1);
      mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 44 >> 2] | 0);
      mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 52 >> 2] | 0, i22 + -1 | 0);
      mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 56 >> 2] | 0, 2);
      mftCall_viiiii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 60 >> 2] | 0, i23 + 220 | 0, i23 + 208 | 0, 2, -1, i23 + 140 | 0);
      mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 48 >> 2] | 0);
      if (HEAP32[i23 + 140 >> 2] | 0) break L1;
      if (!i7) mftCall_iiiidddddidddd(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 248 >> 2] | 0, i23 + 220 | 0, i20 | 0, i13 | 0, .10000000149011612, +d17, 0.0, +d3, 0.0, 0, 0.0, 255.0, +d15, +d16) | 0; else {
       if (__Z10EV_IsLocali(i22) | 0) __Z14EV_MuzzleFlashv();
       mftCall_iiiidddddidddd(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 228 >> 2] | 0, i22 | 4096 | 0, i20 | 0, i13 | 0, .10000000149011612, +d17, 0.0, +d3, 0.0, 0, 0.0, 255.0, +d15, +d16) | 0;
      }
      i1 = mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 36 >> 2] | 0, HEAP32[i23 + 140 + 48 >> 2] | 0) | 0;
      if (!i1) break L1;
      if ((HEAP32[i1 + 96 >> 2] | 0) == 4) break;
      HEAPF32[i23 + 220 >> 2] = +HEAPF32[i20 >> 2] + +HEAPF32[i23 + 36 >> 2];
      HEAPF32[i23 + 220 + 4 >> 2] = +HEAPF32[i20 + 4 >> 2] + +HEAPF32[i11 >> 2];
      HEAPF32[i23 + 220 + 8 >> 2] = +HEAPF32[i20 + 8 >> 2] + +HEAPF32[i12 >> 2];
      if ((i8 | 0) > 1) {
       i7 = 0;
       i8 = i10;
      } else break L1;
     }
     d3 = +HEAPF32[i19 >> 2] * +HEAPF32[i23 + 36 >> 2] + +HEAPF32[i19 + 4 >> 2] * +HEAPF32[i11 >> 2] + +HEAPF32[i19 + 8 >> 2] * +HEAPF32[i12 >> 2];
     if (!(d3 > -.5)) break;
     _VectorMA(i23 + 36 | 0, d3 * -2.0, i19, i23 + 24 | 0);
     HEAP32[i23 + 36 >> 2] = HEAP32[i23 + 24 >> 2];
     HEAP32[i11 >> 2] = HEAP32[i23 + 24 + 4 >> 2];
     HEAP32[i12 >> 2] = HEAP32[i23 + 24 + 8 >> 2];
     _VectorMA(i20, 8.0, i23 + 36 | 0, i23 + 220 | 0);
     _VectorMA(i23 + 220 | 0, 8192.0, i23 + 36 | 0, i23 + 208 | 0);
     d6 = -(d2 * d3);
     mftCall_iiidiiiddi(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 200 >> 2] | 0, i20 | 0, gb + 121124 | 0, .20000000298023224, i14 | 0, 3, 14, +(d6 * .00392156862745098), +(d6 * .5 * .1), 128) | 0;
     HEAPF32[i23 + 12 >> 2] = +HEAPF32[i20 >> 2] + +HEAPF32[i19 >> 2];
     HEAPF32[i23 + 12 + 4 >> 2] = +HEAPF32[i20 + 4 >> 2] + +HEAPF32[i19 + 4 >> 2];
     HEAPF32[i23 + 12 + 8 >> 2] = +HEAPF32[i20 + 8 >> 2] + +HEAPF32[i19 + 8 >> 2];
     i7 = HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 160 >> 2] | 0;
     mftCall_viiiiidddid(i7 | 0, 15, i20 | 0, i23 + 12 | 0, i14 | 0, 3, .10000000149011612, +(+mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, 10.0, 20.0) * .01), 100.0, 255, 100.0);
     d2 = d2 * (d3 == -0.0 ? .8999999761581421 : d3 + 1.0);
     if ((i8 | 0) > 1 & d2 > 10.0) {
      i7 = 0;
      i1 = i10;
     } else break L1;
    }
    __Z20EV_HLDM_DecalGunshotP9pmtrace_si(i23 + 140 | 0, 0);
    mftCall_iiidiiiddi(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 200 >> 2] | 0, i20 | 0, gb + 121124 | 0, 1.0, i14 | 0, 3, 14, +(d2 * .00392156862745098), 6.0, 128) | 0;
    if (i9 | 0) break L1;
    if (i21 | 0) break;
    _VectorMA(i20, 8.0, i23 + 36 | 0, i23 + 24 | 0);
    mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 44 >> 2] | 0);
    mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 52 >> 2] | 0, i22 + -1 | 0);
    mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 56 >> 2] | 0, 2);
    mftCall_viiiii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 60 >> 2] | 0, i23 + 24 | 0, i23 + 208 | 0, 2, -1, i23 + 72 | 0);
    if (!(HEAP32[i23 + 72 >> 2] | 0)) {
     mftCall_viiiii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 60 >> 2] | 0, i18 | 0, i20 | 0, 2, -1, i23 + 72 | 0);
     d3 = +HEAPF32[i20 >> 2];
     HEAPF32[i23 + 12 >> 2] = +HEAPF32[i18 >> 2] - d3;
     d4 = +HEAPF32[i20 + 4 >> 2];
     HEAPF32[i23 + 12 + 4 >> 2] = +HEAPF32[i18 + 4 >> 2] - d4;
     d5 = +HEAPF32[i20 + 8 >> 2];
     HEAPF32[i23 + 12 + 8 >> 2] = +HEAPF32[i18 + 8 >> 2] - d5;
     d6 = +_Length(i23 + 12 | 0);
     if (d6 < d2) {
      d2 = d2 - (d6 == 0.0 ? 1.0 : d6);
      HEAPF32[i23 >> 2] = d3 - +HEAPF32[i23 + 36 >> 2];
      HEAPF32[i23 + 4 >> 2] = d4 - +HEAPF32[i11 >> 2];
      HEAPF32[i23 + 8 >> 2] = d5 - +HEAPF32[i12 >> 2];
      i9 = HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 160 >> 2] | 0;
      mftCall_viiiiidddid(i9 | 0, 15, i20 | 0, i23 | 0, i14 | 0, 3, .10000000149011612, +(+mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, 10.0, 20.0) * .01), 100.0, 255, 100.0);
      __Z20EV_HLDM_DecalGunshotP9pmtrace_si(i23 + 72 | 0, 0);
      mftCall_iiidiiiddi(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 200 >> 2] | 0, i18 | 0, gb + 121124 | 0, .10000000149011612, i14 | 0, 3, 14, +(d2 * .00392156862745098), 6.0, 128) | 0;
      HEAPF32[i23 >> 2] = +HEAPF32[i18 >> 2] - +HEAPF32[i23 + 36 >> 2];
      HEAPF32[i23 + 4 >> 2] = +HEAPF32[i18 + 4 >> 2] - +HEAPF32[i11 >> 2];
      HEAPF32[i23 + 8 >> 2] = +HEAPF32[i18 + 8 >> 2] - +HEAPF32[i12 >> 2];
      i9 = HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 160 >> 2] | 0;
      mftCall_viiiiidddid(i9 | 0, 15, i18 | 0, i23 | 0, i14 | 0, ~~(d2 * .3) | 0, .10000000149011612, +(+mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, 10.0, 20.0) * .01), 200.0, 255, 40.0);
      HEAPF32[i23 + 220 >> 2] = +HEAPF32[i18 >> 2] + +HEAPF32[i23 + 36 >> 2];
      HEAPF32[i23 + 220 + 4 >> 2] = +HEAPF32[i18 + 4 >> 2] + +HEAPF32[i11 >> 2];
      HEAPF32[i23 + 220 + 8 >> 2] = +HEAPF32[i18 + 8 >> 2] + +HEAPF32[i12 >> 2];
     }
    } else d2 = 0.0;
    mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 48 >> 2] | 0);
    if ((i8 | 0) > 1 & d2 > 10.0) {
     i7 = 0;
     i9 = 1;
     i1 = i10;
    } else break L1;
   }
   mftCall_iiidiiiddi(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 200 >> 2] | 0, i20 | 0, gb + 121124 | 0, .20000000298023224, i14 | 0, 3, 14, .7843137383460999, .30000001192092896, 128) | 0;
   HEAPF32[i23 + 24 >> 2] = +HEAPF32[i20 >> 2] + +HEAPF32[i19 >> 2];
   HEAPF32[i23 + 24 + 4 >> 2] = +HEAPF32[i20 + 4 >> 2] + +HEAPF32[i19 + 4 >> 2];
   HEAPF32[i23 + 24 + 8 >> 2] = +HEAPF32[i20 + 8 >> 2] + +HEAPF32[i19 + 8 >> 2];
   i22 = HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 160 >> 2] | 0;
   mftCall_viiiiidddid(i22 | 0, 15, i20 | 0, i23 + 24 | 0, i14 | 0, 8, .6000000238418579, +(+mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, 10.0, 20.0) * .01), 100.0, 255, 200.0);
  }
 } else {
  mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 84 >> 2] | 0, i22 | 0, gb + 38018 | 0);
  mftCall_viii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 8 >> 2] | 0, i22 | 0, 1, gb + 37706 | 0);
 } while (0);
 STACKTOP = i23;
 return;
}

function _PM_FlyMove() {
 var i1 = 0, d2 = 0.0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, d19 = 0.0, i20 = 0, i21 = 0, d22 = 0.0, d23 = 0.0, d24 = 0.0, i25 = 0, i26 = 0, d27 = 0.0;
 i26 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i20 = HEAP32[gb + 121136 >> 2] | 0;
 i21 = HEAP32[i20 + 92 >> 2] | 0;
 HEAP32[i26 + 128 >> 2] = i21;
 i1 = HEAP32[i20 + 96 >> 2] | 0;
 HEAP32[i26 + 128 + 4 >> 2] = i1;
 i3 = HEAP32[i20 + 100 >> 2] | 0;
 HEAP32[i26 + 128 + 8 >> 2] = i3;
 d22 = (HEAP32[tempDoublePtr >> 2] = i21, +HEAPF32[tempDoublePtr >> 2]);
 d23 = (HEAP32[tempDoublePtr >> 2] = i1, +HEAPF32[tempDoublePtr >> 2]);
 d24 = (HEAP32[tempDoublePtr >> 2] = i3, +HEAPF32[tempDoublePtr >> 2]);
 d7 = d22;
 i3 = i20;
 d2 = 0.0;
 i1 = 0;
 i21 = 0;
 i6 = 0;
 d19 = +HEAPF32[i20 + 16 >> 2];
 while (1) {
  if (!(d7 != 0.0)) if (!(+HEAPF32[i3 + 96 >> 2] != 0.0)) if (!(+HEAPF32[i3 + 100 >> 2] != 0.0)) {
   i25 = 46;
   break;
  }
  i5 = i3 + 56 | 0;
  HEAPF32[i26 + 104 >> 2] = d7 * d19 + +HEAPF32[i5 >> 2];
  i4 = 1;
  do {
   HEAPF32[i26 + 104 + (i4 << 2) >> 2] = +HEAPF32[i3 + 56 + (i4 << 2) >> 2] + d19 * +HEAPF32[i3 + 92 + (i4 << 2) >> 2];
   i4 = i4 + 1 | 0;
  } while ((i4 | 0) != 3);
  mftCall_viiiii(HEAP32[i3 + 324992 >> 2] | 0, i26 + 36 | 0, i5 | 0, i26 + 104 | 0, 0, -1);
  i20 = HEAP32[i26 + 36 >> 2] | 0;
  HEAP32[i26 >> 2] = HEAP32[i26 + 36 + 4 >> 2];
  HEAP32[i26 + 4 >> 2] = HEAP32[i26 + 36 + 4 + 4 >> 2];
  HEAP32[i26 + 8 >> 2] = HEAP32[i26 + 36 + 4 + 8 >> 2];
  d7 = +HEAPF32[i26 + 36 + 16 >> 2];
  i14 = HEAP32[i26 + 36 + 20 >> 2] | 0;
  i15 = HEAP32[i26 + 36 + 24 >> 2] | 0;
  i10 = HEAP32[i26 + 36 + 28 >> 2] | 0;
  i16 = HEAP32[i26 + 36 + 32 >> 2] | 0;
  i17 = HEAP32[i26 + 36 + 36 >> 2] | 0;
  i18 = HEAP32[i26 + 36 + 40 >> 2] | 0;
  i11 = HEAP32[i26 + 36 + 44 >> 2] | 0;
  i12 = HEAP32[i26 + 36 + 48 >> 2] | 0;
  i13 = HEAP32[i26 + 36 + 64 >> 2] | 0;
  d2 = d2 + d7;
  if (i20 | 0) {
   i25 = 8;
   break;
  }
  if (d7 > 0.0) {
   i20 = HEAP32[gb + 121136 >> 2] | 0;
   HEAP32[i20 + 56 >> 2] = i14;
   HEAP32[i20 + 60 >> 2] = i15;
   HEAP32[i20 + 64 >> 2] = i10;
   HEAP32[i26 + 128 >> 2] = HEAP32[i20 + 92 >> 2];
   HEAP32[i26 + 128 + 4 >> 2] = HEAP32[i20 + 96 >> 2];
   HEAP32[i26 + 128 + 8 >> 2] = HEAP32[i20 + 100 >> 2];
   i20 = 0;
  } else i20 = i6;
  if (d7 == 1.0) {
   i25 = 46;
   break;
  }
  i3 = HEAP32[gb + 121136 >> 2] | 0;
  HEAP32[i26 + 16 >> 2] = HEAP32[i26 >> 2];
  HEAP32[i26 + 16 + 4 >> 2] = HEAP32[i26 + 4 >> 2];
  HEAP32[i26 + 16 + 8 >> 2] = HEAP32[i26 + 8 >> 2];
  i9 = HEAP32[i3 + 283788 >> 2] | 0;
  L15 : do if ((i9 | 0) > 0) {
   i4 = 0;
   do {
    if ((HEAP32[i3 + 283792 + (i4 * 68 | 0) + 48 >> 2] | 0) == (i12 | 0)) break L15;
    i4 = i4 + 1 | 0;
   } while ((i4 | 0) < (i9 | 0));
  } else i4 = 0; while (0);
  if ((i4 | 0) == (i9 | 0)) {
   i5 = HEAP32[i3 + 92 >> 2] | 0;
   i6 = HEAP32[i3 + 96 >> 2] | 0;
   i8 = HEAP32[i3 + 100 >> 2] | 0;
   if ((i9 | 0) > 599) {
    mftCall_vii(HEAP32[i3 + 324964 >> 2] | 0, gb + 45738 | 0, i26 + 32 | 0);
    i4 = HEAP32[gb + 121136 >> 2] | 0;
    i3 = i4;
    i4 = HEAP32[i4 + 283788 >> 2] | 0;
   } else i4 = i9;
   HEAP32[i3 + 283788 >> 2] = i4 + 1;
   HEAP32[i3 + 283792 + (i4 * 68 | 0) >> 2] = 0;
   i9 = i3 + 283792 + (i4 * 68 | 0) + 4 | 0;
   HEAP32[i9 >> 2] = HEAP32[i26 + 16 >> 2];
   HEAP32[i9 + 4 >> 2] = HEAP32[i26 + 16 + 4 >> 2];
   HEAP32[i9 + 8 >> 2] = HEAP32[i26 + 16 + 8 >> 2];
   HEAPF32[i3 + 283792 + (i4 * 68 | 0) + 16 >> 2] = d7;
   HEAP32[i3 + 283792 + (i4 * 68 | 0) + 20 >> 2] = i14;
   HEAP32[i3 + 283792 + (i4 * 68 | 0) + 24 >> 2] = i15;
   HEAP32[i3 + 283792 + (i4 * 68 | 0) + 28 >> 2] = i10;
   HEAP32[i3 + 283792 + (i4 * 68 | 0) + 32 >> 2] = i16;
   HEAP32[i3 + 283792 + (i4 * 68 | 0) + 36 >> 2] = i17;
   HEAP32[i3 + 283792 + (i4 * 68 | 0) + 40 >> 2] = i18;
   HEAP32[i3 + 283792 + (i4 * 68 | 0) + 44 >> 2] = i11;
   HEAP32[i3 + 283792 + (i4 * 68 | 0) + 48 >> 2] = i12;
   HEAP32[i3 + 283792 + (i4 * 68 | 0) + 52 >> 2] = i5;
   HEAP32[i3 + 283792 + (i4 * 68 | 0) + 56 >> 2] = i6;
   HEAP32[i3 + 283792 + (i4 * 68 | 0) + 60 >> 2] = i8;
   HEAP32[i3 + 283792 + (i4 * 68 | 0) + 64 >> 2] = i13;
  }
  d27 = (HEAP32[tempDoublePtr >> 2] = i18, +HEAPF32[tempDoublePtr >> 2]);
  i1 = d27 > .7 | i1;
  i1 = d27 != 0.0 ? i1 : i1 | 2;
  d19 = d19 - d19 * d7;
  if ((i20 | 0) > 4) {
   i25 = 20;
   break;
  }
  HEAP32[i26 + 140 + (i20 * 12 | 0) >> 2] = i16;
  HEAP32[i26 + 140 + (i20 * 12 | 0) + 4 >> 2] = i17;
  HEAP32[i26 + 140 + (i20 * 12 | 0) + 8 >> 2] = i18;
  i8 = i20 + 1 | 0;
  do if ((HEAP32[i3 + 220 >> 2] | 0) == 3) {
   if ((HEAP32[i3 + 224 >> 2] | 0) != -1) if (!(+HEAPF32[i3 + 196 >> 2] != 1.0)) {
    i25 = 22;
    break;
   }
   if ((i20 | 0) >= 0) {
    i4 = 0;
    do {
     i3 = i26 + 140 + (i4 * 12 | 0) | 0;
     if (+HEAPF32[i26 + 140 + (i4 * 12 | 0) + 8 >> 2] > .7) {
      _PM_ClipVelocity(i26 + 128 | 0, i3, i26 + 116 | 0, 1.0) | 0;
      HEAP32[i26 + 128 >> 2] = HEAP32[i26 + 116 >> 2];
      HEAP32[i26 + 128 + 4 >> 2] = HEAP32[i26 + 116 + 4 >> 2];
      HEAP32[i26 + 128 + 8 >> 2] = HEAP32[i26 + 116 + 8 >> 2];
     } else {
      i20 = HEAP32[gb + 121136 >> 2] | 0;
      _PM_ClipVelocity(i26 + 128 | 0, i3, i26 + 116 | 0, +HEAPF32[(HEAP32[i20 + 324848 >> 2] | 0) + 44 >> 2] * (1.0 - +HEAPF32[i20 + 196 >> 2]) + 1.0) | 0;
     }
     i4 = i4 + 1 | 0;
    } while ((i4 | 0) != (i8 | 0));
    i3 = HEAP32[gb + 121136 >> 2] | 0;
   }
   i17 = HEAP32[i26 + 116 >> 2] | 0;
   HEAP32[i3 + 92 >> 2] = i17;
   i18 = HEAP32[i26 + 116 + 4 >> 2] | 0;
   HEAP32[i3 + 96 >> 2] = i18;
   i20 = HEAP32[i26 + 116 + 8 >> 2] | 0;
   HEAP32[i3 + 100 >> 2] = i20;
   HEAP32[i26 + 128 >> 2] = i17;
   HEAP32[i26 + 128 + 4 >> 2] = i18;
   HEAP32[i26 + 128 + 8 >> 2] = i20;
  } else i25 = 22; while (0);
  if ((i25 | 0) == 22) {
   i25 = 0;
   L43 : do if ((i20 | 0) < 0) i4 = 0; else {
    i4 = 0;
    while (1) {
     _PM_ClipVelocity(i26 + 128 | 0, i26 + 140 + (i4 * 12 | 0) | 0, i3 + 92 | 0, 1.0) | 0;
     i3 = HEAP32[gb + 121136 >> 2] | 0;
     i6 = 0;
     while (1) {
      if ((i6 | 0) != (i4 | 0)) if (+HEAPF32[i3 + 92 >> 2] * +HEAPF32[i26 + 140 + (i6 * 12 | 0) >> 2] + +HEAPF32[i3 + 96 >> 2] * +HEAPF32[i26 + 140 + (i6 * 12 | 0) + 4 >> 2] + +HEAPF32[i3 + 100 >> 2] * +HEAPF32[i26 + 140 + (i6 * 12 | 0) + 8 >> 2] < 0.0) {
       i5 = i6;
       break;
      }
      i5 = i6 + 1 | 0;
      if ((i6 | 0) < (i20 | 0)) i6 = i5; else break;
     }
     if ((i5 | 0) == (i8 | 0)) break L43;
     i5 = i4 + 1 | 0;
     if ((i4 | 0) < (i20 | 0)) i4 = i5; else {
      i4 = i5;
      break;
     }
    }
   } while (0);
   if ((i4 | 0) == (i8 | 0)) {
    if ((i8 | 0) != 2) {
     i25 = 40;
     break;
    }
    _CrossProduct(i26 + 140 | 0, i26 + 140 + 12 | 0, i26 + 200 | 0);
    i3 = HEAP32[gb + 121136 >> 2] | 0;
    _VectorScale(i26 + 200 | 0, +HEAPF32[i26 + 200 >> 2] * +HEAPF32[i3 + 92 >> 2] + +HEAPF32[i26 + 200 + 4 >> 2] * +HEAPF32[i3 + 96 >> 2] + +HEAPF32[i26 + 200 + 8 >> 2] * +HEAPF32[i3 + 100 >> 2], i3 + 92 | 0);
    i3 = HEAP32[gb + 121136 >> 2] | 0;
   }
   i4 = i3 + 92 | 0;
   i5 = i3 + 96 | 0;
   i6 = i3 + 100 | 0;
   if (d22 * +HEAPF32[i4 >> 2] + d23 * +HEAPF32[i5 >> 2] + d24 * +HEAPF32[i6 >> 2] <= 0.0) {
    i25 = 43;
    break;
   }
  }
  i4 = i21 + 1 | 0;
  if ((i4 | 0) >= 4) {
   i25 = 46;
   break;
  }
  d7 = +HEAPF32[i3 + 92 >> 2];
  i21 = i4;
  i6 = i8;
 }
 if ((i25 | 0) == 8) {
  i1 = HEAP32[gb + 121136 >> 2] | 0;
  HEAP32[i1 + 92 >> 2] = HEAP32[gb + 121124 >> 2];
  HEAP32[i1 + 96 >> 2] = HEAP32[gb + 121124 + 4 >> 2];
  HEAP32[i1 + 100 >> 2] = HEAP32[gb + 121124 + 8 >> 2];
  i1 = 4;
 } else if ((i25 | 0) == 20) {
  HEAP32[i3 + 92 >> 2] = HEAP32[gb + 121124 >> 2];
  HEAP32[i3 + 96 >> 2] = HEAP32[gb + 121124 + 4 >> 2];
  HEAP32[i3 + 100 >> 2] = HEAP32[gb + 121124 + 8 >> 2];
  i25 = 46;
 } else if ((i25 | 0) == 40) {
  HEAP32[i3 + 92 >> 2] = HEAP32[gb + 121124 >> 2];
  HEAP32[i3 + 96 >> 2] = HEAP32[gb + 121124 + 4 >> 2];
  HEAP32[i3 + 100 >> 2] = HEAP32[gb + 121124 + 8 >> 2];
  i25 = 46;
 } else if ((i25 | 0) == 43) {
  HEAP32[i4 >> 2] = HEAP32[gb + 121124 >> 2];
  HEAP32[i5 >> 2] = HEAP32[gb + 121124 + 4 >> 2];
  HEAP32[i6 >> 2] = HEAP32[gb + 121124 + 8 >> 2];
  i25 = 46;
 }
 if ((i25 | 0) == 46) if (d2 == 0.0) {
  i25 = HEAP32[gb + 121136 >> 2] | 0;
  HEAP32[i25 + 92 >> 2] = HEAP32[gb + 121124 >> 2];
  HEAP32[i25 + 96 >> 2] = HEAP32[gb + 121124 + 4 >> 2];
  HEAP32[i25 + 100 >> 2] = HEAP32[gb + 121124 + 8 >> 2];
 }
 STACKTOP = i26;
 return i1 | 0;
}

function __ZN20CStudioModelRenderer16StudioSetupBonesEv(i9) {
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, d3 = 0.0, i4 = 0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i2 = (HEAP32[i9 + 48 >> 2] | 0) + 732 | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i4 = HEAP32[i9 + 68 >> 2] | 0;
 if ((i1 | 0) >= (HEAP32[i4 + 164 >> 2] | 0)) {
  HEAP32[i2 >> 2] = 0;
  i1 = 0;
 }
 i4 = i4 + (HEAP32[i4 + 168 >> 2] | 0) | 0;
 i5 = i4 + (i1 * 176 | 0) | 0;
 d6 = +mftCall_dii(HEAP32[(HEAP32[i9 >> 2] | 0) + 48 >> 2] | 0, i9 | 0, i5 | 0);
 i2 = mftCall_iiii(HEAP32[(HEAP32[i9 >> 2] | 0) + 20 >> 2] | 0, i9 | 0, HEAP32[i9 + 52 >> 2] | 0, i5 | 0) | 0;
 mftCall_viiiiid(HEAP32[(HEAP32[i9 >> 2] | 0) + 72 >> 2] | 0, i9 | 0, gb + 98208 | 0, gb + 99744 | 0, i5 | 0, i2 | 0, +d6);
 i4 = i4 + (i1 * 176 | 0) + 120 | 0;
 if ((HEAP32[i4 >> 2] | 0) > 1) {
  i1 = i2 + ((HEAP32[(HEAP32[i9 + 68 >> 2] | 0) + 140 >> 2] | 0) * 12 | 0) | 0;
  mftCall_viiiiid(HEAP32[(HEAP32[i9 >> 2] | 0) + 72 >> 2] | 0, i9 | 0, gb + 101792 | 0, gb + 103328 | 0, i5 | 0, i1 | 0, +d6);
  d3 = +mftCall_di(HEAP32[(HEAP32[i9 >> 2] | 0) + 44 >> 2] | 0, i9 | 0);
  i7 = HEAP32[i9 + 48 >> 2] | 0;
  mftCall_viiiiid(HEAP32[(HEAP32[i9 >> 2] | 0) + 56 >> 2] | 0, i9 | 0, gb + 99744 | 0, gb + 98208 | 0, gb + 103328 | 0, gb + 101792 | 0, +((d3 * +(HEAPU8[i7 + 796 >> 0] | 0) + (1.0 - d3) * +(HEAPU8[i7 + 2880 >> 0] | 0)) * .00392156862745098));
  if ((HEAP32[i4 >> 2] | 0) == 4) {
   i7 = i1 + ((HEAP32[(HEAP32[i9 + 68 >> 2] | 0) + 140 >> 2] | 0) * 12 | 0) | 0;
   mftCall_viiiiid(HEAP32[(HEAP32[i9 >> 2] | 0) + 72 >> 2] | 0, i9 | 0, gb + 105376 | 0, gb + 106912 | 0, i5 | 0, i7 | 0, +d6);
   mftCall_viiiiid(HEAP32[(HEAP32[i9 >> 2] | 0) + 72 >> 2] | 0, i9 | 0, gb + 108960 | 0, gb + 110496 | 0, i5 | 0, i7 + ((HEAP32[(HEAP32[i9 + 68 >> 2] | 0) + 140 >> 2] | 0) * 12 | 0) | 0, +d6);
   i7 = HEAP32[i9 + 48 >> 2] | 0;
   mftCall_viiiiid(HEAP32[(HEAP32[i9 >> 2] | 0) + 56 >> 2] | 0, i9 | 0, gb + 106912 | 0, gb + 105376 | 0, gb + 110496 | 0, gb + 108960 | 0, +((d3 * +(HEAPU8[i7 + 796 >> 0] | 0) + (1.0 - d3) * +(HEAPU8[i7 + 2880 >> 0] | 0)) * .00392156862745098));
   i7 = HEAP32[i9 + 48 >> 2] | 0;
   mftCall_viiiiid(HEAP32[(HEAP32[i9 >> 2] | 0) + 56 >> 2] | 0, i9 | 0, gb + 99744 | 0, gb + 98208 | 0, gb + 106912 | 0, gb + 105376 | 0, +((d3 * +(HEAPU8[i7 + 797 >> 0] | 0) + (1.0 - d3) * +(HEAPU8[i7 + 2881 >> 0] | 0)) * .00392156862745098));
  }
 }
 i2 = HEAP32[i9 + 48 >> 2] | 0;
 if (!(HEAP32[i9 + 24 >> 2] | 0)) i8 = 15; else {
  d3 = +HEAPF32[i2 + 2836 >> 2];
  if (d3 != 0.0) if (d3 + .2 > +HEAPF64[i9 + 8 >> 3]) {
   i4 = HEAP32[i2 + 2868 >> 2] | 0;
   i1 = HEAP32[i9 + 68 >> 2] | 0;
   if ((i4 | 0) < (HEAP32[i1 + 164 >> 2] | 0)) {
    i2 = i1 + (HEAP32[i1 + 168 >> 2] | 0) | 0;
    i1 = mftCall_iiii(HEAP32[(HEAP32[i9 >> 2] | 0) + 20 >> 2] | 0, i9 | 0, HEAP32[i9 + 52 >> 2] | 0, i2 + (i4 * 176 | 0) | 0) | 0;
    mftCall_viiiiid(HEAP32[(HEAP32[i9 >> 2] | 0) + 72 >> 2] | 0, i9 | 0, gb + 112544 | 0, gb + 114080 | 0, i2 + (i4 * 176 | 0) | 0, i1 | 0, +(+HEAPF32[(HEAP32[i9 + 48 >> 2] | 0) + 2872 >> 2]));
    if ((HEAP32[i2 + (i4 * 176 | 0) + 120 >> 2] | 0) > 1) {
     i1 = i1 + ((HEAP32[(HEAP32[i9 + 68 >> 2] | 0) + 140 >> 2] | 0) * 12 | 0) | 0;
     mftCall_viiiiid(HEAP32[(HEAP32[i9 >> 2] | 0) + 72 >> 2] | 0, i9 | 0, gb + 101792 | 0, gb + 103328 | 0, i2 + (i4 * 176 | 0) | 0, i1 | 0, +(+HEAPF32[(HEAP32[i9 + 48 >> 2] | 0) + 2872 >> 2]));
     mftCall_viiiiid(HEAP32[(HEAP32[i9 >> 2] | 0) + 56 >> 2] | 0, i9 | 0, gb + 114080 | 0, gb + 112544 | 0, gb + 103328 | 0, gb + 101792 | 0, +(+(HEAPU8[(HEAP32[i9 + 48 >> 2] | 0) + 2840 >> 0] | 0) * .00392156862745098));
     if ((HEAP32[i2 + (i4 * 176 | 0) + 120 >> 2] | 0) == 4) {
      i1 = i1 + ((HEAP32[(HEAP32[i9 + 68 >> 2] | 0) + 140 >> 2] | 0) * 12 | 0) | 0;
      mftCall_viiiiid(HEAP32[(HEAP32[i9 >> 2] | 0) + 72 >> 2] | 0, i9 | 0, gb + 105376 | 0, gb + 106912 | 0, i2 + (i4 * 176 | 0) | 0, i1 | 0, +(+HEAPF32[(HEAP32[i9 + 48 >> 2] | 0) + 2872 >> 2]));
      mftCall_viiiiid(HEAP32[(HEAP32[i9 >> 2] | 0) + 72 >> 2] | 0, i9 | 0, gb + 108960 | 0, gb + 110496 | 0, i2 + (i4 * 176 | 0) | 0, i1 + ((HEAP32[(HEAP32[i9 + 68 >> 2] | 0) + 140 >> 2] | 0) * 12 | 0) | 0, +(+HEAPF32[(HEAP32[i9 + 48 >> 2] | 0) + 2872 >> 2]));
      mftCall_viiiiid(HEAP32[(HEAP32[i9 >> 2] | 0) + 56 >> 2] | 0, i9 | 0, gb + 106912 | 0, gb + 105376 | 0, gb + 110496 | 0, gb + 108960 | 0, +(+(HEAPU8[(HEAP32[i9 + 48 >> 2] | 0) + 2840 >> 0] | 0) * .00392156862745098));
      mftCall_viiiiid(HEAP32[(HEAP32[i9 >> 2] | 0) + 56 >> 2] | 0, i9 | 0, gb + 114080 | 0, gb + 112544 | 0, gb + 106912 | 0, gb + 105376 | 0, +(+(HEAPU8[(HEAP32[i9 + 48 >> 2] | 0) + 2841 >> 0] | 0) * .00392156862745098));
      i1 = i9;
     } else i1 = i9;
    } else i1 = i9;
    mftCall_viiiiid(HEAP32[(HEAP32[i1 >> 2] | 0) + 56 >> 2] | 0, i9 | 0, gb + 99744 | 0, gb + 98208 | 0, gb + 114080 | 0, gb + 112544 | 0, +(1.0 - (+HEAPF64[i9 + 8 >> 3] - +HEAPF32[(HEAP32[i9 + 48 >> 2] | 0) + 2836 >> 2]) * 5.0));
   } else i8 = 15;
  } else i8 = 15; else i8 = 15;
 }
 if ((i8 | 0) == 15) HEAPF32[i2 + 2872 >> 2] = d6;
 i1 = HEAP32[i9 + 68 >> 2] | 0;
 i7 = i1 + (HEAP32[i1 + 144 >> 2] | 0) | 0;
 i4 = HEAP32[i9 + 56 >> 2] | 0;
 if (i4) {
  i2 = HEAP32[i4 + 380 >> 2] | 0;
  if (i2) {
   if ((i2 | 0) >= (HEAP32[i1 + 164 >> 2] | 0)) {
    HEAP32[i4 + 380 >> 2] = 0;
    i2 = 0;
   }
   i8 = i1 + (HEAP32[i1 + 168 >> 2] | 0) + (i2 * 176 | 0) | 0;
   i1 = mftCall_iiii(HEAP32[(HEAP32[i9 >> 2] | 0) + 20 >> 2] | 0, i9 | 0, HEAP32[i9 + 52 >> 2] | 0, i8 | 0) | 0;
   mftCall_viiiiid(HEAP32[(HEAP32[i9 >> 2] | 0) + 72 >> 2] | 0, i9 | 0, gb + 101792 | 0, gb + 103328 | 0, i8 | 0, i1 | 0, +(+HEAPF32[(HEAP32[i9 + 56 >> 2] | 0) + 384 >> 2]));
   i1 = HEAP32[i9 + 68 >> 2] | 0;
   if ((HEAP32[i1 + 140 >> 2] | 0) > 0) {
    i5 = 0;
    do {
     i2 = i7 + (i5 * 112 | 0) | 0;
     i4 = 0;
     while (1) {
      if (!(_strcmp(i2 | 0, HEAP32[gb + 35848 + (i4 << 2) >> 2] | 0) | 0)) {
       i8 = 27;
       break;
      }
      i4 = i4 + 1 | 0;
      if ((i4 | 0) >= 8) {
       i8 = 26;
       break;
      }
     }
     if ((i8 | 0) == 26) {
      i8 = 0;
      if ((i4 | 0) != 8) i8 = 27;
     }
     if ((i8 | 0) == 27) {
      i1 = gb + 98208 + (i5 * 12 | 0) | 0;
      i8 = gb + 101792 + (i5 * 12 | 0) | 0;
      HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
      HEAP32[i1 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
      HEAP32[i1 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
      i1 = gb + 99744 + (i5 << 4) | 0;
      i8 = gb + 103328 + (i5 << 4) | 0;
      HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
      HEAP32[i1 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
      HEAP32[i1 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
      HEAP32[i1 + 12 >> 2] = HEAP32[i8 + 12 >> 2];
      i1 = HEAP32[i9 + 68 >> 2] | 0;
     }
     i5 = i5 + 1 | 0;
    } while ((i5 | 0) < (HEAP32[i1 + 140 >> 2] | 0));
   }
  }
 }
 if ((HEAP32[i1 + 140 >> 2] | 0) > 0) {
  i2 = 0;
  do {
   __Z16QuaternionMatrixPfPA4_f(gb + 99744 + (i2 << 4) | 0, i10);
   HEAP32[i10 + 12 >> 2] = HEAP32[gb + 98208 + (i2 * 12 | 0) >> 2];
   HEAP32[i10 + 28 >> 2] = HEAP32[gb + 98208 + (i2 * 12 | 0) + 4 >> 2];
   HEAP32[i10 + 44 >> 2] = HEAP32[gb + 98208 + (i2 * 12 | 0) + 8 >> 2];
   i4 = i7 + (i2 * 112 | 0) + 32 | 0;
   i1 = HEAP32[i4 >> 2] | 0;
   if ((i1 | 0) == -1) {
    if (!(mftCall_i(HEAP32[gb + 94440 + 160 >> 2] | 0) | 0)) {
     __Z16ConcatTransformsPA4_fS0_S0_(HEAP32[i9 + 16548 >> 2] | 0, i10, (HEAP32[i9 + 16552 >> 2] | 0) + (i2 * 48 | 0) | 0);
     __Z16ConcatTransformsPA4_fS0_S0_(HEAP32[i9 + 16544 >> 2] | 0, i10, (HEAP32[i9 + 16556 >> 2] | 0) + (i2 * 48 | 0) | 0);
    } else {
     __Z16ConcatTransformsPA4_fS0_S0_(HEAP32[i9 + 16544 >> 2] | 0, i10, (HEAP32[i9 + 16552 >> 2] | 0) + (i2 * 48 | 0) | 0);
     __Z10MatrixCopyPA4_fS0_((HEAP32[i9 + 16552 >> 2] | 0) + (i2 * 48 | 0) | 0, (HEAP32[i9 + 16556 >> 2] | 0) + (i2 * 48 | 0) | 0);
    }
    mftCall_viii(HEAP32[(HEAP32[i9 >> 2] | 0) + 52 >> 2] | 0, i9 | 0, HEAP32[i9 + 48 >> 2] | 0, (HEAP32[i9 + 16552 >> 2] | 0) + (i2 * 48 | 0) | 0);
   } else {
    i8 = HEAP32[i9 + 16552 >> 2] | 0;
    __Z16ConcatTransformsPA4_fS0_S0_(i8 + (i1 * 48 | 0) | 0, i10, i8 + (i2 * 48 | 0) | 0);
    i8 = HEAP32[i9 + 16556 >> 2] | 0;
    __Z16ConcatTransformsPA4_fS0_S0_(i8 + ((HEAP32[i4 >> 2] | 0) * 48 | 0) | 0, i10, i8 + (i2 * 48 | 0) | 0);
   }
   i2 = i2 + 1 | 0;
  } while ((i2 | 0) < (HEAP32[(HEAP32[i9 + 68 >> 2] | 0) + 140 >> 2] | 0));
 }
 STACKTOP = i10;
 return;
}

function _CAM_Think() {
 var i1 = 0, d2 = 0.0, i3 = 0, d4 = 0.0, d5 = 0.0, i6 = 0, d7 = 0.0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 switch (~~+HEAPF32[(HEAP32[gb + 93768 >> 2] | 0) + 12 >> 2] | 0) {
 case 1:
  {
   __Z17CAM_ToThirdPersonv();
   break;
  }
 case 2:
  {
   HEAP32[gb + 93828 >> 2] = 0;
   mftCall_vid(HEAP32[gb + 92340 + 148 >> 2] | 0, gb + 42163 | 0, 0.0);
   break;
  }
 default:
  {}
 }
 if (HEAP32[gb + 93828 >> 2] | 0) {
  i1 = HEAP32[(HEAP32[gb + 93780 >> 2] | 0) + 12 >> 2] | 0;
  i3 = HEAP32[(HEAP32[gb + 93776 >> 2] | 0) + 12 >> 2] | 0;
  d4 = +HEAPF32[(HEAP32[gb + 93784 >> 2] | 0) + 12 >> 2];
  do if (!((HEAP32[gb + 93832 >> 2] | 0) == 0 | (HEAP32[gb + 93840 >> 2] | 0) != 0)) {
   i6 = HEAP32[gb + 93852 >> 2] | 0;
   if ((i6 | 0) > (mftCall_i(HEAP32[gb + 92340 + 128 >> 2] | 0) | 0)) {
    d2 = (HEAP32[tempDoublePtr >> 2] = i3, +HEAPF32[tempDoublePtr >> 2]);
    d5 = +HEAPF32[(HEAP32[gb + 93800 >> 2] | 0) + 12 >> 2];
    if (d2 < d5) {
     i3 = HEAP32[gb + 93852 >> 2] | 0;
     d7 = d2 + +((i3 - (mftCall_i(HEAP32[gb + 92340 + 128 >> 2] | 0) | 0) | 0) / 2 | 0 | 0) * .5;
     d5 = +HEAPF32[(HEAP32[gb + 93800 >> 2] | 0) + 12 >> 2];
     i3 = (HEAPF32[tempDoublePtr >> 2] = d7, HEAP32[tempDoublePtr >> 2] | 0);
    }
    if ((HEAP32[tempDoublePtr >> 2] = i3, +HEAPF32[tempDoublePtr >> 2]) > d5) i3 = (HEAPF32[tempDoublePtr >> 2] = d5, HEAP32[tempDoublePtr >> 2] | 0);
   } else {
    i6 = HEAP32[gb + 93852 >> 2] | 0;
    if ((i6 | 0) < (mftCall_i(HEAP32[gb + 92340 + 128 >> 2] | 0) | 0)) {
     d5 = (HEAP32[tempDoublePtr >> 2] = i3, +HEAPF32[tempDoublePtr >> 2]);
     d2 = +HEAPF32[(HEAP32[gb + 93804 >> 2] | 0) + 12 >> 2];
     if (d5 > d2) {
      i3 = mftCall_i(HEAP32[gb + 92340 + 128 >> 2] | 0) | 0;
      d2 = +HEAPF32[(HEAP32[gb + 93804 >> 2] | 0) + 12 >> 2];
      i3 = (HEAPF32[tempDoublePtr >> 2] = d5 - +((i3 - (HEAP32[gb + 93852 >> 2] | 0) | 0) / 2 | 0 | 0) * .5, HEAP32[tempDoublePtr >> 2] | 0);
     }
     if ((HEAP32[tempDoublePtr >> 2] = i3, +HEAPF32[tempDoublePtr >> 2]) < d2) i3 = (HEAPF32[tempDoublePtr >> 2] = d2, HEAP32[tempDoublePtr >> 2] | 0);
    }
   }
   i6 = HEAP32[gb + 93852 + 4 >> 2] | 0;
   if ((i6 | 0) > (mftCall_i(HEAP32[gb + 92340 + 132 >> 2] | 0) | 0)) {
    d2 = (HEAP32[tempDoublePtr >> 2] = i1, +HEAPF32[tempDoublePtr >> 2]);
    d5 = +HEAPF32[(HEAP32[gb + 93792 >> 2] | 0) + 12 >> 2];
    if (d2 < d5) {
     i1 = HEAP32[gb + 93852 + 4 >> 2] | 0;
     d7 = d2 + +((i1 - (mftCall_i(HEAP32[gb + 92340 + 132 >> 2] | 0) | 0) | 0) / 2 | 0 | 0) * .5;
     d5 = +HEAPF32[(HEAP32[gb + 93792 >> 2] | 0) + 12 >> 2];
     i1 = (HEAPF32[tempDoublePtr >> 2] = d7, HEAP32[tempDoublePtr >> 2] | 0);
    }
    if ((HEAP32[tempDoublePtr >> 2] = i1, +HEAPF32[tempDoublePtr >> 2]) > d5) i1 = (HEAPF32[tempDoublePtr >> 2] = d5, HEAP32[tempDoublePtr >> 2] | 0);
   } else {
    i6 = HEAP32[gb + 93852 + 4 >> 2] | 0;
    if ((i6 | 0) < (mftCall_i(HEAP32[gb + 92340 + 132 >> 2] | 0) | 0)) {
     d5 = (HEAP32[tempDoublePtr >> 2] = i1, +HEAPF32[tempDoublePtr >> 2]);
     d2 = +HEAPF32[(HEAP32[gb + 93796 >> 2] | 0) + 12 >> 2];
     if (d5 > d2) {
      i1 = mftCall_i(HEAP32[gb + 92340 + 132 >> 2] | 0) | 0;
      d2 = +HEAPF32[(HEAP32[gb + 93796 >> 2] | 0) + 12 >> 2];
      i1 = (HEAPF32[tempDoublePtr >> 2] = d5 - +((i1 - (HEAP32[gb + 93852 + 4 >> 2] | 0) | 0) / 2 | 0 | 0) * .5, HEAP32[tempDoublePtr >> 2] | 0);
     }
     if ((HEAP32[tempDoublePtr >> 2] = i1, +HEAPF32[tempDoublePtr >> 2]) < d2) i1 = (HEAPF32[tempDoublePtr >> 2] = d2, HEAP32[tempDoublePtr >> 2] | 0);
    }
   }
   d2 = +__ZN4CHud14GetSensitivityEv(gb + 46040 | 0);
   i6 = HEAP32[gb + 93852 >> 2] | 0;
   if (d2 != 0.0) {
    HEAP32[gb + 93844 >> 2] = ~~(d2 * +(i6 | 0));
    HEAP32[gb + 93848 >> 2] = ~~(d2 * +(HEAP32[gb + 93852 + 4 >> 2] | 0));
    break;
   } else {
    HEAP32[gb + 93844 >> 2] = i6;
    HEAP32[gb + 93848 >> 2] = HEAP32[gb + 93852 + 4 >> 2];
    break;
   }
  } while (0);
  if (+__Z11CL_KeyStateP9kbutton_s(gb + 93860 | 0) != 0.0) i1 = (HEAPF32[tempDoublePtr >> 2] = (HEAP32[tempDoublePtr >> 2] = i1, +HEAPF32[tempDoublePtr >> 2]) + 2.5, HEAP32[tempDoublePtr >> 2] | 0); else if (+__Z11CL_KeyStateP9kbutton_s(gb + 93872 | 0) != 0.0) i1 = (HEAPF32[tempDoublePtr >> 2] = (HEAP32[tempDoublePtr >> 2] = i1, +HEAPF32[tempDoublePtr >> 2]) + -2.5, HEAP32[tempDoublePtr >> 2] | 0);
  if (+__Z11CL_KeyStateP9kbutton_s(gb + 93884 | 0) != 0.0) i3 = (HEAPF32[tempDoublePtr >> 2] = (HEAP32[tempDoublePtr >> 2] = i3, +HEAPF32[tempDoublePtr >> 2]) + -2.5, HEAP32[tempDoublePtr >> 2] | 0); else if (+__Z11CL_KeyStateP9kbutton_s(gb + 93896 | 0) != 0.0) i3 = (HEAPF32[tempDoublePtr >> 2] = (HEAP32[tempDoublePtr >> 2] = i3, +HEAPF32[tempDoublePtr >> 2]) + 2.5, HEAP32[tempDoublePtr >> 2] | 0);
  if (+__Z11CL_KeyStateP9kbutton_s(gb + 93908 | 0) != 0.0) if (d4 + -1.0 < 30.0) {
   i1 = 0;
   i3 = 0;
   d4 = 30.0;
  } else d4 = d4 + -1.0; else if (+__Z11CL_KeyStateP9kbutton_s(gb + 93920 | 0) != 0.0) d4 = d4 + 1.0;
  if (!(HEAP32[gb + 93840 >> 2] | 0)) d2 = d4; else {
   i6 = HEAP32[gb + 93852 + 4 >> 2] | 0;
   if ((i6 | 0) > (mftCall_i(HEAP32[gb + 92340 + 132 >> 2] | 0) | 0)) {
    d2 = +HEAPF32[(HEAP32[gb + 93808 >> 2] | 0) + 12 >> 2];
    if (d4 < d2) {
     i6 = HEAP32[gb + 93852 + 4 >> 2] | 0;
     d4 = d4 + +((i6 - (mftCall_i(HEAP32[gb + 92340 + 132 >> 2] | 0) | 0) | 0) / 2 | 0 | 0);
     d2 = +HEAPF32[(HEAP32[gb + 93808 >> 2] | 0) + 12 >> 2];
    }
    if (!(d4 > d2)) d2 = d4;
   } else {
    i6 = HEAP32[gb + 93852 + 4 >> 2] | 0;
    if ((i6 | 0) < (mftCall_i(HEAP32[gb + 92340 + 132 >> 2] | 0) | 0)) {
     d2 = +HEAPF32[(HEAP32[gb + 93812 >> 2] | 0) + 12 >> 2];
     if (d4 > d2) {
      i6 = mftCall_i(HEAP32[gb + 92340 + 132 >> 2] | 0) | 0;
      d2 = +HEAPF32[(HEAP32[gb + 93812 >> 2] | 0) + 12 >> 2];
      d4 = d4 - +((i6 - (HEAP32[gb + 93852 + 4 >> 2] | 0) | 0) / 2 | 0 | 0);
     }
     if (!(d4 < d2)) d2 = d4;
    } else d2 = d4;
   }
   d7 = +(HEAP32[gb + 93852 >> 2] | 0);
   i6 = ~~(d7 * +__ZN4CHud14GetSensitivityEv(gb + 46040 | 0));
   HEAP32[gb + 93844 >> 2] = i6;
   d7 = +(HEAP32[gb + 93852 + 4 >> 2] | 0);
   i6 = ~~(d7 * +__ZN4CHud14GetSensitivityEv(gb + 46040 | 0));
   HEAP32[gb + 93848 >> 2] = i6;
  }
  HEAP32[(HEAP32[gb + 93780 >> 2] | 0) + 12 >> 2] = i1;
  HEAP32[(HEAP32[gb + 93776 >> 2] | 0) + 12 >> 2] = i3;
  HEAPF32[(HEAP32[gb + 93784 >> 2] | 0) + 12 >> 2] = d2;
  i3 = HEAP32[gb + 93816 >> 2] | 0;
  i1 = HEAP32[gb + 93816 + 4 >> 2] | 0;
  mftCall_vi(HEAP32[gb + 92340 + 136 >> 2] | 0, i8 | 0);
  if (+HEAPF32[(HEAP32[gb + 93772 >> 2] | 0) + 12 >> 2] != 0.0) {
   i1 = (HEAPF32[tempDoublePtr >> 2] = +HEAPF32[(HEAP32[gb + 93776 >> 2] | 0) + 12 >> 2] + +HEAPF32[i8 + 4 >> 2], HEAP32[tempDoublePtr >> 2] | 0);
   i3 = (HEAPF32[tempDoublePtr >> 2] = +HEAPF32[(HEAP32[gb + 93780 >> 2] | 0) + 12 >> 2] + +HEAPF32[i8 >> 2], HEAP32[tempDoublePtr >> 2] | 0);
  } else {
   d4 = (HEAP32[tempDoublePtr >> 2] = i1, +HEAPF32[tempDoublePtr >> 2]);
   d5 = +HEAPF32[i8 + 4 >> 2];
   d7 = +HEAPF32[(HEAP32[gb + 93776 >> 2] | 0) + 12 >> 2];
   if (d4 - d5 != d7) {
    d7 = +__Z10MoveTowardfff(d4, d5 + d7, 0.0);
    i1 = (HEAPF32[tempDoublePtr >> 2] = d7, HEAP32[tempDoublePtr >> 2] | 0);
   }
   d4 = (HEAP32[tempDoublePtr >> 2] = i3, +HEAPF32[tempDoublePtr >> 2]);
   d5 = +HEAPF32[i8 >> 2];
   d7 = +HEAPF32[(HEAP32[gb + 93780 >> 2] | 0) + 12 >> 2];
   if (d4 - d5 != d7) {
    d7 = +__Z10MoveTowardfff(d4, d5 + d7, 0.0);
    i3 = (HEAPF32[tempDoublePtr >> 2] = d7, HEAP32[tempDoublePtr >> 2] | 0);
   }
  }
  HEAP32[gb + 93816 >> 2] = i3;
  HEAP32[gb + 93816 + 4 >> 2] = i1;
  HEAPF32[gb + 93816 + 8 >> 2] = d2;
 }
 STACKTOP = i8;
 return;
}

function __Z21V_CalcSpectatorRefdefP12ref_params_s(i5) {
 i5 = i5 | 0;
 var i1 = 0, d2 = 0.0, i3 = 0, i4 = 0, i6 = 0, d7 = 0.0, d8 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(HEAP8[gb + 54728 >> 0] | 0)) if (___cxa_guard_acquire(gb + 54728 | 0) | 0) {
  HEAPF32[gb + 122324 >> 2] = 0.0;
  HEAPF32[gb + 122328 >> 2] = 0.0;
  HEAPF32[gb + 122332 >> 2] = 0.0;
  ___cxa_guard_release(gb + 54728 | 0);
 }
 i1 = mftCall_ii(HEAP32[gb + 92340 + 212 >> 2] | 0, HEAP32[gb + 121108 >> 2] | 0) | 0;
 HEAP32[i5 + 228 >> 2] = 0;
 HEAP32[gb + 116272 >> 2] = HEAP32[i5 + 100 >> 2];
 HEAP32[gb + 116272 + 4 >> 2] = HEAP32[i5 + 100 + 4 >> 2];
 HEAP32[gb + 116272 + 8 >> 2] = HEAP32[i5 + 100 + 8 >> 2];
 HEAP32[gb + 116260 >> 2] = HEAP32[i5 + 128 >> 2];
 HEAP32[gb + 116260 + 4 >> 2] = HEAP32[i5 + 128 + 4 >> 2];
 HEAP32[gb + 116260 + 8 >> 2] = HEAP32[i5 + 128 + 8 >> 2];
 HEAP32[gb + 116248 >> 2] = HEAP32[i5 + 12 >> 2];
 HEAP32[gb + 116248 + 4 >> 2] = HEAP32[i5 + 12 + 4 >> 2];
 HEAP32[gb + 116248 + 8 >> 2] = HEAP32[i5 + 12 + 8 >> 2];
 HEAP32[gb + 116236 >> 2] = HEAP32[i5 >> 2];
 HEAP32[gb + 116236 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
 HEAP32[gb + 116236 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
 if ((HEAP32[gb + 121104 >> 2] | 0) == 4) {
  if (i1 | 0) i4 = 7;
 } else if (i1 | 0 ? +HEAPF32[(HEAP32[gb + 46040 + 4280 >> 2] | 0) + 12 >> 2] == 2.0 : 0) i4 = 7;
 L8 : do if ((i4 | 0) == 7) {
  d2 = +HEAPF32[i1 + 696 >> 2] - +HEAPF32[i1 + 356 >> 2];
  if (d2 > 0.0) {
   HEAPF32[i6 >> 2] = +HEAPF32[i1 + 364 >> 2] - +HEAPF32[i1 + 704 >> 2];
   HEAPF32[i6 + 4 >> 2] = +HEAPF32[i1 + 364 + 4 >> 2] - +HEAPF32[i1 + 704 + 4 >> 2];
   HEAPF32[i6 + 8 >> 2] = +HEAPF32[i1 + 364 + 8 >> 2] - +HEAPF32[i1 + 704 + 8 >> 2];
   _VectorScale(i6, 1.0 / d2, i6);
   d8 = +HEAPF32[gb + 122324 >> 2] * .8999999761581421 + +HEAPF32[i6 >> 2] * .10000000149011612;
   HEAPF32[gb + 122324 >> 2] = d8;
   d7 = +HEAPF32[gb + 122328 >> 2] * .8999999761581421 + +HEAPF32[i6 + 4 >> 2] * .10000000149011612;
   HEAPF32[gb + 122328 >> 2] = d7;
   d2 = +HEAPF32[gb + 122332 >> 2] * .8999999761581421 + +HEAPF32[i6 + 8 >> 2] * .10000000149011612;
   HEAPF32[gb + 122332 >> 2] = d2;
   HEAPF32[i5 + 88 >> 2] = d8;
   HEAPF32[i5 + 88 + 4 >> 2] = d7;
   HEAPF32[i5 + 88 + 8 >> 2] = d2;
  }
  if (!(mftCall_i(HEAP32[gb + 92340 + 352 >> 2] | 0) | 0)) {
   i4 = HEAP32[i1 + 2900 >> 2] | 0;
   HEAP32[i5 + 128 >> 2] = i4;
   HEAP32[i5 + 128 + 4 >> 2] = HEAP32[i1 + 2900 + 4 >> 2];
   HEAP32[i5 + 128 + 8 >> 2] = HEAP32[i1 + 2900 + 8 >> 2];
   HEAPF32[i5 + 128 >> 2] = (HEAP32[tempDoublePtr >> 2] = i4, +HEAPF32[tempDoublePtr >> 2]) * -3.0;
   break;
  }
  __Z13V_GetInEyePosiPfS_(HEAP32[gb + 121108 >> 2] | 0, i5 + 100 | 0, i5 + 128 | 0);
  HEAP32[i5 + 140 >> 2] = 1;
  i3 = mftCall_i(HEAP32[gb + 92340 + 208 >> 2] | 0) | 0;
  i1 = HEAP32[i1 + 868 >> 2] | 0;
  do if ((HEAP32[gb + 118444 >> 2] | 0) == (i1 | 0)) i4 = 14; else {
   HEAP32[gb + 118444 >> 2] = i1;
   i1 = __Z28V_FindViewModelByWeaponModeli(i1) | 0;
   HEAP32[gb + 118448 >> 2] = i1;
   if (!i1) {
    HEAP32[i3 + 2964 >> 2] = 0;
    HEAP32[gb + 118448 >> 2] = 0;
    HEAP32[gb + 118444 >> 2] = 0;
    i1 = i3 + 2964 | 0;
    break;
   } else {
    mftCall_vii(HEAP32[gb + 92340 + 264 >> 2] | 0, 0, 0);
    i4 = 14;
    break;
   }
  } while (0);
  do if ((i4 | 0) == 14) {
   i1 = HEAP32[gb + 118448 >> 2] | 0;
   if (!i1) {
    i1 = i3 + 2964 | 0;
    break;
   } else {
    HEAP32[i3 + 2964 >> 2] = mftCall_ii(HEAP32[gb + 94440 + 20 >> 2] | 0, i1 | 0) | 0;
    HEAP32[i3 + 728 >> 2] = HEAP32[gb + 118448 >> 2];
    HEAPF32[i3 + 736 >> 2] = 0.0;
    HEAP32[i3 + 740 >> 2] = 0;
    HEAP32[i3 >> 2] = HEAP32[gb + 121108 >> 2];
    break L8;
   }
  } while (0);
  HEAP32[i1 >> 2] = 0;
 } while (0);
 HEAP32[gb + 116296 >> 2] = HEAP32[i5 + 60 >> 2];
 L28 : do if (!(HEAP32[i5 + 224 >> 2] | 0)) {
  switch (HEAP32[gb + 121104 >> 2] | 0) {
  case 1:
   {
    __Z13V_GetChasePosiPfS_S_(HEAP32[gb + 121108 >> 2] | 0, 0, gb + 116236 | 0, gb + 116248 | 0);
    break;
   }
  case 2:
   {
    __Z13V_GetChasePosiPfS_S_(HEAP32[gb + 121108 >> 2] | 0, gb + 116260 | 0, gb + 116236 | 0, gb + 116248 | 0);
    break;
   }
  case 3:
   {
    HEAP32[gb + 116248 >> 2] = HEAP32[gb + 116260 >> 2];
    HEAP32[gb + 116248 + 4 >> 2] = HEAP32[gb + 116260 + 4 >> 2];
    HEAP32[gb + 116248 + 8 >> 2] = HEAP32[gb + 116260 + 8 >> 2];
    HEAP32[gb + 116236 >> 2] = HEAP32[gb + 116272 >> 2];
    HEAP32[gb + 116236 + 4 >> 2] = HEAP32[gb + 116272 + 4 >> 2];
    HEAP32[gb + 116236 + 8 >> 2] = HEAP32[gb + 116272 + 8 >> 2];
    break;
   }
  case 4:
   {
    __Z18V_CalcNormalRefdefP12ref_params_s(i5);
    break;
   }
  case 5:
   {
    HEAP32[i5 + 228 >> 2] = 1;
    __Z20V_GetMapFreePositionPfS_S_(gb + 116260 | 0, gb + 116236 | 0, gb + 116248 | 0);
    break;
   }
  case 6:
   {
    HEAP32[i5 + 228 >> 2] = 1;
    __Z21V_GetMapChasePositioniPfS_S_(HEAP32[gb + 121108 >> 2] | 0, gb + 116260 | 0, gb + 116236 | 0, gb + 116248 | 0);
    break;
   }
  default:
   {}
  }
  if (+HEAPF32[(HEAP32[gb + 46040 + 4280 >> 2] | 0) + 12 >> 2] != 0.0) {
   HEAP32[i5 + 224 >> 2] = 1;
   i1 = 0;
  } else i1 = 0;
 } else {
  HEAP32[i5 + 208 >> 2] = ~~(+(HEAP32[gb + 46040 + 2176 >> 2] | 0) * +(HEAP32[gb + 46040 + 8112 >> 2] | 0) * 1.5625000232830644e-03 + .5);
  HEAP32[i5 + 212 >> 2] = ~~(+(HEAP32[gb + 46040 + 2180 >> 2] | 0) * +(HEAP32[gb + 46040 + 8116 >> 2] | 0) * 2.0833334419876337e-03 + .5);
  HEAP32[i5 + 216 >> 2] = ~~(+(HEAP32[gb + 46040 + 2188 >> 2] | 0) * +(HEAP32[gb + 46040 + 8112 >> 2] | 0) * 1.5625000232830644e-03 + .5);
  HEAP32[i5 + 220 >> 2] = ~~(+(HEAP32[gb + 46040 + 2184 >> 2] | 0) * +(HEAP32[gb + 46040 + 8116 >> 2] | 0) * 2.0833334419876337e-03 + .5);
  HEAP32[i5 + 224 >> 2] = 0;
  switch (~~+HEAPF32[(HEAP32[gb + 46040 + 4280 >> 2] | 0) + 12 >> 2] | 0) {
  case 1:
   {
    __Z13V_GetChasePosiPfS_S_(HEAP32[gb + 121108 >> 2] | 0, gb + 116260 | 0, gb + 116236 | 0, gb + 116248 | 0);
    i1 = 1;
    break L28;
   }
  case 2:
   {
    __Z18V_CalcNormalRefdefP12ref_params_s(i5);
    i1 = 1;
    break L28;
   }
  case 3:
   {
    HEAP32[i5 + 228 >> 2] = 1;
    __Z20V_GetMapFreePositionPfS_S_(gb + 116260 | 0, gb + 116236 | 0, gb + 116248 | 0);
    i1 = 1;
    break L28;
   }
  case 4:
   {
    HEAP32[i5 + 228 >> 2] = 1;
    if ((HEAP32[gb + 121104 >> 2] | 0) == 3) {
     __Z21V_GetMapChasePositioniPfS_S_(0, gb + 116260 | 0, gb + 116236 | 0, gb + 116248 | 0);
     i1 = 1;
     break L28;
    } else {
     __Z21V_GetMapChasePositioniPfS_S_(HEAP32[gb + 121108 >> 2] | 0, gb + 116260 | 0, gb + 116236 | 0, gb + 116248 | 0);
     i1 = 1;
     break L28;
    }
   }
  default:
   {
    i1 = 1;
    break L28;
   }
  }
 } while (0);
 HEAP32[gb + 46040 + 444 >> 2] = i1;
 HEAP32[i5 + 128 >> 2] = HEAP32[gb + 116260 >> 2];
 HEAP32[i5 + 128 + 4 >> 2] = HEAP32[gb + 116260 + 4 >> 2];
 HEAP32[i5 + 128 + 8 >> 2] = HEAP32[gb + 116260 + 8 >> 2];
 HEAP32[i5 + 12 >> 2] = HEAP32[gb + 116248 >> 2];
 HEAP32[i5 + 12 + 4 >> 2] = HEAP32[gb + 116248 + 4 >> 2];
 HEAP32[i5 + 12 + 8 >> 2] = HEAP32[gb + 116248 + 8 >> 2];
 HEAP32[i5 >> 2] = HEAP32[gb + 116236 >> 2];
 HEAP32[i5 + 4 >> 2] = HEAP32[gb + 116236 + 4 >> 2];
 HEAP32[i5 + 8 >> 2] = HEAP32[gb + 116236 + 8 >> 2];
 STACKTOP = i6;
 return;
}

function _PM_PlayStepSound(i5, d4) {
 i5 = i5 | 0;
 d4 = +d4;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 HEAP32[i1 + 152 >> 2] = (HEAP32[i1 + 152 >> 2] | 0) == 0 & 1;
 L1 : do if (HEAP32[i1 + 325040 >> 2] | 0) {
  i2 = mftCall_iii(HEAP32[i1 + 325e3 >> 2] | 0, 0, 1) | 0;
  i1 = HEAP32[gb + 121136 >> 2] | 0;
  i2 = (HEAP32[i1 + 152 >> 2] << 1) + i2 | 0;
  i3 = (HEAP32[i1 + 8 >> 2] | 0) == 0;
  if (!i3) if (!(HEAP32[(HEAP32[i1 + 324848 >> 2] | 0) + 64 >> 2] | 0)) break;
  HEAP32[i6 >> 2] = HEAP32[i1 + 92 >> 2];
  HEAP32[i6 + 4 >> 2] = HEAP32[i1 + 96 >> 2];
  HEAPF32[i6 + 8 >> 2] = 0.0;
  if (!(i3 | (HEAP32[gb + 121140 >> 2] | 0) != 0)) if (+_Length(i6) <= 220.0) break;
  switch (i5 | 0) {
  case 8:
   switch (i2 | 0) {
   case 0:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45650 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 1:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45672 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 2:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45694 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 3:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45716 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   default:
    break L1;
   }
  case 1:
   switch (i2 | 0) {
   case 0:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45058 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 1:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45079 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 2:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45100 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 3:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45121 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   default:
    break L1;
   }
  case 2:
   switch (i2 | 0) {
   case 0:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45142 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 1:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45162 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 2:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45182 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 3:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45202 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   default:
    break L1;
   }
  case 3:
   switch (i2 | 0) {
   case 0:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45222 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 1:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45242 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 2:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45262 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 3:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45282 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   default:
    break L1;
   }
  case 4:
   switch (i2 | 0) {
   case 0:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45302 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 1:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45323 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 2:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45344 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 3:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45365 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   default:
    break L1;
   }
  case 5:
   {
    i5 = (mftCall_iii(HEAP32[i1 + 325e3 >> 2] | 0, 0, 4) | 0) == 0;
    switch ((i5 ? 4 : i2) | 0) {
    case 0:
     {
      mftCall_viiddii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325044 >> 2] | 0, 4, gb + 45386 | 0, +d4, .800000011920929, 0, 100);
      break L1;
     }
    case 1:
     {
      mftCall_viiddii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325044 >> 2] | 0, 4, gb + 45406 | 0, +d4, .800000011920929, 0, 100);
      break L1;
     }
    case 2:
     {
      mftCall_viiddii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325044 >> 2] | 0, 4, gb + 45426 | 0, +d4, .800000011920929, 0, 100);
      break L1;
     }
    case 3:
     {
      mftCall_viiddii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325044 >> 2] | 0, 4, gb + 45446 | 0, +d4, .800000011920929, 0, 100);
      break L1;
     }
    case 4:
     {
      mftCall_viiddii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325044 >> 2] | 0, 4, gb + 45466 | 0, +d4, .800000011920929, 0, 100);
      break L1;
     }
    default:
     break L1;
    }
   }
  case 6:
   switch (i2 | 0) {
   case 0:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45486 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 1:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45507 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 2:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45528 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 3:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45549 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   default:
    break L1;
   }
  case 7:
   {
    i5 = HEAP32[gb + 121160 >> 2] | 0;
    HEAP32[gb + 121160 >> 2] = i5 + 1;
    switch (i5 | 0) {
    case 0:
     break L1;
    case 3:
     {
      HEAP32[gb + 121160 >> 2] = 0;
      break;
     }
    default:
     {}
    }
    switch (i2 | 0) {
    case 0:
     {
      mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45570 | 0, +d4, .800000011920929, 0, 100);
      break L1;
     }
    case 1:
     {
      mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45590 | 0, +d4, .800000011920929, 0, 100);
      break L1;
     }
    case 2:
     {
      mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45610 | 0, +d4, .800000011920929, 0, 100);
      break L1;
     }
    case 3:
     {
      mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45630 | 0, +d4, .800000011920929, 0, 100);
      break L1;
     }
    default:
     break L1;
    }
   }
  default:
   switch (i2 | 0) {
   case 0:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 44978 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 1:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 44998 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 2:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45018 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   case 3:
    {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45038 | 0, +d4, .800000011920929, 0, 100);
     break L1;
    }
   default:
    break L1;
   }
  }
 } while (0);
 STACKTOP = i6;
 return;
}

function __ZN14CHudScoreboard4DrawEf(i12, d1) {
 i12 = i12 | 0;
 d1 = +d1;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = HEAP32[gb + 46040 + 8656 >> 2] | 0;
 HEAP32[gb + 46040 + 8656 >> 2] = i2 & -2;
 do if ((HEAP32[gb + 46040 + 188 >> 2] | 0) < 1 ? 1 : (HEAP32[gb + 46040 + 8648 >> 2] | HEAP32[i12 + 36 >> 2] | 0) != 0) {
  HEAP32[gb + 46040 + 8656 >> 2] = i2 | 1;
  i2 = 1;
  do {
   mftCall_vii(HEAP32[gb + 92340 + 84 >> 2] | 0, i2 | 0, gb + 54736 + (i2 << 5) | 0);
   if (HEAP8[gb + 54736 + (i2 << 5) + 6 >> 0] | 0) HEAP32[i12 + 32 >> 2] = i2;
   i2 = i2 + 1 | 0;
  } while ((i2 | 0) != 64);
  i3 = HEAP32[gb + 118500 >> 2] | 0;
  if (!i3) {
   i2 = HEAP32[gb + 46040 + 8112 >> 2] | 0;
   i4 = 9;
  } else {
   i2 = HEAP32[gb + 46040 + 8112 >> 2] | 0;
   if ((i2 | 0) > 399 ? +HEAPF32[i3 + 12 >> 2] != 0.0 : 0) {
    i10 = 1;
    i3 = 400;
   } else i4 = 9;
  }
  if ((i4 | 0) == 9) {
   i10 = 0;
   i3 = 320;
  }
  HEAP32[gb + 36340 >> 2] = i3;
  i9 = (i2 - i3 | 0) / 2 | 0;
  i8 = i10 ? 380 : 300;
  __ZN4CHud17DrawDarkRectangleEiiii(0, i9 + 15 | 0, 10, i8, (HEAP32[gb + 46040 + 8116 >> 2] | 0) + -50 | 0);
  if (!(HEAP32[gb + 46040 + 92 >> 2] | 0)) __Z13DrawUtfStringiiiPciii(i9 + 20 | 0, 15, i9 + 145 | 0, gb + 44728 | 0, 255, 140, 0) | 0; else __Z13DrawUtfStringiiiPciii(i9 + 20 | 0, 15, i9 + 145 | 0, gb + 44735 | 0, 255, 140, 0) | 0;
  __ZN4CHud20DrawHudStringReverseEiiiPciii(0, i9 + 170 | 0, 15, 0, gb + 44741 | 0, 255, 140, 0) | 0;
  __Z13DrawUtfStringiiiPciii(i9 + 180 | 0, 15, HEAP32[gb + 46040 + 8112 >> 2] | 0, gb + 44747 | 0, 255, 140, 0) | 0;
  __Z13DrawUtfStringiiiPciii(i9 + 190 | 0, 15, HEAP32[gb + 46040 + 8112 >> 2] | 0, gb + 44749 | 0, 255, 140, 0) | 0;
  __Z13DrawUtfStringiiiPciii(i9 + 260 | 0, 15, HEAP32[gb + 46040 + 8112 >> 2] | 0, gb + 44756 | 0, 255, 140, 0) | 0;
  if (i10) __Z13DrawUtfStringiiiPciii(i9 + 340 | 0, 15, HEAP32[gb + 46040 + 8112 >> 2] | 0, gb + 44764 | 0, 255, 140, 0) | 0;
  mftCall_viiiiiiii(HEAP32[gb + 92340 + 44 >> 2] | 0, i9 + 16 | 0, 30, i8 + -2 | 0, 1, 255, 140, 0, 255);
  if (!(HEAP32[gb + 46040 + 92 >> 2] | 0)) {
   __ZN14CHudScoreboard11DrawPlayersEifiPc(i12, i9, 2.0, 0, 0) | 0;
   break;
  }
  i6 = HEAP32[i12 + 20 >> 2] | 0;
  if ((i6 | 0) < 1) i5 = 1; else {
   i2 = 1;
   while (1) {
    if (!(HEAP32[gb + 118504 + (i2 * 40 | 0) + 32 >> 2] | 0)) {
     HEAP16[gb + 118504 + (i2 * 40 | 0) + 18 >> 1] = 0;
     HEAP16[gb + 118504 + (i2 * 40 | 0) + 16 >> 1] = 0;
    }
    HEAP16[gb + 118504 + (i2 * 40 | 0) + 22 >> 1] = 0;
    HEAP16[gb + 118504 + (i2 * 40 | 0) + 20 >> 1] = 0;
    if ((i2 | 0) == (i6 | 0)) {
     i5 = 1;
     break;
    } else i2 = i2 + 1 | 0;
   }
  }
  do {
   i3 = gb + 122336 + (i5 * 24 | 0) + 8 | 0;
   do if (HEAP8[i3 >> 0] | 0) {
    L35 : do if ((i6 | 0) < 1) i2 = 1; else {
     i4 = 1;
     while (1) {
      if (!(_strcasecmp(i3 | 0, gb + 118504 + (i4 * 40 | 0) | 0) | 0)) {
       i2 = i4;
       break L35;
      }
      i2 = i4 + 1 | 0;
      if ((i4 | 0) < (i6 | 0)) i4 = i2; else break;
     }
    } while (0);
    if ((i2 | 0) <= (i6 | 0)) {
     if (!(HEAP32[gb + 118504 + (i2 * 40 | 0) + 32 >> 2] | 0)) {
      i7 = gb + 118504 + (i2 * 40 | 0) + 16 | 0;
      HEAP16[i7 >> 1] = (HEAPU16[i7 >> 1] | 0) + (HEAPU16[gb + 122336 + (i5 * 24 | 0) >> 1] | 0);
      i7 = gb + 118504 + (i2 * 40 | 0) + 18 | 0;
      HEAP16[i7 >> 1] = (HEAPU16[i7 >> 1] | 0) + (HEAPU16[gb + 122336 + (i5 * 24 | 0) + 2 >> 1] | 0);
     }
     i7 = gb + 118504 + (i2 * 40 | 0) + 20 | 0;
     HEAP16[i7 >> 1] = (HEAPU16[i7 >> 1] | 0) + (HEAPU16[gb + 54736 + (i5 << 5) + 4 >> 1] | 0);
     i7 = gb + 118504 + (i2 * 40 | 0) + 22 | 0;
     HEAP16[i7 >> 1] = (HEAPU16[i7 >> 1] | 0) + (HEAPU8[gb + 54736 + (i5 << 5) + 8 >> 0] | 0);
     i2 = gb + 118504 + (i2 * 40 | 0) + 24 | 0;
     if (!(HEAP8[gb + 54736 + (i5 << 5) + 6 >> 0] | 0)) {
      HEAP16[i2 >> 1] = 0;
      break;
     } else {
      HEAP16[i2 >> 1] = 1;
      break;
     }
    }
   } while (0);
   i5 = i5 + 1 | 0;
  } while ((i5 | 0) != 64);
  if ((i6 | 0) >= 1) {
   i3 = 1;
   while (1) {
    HEAP32[gb + 118504 + (i3 * 40 | 0) + 28 >> 2] = 0;
    i2 = HEAP16[gb + 118504 + (i3 * 40 | 0) + 26 >> 1] | 0;
    if (i2 << 16 >> 16 > 0) {
     i7 = gb + 118504 + (i3 * 40 | 0) + 20 | 0;
     HEAP16[i7 >> 1] = (HEAP16[i7 >> 1] | 0) / (i2 << 16 >> 16 | 0) | 0;
     i7 = gb + 118504 + (i3 * 40 | 0) + 22 | 0;
     HEAP16[i7 >> 1] = (HEAP16[i7 >> 1] | 0) / (i2 << 16 >> 16 | 0) | 0;
    }
    if ((i3 | 0) == (i6 | 0)) break; else i3 = i3 + 1 | 0;
   }
  }
  L56 : do if ((i6 | 0) < 1) d1 = 2.0; else {
   d1 = 2.0;
   do {
    i4 = 0;
    i5 = -99999;
    i7 = 1;
    i3 = 99999;
    while (1) {
     if ((HEAP16[gb + 118504 + (i7 * 40 | 0) + 26 >> 1] | 0) < 0) i2 = i5; else if (!(HEAP32[gb + 118504 + (i7 * 40 | 0) + 28 >> 2] | 0)) {
      i2 = HEAP16[gb + 118504 + (i7 * 40 | 0) + 16 >> 1] | 0;
      if ((i2 | 0) < (i5 | 0)) i2 = i5; else {
       i13 = HEAP16[gb + 118504 + (i7 * 40 | 0) + 18 >> 1] | 0;
       i14 = (i2 | 0) > (i5 | 0) | (i13 | 0) < (i3 | 0);
       i4 = i14 ? i7 : i4;
       i2 = i14 ? i2 : i5;
       i3 = i14 ? i13 : i3;
      }
     } else i2 = i5;
     if ((i7 | 0) < (i6 | 0)) {
      i5 = i2;
      i7 = i7 + 1 | 0;
     } else break;
    }
    if (!i4) break L56;
    i3 = ~~(d1 * 13.0 + 15.0);
    if ((i3 | 0) > ((HEAP32[gb + 46040 + 8116 >> 2] | 0) + -50 | 0)) break L56;
    if (HEAP16[gb + 118504 + (i4 * 40 | 0) + 24 >> 1] | 0) mftCall_viiiiiiii(HEAP32[gb + 92340 + 44 >> 2] | 0, i9 + 15 | 0, i3 | 0, i8 | 0, 13, 0, 0, 255, 70);
    i2 = gb + 118504 + (i4 * 40 | 0) | 0;
    __Z13DrawUtfStringiiiPciii(i9 + 20 | 0, i3, i9 + 145 | 0, i2, 255, 225, 55) | 0;
    __ZN4CHud19DrawHudNumberStringEiiiiiii(0, i9 + 170 | 0, i3, i9 + 130 | 0, HEAP16[gb + 118504 + (i4 * 40 | 0) + 16 >> 1] | 0, 255, 225, 55) | 0;
    __Z13DrawUtfStringiiiPciii(i9 + 180 | 0, i3, i9 + 200 | 0, gb + 44747 | 0, 255, 225, 55) | 0;
    __ZN4CHud19DrawHudNumberStringEiiiiiii(0, i9 + 210 | 0, i3, i9 + 185 | 0, HEAP16[gb + 118504 + (i4 * 40 | 0) + 18 >> 1] | 0, 255, 225, 55) | 0;
    HEAP32[i11 >> 2] = HEAP16[gb + 118504 + (i4 * 40 | 0) + 20 >> 1];
    _sprintf(gb + 132696 | 0, gb + 44773 | 0, i11 | 0) | 0;
    __ZN4CHud20DrawHudStringReverseEiiiPciii(0, i9 + 295 | 0, i3, i9 + 245 | 0, gb + 132696 | 0, 255, 160, 0) | 0;
    if (i10) {
     HEAP32[i11 + 8 >> 2] = HEAP16[gb + 118504 + (i4 * 40 | 0) + 22 >> 1];
     _sprintf(gb + 132696 | 0, gb + 44776 | 0, i11 + 8 | 0) | 0;
     __Z13DrawUtfStringiiiPciii(i9 + 370 | 0, i3, i9 + 420 | 0, gb + 132696 | 0, 255, 160, 0) | 0;
    }
    HEAP32[gb + 118504 + (i4 * 40 | 0) + 28 >> 2] = 1;
    d1 = +(__ZN14CHudScoreboard11DrawPlayersEifiPc(i12, i9, d1 + 1.0, 10, i2) | 0);
    i6 = HEAP32[i12 + 20 >> 2] | 0;
   } while ((i6 | 0) >= 1);
  } while (0);
  __ZN14CHudScoreboard11DrawPlayersEifiPc(i12, i9, d1 + .5, 0, gb + 132760 | 0) | 0;
 } while (0);
 STACKTOP = i11;
 return 1;
}

function __ZN15WeaponsResource17LoadWeaponSpritesEP6WEAPON(i1, i7) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 i5 = (HEAP32[gb + 46040 + 8112 >> 2] | 0) < 640 ? 320 : 640;
 do if (i7 | 0) {
  i1 = i7 + 168 | 0;
  i2 = i1 + 80 | 0;
  do {
   HEAP32[i1 >> 2] = 0;
   i1 = i1 + 4 | 0;
  } while ((i1 | 0) < (i2 | 0));
  HEAP32[i6 >> 2] = i7;
  _sprintf(i6 + 72 | 0, gb + 39698 | 0, i6 | 0) | 0;
  i4 = mftCall_iii(HEAP32[gb + 92340 + 40 >> 2] | 0, i6 + 72 | 0, i6 + 68 | 0) | 0;
  if (i4 | 0) {
   i1 = HEAP32[i6 + 68 >> 2] | 0;
   i2 = __Z13GetSpriteListP15client_sprite_sPKcii(i4, gb + 39713 | 0, i5, i1) | 0;
   if (!i2) HEAP32[i7 + 248 >> 2] = 0; else {
    HEAP32[i6 + 8 >> 2] = i2 + 64;
    _sprintf(i6 + 72 | 0, gb + 40918 | 0, i6 + 8 | 0) | 0;
    HEAP32[i7 + 248 >> 2] = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, i6 + 72 | 0) | 0;
    HEAP32[i7 + 252 >> 2] = HEAP32[i2 + 136 >> 2];
    HEAP32[i7 + 252 + 4 >> 2] = HEAP32[i2 + 136 + 4 >> 2];
    HEAP32[i7 + 252 + 8 >> 2] = HEAP32[i2 + 136 + 8 >> 2];
    HEAP32[i7 + 252 + 12 >> 2] = HEAP32[i2 + 136 + 12 >> 2];
    i1 = HEAP32[i6 + 68 >> 2] | 0;
   }
   i2 = __Z13GetSpriteListP15client_sprite_sPKcii(i4, gb + 39723 | 0, i5, i1) | 0;
   if (!i2) HEAP32[i7 + 268 >> 2] = 0; else {
    HEAP32[i6 + 16 >> 2] = i2 + 64;
    _sprintf(i6 + 72 | 0, gb + 40918 | 0, i6 + 16 | 0) | 0;
    HEAP32[i7 + 268 >> 2] = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, i6 + 72 | 0) | 0;
    HEAP32[i7 + 272 >> 2] = HEAP32[i2 + 136 >> 2];
    HEAP32[i7 + 272 + 4 >> 2] = HEAP32[i2 + 136 + 4 >> 2];
    HEAP32[i7 + 272 + 8 >> 2] = HEAP32[i2 + 136 + 8 >> 2];
    HEAP32[i7 + 272 + 12 >> 2] = HEAP32[i2 + 136 + 12 >> 2];
    i1 = HEAP32[i6 + 68 >> 2] | 0;
   }
   i2 = __Z13GetSpriteListP15client_sprite_sPKcii(i4, gb + 41485 | 0, i5, i1) | 0;
   if (!i2) {
    i3 = HEAP32[i7 + 248 >> 2] | 0;
    HEAP32[i7 + 288 >> 2] = i3;
    HEAP32[i7 + 292 >> 2] = HEAP32[i7 + 252 >> 2];
    HEAP32[i7 + 292 + 4 >> 2] = HEAP32[i7 + 252 + 4 >> 2];
    HEAP32[i7 + 292 + 8 >> 2] = HEAP32[i7 + 252 + 8 >> 2];
    HEAP32[i7 + 292 + 12 >> 2] = HEAP32[i7 + 252 + 12 >> 2];
   } else {
    HEAP32[i6 + 24 >> 2] = i2 + 64;
    _sprintf(i6 + 72 | 0, gb + 40918 | 0, i6 + 24 | 0) | 0;
    i3 = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, i6 + 72 | 0) | 0;
    HEAP32[i7 + 288 >> 2] = i3;
    HEAP32[i7 + 292 >> 2] = HEAP32[i2 + 136 >> 2];
    HEAP32[i7 + 292 + 4 >> 2] = HEAP32[i2 + 136 + 4 >> 2];
    HEAP32[i7 + 292 + 8 >> 2] = HEAP32[i2 + 136 + 8 >> 2];
    HEAP32[i7 + 292 + 12 >> 2] = HEAP32[i2 + 136 + 12 >> 2];
    i1 = HEAP32[i6 + 68 >> 2] | 0;
   }
   i2 = __Z13GetSpriteListP15client_sprite_sPKcii(i4, gb + 39731 | 0, i5, i1) | 0;
   if (!i2) {
    HEAP32[i7 + 308 >> 2] = i3;
    HEAP32[i7 + 312 >> 2] = HEAP32[i7 + 292 >> 2];
    HEAP32[i7 + 312 + 4 >> 2] = HEAP32[i7 + 292 + 4 >> 2];
    HEAP32[i7 + 312 + 8 >> 2] = HEAP32[i7 + 292 + 8 >> 2];
    HEAP32[i7 + 312 + 12 >> 2] = HEAP32[i7 + 292 + 12 >> 2];
   } else {
    HEAP32[i6 + 32 >> 2] = i2 + 64;
    _sprintf(i6 + 72 | 0, gb + 40918 | 0, i6 + 32 | 0) | 0;
    HEAP32[i7 + 308 >> 2] = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, i6 + 72 | 0) | 0;
    HEAP32[i7 + 312 >> 2] = HEAP32[i2 + 136 >> 2];
    HEAP32[i7 + 312 + 4 >> 2] = HEAP32[i2 + 136 + 4 >> 2];
    HEAP32[i7 + 312 + 8 >> 2] = HEAP32[i2 + 136 + 8 >> 2];
    HEAP32[i7 + 312 + 12 >> 2] = HEAP32[i2 + 136 + 12 >> 2];
    i1 = HEAP32[i6 + 68 >> 2] | 0;
   }
   i2 = __Z13GetSpriteListP15client_sprite_sPKcii(i4, gb + 39744 | 0, i5, i1) | 0;
   if (!i2) HEAP32[i7 + 188 >> 2] = 0; else {
    HEAP32[i6 + 40 >> 2] = i2 + 64;
    _sprintf(i6 + 72 | 0, gb + 40918 | 0, i6 + 40 | 0) | 0;
    HEAP32[i7 + 188 >> 2] = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, i6 + 72 | 0) | 0;
    HEAP32[i7 + 192 >> 2] = HEAP32[i2 + 136 >> 2];
    HEAP32[i7 + 192 + 4 >> 2] = HEAP32[i2 + 136 + 4 >> 2];
    HEAP32[i7 + 192 + 8 >> 2] = HEAP32[i2 + 136 + 8 >> 2];
    HEAP32[i7 + 192 + 12 >> 2] = HEAP32[i2 + 136 + 12 >> 2];
    i3 = HEAP32[gb + 92140 + 192 >> 2] | 0;
    i1 = (HEAP32[i7 + 184 >> 2] | 0) - (HEAP32[i7 + 180 >> 2] | 0) | 0;
    HEAP32[gb + 92140 + 192 >> 2] = (i3 | 0) > (i1 | 0) ? i3 : i1;
    i1 = HEAP32[i6 + 68 >> 2] | 0;
   }
   i2 = __Z13GetSpriteListP15client_sprite_sPKcii(i4, gb + 39751 | 0, i5, i1) | 0;
   if (!i2) HEAP32[i7 + 168 >> 2] = 0; else {
    HEAP32[i6 + 48 >> 2] = i2 + 64;
    _sprintf(i6 + 72 | 0, gb + 40918 | 0, i6 + 48 | 0) | 0;
    HEAP32[i7 + 168 >> 2] = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, i6 + 72 | 0) | 0;
    HEAP32[i7 + 172 >> 2] = HEAP32[i2 + 136 >> 2];
    HEAP32[i7 + 172 + 4 >> 2] = HEAP32[i2 + 136 + 4 >> 2];
    HEAP32[i7 + 172 + 8 >> 2] = HEAP32[i2 + 136 + 8 >> 2];
    HEAP32[i7 + 172 + 12 >> 2] = HEAP32[i2 + 136 + 12 >> 2];
    i1 = HEAP32[i6 + 68 >> 2] | 0;
   }
   i2 = __Z13GetSpriteListP15client_sprite_sPKcii(i4, gb + 39760 | 0, i5, i1) | 0;
   if (!i2) HEAP32[i7 + 208 >> 2] = 0; else {
    HEAP32[i6 + 56 >> 2] = i2 + 64;
    _sprintf(i6 + 72 | 0, gb + 40918 | 0, i6 + 56 | 0) | 0;
    HEAP32[i7 + 208 >> 2] = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, i6 + 72 | 0) | 0;
    HEAP32[i7 + 212 >> 2] = HEAP32[i2 + 136 >> 2];
    HEAP32[i7 + 212 + 4 >> 2] = HEAP32[i2 + 136 + 4 >> 2];
    HEAP32[i7 + 212 + 8 >> 2] = HEAP32[i2 + 136 + 8 >> 2];
    HEAP32[i7 + 212 + 12 >> 2] = HEAP32[i2 + 136 + 12 >> 2];
    i3 = HEAP32[gb + 92140 + 192 >> 2] | 0;
    i1 = (HEAP32[i7 + 184 >> 2] | 0) - (HEAP32[i7 + 180 >> 2] | 0) | 0;
    HEAP32[gb + 92140 + 192 >> 2] = (i3 | 0) > (i1 | 0) ? i3 : i1;
    i1 = HEAP32[i6 + 68 >> 2] | 0;
   }
   i1 = __Z13GetSpriteListP15client_sprite_sPKcii(i4, gb + 39765 | 0, i5, i1) | 0;
   if (!i1) {
    HEAP32[i7 + 228 >> 2] = 0;
    break;
   } else {
    HEAP32[i6 + 64 >> 2] = i1 + 64;
    _sprintf(i6 + 72 | 0, gb + 40918 | 0, i6 + 64 | 0) | 0;
    HEAP32[i7 + 228 >> 2] = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, i6 + 72 | 0) | 0;
    HEAP32[i7 + 232 >> 2] = HEAP32[i1 + 136 >> 2];
    HEAP32[i7 + 232 + 4 >> 2] = HEAP32[i1 + 136 + 4 >> 2];
    HEAP32[i7 + 232 + 8 >> 2] = HEAP32[i1 + 136 + 8 >> 2];
    HEAP32[i7 + 232 + 12 >> 2] = HEAP32[i1 + 136 + 12 >> 2];
    i5 = HEAP32[gb + 92140 + 192 >> 2] | 0;
    i7 = (HEAP32[i7 + 184 >> 2] | 0) - (HEAP32[i7 + 180 >> 2] | 0) | 0;
    HEAP32[gb + 92140 + 192 >> 2] = (i5 | 0) > (i7 | 0) ? i5 : i7;
    break;
   }
  }
 } while (0);
 STACKTOP = i6;
 return;
}

function __ZN13CHudSpectator17ParseOverviewFileEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, d4 = 0.0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 1600 | 0;
 _memset(i3 + 1335 | 0, 0, 255) | 0;
 _memset(i3 + 1080 | 0, 0, 255) | 0;
 _memset(i3 + 56 | 0, 0, 1024) | 0;
 _memset(i2 + 1404 | 0, 0, 356) | 0;
 HEAP32[i2 + 1752 >> 2] = 4;
 HEAP32[i2 + 1756 >> 2] = 4;
 HEAP32[i2 + 1760 >> 2] = 180;
 HEAP32[i2 + 1764 >> 2] = 240;
 HEAPF32[i2 + 1468 >> 2] = 0.0;
 HEAPF32[i2 + 1468 + 4 >> 2] = 0.0;
 HEAPF32[i2 + 1468 + 8 >> 2] = 0.0;
 HEAPF32[i2 + 1480 >> 2] = 1.0;
 HEAP32[i2 + 1484 >> 2] = 0;
 HEAPF32[i2 + 1488 >> 2] = 0.0;
 _strcpy(i2 + 1404 | 0, mftCall_i(HEAP32[gb + 92340 + 296 >> 2] | 0) | 0) | 0;
 L1 : do if (!(_strlen(i2 + 1404 | 0) | 0)) i1 = 0; else {
  _strcpy(i3 + 1080 | 0, i2 + 1409 | 0) | 0;
  HEAP8[i3 + 1080 + ((_strlen(i3 + 1080 | 0) | 0) + -4) >> 0] = 0;
  HEAP32[i3 >> 2] = i3 + 1080;
  _sprintf(i3 + 1335 | 0, gb + 41347 | 0, i3 | 0) | 0;
  i1 = mftCall_iiii(HEAP32[gb + 92340 + 316 >> 2] | 0, i3 + 1335 | 0, 5, 0) | 0;
  if (!i1) {
   i1 = HEAP32[gb + 92340 + 164 >> 2] | 0;
   HEAP32[i3 + 8 >> 2] = i3 + 1335;
   mftCall_vii(i1 | 0, gb + 41364 | 0, i3 + 8 | 0);
   i1 = 0;
   break;
  }
  i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i3 + 56 | 0) | 0;
  L6 : do if (i1 | 0) {
   L8 : while (1) {
    if (!(_strcasecmp(i3 + 56 | 0, gb + 41427 | 0) | 0)) {
     i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i3 + 56 | 0) | 0;
     if (_strcasecmp(i3 + 56 | 0, gb + 41434 | 0) | 0) {
      i1 = 8;
      break;
     }
     i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i3 + 56 | 0) | 0;
     if (_strcasecmp(i3 + 56 | 0, gb + 41483 | 0) | 0) do {
      do if (!(_strcasecmp(i3 + 56 | 0, gb + 41485 | 0) | 0)) {
       i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i3 + 56 | 0) | 0;
       HEAPF32[i2 + 1480 >> 2] = +_atof(i3 + 56 | 0);
      } else {
       if (!(_strcasecmp(i3 + 56 | 0, gb + 41340 | 0) | 0)) {
        i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i3 + 56 | 0) | 0;
        HEAPF32[i2 + 1468 >> 2] = +_atof(i3 + 56 | 0);
        i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i3 + 56 | 0) | 0;
        HEAPF32[i2 + 1468 + 4 >> 2] = +_atof(i3 + 56 | 0);
        i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i3 + 56 | 0) | 0;
        HEAPF32[i2 + 1468 + 8 >> 2] = +_atof(i3 + 56 | 0);
        break;
       }
       if (!(_strcasecmp(i3 + 56 | 0, gb + 41490 | 0) | 0)) {
        i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i3 + 56 | 0) | 0;
        HEAP32[i2 + 1748 >> 2] = _atoi(i3 + 56 | 0) | 0;
        break;
       }
       if (_strcasecmp(i3 + 56 | 0, gb + 41498 | 0) | 0) {
        i1 = 18;
        break L8;
       }
       i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i3 + 56 | 0) | 0;
       HEAP32[i2 + 1752 >> 2] = ~~+_atof(i3 + 56 | 0);
       i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i3 + 56 | 0) | 0;
       HEAP32[i2 + 1756 >> 2] = ~~+_atof(i3 + 56 | 0);
       i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i3 + 56 | 0) | 0;
       HEAP32[i2 + 1764 >> 2] = ~~+_atof(i3 + 56 | 0);
       i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i3 + 56 | 0) | 0;
       HEAP32[i2 + 1760 >> 2] = ~~+_atof(i3 + 56 | 0);
      } while (0);
      i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i3 + 56 | 0) | 0;
     } while ((_strcasecmp(i3 + 56 | 0, gb + 41483 | 0) | 0) != 0);
    } else if (!(_strcasecmp(i3 + 56 | 0, gb + 41549 | 0) | 0)) {
     if ((HEAP32[i2 + 1484 >> 2] | 0) == 1) {
      i1 = 22;
      break;
     }
     i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i3 + 56 | 0) | 0;
     if (_strcasecmp(i3 + 56 | 0, gb + 41434 | 0) | 0) {
      i1 = 24;
      break;
     }
     i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i3 + 56 | 0) | 0;
     if (_strcasecmp(i3 + 56 | 0, gb + 41483 | 0) | 0) do {
      if (!(_strcasecmp(i3 + 56 | 0, gb + 41608 | 0) | 0)) {
       i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i3 + 56 | 0) | 0;
       _strcpy(i2 + 1492 + ((HEAP32[i2 + 1484 >> 2] | 0) * 255 | 0) | 0, i3 + 56 | 0) | 0;
      } else {
       if (_strcasecmp(i3 + 56 | 0, gb + 41614 | 0) | 0) {
        i1 = 30;
        break L8;
       }
       i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i3 + 56 | 0) | 0;
       d4 = +_atof(i3 + 56 | 0);
       HEAPF32[i2 + 1488 + (HEAP32[i2 + 1484 >> 2] << 2) >> 2] = d4;
      }
      i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i3 + 56 | 0) | 0;
     } while ((_strcasecmp(i3 + 56 | 0, gb + 41483 | 0) | 0) != 0);
     HEAP32[i2 + 1484 >> 2] = (HEAP32[i2 + 1484 >> 2] | 0) + 1;
    }
    i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i3 + 56 | 0) | 0;
    if (!i1) break L6;
   }
   if ((i1 | 0) == 8) {
    i1 = HEAP32[gb + 92340 + 160 >> 2] | 0;
    HEAP32[i3 + 16 >> 2] = i3 + 1335;
    mftCall_vii(i1 | 0, gb + 41436 | 0, i3 + 16 | 0);
    i1 = 0;
    break L1;
   } else if ((i1 | 0) == 18) {
    i1 = HEAP32[gb + 92340 + 160 >> 2] | 0;
    HEAP32[i3 + 24 >> 2] = i3 + 1335;
    HEAP32[i3 + 24 + 4 >> 2] = i3 + 56;
    mftCall_vii(i1 | 0, gb + 41504 | 0, i3 + 24 | 0);
    i1 = 0;
    break L1;
   } else if ((i1 | 0) == 22) {
    i1 = HEAP32[gb + 92340 + 160 >> 2] | 0;
    HEAP32[i3 + 32 >> 2] = i3 + 1335;
    mftCall_vii(i1 | 0, gb + 41555 | 0, i3 + 32 | 0);
    i1 = 0;
    break L1;
   } else if ((i1 | 0) == 24) {
    i1 = HEAP32[gb + 92340 + 160 >> 2] | 0;
    HEAP32[i3 + 40 >> 2] = i3 + 1335;
    mftCall_vii(i1 | 0, gb + 41436 | 0, i3 + 40 | 0);
    i1 = 0;
    break L1;
   } else if ((i1 | 0) == 30) {
    i1 = HEAP32[gb + 92340 + 160 >> 2] | 0;
    HEAP32[i3 + 48 >> 2] = i3 + 1335;
    HEAP32[i3 + 48 + 4 >> 2] = i3 + 56;
    mftCall_vii(i1 | 0, gb + 41504 | 0, i3 + 48 | 0);
    i1 = 0;
    break L1;
   }
  } while (0);
  mftCall_vi(HEAP32[gb + 92340 + 324 >> 2] | 0, 0);
  HEAP32[i2 + 3824 >> 2] = HEAP32[i2 + 1480 >> 2];
  HEAP32[i2 + 3828 >> 2] = HEAP32[i2 + 1468 >> 2];
  HEAP32[i2 + 3828 + 4 >> 2] = HEAP32[i2 + 1468 + 4 >> 2];
  HEAP32[i2 + 3828 + 8 >> 2] = HEAP32[i2 + 1468 + 8 >> 2];
  i1 = 1;
 } while (0);
 STACKTOP = i3;
 return i1 | 0;
}

function __ZN20CStudioModelRenderer16StudioDrawPlayerEiP14entity_state_s(i7, i4, i6) {
 i7 = i7 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 3040 | 0;
 HEAP32[i7 + 48 >> 2] = mftCall_i(HEAP32[gb + 94440 + 24 >> 2] | 0) | 0;
 mftCall_viii(HEAP32[gb + 94440 + 40 >> 2] | 0, i7 + 32 | 0, i7 + 8 | 0, i7 + 16 | 0);
 mftCall_viiii(HEAP32[gb + 94440 + 48 >> 2] | 0, i7 + 16524 | 0, i7 + 16488 | 0, i7 + 16500 | 0, i7 + 16512 | 0);
 mftCall_vii(HEAP32[gb + 94440 + 60 >> 2] | 0, i7 + 16480 | 0, i7 + 16484 | 0);
 i1 = HEAP32[i6 + 4 >> 2] | 0;
 HEAP32[i7 + 60 >> 2] = i1 + -1;
 do if ((i1 | 0) < 1) i1 = 0; else if ((i1 | 0) > (mftCall_i(HEAP32[gb + 92340 + 144 >> 2] | 0) | 0)) i1 = 0; else {
  i1 = mftCall_ii(HEAP32[gb + 94440 + 124 >> 2] | 0, HEAP32[i7 + 60 >> 2] | 0) | 0;
  HEAP32[i7 + 52 >> 2] = i1;
  if (!i1) i1 = 0; else {
   i3 = mftCall_ii(HEAP32[gb + 94440 + 16 >> 2] | 0, i1 | 0) | 0;
   HEAP32[i7 + 68 >> 2] = i3;
   mftCall_vi(HEAP32[gb + 94440 + 140 >> 2] | 0, i3 | 0);
   mftCall_vi(HEAP32[gb + 94440 + 144 >> 2] | 0, HEAP32[i7 + 52 >> 2] | 0);
   if (!(HEAP32[i6 + 184 >> 2] | 0)) {
    HEAP8[(HEAP32[i7 + 48 >> 2] | 0) + 792 >> 0] = 127;
    HEAP8[(HEAP32[i7 + 48 >> 2] | 0) + 793 >> 0] = 127;
    HEAP8[(HEAP32[i7 + 48 >> 2] | 0) + 794 >> 0] = 127;
    HEAP8[(HEAP32[i7 + 48 >> 2] | 0) + 795 >> 0] = 127;
    i3 = HEAP32[i7 + 48 >> 2] | 0;
    HEAP8[i3 + 2876 >> 0] = HEAP8[i3 + 792 >> 0] | 0;
    i3 = HEAP32[i7 + 48 >> 2] | 0;
    HEAP8[i3 + 2877 >> 0] = HEAP8[i3 + 793 >> 0] | 0;
    i3 = HEAP32[i7 + 48 >> 2] | 0;
    HEAP8[i3 + 2878 >> 0] = HEAP8[i3 + 794 >> 0] | 0;
    i3 = HEAP32[i7 + 48 >> 2] | 0;
    HEAP8[i3 + 2879 >> 0] = HEAP8[i3 + 795 >> 0] | 0;
    i3 = mftCall_ii(HEAP32[gb + 94440 + 28 >> 2] | 0, HEAP32[i7 + 60 >> 2] | 0) | 0;
    HEAP32[i7 + 56 >> 2] = i3;
    HEAP32[i3 + 380 >> 2] = 0;
    mftCall_vii(HEAP32[(HEAP32[i7 >> 2] | 0) + 24 >> 2] | 0, i7 | 0, 0);
   } else {
    HEAP32[i7 + 56 >> 2] = mftCall_ii(HEAP32[gb + 94440 + 28 >> 2] | 0, HEAP32[i7 + 60 >> 2] | 0) | 0;
    i2 = (HEAP32[i7 + 48 >> 2] | 0) + 2900 | 0;
    i9 = HEAP32[i2 >> 2] | 0;
    i1 = HEAP32[i2 + 4 >> 2] | 0;
    i2 = HEAP32[i2 + 8 >> 2] | 0;
    mftCall_vii(HEAP32[(HEAP32[i7 >> 2] | 0) + 100 >> 2] | 0, i7 | 0, i6 | 0);
    HEAP32[(HEAP32[i7 + 56 >> 2] | 0) + 380 >> 2] = HEAP32[i6 + 184 >> 2];
    HEAP32[i7 + 56 >> 2] = 0;
    mftCall_vii(HEAP32[(HEAP32[i7 >> 2] | 0) + 24 >> 2] | 0, i7 | 0, 0);
    i3 = (HEAP32[i7 + 48 >> 2] | 0) + 2900 | 0;
    HEAP32[i3 >> 2] = i9;
    HEAP32[i3 + 4 >> 2] = i1;
    HEAP32[i3 + 8 >> 2] = i2;
   }
   if (i4 & 1 | 0) {
    if (!(mftCall_i(HEAP32[gb + 94440 + 84 >> 2] | 0) | 0)) {
     i1 = 0;
     break;
    }
    i9 = HEAP32[i7 + 16540 >> 2] | 0;
    HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 1;
    i9 = HEAP32[i7 + 16536 >> 2] | 0;
    HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 1;
    if (!(HEAP32[(HEAP32[i7 + 68 >> 2] | 0) + 204 >> 2] | 0)) {
     i1 = 1;
     break;
    }
   }
   HEAP32[i7 + 56 >> 2] = mftCall_ii(HEAP32[gb + 94440 + 28 >> 2] | 0, HEAP32[i7 + 60 >> 2] | 0) | 0;
   mftCall_vi(HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] | 0, i7 | 0);
   mftCall_vi(HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] | 0, i7 | 0);
   HEAP32[(HEAP32[i7 + 56 >> 2] | 0) + 376 >> 2] = HEAP32[i7 + 32 >> 2];
   HEAP32[i7 + 56 >> 2] = 0;
   if (i4 & 2 | 0) {
    mftCall_vi(HEAP32[(HEAP32[i7 >> 2] | 0) + 32 >> 2] | 0, i7 | 0);
    mftCall_v(HEAP32[gb + 94440 + 128 >> 2] | 0);
    i1 = HEAP32[HEAP32[i7 + 48 >> 2] >> 2] | 0;
    if ((i1 | 0) > 0) {
     i1 = (mftCall_ii(HEAP32[gb + 92340 + 212 >> 2] | 0, i1 | 0) | 0) + 2912 | 0;
     i2 = (HEAP32[i7 + 48 >> 2] | 0) + 2912 | 0;
     i3 = i1 + 48 | 0;
     do {
      HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
      i1 = i1 + 4 | 0;
      i2 = i2 + 4 | 0;
     } while ((i1 | 0) < (i3 | 0));
    }
   }
   if (i4 & 1 | 0) {
    if (+HEAPF32[(HEAP32[i7 + 36 >> 2] | 0) + 12 >> 2] != 0.0) {
     i1 = HEAP32[i7 + 48 >> 2] | 0;
     if ((HEAP32[i7 + 52 >> 2] | 0) != (HEAP32[i1 + 2964 >> 2] | 0)) HEAP32[i1 + 788 >> 2] = 255;
    }
    if (+HEAPF32[(HEAP32[i7 + 40 >> 2] | 0) + 12 >> 2] == 0.0) if ((mftCall_i(HEAP32[gb + 92340 + 144 >> 2] | 0) | 0) == 1) i1 = HEAP32[i7 + 48 >> 2] | 0; else i5 = 20; else i5 = 20;
    if ((i5 | 0) == 20) {
     i1 = HEAP32[i7 + 48 >> 2] | 0;
     if ((HEAP32[i7 + 52 >> 2] | 0) == (HEAP32[i1 + 2964 >> 2] | 0)) HEAP32[i1 + 788 >> 2] = 1;
    }
    HEAP32[i8 + 3016 + 20 >> 2] = i8 + 3e3;
    mftCall_vii(HEAP32[gb + 94440 + 88 >> 2] | 0, i1 | 0, i8 + 3016 | 0);
    mftCall_vi(HEAP32[gb + 94440 + 92 >> 2] | 0, i8 + 3016 | 0);
    mftCall_vi(HEAP32[gb + 94440 + 96 >> 2] | 0, i8 + 3016 | 0);
    i2 = mftCall_ii(HEAP32[gb + 94440 + 28 >> 2] | 0, HEAP32[i7 + 60 >> 2] | 0) | 0;
    HEAP32[i7 + 56 >> 2] = i2;
    i1 = HEAP32[i2 + 368 >> 2] | 0;
    HEAP32[i7 + 80 >> 2] = i1;
    i2 = HEAP32[i2 + 372 >> 2] | 0;
    HEAP32[i7 + 84 >> 2] = i2;
    if ((i1 | 0) < 0) {
     HEAP32[i7 + 80 >> 2] = 0;
     i1 = 0;
    } else if ((i1 | 0) > 360) {
     HEAP32[i7 + 80 >> 2] = 360;
     i1 = 360;
    }
    if ((i2 | 0) < 0) {
     HEAP32[i7 + 84 >> 2] = 0;
     i2 = 0;
    } else if ((i2 | 0) > 360) {
     HEAP32[i7 + 84 >> 2] = 360;
     i2 = 360;
    }
    mftCall_vii(HEAP32[gb + 94440 + 120 >> 2] | 0, i1 | 0, i2 | 0);
    mftCall_vi(HEAP32[(HEAP32[i7 >> 2] | 0) + 76 >> 2] | 0, i7 | 0);
    HEAP32[i7 + 56 >> 2] = 0;
    if (!(HEAP32[i6 + 180 >> 2] | 0)) i1 = 1; else {
     __ZN11cl_entity_sC2ERKS_(i8, HEAP32[i7 + 48 >> 2] | 0);
     i1 = mftCall_ii(HEAP32[gb + 94440 + 20 >> 2] | 0, HEAP32[i6 + 180 >> 2] | 0) | 0;
     i9 = mftCall_ii(HEAP32[gb + 94440 + 16 >> 2] | 0, i1 | 0) | 0;
     HEAP32[i7 + 68 >> 2] = i9;
     mftCall_vi(HEAP32[gb + 94440 + 140 >> 2] | 0, i9 | 0);
     mftCall_vii(HEAP32[(HEAP32[i7 >> 2] | 0) + 40 >> 2] | 0, i7 | 0, i1 | 0);
     mftCall_vi(HEAP32[gb + 94440 + 96 >> 2] | 0, i8 + 3016 | 0);
     mftCall_vi(HEAP32[(HEAP32[i7 >> 2] | 0) + 76 >> 2] | 0, i7 | 0);
     mftCall_vi(HEAP32[(HEAP32[i7 >> 2] | 0) + 32 >> 2] | 0, i7 | 0);
     _memcpy(HEAP32[i7 + 48 >> 2] | 0, i8 | 0, 3e3) | 0;
     i1 = 1;
    }
   } else i1 = 1;
  }
 } while (0);
 STACKTOP = i8;
 return i1 | 0;
}

function __Z9InitInputv() {
 var i1 = 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42637 | 0, fb + 43 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42645 | 0, fb + 44 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42653 | 0, fb + 45 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42663 | 0, fb + 46 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42673 | 0, fb + 47 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42679 | 0, fb + 48 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42685 | 0, fb + 49 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42692 | 0, fb + 50 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42699 | 0, fb + 51 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42708 | 0, fb + 52 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42717 | 0, fb + 53 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42723 | 0, fb + 54 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42729 | 0, fb + 55 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42737 | 0, fb + 56 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42745 | 0, fb + 57 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42755 | 0, fb + 58 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42765 | 0, fb + 59 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42773 | 0, fb + 60 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42781 | 0, fb + 61 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42791 | 0, fb + 62 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42801 | 0, fb + 63 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42812 | 0, fb + 64 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42823 | 0, fb + 65 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42830 | 0, fb + 66 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42837 | 0, fb + 67 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42845 | 0, fb + 68 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42853 | 0, fb + 69 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42862 | 0, fb + 70 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42871 | 0, fb + 71 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42876 | 0, fb + 72 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42881 | 0, fb + 73 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42887 | 0, fb + 74 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42893 | 0, fb + 75 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42901 | 0, fb + 76 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42908 | 0, fb + 77 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42915 | 0, fb + 78 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42922 | 0, fb + 79 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42929 | 0, fb + 80 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42936 | 0, fb + 81 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42943 | 0, fb + 82 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42949 | 0, fb + 83 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42955 | 0, fb + 84 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42963 | 0, fb + 85 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42971 | 0, fb + 86 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42977 | 0, fb + 87 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42983 | 0, fb + 88 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42990 | 0, fb + 89 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42997 | 0, fb + 90 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 43004 | 0, fb + 91 | 0) | 0;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43011 | 0, gb + 44858 | 0, 1) | 0;
 HEAP32[gb + 93956 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43022 | 0, gb + 44858 | 0, 1) | 0;
 HEAP32[gb + 93960 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43033 | 0, gb + 43050 | 0, 0) | 0;
 HEAP32[gb + 94e3 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43055 | 0, gb + 43067 | 0, 0) | 0;
 HEAP32[gb + 93992 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43071 | 0, gb + 43085 | 0, 0) | 0;
 HEAP32[gb + 93996 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43089 | 0, gb + 43100 | 0, 0) | 0;
 HEAP32[gb + 93972 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43104 | 0, gb + 43120 | 0, 1) | 0;
 HEAP32[gb + 93976 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43124 | 0, gb + 43120 | 0, 1) | 0;
 HEAP32[gb + 93980 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43137 | 0, gb + 43120 | 0, 0) | 0;
 HEAP32[gb + 93984 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43150 | 0, gb + 43892 | 0, 0) | 0;
 HEAP32[gb + 93988 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43166 | 0, gb + 43177 | 0, 0) | 0;
 HEAP32[gb + 93964 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43180 | 0, gb + 43177 | 0, 0) | 0;
 HEAP32[gb + 93968 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43929 | 0, gb + 43193 | 0, 1) | 0;
 HEAP32[gb + 94004 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43198 | 0, gb + 43206 | 0, 1) | 0;
 HEAP32[gb + 93940 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43212 | 0, gb + 43206 | 0, 1) | 0;
 HEAP32[gb + 93944 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43218 | 0, gb + 43877 | 0, 1) | 0;
 HEAP32[gb + 93948 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43228 | 0, gb + 44632 | 0, 1) | 0;
 HEAP32[gb + 93952 >> 2] = i1;
 __Z8CAM_Initv();
 __Z7IN_Initv();
 __Z7KB_Initv();
 __Z6V_Initv();
 return;
}

function runPostSets32() {
 var i1 = 0;
 HEAP32[gb + 35820 >> 2] = fb + 196;
 HEAP32[gb + 35824 >> 2] = fb + 145;
 HEAP32[gb + 35828 >> 2] = fb + 146;
 HEAP32[gb + 35832 >> 2] = fb + 15;
 HEAP32[gb + 35836 >> 2] = fb + 161;
 HEAP32[gb + 35840 >> 2] = fb + 197;
 HEAP32[gb + 35844 >> 2] = fb + 159;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 17344 >> 2] = (HEAP32[gb + 17344 >> 2] | 0) + i1;
 HEAP32[gb + 17348 >> 2] = (HEAP32[gb + 17348 >> 2] | 0) + (gb + 43556 | 0);
 HEAP32[gb + 17352 >> 2] = (HEAP32[gb + 17352 >> 2] | 0) + (gb + 568 | 0);
 HEAP32[gb + 35848 >> 2] = (HEAP32[gb + 35848 >> 2] | 0) + (gb + 43572 | 0);
 HEAP32[gb + 35852 >> 2] = (HEAP32[gb + 35852 >> 2] | 0) + (gb + 43578 | 0);
 HEAP32[gb + 35856 >> 2] = (HEAP32[gb + 35856 >> 2] | 0) + (gb + 43591 | 0);
 HEAP32[gb + 35860 >> 2] = (HEAP32[gb + 35860 >> 2] | 0) + (gb + 43603 | 0);
 HEAP32[gb + 35864 >> 2] = (HEAP32[gb + 35864 >> 2] | 0) + (gb + 43616 | 0);
 HEAP32[gb + 35868 >> 2] = (HEAP32[gb + 35868 >> 2] | 0) + (gb + 43629 | 0);
 HEAP32[gb + 35872 >> 2] = (HEAP32[gb + 35872 >> 2] | 0) + (gb + 43641 | 0);
 HEAP32[gb + 35876 >> 2] = (HEAP32[gb + 35876 >> 2] | 0) + (gb + 43654 | 0);
 HEAP32[gb + 35884 >> 2] = (HEAP32[gb + 35884 >> 2] | 0) + (gb + 17360 | 0);
 HEAP32[gb + 35888 >> 2] = fb + 169;
 HEAP32[gb + 35892 >> 2] = fb + 198;
 HEAP32[gb + 35896 >> 2] = fb + 171;
 HEAP32[gb + 35900 >> 2] = fb + 81;
 HEAP32[gb + 35904 >> 2] = fb + 2;
 HEAP32[gb + 35908 >> 2] = fb + 3;
 HEAP32[gb + 35912 >> 2] = fb + 37;
 HEAP32[gb + 35916 >> 2] = fb + 172;
 HEAP32[gb + 35920 >> 2] = fb + 173;
 HEAP32[gb + 35924 >> 2] = fb + 174;
 HEAP32[gb + 35928 >> 2] = fb + 38;
 HEAP32[gb + 35932 >> 2] = fb + 5;
 HEAP32[gb + 35936 >> 2] = fb + 2;
 HEAP32[gb + 35940 >> 2] = fb + 12;
 HEAP32[gb + 35944 >> 2] = fb + 1;
 HEAP32[gb + 35948 >> 2] = fb + 1;
 HEAP32[gb + 35952 >> 2] = fb + 1;
 HEAP32[gb + 35956 >> 2] = fb + 2;
 HEAP32[gb + 35960 >> 2] = fb + 2;
 HEAP32[gb + 35964 >> 2] = fb + 175;
 HEAP32[gb + 35968 >> 2] = fb + 176;
 HEAP32[gb + 35972 >> 2] = fb + 177;
 HEAP32[gb + 35976 >> 2] = fb + 178;
 HEAP32[gb + 35980 >> 2] = fb + 2;
 HEAP32[gb + 35984 >> 2] = fb + 39;
 HEAP32[gb + 35988 >> 2] = fb + 40;
 i1 = g$__ZTVN10__cxxabiv117__class_type_infoE() | 0;
 HEAP32[gb + 17360 >> 2] = (HEAP32[gb + 17360 >> 2] | 0) + i1;
 HEAP32[gb + 17364 >> 2] = (HEAP32[gb + 17364 >> 2] | 0) + (gb + 43744 | 0);
 HEAP32[gb + 35996 >> 2] = (HEAP32[gb + 35996 >> 2] | 0) + (gb + 17368 | 0);
 HEAP32[gb + 36e3 >> 2] = fb + 155;
 HEAP32[gb + 36004 >> 2] = fb + 199;
 HEAP32[gb + 36008 >> 2] = fb + 147;
 HEAP32[gb + 36012 >> 2] = fb + 148;
 HEAP32[gb + 36016 >> 2] = fb + 16;
 HEAP32[gb + 36020 >> 2] = fb + 161;
 HEAP32[gb + 36024 >> 2] = fb + 164;
 HEAP32[gb + 36028 >> 2] = fb + 159;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 17368 >> 2] = (HEAP32[gb + 17368 >> 2] | 0) + i1;
 HEAP32[gb + 17372 >> 2] = (HEAP32[gb + 17372 >> 2] | 0) + (gb + 43775 | 0);
 HEAP32[gb + 17376 >> 2] = (HEAP32[gb + 17376 >> 2] | 0) + (gb + 568 | 0);
 HEAP32[gb + 36036 >> 2] = (HEAP32[gb + 36036 >> 2] | 0) + (gb + 17384 | 0);
 HEAP32[gb + 36040 >> 2] = fb + 155;
 HEAP32[gb + 36044 >> 2] = fb + 200;
 HEAP32[gb + 36048 >> 2] = fb + 149;
 HEAP32[gb + 36052 >> 2] = fb + 150;
 HEAP32[gb + 36056 >> 2] = fb + 17;
 HEAP32[gb + 36060 >> 2] = fb + 161;
 HEAP32[gb + 36064 >> 2] = fb + 164;
 HEAP32[gb + 36068 >> 2] = fb + 159;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 17384 >> 2] = (HEAP32[gb + 17384 >> 2] | 0) + i1;
 HEAP32[gb + 17388 >> 2] = (HEAP32[gb + 17388 >> 2] | 0) + (gb + 43820 | 0);
 HEAP32[gb + 17392 >> 2] = (HEAP32[gb + 17392 >> 2] | 0) + (gb + 568 | 0);
 HEAP32[gb + 36088 >> 2] = (HEAP32[gb + 36088 >> 2] | 0) + (gb + 43831 | 0);
 HEAP32[gb + 36092 >> 2] = (HEAP32[gb + 36092 >> 2] | 0) + (gb + 44726 | 0);
 HEAP32[gb + 36108 >> 2] = (HEAP32[gb + 36108 >> 2] | 0) + (gb + 43844 | 0);
 HEAP32[gb + 36112 >> 2] = (HEAP32[gb + 36112 >> 2] | 0) + (gb + 43858 | 0);
 HEAP32[gb + 36128 >> 2] = (HEAP32[gb + 36128 >> 2] | 0) + (gb + 43862 | 0);
 HEAP32[gb + 36132 >> 2] = (HEAP32[gb + 36132 >> 2] | 0) + (gb + 43877 | 0);
 HEAP32[gb + 36148 >> 2] = (HEAP32[gb + 36148 >> 2] | 0) + (gb + 43879 | 0);
 HEAP32[gb + 36152 >> 2] = (HEAP32[gb + 36152 >> 2] | 0) + (gb + 43892 | 0);
 HEAP32[gb + 36168 >> 2] = (HEAP32[gb + 36168 >> 2] | 0) + (gb + 43896 | 0);
 HEAP32[gb + 36172 >> 2] = (HEAP32[gb + 36172 >> 2] | 0) + (gb + 43910 | 0);
 HEAP32[gb + 36188 >> 2] = (HEAP32[gb + 36188 >> 2] | 0) + (gb + 43914 | 0);
 HEAP32[gb + 36192 >> 2] = (HEAP32[gb + 36192 >> 2] | 0) + (gb + 43892 | 0);
 HEAP32[gb + 36208 >> 2] = (HEAP32[gb + 36208 >> 2] | 0) + (gb + 43943 | 0);
 HEAP32[gb + 36212 >> 2] = (HEAP32[gb + 36212 >> 2] | 0) + (gb + 43965 | 0);
 HEAP32[gb + 36216 >> 2] = (HEAP32[gb + 36216 >> 2] | 0) + (gb + 43987 | 0);
 HEAP32[gb + 36220 >> 2] = (HEAP32[gb + 36220 >> 2] | 0) + (gb + 44008 | 0);
 HEAP32[gb + 36224 >> 2] = (HEAP32[gb + 36224 >> 2] | 0) + (gb + 44029 | 0);
 HEAP32[gb + 36228 >> 2] = (HEAP32[gb + 36228 >> 2] | 0) + (gb + 44047 | 0);
 HEAP32[gb + 36232 >> 2] = (HEAP32[gb + 36232 >> 2] | 0) + (gb + 44065 | 0);
 HEAP32[gb + 36236 >> 2] = (HEAP32[gb + 36236 >> 2] | 0) + (gb + 44084 | 0);
 HEAP32[gb + 36240 >> 2] = (HEAP32[gb + 36240 >> 2] | 0) + (gb + 44103 | 0);
 HEAP32[gb + 36244 >> 2] = (HEAP32[gb + 36244 >> 2] | 0) + (gb + 44127 | 0);
 HEAP32[gb + 36248 >> 2] = (HEAP32[gb + 36248 >> 2] | 0) + (gb + 44151 | 0);
 HEAP32[gb + 36252 >> 2] = (HEAP32[gb + 36252 >> 2] | 0) + (gb + 44172 | 0);
 HEAP32[gb + 36256 >> 2] = (HEAP32[gb + 36256 >> 2] | 0) + (gb + 44193 | 0);
 runPostSets33();
}

function _PM_PlayerMove(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 4 >> 2] = i1;
 _PM_CheckParamters();
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 HEAP32[i1 + 283788 >> 2] = 0;
 HEAPF32[i1 + 16 >> 2] = +(HEAPU8[i1 + 283738 >> 0] | 0) * .001;
 _PM_ReduceTimers();
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 _AngleVectors(i1 + 68 | 0, i1 + 20 | 0, i1 + 32 | 0, i1 + 44 | 0);
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 L1 : do if (!(HEAP32[i1 + 216 >> 2] | 0)) if ((HEAP32[i1 + 508 >> 2] | 0) > 0) i4 = 3; else {
  switch (HEAP32[i1 + 220 >> 2] | 0) {
  case 0:
  case 8:
   break;
  default:
   if (_PM_CheckStuck() | 0) break L1;
  }
  _PM_CatagorizePosition();
  i1 = HEAP32[gb + 121136 >> 2] | 0;
  HEAP32[i1 + 236 >> 2] = HEAP32[i1 + 228 >> 2];
  if ((HEAP32[i1 + 224 >> 2] | 0) == -1) HEAPF32[i1 + 156 >> 2] = -+HEAPF32[i1 + 100 >> 2];
  HEAP32[gb + 121140 >> 2] = 0;
  if (!(HEAP32[i1 + 208 >> 2] | 0)) if (!(HEAP32[i1 + 184 >> 2] & 16777216)) {
   i1 = _PM_Ladder() | 0;
   if (!i1) i3 = 0; else {
    HEAP32[gb + 121140 >> 2] = 1;
    i3 = i1;
   }
  } else i3 = 0; else i3 = 0;
  _PM_UpdateStepSound();
  _PM_Duck();
  i1 = HEAP32[gb + 121136 >> 2] | 0;
  L15 : do if (!(HEAP32[i1 + 208 >> 2] | 0)) if (!(HEAP32[i1 + 184 >> 2] & 16777216)) {
   if (i3 | 0) {
    _PM_LadderMove(i3);
    i1 = HEAP32[gb + 121136 >> 2] | 0;
    break;
   }
   switch (HEAP32[i1 + 220 >> 2] | 0) {
   case 8:
   case 3:
    break L15;
   default:
    {}
   }
   HEAP32[i1 + 220 >> 2] = 3;
  } while (0);
  if ((HEAP32[i1 + 224 >> 2] | 0) != -1) if (HEAP16[i1 + 283766 >> 1] & 32) {
   i1 = i1 + 92 | 0;
   _VectorScale(i1, .30000001192092896, i1);
   i1 = HEAP32[gb + 121136 >> 2] | 0;
  }
  i2 = HEAP32[i1 + 220 >> 2] | 0;
  switch (i2 | 0) {
  case 0:
   break L1;
  case 8:
   {
    _PM_NoClip();
    break L1;
   }
  case 10:
  case 6:
   {
    _PM_Physics_Toss();
    break L1;
   }
  case 5:
   {
    _PM_CheckWater() | 0;
    i1 = HEAP32[gb + 121136 >> 2] | 0;
    if (!(HEAP16[i1 + 283766 >> 1] & 2)) HEAP32[i1 + 200 >> 2] = HEAP32[i1 + 200 >> 2] & -3; else if (!i3) {
     _PM_Jump();
     i1 = HEAP32[gb + 121136 >> 2] | 0;
    }
    i3 = i1 + 92 | 0;
    HEAPF32[i3 >> 2] = +HEAPF32[i3 >> 2] + +HEAPF32[i1 + 116 >> 2];
    i3 = i1 + 96 | 0;
    HEAPF32[i3 >> 2] = +HEAPF32[i3 >> 2] + +HEAPF32[i1 + 120 >> 2];
    i3 = i1 + 100 | 0;
    HEAPF32[i3 >> 2] = +HEAPF32[i3 >> 2] + +HEAPF32[i1 + 124 >> 2];
    _PM_FlyMove() | 0;
    i3 = HEAP32[gb + 121136 >> 2] | 0;
    HEAPF32[i3 + 92 >> 2] = +HEAPF32[i3 + 92 >> 2] - +HEAPF32[i3 + 116 >> 2];
    HEAPF32[i3 + 96 >> 2] = +HEAPF32[i3 + 96 >> 2] - +HEAPF32[i3 + 120 >> 2];
    HEAPF32[i3 + 100 >> 2] = +HEAPF32[i3 + 100 >> 2] - +HEAPF32[i3 + 124 >> 2];
    break L1;
   }
  case 3:
   {
    if ((HEAP32[i1 + 228 >> 2] | 0) <= 1) {
     _PM_AddCorrectGravity();
     i1 = HEAP32[gb + 121136 >> 2] | 0;
    }
    if (+HEAPF32[i1 + 204 >> 2] != 0.0) {
     _PM_WaterJump();
     _PM_FlyMove() | 0;
     _PM_CheckWater() | 0;
     break L1;
    }
    i2 = HEAP32[i1 + 228 >> 2] | 0;
    if ((i2 | 0) > 1) {
     if ((i2 | 0) == 2) {
      _PM_CheckWaterJump();
      i1 = HEAP32[gb + 121136 >> 2] | 0;
     }
     if (+HEAPF32[i1 + 100 >> 2] < 0.0) {
      i2 = i1 + 204 | 0;
      if (+HEAPF32[i2 >> 2] != 0.0) HEAPF32[i2 >> 2] = 0.0;
     }
     if (!(HEAP16[i1 + 283766 >> 1] & 2)) {
      i3 = i1 + 200 | 0;
      HEAP32[i3 >> 2] = HEAP32[i3 >> 2] & -3;
     } else _PM_Jump();
     _PM_WaterMove();
     i3 = HEAP32[gb + 121136 >> 2] | 0;
     HEAPF32[i3 + 92 >> 2] = +HEAPF32[i3 + 92 >> 2] - +HEAPF32[i3 + 116 >> 2];
     HEAPF32[i3 + 96 >> 2] = +HEAPF32[i3 + 96 >> 2] - +HEAPF32[i3 + 120 >> 2];
     HEAPF32[i3 + 100 >> 2] = +HEAPF32[i3 + 100 >> 2] - +HEAPF32[i3 + 124 >> 2];
     _PM_CatagorizePosition();
    } else {
     if (!(HEAP16[i1 + 283766 >> 1] & 2)) {
      i3 = i1 + 200 | 0;
      HEAP32[i3 >> 2] = HEAP32[i3 >> 2] & -3;
     } else if (!i3) {
      _PM_Jump();
      i1 = HEAP32[gb + 121136 >> 2] | 0;
     }
     if ((HEAP32[i1 + 224 >> 2] | 0) != -1) {
      HEAPF32[i1 + 100 >> 2] = 0.0;
      _PM_Friction();
     }
     _PM_CheckVelocity();
     if ((HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 224 >> 2] | 0) == -1) _PM_AirMove(); else _PM_WalkMove();
     _PM_CatagorizePosition();
     i1 = HEAP32[gb + 121136 >> 2] | 0;
     HEAPF32[i1 + 92 >> 2] = +HEAPF32[i1 + 92 >> 2] - +HEAPF32[i1 + 116 >> 2];
     HEAPF32[i1 + 96 >> 2] = +HEAPF32[i1 + 96 >> 2] - +HEAPF32[i1 + 120 >> 2];
     HEAPF32[i1 + 100 >> 2] = +HEAPF32[i1 + 100 >> 2] - +HEAPF32[i1 + 124 >> 2];
     _PM_CheckVelocity();
     i1 = HEAP32[gb + 121136 >> 2] | 0;
     if ((HEAP32[i1 + 228 >> 2] | 0) <= 1) {
      _PM_FixupGravityVelocity();
      i1 = HEAP32[gb + 121136 >> 2] | 0;
     }
     if ((HEAP32[i1 + 224 >> 2] | 0) != -1) HEAPF32[i1 + 100 >> 2] = 0.0;
     _PM_CheckFalling();
    }
    _PM_PlayWaterSounds();
    break L1;
   }
  default:
   {
    i3 = HEAP32[i1 + 324964 >> 2] | 0;
    i1 = HEAP32[i1 + 4 >> 2] | 0;
    HEAP32[i5 >> 2] = i2;
    HEAP32[i5 + 4 >> 2] = i1;
    mftCall_vii(i3 | 0, gb + 45947 | 0, i5 | 0);
    break L1;
   }
  }
 } else i4 = 3; while (0);
 if ((i4 | 0) == 3) {
  _PM_SpectatorMove();
  _PM_CatagorizePosition();
 }
 STACKTOP = i5;
 return;
}

function __ZN15CHudDeathNotice16MsgFunc_DeathMsgEPKciPv(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i5 = 0, i6 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 HEAP32[i4 + 16 >> 2] = HEAP32[i4 + 16 >> 2] | 1;
 __Z10BEGIN_READPvi(i3, i2);
 i3 = __Z9READ_BYTEv() | 0;
 i4 = __Z9READ_BYTEv() | 0;
 HEAP8[i7 >> 0] = HEAP8[gb + 40212 >> 0] | 0;
 HEAP8[i7 + 1 >> 0] = HEAP8[gb + 40212 + 1 >> 0] | 0;
 HEAP8[i7 + 2 >> 0] = HEAP8[gb + 40212 + 2 >> 0] | 0;
 __Z11READ_STRINGv() | 0;
 i1 = 31 - (_strlen(i7 | 0) | 0) | 0;
 _strncat(i7 | 0, gb + 127001 | 0, i1 | 0) | 0;
 __ZN13CHudSpectator12DeathMessageEi(gb + 46040 + 424 | 0, i4);
 i1 = 0;
 while (1) {
  if (!(HEAP32[gb + 92912 + (i1 * 156 | 0) + 128 >> 2] | 0)) {
   i5 = i1;
   break;
  }
  i1 = i1 + 1 | 0;
  if ((i1 | 0) >= 4) {
   i6 = 4;
   break;
  }
 }
 if ((i6 | 0) == 4) if ((i1 | 0) == 4) {
  _memmove(gb + 92912 | 0, gb + 92912 + 156 | 0, 624) | 0;
  i5 = 3;
 } else i5 = i1;
 __ZN14CHudScoreboard17GetAllPlayersInfoEv(gb + 46040 + 6496 | 0);
 i1 = HEAP32[gb + 54736 + (i3 << 5) >> 2] | 0;
 if (!i1) HEAP8[gb + 92912 + (i5 * 156 | 0) >> 0] = 0; else {
  switch (HEAP16[gb + 122336 + (i3 * 24 | 0) + 6 >> 1] | 0) {
  case 1:
   {
    i2 = gb + 34940 | 0;
    break;
   }
  case 2:
   {
    i2 = gb + 34952 | 0;
    break;
   }
  case 3:
   {
    i2 = gb + 34976 | 0;
    break;
   }
  case 4:
   {
    i2 = gb + 34964 | 0;
    break;
   }
  case 0:
   {
    i2 = gb + 34976 | 0;
    break;
   }
  default:
   i2 = gb + 34988 | 0;
  }
  HEAP32[gb + 92912 + (i5 * 156 | 0) + 148 >> 2] = i2;
  _strncpy(gb + 92912 + (i5 * 156 | 0) | 0, i1 | 0, 32) | 0;
  HEAP8[gb + 92912 + (i5 * 156 | 0) + 31 >> 0] = 0;
 }
 if ((i4 & 255 | 0) == 255) i6 = 17; else {
  i1 = HEAP32[gb + 54736 + (i4 << 5) >> 2] | 0;
  if (!i1) i6 = 17; else {
   switch (HEAP16[gb + 122336 + (i4 * 24 | 0) + 6 >> 1] | 0) {
   case 1:
    {
     i2 = gb + 34940 | 0;
     break;
    }
   case 2:
    {
     i2 = gb + 34952 | 0;
     break;
    }
   case 3:
    {
     i2 = gb + 34976 | 0;
     break;
    }
   case 4:
    {
     i2 = gb + 34964 | 0;
     break;
    }
   case 0:
    {
     i2 = gb + 34976 | 0;
     break;
    }
   default:
    i2 = gb + 34988 | 0;
   }
   HEAP32[gb + 92912 + (i5 * 156 | 0) + 152 >> 2] = i2;
   _strncpy(gb + 92912 + (i5 * 156 | 0) + 64 | 0, i1 | 0, 32) | 0;
   HEAP8[gb + 92912 + (i5 * 156 | 0) + 95 >> 0] = 0;
  }
 }
 if ((i6 | 0) == 17) HEAP8[gb + 92912 + (i5 * 156 | 0) + 64 >> 0] = 0;
 if ((i4 & 255 | 0) == 255) {
  HEAP32[gb + 92912 + (i5 * 156 | 0) + 140 >> 2] = 1;
  _strcpy(gb + 92912 + (i5 * 156 | 0) + 64 | 0, i7 + 2 | 0) | 0;
 } else {
  if ((i3 | 0) == 0 | (i3 | 0) == (i4 | 0)) HEAP32[gb + 92912 + (i5 * 156 | 0) + 132 >> 2] = 1;
  if (!(_strcmp(i7 | 0, gb + 40215 | 0) | 0)) HEAP32[gb + 92912 + (i5 * 156 | 0) + 136 >> 2] = 1;
 }
 i6 = __ZN4CHud14GetSpriteIndexEPKc(gb + 46040 | 0, i7) | 0;
 i1 = gb + 92912 + (i5 * 156 | 0) | 0;
 HEAP32[gb + 92912 + (i5 * 156 | 0) + 128 >> 2] = i6;
 i6 = ~~+mftCall_di(HEAP32[gb + 92340 + 60 >> 2] | 0, gb + 40189 | 0);
 HEAP32[gb + 35040 >> 2] = i6;
 HEAPF32[gb + 92912 + (i5 * 156 | 0) + 144 >> 2] = +HEAPF32[gb + 46040 + 36 >> 2] + +(i6 | 0);
 if (!(HEAP32[gb + 92912 + (i5 * 156 | 0) + 140 >> 2] | 0)) {
  do if (!(HEAP32[gb + 92912 + (i5 * 156 | 0) + 132 >> 2] | 0)) {
   i6 = (HEAP32[gb + 92912 + (i5 * 156 | 0) + 136 >> 2] | 0) == 0;
   mftCall_vi(HEAP32[gb + 92340 + 120 >> 2] | 0, i1 | 0);
   i1 = HEAP32[gb + 92340 + 120 >> 2] | 0;
   if (i6) {
    mftCall_vi(i1 | 0, gb + 40288 | 0);
    mftCall_vi(HEAP32[gb + 92340 + 120 >> 2] | 0, gb + 92912 + (i5 * 156 | 0) + 64 | 0);
    break;
   } else {
    mftCall_vi(i1 | 0, gb + 40266 | 0);
    mftCall_vi(HEAP32[gb + 92340 + 120 >> 2] | 0, gb + 92912 + (i5 * 156 | 0) + 64 | 0);
    break;
   }
  } else {
   mftCall_vi(HEAP32[gb + 92340 + 120 >> 2] | 0, gb + 92912 + (i5 * 156 | 0) + 64 | 0);
   i6 = (_strcmp(i7 | 0, gb + 40239 | 0) | 0) == 0;
   i1 = HEAP32[gb + 92340 + 120 >> 2] | 0;
   if (i6) {
    mftCall_vi(i1 | 0, gb + 40247 | 0);
    break;
   } else {
    mftCall_vi(i1 | 0, gb + 40253 | 0);
    break;
   }
  } while (0);
  if ((HEAP8[i7 >> 0] | 0) > 13) if (_strcmp(i7 | 0, gb + 40239 | 0) | 0) if (!(HEAP32[gb + 92912 + (i5 * 156 | 0) + 136 >> 2] | 0)) {
   mftCall_vi(HEAP32[gb + 92340 + 120 >> 2] | 0, gb + 40297 | 0);
   if (!(_strcmp(i7 + 2 | 0, gb + 40304 | 0) | 0)) {
    i1 = i7;
    i2 = gb + 40309 | 0;
    i3 = i1 + 12 | 0;
    do {
     HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
     i1 = i1 + 1 | 0;
     i2 = i2 + 1 | 0;
    } while ((i1 | 0) < (i3 | 0));
   }
   if (!(_strcmp(i7 + 2 | 0, gb + 40321 | 0) | 0)) {
    i1 = i7;
    i2 = gb + 40327 | 0;
    i3 = i1 + 13 | 0;
    do {
     HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
     i1 = i1 + 1 | 0;
     i2 = i2 + 1 | 0;
    } while ((i1 | 0) < (i3 | 0));
   }
   mftCall_vi(HEAP32[gb + 92340 + 120 >> 2] | 0, i7 + 2 | 0);
  }
  mftCall_vi(HEAP32[gb + 92340 + 120 >> 2] | 0, gb + 40237 | 0);
 } else {
  mftCall_vi(HEAP32[gb + 92340 + 120 >> 2] | 0, i1 | 0);
  mftCall_vi(HEAP32[gb + 92340 + 120 >> 2] | 0, gb + 40226 | 0);
  mftCall_vi(HEAP32[gb + 92340 + 120 >> 2] | 0, gb + 92912 + (i5 * 156 | 0) + 64 | 0);
  mftCall_vi(HEAP32[gb + 92340 + 120 >> 2] | 0, gb + 40237 | 0);
 }
 STACKTOP = i7;
 return 1;
}

function _PM_WalkMove() {
 var d1 = 0.0, d2 = 0.0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, d8 = 0.0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, d15 = 0.0, d16 = 0.0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i3 = HEAP32[gb + 121136 >> 2] | 0;
 d1 = +HEAPF32[i3 + 283752 >> 2];
 d2 = +HEAPF32[i3 + 283756 >> 2];
 HEAPF32[i3 + 28 >> 2] = 0.0;
 HEAPF32[i3 + 40 >> 2] = 0.0;
 +_VectorNormalize(i3 + 20 | 0);
 +_VectorNormalize((HEAP32[gb + 121136 >> 2] | 0) + 32 | 0);
 i3 = HEAP32[gb + 121136 >> 2] | 0;
 i4 = 0;
 do {
  HEAPF32[i13 + 228 + (i4 << 2) >> 2] = d1 * +HEAPF32[i3 + 20 + (i4 << 2) >> 2] + d2 * +HEAPF32[i3 + 32 + (i4 << 2) >> 2];
  i4 = i4 + 1 | 0;
 } while ((i4 | 0) != 2);
 HEAPF32[i13 + 228 + 8 >> 2] = 0.0;
 HEAP32[i13 + 216 >> 2] = HEAP32[i13 + 228 >> 2];
 HEAP32[i13 + 216 + 4 >> 2] = HEAP32[i13 + 228 + 4 >> 2];
 HEAP32[i13 + 216 + 8 >> 2] = 0;
 d1 = +_VectorNormalize(i13 + 216 | 0);
 i3 = HEAP32[gb + 121136 >> 2] | 0;
 d2 = +HEAPF32[i3 + 500 >> 2];
 if (d1 > d2) {
  _VectorScale(i13 + 228 | 0, d2 / d1, i13 + 228 | 0);
  i12 = HEAP32[gb + 121136 >> 2] | 0;
  i3 = i12;
  d1 = +HEAPF32[i12 + 500 >> 2];
 }
 HEAPF32[i3 + 100 >> 2] = 0.0;
 _PM_Accelerate(i13 + 216 | 0, d1, +HEAPF32[(HEAP32[i3 + 324848 >> 2] | 0) + 16 >> 2]);
 i3 = HEAP32[gb + 121136 >> 2] | 0;
 d1 = +HEAPF32[i3 + 92 >> 2] + +HEAPF32[i3 + 116 >> 2];
 HEAPF32[i3 + 92 >> 2] = d1;
 d2 = +HEAPF32[i3 + 96 >> 2] + +HEAPF32[i3 + 120 >> 2];
 HEAPF32[i3 + 96 >> 2] = d2;
 HEAP32[i3 + 100 >> 2] = HEAP32[i3 + 124 >> 2];
 do if (+_Length(i3 + 92 | 0) < 1.0) {
  HEAPF32[i3 + 92 >> 2] = 0.0;
  HEAPF32[i3 + 96 >> 2] = 0.0;
  HEAPF32[i3 + 100 >> 2] = 0.0;
 } else {
  i4 = HEAP32[i3 + 224 >> 2] | 0;
  d8 = +HEAPF32[i3 + 16 >> 2];
  HEAPF32[i13 + 204 >> 2] = +HEAPF32[i3 + 56 >> 2] + d1 * d8;
  HEAPF32[i13 + 204 + 4 >> 2] = +HEAPF32[i3 + 60 >> 2] + d8 * d2;
  HEAP32[i13 + 204 + 8 >> 2] = HEAP32[i3 + 64 >> 2];
  mftCall_viiiii(HEAP32[i3 + 324992 >> 2] | 0, i13 + 136 | 0, i3 + 56 | 0, i13 + 204 | 0, 0, -1);
  if (+HEAPF32[i13 + 136 + 16 >> 2] == 1.0) {
   i11 = HEAP32[i13 + 136 + 28 >> 2] | 0;
   i10 = HEAP32[i13 + 136 + 24 >> 2] | 0;
   i12 = HEAP32[gb + 121136 >> 2] | 0;
   HEAP32[i12 + 56 >> 2] = HEAP32[i13 + 136 + 20 >> 2];
   HEAP32[i12 + 60 >> 2] = i10;
   HEAP32[i12 + 64 >> 2] = i11;
   break;
  }
  i3 = HEAP32[gb + 121136 >> 2] | 0;
  if ((i4 | 0) == -1) if (!(HEAP32[i3 + 228 >> 2] | 0)) break;
  if (!(+HEAPF32[i3 + 204 >> 2] != 0.0)) {
   d1 = +HEAPF32[i3 + 56 >> 2];
   d2 = +HEAPF32[i3 + 60 >> 2];
   i4 = HEAP32[i3 + 64 >> 2] | 0;
   i14 = HEAP32[i3 + 92 >> 2] | 0;
   i6 = HEAP32[i3 + 96 >> 2] | 0;
   i5 = HEAP32[i3 + 100 >> 2] | 0;
   _PM_FlyMove() | 0;
   i3 = HEAP32[gb + 121136 >> 2] | 0;
   d7 = +HEAPF32[i3 + 56 >> 2];
   d8 = +HEAPF32[i3 + 60 >> 2];
   i9 = HEAP32[i3 + 64 >> 2] | 0;
   i10 = HEAP32[i3 + 92 >> 2] | 0;
   i11 = HEAP32[i3 + 96 >> 2] | 0;
   i12 = HEAP32[i3 + 100 >> 2] | 0;
   HEAPF32[i3 + 56 >> 2] = d1;
   HEAPF32[i3 + 60 >> 2] = d2;
   HEAP32[i3 + 64 >> 2] = i4;
   HEAP32[i3 + 92 >> 2] = i14;
   HEAP32[i3 + 96 >> 2] = i6;
   HEAP32[i3 + 100 >> 2] = i5;
   HEAPF32[i13 + 204 >> 2] = d1;
   HEAPF32[i13 + 204 + 4 >> 2] = d2;
   HEAPF32[i13 + 204 + 8 >> 2] = (HEAP32[tempDoublePtr >> 2] = i4, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[(HEAP32[i3 + 324848 >> 2] | 0) + 48 >> 2];
   mftCall_viiiii(HEAP32[i3 + 324992 >> 2] | 0, i13 + 68 | 0, i3 + 56 | 0, i13 + 204 | 0, 0, -1);
   i3 = HEAP32[i13 + 68 + 20 >> 2] | 0;
   i4 = HEAP32[i13 + 68 + 24 >> 2] | 0;
   i5 = HEAP32[i13 + 68 + 28 >> 2] | 0;
   if (!(HEAP32[i13 + 68 + 4 >> 2] | 0)) if (!(HEAP32[i13 + 68 >> 2] | 0)) {
    i14 = HEAP32[gb + 121136 >> 2] | 0;
    HEAP32[i14 + 56 >> 2] = i3;
    HEAP32[i14 + 60 >> 2] = i4;
    HEAP32[i14 + 64 >> 2] = i5;
   }
   _PM_FlyMove() | 0;
   i5 = HEAP32[gb + 121136 >> 2] | 0;
   HEAP32[i13 + 204 >> 2] = HEAP32[i5 + 56 >> 2];
   HEAP32[i13 + 204 + 4 >> 2] = HEAP32[i5 + 60 >> 2];
   HEAPF32[i13 + 204 + 8 >> 2] = +HEAPF32[i5 + 64 >> 2] - +HEAPF32[(HEAP32[i5 + 324848 >> 2] | 0) + 48 >> 2];
   mftCall_viiiii(HEAP32[i5 + 324992 >> 2] | 0, i13 | 0, i5 + 56 | 0, i13 + 204 | 0, 0, -1);
   i5 = HEAP32[i13 + 20 >> 2] | 0;
   i6 = HEAP32[i13 + 24 >> 2] | 0;
   i4 = HEAP32[i13 + 28 >> 2] | 0;
   if (+HEAPF32[i13 + 40 >> 2] < .7) i3 = HEAP32[gb + 121136 >> 2] | 0; else {
    i3 = HEAP32[gb + 121136 >> 2] | 0;
    if (!(HEAP32[i13 + 4 >> 2] | HEAP32[i13 >> 2])) {
     HEAP32[i3 + 56 >> 2] = i5;
     HEAP32[i3 + 60 >> 2] = i6;
     HEAP32[i3 + 64 >> 2] = i4;
    } else {
     i5 = HEAP32[i3 + 56 >> 2] | 0;
     i6 = HEAP32[i3 + 60 >> 2] | 0;
     i4 = HEAP32[i3 + 64 >> 2] | 0;
    }
    HEAP32[i3 + 44 >> 2] = i5;
    HEAP32[i3 + 48 >> 2] = i6;
    HEAP32[i3 + 52 >> 2] = i4;
    d15 = (HEAP32[tempDoublePtr >> 2] = i5, +HEAPF32[tempDoublePtr >> 2]) - d1;
    d16 = (HEAP32[tempDoublePtr >> 2] = i6, +HEAPF32[tempDoublePtr >> 2]) - d2;
    if (!((d7 - d1) * (d7 - d1) + (d8 - d2) * (d8 - d2) > d16 * d16 + d15 * d15)) {
     HEAP32[i3 + 100 >> 2] = i12;
     break;
    }
   }
   HEAPF32[i3 + 56 >> 2] = d7;
   HEAPF32[i3 + 60 >> 2] = d8;
   HEAP32[i3 + 64 >> 2] = i9;
   HEAP32[i3 + 92 >> 2] = i10;
   HEAP32[i3 + 96 >> 2] = i11;
   HEAP32[i3 + 100 >> 2] = i12;
  }
 } while (0);
 STACKTOP = i13;
 return;
}

function runPostSets31() {
 var i1 = 0;
 HEAP32[gb + 35244 >> 2] = fb + 164;
 HEAP32[gb + 35248 >> 2] = fb + 159;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 17216 >> 2] = (HEAP32[gb + 17216 >> 2] | 0) + i1;
 HEAP32[gb + 17220 >> 2] = (HEAP32[gb + 17220 >> 2] | 0) + (gb + 40531 | 0);
 HEAP32[gb + 17224 >> 2] = (HEAP32[gb + 17224 >> 2] | 0) + (gb + 568 | 0);
 HEAP32[gb + 35304 >> 2] = (HEAP32[gb + 35304 >> 2] | 0) + (gb + 17232 | 0);
 HEAP32[gb + 35308 >> 2] = fb + 155;
 HEAP32[gb + 35312 >> 2] = fb + 180;
 HEAP32[gb + 35316 >> 2] = fb + 131;
 HEAP32[gb + 35320 >> 2] = fb + 132;
 HEAP32[gb + 35324 >> 2] = fb + 8;
 HEAP32[gb + 35328 >> 2] = fb + 161;
 HEAP32[gb + 35332 >> 2] = fb + 181;
 HEAP32[gb + 35336 >> 2] = fb + 159;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 17232 >> 2] = (HEAP32[gb + 17232 >> 2] | 0) + i1;
 HEAP32[gb + 17236 >> 2] = (HEAP32[gb + 17236 >> 2] | 0) + (gb + 40592 | 0);
 HEAP32[gb + 17240 >> 2] = (HEAP32[gb + 17240 >> 2] | 0) + (gb + 568 | 0);
 HEAP32[gb + 35568 >> 2] = (HEAP32[gb + 35568 >> 2] | 0) + (gb + 17248 | 0);
 HEAP32[gb + 35572 >> 2] = fb + 155;
 HEAP32[gb + 35576 >> 2] = fb + 182;
 HEAP32[gb + 35580 >> 2] = fb + 133;
 HEAP32[gb + 35584 >> 2] = fb + 134;
 HEAP32[gb + 35588 >> 2] = fb + 9;
 HEAP32[gb + 35592 >> 2] = fb + 161;
 HEAP32[gb + 35596 >> 2] = fb + 183;
 HEAP32[gb + 35600 >> 2] = fb + 184;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 17248 >> 2] = (HEAP32[gb + 17248 >> 2] | 0) + i1;
 HEAP32[gb + 17252 >> 2] = (HEAP32[gb + 17252 >> 2] | 0) + (gb + 42069 | 0);
 HEAP32[gb + 17256 >> 2] = (HEAP32[gb + 17256 >> 2] | 0) + (gb + 568 | 0);
 HEAP32[gb + 35608 >> 2] = (HEAP32[gb + 35608 >> 2] | 0) + (gb + 17264 | 0);
 HEAP32[gb + 35612 >> 2] = fb + 155;
 HEAP32[gb + 35616 >> 2] = fb + 185;
 HEAP32[gb + 35620 >> 2] = fb + 135;
 HEAP32[gb + 35624 >> 2] = fb + 136;
 HEAP32[gb + 35628 >> 2] = fb + 10;
 HEAP32[gb + 35632 >> 2] = fb + 161;
 HEAP32[gb + 35636 >> 2] = fb + 186;
 HEAP32[gb + 35640 >> 2] = fb + 187;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 17264 >> 2] = (HEAP32[gb + 17264 >> 2] | 0) + i1;
 HEAP32[gb + 17268 >> 2] = (HEAP32[gb + 17268 >> 2] | 0) + (gb + 43244 | 0);
 HEAP32[gb + 17272 >> 2] = (HEAP32[gb + 17272 >> 2] | 0) + (gb + 568 | 0);
 HEAP32[gb + 35644 >> 2] = (HEAP32[gb + 35644 >> 2] | 0) + (gb + 43269 | 0);
 HEAP32[gb + 35652 >> 2] = (HEAP32[gb + 35652 >> 2] | 0) + (gb + 17280 | 0);
 HEAP32[gb + 35656 >> 2] = fb + 155;
 HEAP32[gb + 35660 >> 2] = fb + 188;
 HEAP32[gb + 35664 >> 2] = fb + 137;
 HEAP32[gb + 35668 >> 2] = fb + 138;
 HEAP32[gb + 35672 >> 2] = fb + 11;
 HEAP32[gb + 35676 >> 2] = fb + 161;
 HEAP32[gb + 35680 >> 2] = fb + 189;
 HEAP32[gb + 35684 >> 2] = fb + 159;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 17280 >> 2] = (HEAP32[gb + 17280 >> 2] | 0) + i1;
 HEAP32[gb + 17284 >> 2] = (HEAP32[gb + 17284 >> 2] | 0) + (gb + 43326 | 0);
 HEAP32[gb + 17288 >> 2] = (HEAP32[gb + 17288 >> 2] | 0) + (gb + 568 | 0);
 HEAP32[gb + 35692 >> 2] = (HEAP32[gb + 35692 >> 2] | 0) + (gb + 17296 | 0);
 HEAP32[gb + 35696 >> 2] = fb + 155;
 HEAP32[gb + 35700 >> 2] = fb + 190;
 HEAP32[gb + 35704 >> 2] = fb + 139;
 HEAP32[gb + 35708 >> 2] = fb + 140;
 HEAP32[gb + 35712 >> 2] = fb + 12;
 HEAP32[gb + 35716 >> 2] = fb + 161;
 HEAP32[gb + 35720 >> 2] = fb + 164;
 HEAP32[gb + 35724 >> 2] = fb + 191;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 17296 >> 2] = (HEAP32[gb + 17296 >> 2] | 0) + i1;
 HEAP32[gb + 17300 >> 2] = (HEAP32[gb + 17300 >> 2] | 0) + (gb + 43376 | 0);
 HEAP32[gb + 17304 >> 2] = (HEAP32[gb + 17304 >> 2] | 0) + (gb + 568 | 0);
 HEAP32[gb + 35732 >> 2] = (HEAP32[gb + 35732 >> 2] | 0) + (gb + 17312 | 0);
 HEAP32[gb + 35736 >> 2] = fb + 155;
 HEAP32[gb + 35740 >> 2] = fb + 192;
 HEAP32[gb + 35744 >> 2] = fb + 141;
 HEAP32[gb + 35748 >> 2] = fb + 142;
 HEAP32[gb + 35752 >> 2] = fb + 13;
 HEAP32[gb + 35756 >> 2] = fb + 161;
 HEAP32[gb + 35760 >> 2] = fb + 164;
 HEAP32[gb + 35764 >> 2] = fb + 193;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 17312 >> 2] = (HEAP32[gb + 17312 >> 2] | 0) + i1;
 HEAP32[gb + 17316 >> 2] = (HEAP32[gb + 17316 >> 2] | 0) + (gb + 43444 | 0);
 HEAP32[gb + 17320 >> 2] = (HEAP32[gb + 17320 >> 2] | 0) + (gb + 568 | 0);
 HEAP32[gb + 35772 >> 2] = (HEAP32[gb + 35772 >> 2] | 0) + (gb + 17328 | 0);
 HEAP32[gb + 35776 >> 2] = fb + 155;
 HEAP32[gb + 35780 >> 2] = fb + 194;
 HEAP32[gb + 35784 >> 2] = fb + 143;
 HEAP32[gb + 35788 >> 2] = fb + 144;
 HEAP32[gb + 35792 >> 2] = fb + 14;
 HEAP32[gb + 35796 >> 2] = fb + 161;
 HEAP32[gb + 35800 >> 2] = fb + 195;
 HEAP32[gb + 35804 >> 2] = fb + 159;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 17328 >> 2] = (HEAP32[gb + 17328 >> 2] | 0) + i1;
 HEAP32[gb + 17332 >> 2] = (HEAP32[gb + 17332 >> 2] | 0) + (gb + 43495 | 0);
 HEAP32[gb + 17336 >> 2] = (HEAP32[gb + 17336 >> 2] | 0) + (gb + 568 | 0);
 HEAP32[gb + 35812 >> 2] = (HEAP32[gb + 35812 >> 2] | 0) + (gb + 17344 | 0);
 HEAP32[gb + 35816 >> 2] = fb + 155;
 runPostSets32();
}

function __ZN15CHudTextMessage15MsgFunc_TextMsgEPKciPv(i2, i1, i3, i4) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 __Z10BEGIN_READPvi(i4, i3);
 i2 = __Z9READ_BYTEv() | 0;
 __Z11READ_STRINGv() | 0;
 if ((HEAP8[gb + 127001 >> 0] | 0) == 35) {
  i3 = mftCall_ii(HEAP32[gb + 92340 + 100 >> 2] | 0, gb + 127001 + 1 | 0) | 0;
  if (!i3) i1 = gb + 127001 | 0; else {
   i1 = HEAP32[i3 + 40 >> 2] | 0;
   if (!i1) i1 = gb + 127001 | 0; else {
    i7 = HEAP32[i3 >> 2] | 0;
    i2 = (i7 | 0) < 0 ? 0 - i7 | 0 : i2;
   }
  }
 } else i1 = gb + 127001 | 0;
 i7 = _strcpy(gb + 130649 | 0, i1 | 0) | 0;
 __Z11READ_STRINGv() | 0;
 if ((HEAP8[gb + 127001 >> 0] | 0) == 35) {
  i1 = mftCall_ii(HEAP32[gb + 92340 + 100 >> 2] | 0, gb + 127001 + 1 | 0) | 0;
  if (!i1) i1 = gb + 127001 | 0; else {
   i1 = HEAP32[i1 + 40 >> 2] | 0;
   i1 = (i1 | 0) == 0 ? gb + 127001 | 0 : i1;
  }
 } else i1 = gb + 127001 | 0;
 i6 = _strcpy(gb + 130649 + 128 | 0, i1 | 0) | 0;
 i1 = i6 + ((_strlen(i6 | 0) | 0) + -1) | 0;
 switch (HEAP8[i1 >> 0] | 0) {
 case 13:
 case 10:
  {
   HEAP8[i1 >> 0] = 0;
   break;
  }
 default:
  {}
 }
 __Z11READ_STRINGv() | 0;
 if ((HEAP8[gb + 127001 >> 0] | 0) == 35) {
  i1 = mftCall_ii(HEAP32[gb + 92340 + 100 >> 2] | 0, gb + 127001 + 1 | 0) | 0;
  if (!i1) i1 = gb + 127001 | 0; else {
   i1 = HEAP32[i1 + 40 >> 2] | 0;
   i1 = (i1 | 0) == 0 ? gb + 127001 | 0 : i1;
  }
 } else i1 = gb + 127001 | 0;
 i5 = _strcpy(gb + 130649 + 256 | 0, i1 | 0) | 0;
 i1 = i5 + ((_strlen(i5 | 0) | 0) + -1) | 0;
 switch (HEAP8[i1 >> 0] | 0) {
 case 13:
 case 10:
  {
   HEAP8[i1 >> 0] = 0;
   break;
  }
 default:
  {}
 }
 __Z11READ_STRINGv() | 0;
 if ((HEAP8[gb + 127001 >> 0] | 0) == 35) {
  i1 = mftCall_ii(HEAP32[gb + 92340 + 100 >> 2] | 0, gb + 127001 + 1 | 0) | 0;
  if (!i1) i1 = gb + 127001 | 0; else {
   i1 = HEAP32[i1 + 40 >> 2] | 0;
   i1 = (i1 | 0) == 0 ? gb + 127001 | 0 : i1;
  }
 } else i1 = gb + 127001 | 0;
 i4 = _strcpy(gb + 130649 + 384 | 0, i1 | 0) | 0;
 i1 = i4 + ((_strlen(i4 | 0) | 0) + -1) | 0;
 switch (HEAP8[i1 >> 0] | 0) {
 case 13:
 case 10:
  {
   HEAP8[i1 >> 0] = 0;
   break;
  }
 default:
  {}
 }
 __Z11READ_STRINGv() | 0;
 if ((HEAP8[gb + 127001 >> 0] | 0) == 35) {
  i1 = mftCall_ii(HEAP32[gb + 92340 + 100 >> 2] | 0, gb + 127001 + 1 | 0) | 0;
  if (!i1) i1 = gb + 127001 | 0; else {
   i1 = HEAP32[i1 + 40 >> 2] | 0;
   i1 = (i1 | 0) == 0 ? gb + 127001 | 0 : i1;
  }
 } else i1 = gb + 127001 | 0;
 i3 = _strcpy(gb + 130649 + 512 | 0, i1 | 0) | 0;
 i1 = i3 + ((_strlen(i3 | 0) | 0) + -1) | 0;
 switch (HEAP8[i1 >> 0] | 0) {
 case 13:
 case 10:
  {
   HEAP8[i1 >> 0] = 0;
   break;
  }
 default:
  {}
 }
 switch (i2 | 0) {
 case 4:
  {
   HEAP32[i8 >> 2] = i6;
   HEAP32[i8 + 4 >> 2] = i5;
   HEAP32[i8 + 8 >> 2] = i4;
   HEAP32[i8 + 12 >> 2] = i3;
   _sprintf(gb + 130649 + 640 | 0, i7 | 0, i8 | 0) | 0;
   i1 = gb + 130649 + 640 | 0;
   L36 : while (1) {
    switch (HEAP8[i1 >> 0] | 0) {
    case 0:
     break L36;
    case 13:
     {
      HEAP8[i1 >> 0] = 10;
      break;
     }
    default:
     {}
    }
    i1 = i1 + 1 | 0;
   }
   mftCall_vi(HEAP32[gb + 92340 + 124 >> 2] | 0, gb + 130649 + 640 | 0);
   break;
  }
 case 1:
  {
   HEAP8[gb + 130649 + 640 >> 0] = 1;
   HEAP32[i8 + 16 >> 2] = i6;
   HEAP32[i8 + 16 + 4 >> 2] = i5;
   HEAP32[i8 + 16 + 8 >> 2] = i4;
   HEAP32[i8 + 16 + 12 >> 2] = i3;
   _sprintf(gb + 130649 + 641 | 0, i7 | 0, i8 + 16 | 0) | 0;
   i1 = gb + 130649 + 640 | 0;
   L43 : while (1) {
    switch (HEAP8[i1 >> 0] | 0) {
    case 0:
     break L43;
    case 13:
     {
      HEAP8[i1 >> 0] = 10;
      break;
     }
    default:
     {}
    }
    i1 = i1 + 1 | 0;
   }
   mftCall_vi(HEAP32[gb + 92340 + 120 >> 2] | 0, gb + 130649 + 640 | 0);
   break;
  }
 case 3:
  {
   HEAP32[i8 + 32 >> 2] = i6;
   HEAP32[i8 + 32 + 4 >> 2] = i5;
   HEAP32[i8 + 32 + 8 >> 2] = i4;
   HEAP32[i8 + 32 + 12 >> 2] = i3;
   _sprintf(gb + 130649 + 640 | 0, i7 | 0, i8 + 32 | 0) | 0;
   i1 = gb + 130649 + 640 | 0;
   L50 : while (1) {
    switch (HEAP8[i1 >> 0] | 0) {
    case 0:
     break L50;
    case 13:
     {
      HEAP8[i1 >> 0] = 10;
      break;
     }
    default:
     {}
    }
    i1 = i1 + 1 | 0;
   }
   __ZN11CHudSayText12SayTextPrintEPKcii(gb + 46040 + 6156 | 0, gb + 130649 + 640 | 0, 128, -1);
   break;
  }
 case 2:
  {
   HEAP32[i8 + 48 >> 2] = i6;
   HEAP32[i8 + 48 + 4 >> 2] = i5;
   HEAP32[i8 + 48 + 8 >> 2] = i4;
   HEAP32[i8 + 48 + 12 >> 2] = i3;
   _sprintf(gb + 130649 + 640 | 0, i7 | 0, i8 + 48 | 0) | 0;
   i1 = gb + 130649 + 640 | 0;
   L57 : while (1) {
    switch (HEAP8[i1 >> 0] | 0) {
    case 0:
     break L57;
    case 13:
     {
      HEAP8[i1 >> 0] = 10;
      break;
     }
    default:
     {}
    }
    i1 = i1 + 1 | 0;
   }
   mftCall_vi(HEAP32[gb + 92340 + 120 >> 2] | 0, gb + 130649 + 640 | 0);
   break;
  }
 default:
  {}
 }
 STACKTOP = i8;
 return 1;
}

function _CL_CreateMove(d1, i8, i2) {
 d1 = +d1;
 i8 = i8 | 0;
 i2 = i2 | 0;
 var i3 = 0, d4 = 0.0, d5 = 0.0, d6 = 0.0, d7 = 0.0, i9 = 0, i10 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(HEAP8[gb + 54712 >> 0] | 0)) if (___cxa_guard_acquire(gb + 54712 | 0) | 0) ___cxa_guard_release(gb + 54712 | 0);
 if (i2 | 0) {
  mftCall_vi(HEAP32[gb + 92340 + 136 >> 2] | 0, i9 | 0);
  __Z15CL_AdjustAnglesfPf(d1, i9);
  i2 = i8;
  i3 = i2 + 52 | 0;
  do {
   HEAP32[i2 >> 2] = 0;
   i2 = i2 + 4 | 0;
  } while ((i2 | 0) < (i3 | 0));
  mftCall_vi(HEAP32[gb + 92340 + 140 >> 2] | 0, i9 | 0);
  d1 = +HEAPF32[(HEAP32[gb + 93984 >> 2] | 0) + 12 >> 2];
  if (!(HEAP32[gb + 94140 + 8 >> 2] & 1)) {
   d4 = +HEAPF32[i8 + 20 >> 2];
   i2 = i8 + 20 | 0;
  } else {
   i2 = HEAP32[gb + 94056 + 8 >> 2] | 0;
   HEAP32[gb + 94056 + 8 >> 2] = i2 & 1;
   d4 = +HEAPF32[i8 + 20 >> 2] + d1 * ((i2 & 6 | 0) == 6 ? ((i2 & 1 | 0) == 0 ? .25 : .75) : (i2 & 6 | 0) == 0 ? (i2 & 1 | 0 ? 1.0 : 0.0) : (i2 & 6 | 0) == 4 ? 0.0 : (i2 & 7 | 0) == 3 ? .5 : 0.0);
   i2 = HEAP32[gb + 94044 + 8 >> 2] | 0;
   HEAP32[gb + 94044 + 8 >> 2] = i2 & 1;
   d4 = d4 - d1 * ((i2 & 6 | 0) == 6 ? ((i2 & 1 | 0) == 0 ? .25 : .75) : (i2 & 6 | 0) == 0 ? (i2 & 1 | 0 ? 1.0 : 0.0) : (i2 & 6 | 0) == 4 ? 0.0 : (i2 & 7 | 0) == 3 ? .5 : 0.0);
   HEAPF32[i8 + 20 >> 2] = d4;
   i2 = i8 + 20 | 0;
  }
  i10 = HEAP32[gb + 94128 + 8 >> 2] | 0;
  HEAP32[gb + 94128 + 8 >> 2] = i10 & 1;
  i3 = HEAP32[gb + 94116 + 8 >> 2] | 0;
  HEAP32[gb + 94116 + 8 >> 2] = i3 & 1;
  d1 = d4 + d1 * ((i10 & 6 | 0) == 6 ? ((i10 & 1 | 0) == 0 ? .25 : .75) : (i10 & 6 | 0) == 0 ? (i10 & 1 | 0 ? 1.0 : 0.0) : (i10 & 6 | 0) == 4 ? 0.0 : (i10 & 7 | 0) == 3 ? .5 : 0.0) - d1 * ((i3 & 6 | 0) == 6 ? ((i3 & 1 | 0) == 0 ? .25 : .75) : (i3 & 6 | 0) == 0 ? (i3 & 1 | 0 ? 1.0 : 0.0) : (i3 & 6 | 0) == 4 ? 0.0 : (i3 & 7 | 0) == 3 ? .5 : 0.0);
  HEAPF32[i2 >> 2] = d1;
  d4 = +HEAPF32[(HEAP32[gb + 93972 >> 2] | 0) + 12 >> 2];
  i3 = HEAP32[gb + 94212 + 8 >> 2] | 0;
  HEAP32[gb + 94212 + 8 >> 2] = i3 & 1;
  d7 = +HEAPF32[i8 + 24 >> 2] + d4 * ((i3 & 6 | 0) == 6 ? ((i3 & 1 | 0) == 0 ? .25 : .75) : (i3 & 6 | 0) == 0 ? (i3 & 1 | 0 ? 1.0 : 0.0) : (i3 & 6 | 0) == 4 ? 0.0 : (i3 & 7 | 0) == 3 ? .5 : 0.0);
  i3 = HEAP32[gb + 94224 + 8 >> 2] | 0;
  HEAP32[gb + 94224 + 8 >> 2] = i3 & 1;
  d4 = d7 - d4 * ((i3 & 6 | 0) == 6 ? ((i3 & 1 | 0) == 0 ? .25 : .75) : (i3 & 6 | 0) == 0 ? (i3 & 1 | 0 ? 1.0 : 0.0) : (i3 & 6 | 0) == 4 ? 0.0 : (i3 & 7 | 0) == 3 ? .5 : 0.0);
  HEAPF32[i8 + 24 >> 2] = d4;
  if (!(HEAP32[gb + 94020 + 8 >> 2] & 1)) {
   d6 = +HEAPF32[(HEAP32[gb + 93976 >> 2] | 0) + 12 >> 2];
   i10 = HEAP32[gb + 94068 + 8 >> 2] | 0;
   HEAP32[gb + 94068 + 8 >> 2] = i10 & 1;
   d6 = +HEAPF32[i8 + 16 >> 2] + d6 * ((i10 & 6 | 0) == 6 ? ((i10 & 1 | 0) == 0 ? .25 : .75) : (i10 & 6 | 0) == 0 ? (i10 & 1 | 0 ? 1.0 : 0.0) : (i10 & 6 | 0) == 4 ? 0.0 : (i10 & 7 | 0) == 3 ? .5 : 0.0);
   d7 = +HEAPF32[(HEAP32[gb + 93980 >> 2] | 0) + 12 >> 2];
   i10 = HEAP32[gb + 94080 + 8 >> 2] | 0;
   HEAP32[gb + 94080 + 8 >> 2] = i10 & 1;
   HEAPF32[i8 + 16 >> 2] = d6 - d7 * ((i10 & 6 | 0) == 6 ? ((i10 & 1 | 0) == 0 ? .25 : .75) : (i10 & 6 | 0) == 0 ? (i10 & 1 | 0 ? 1.0 : 0.0) : (i10 & 6 | 0) == 4 ? 0.0 : (i10 & 7 | 0) == 3 ? .5 : 0.0);
  }
  if (HEAP32[gb + 94152 + 8 >> 2] & 1 | 0) {
   d7 = +HEAPF32[(HEAP32[gb + 93988 >> 2] | 0) + 12 >> 2];
   HEAPF32[i8 + 16 >> 2] = d7 * +HEAPF32[i8 + 16 >> 2];
   HEAPF32[i2 >> 2] = d1 * d7;
   HEAPF32[i8 + 24 >> 2] = d4 * d7;
  }
  d7 = +mftCall_d(HEAP32[gb + 92340 + 184 >> 2] | 0);
  if (d7 != 0.0) {
   d1 = +HEAPF32[i8 + 16 >> 2];
   d4 = +HEAPF32[i2 >> 2];
   d5 = +HEAPF32[i8 + 24 >> 2];
   d6 = +Math_sqrt(+(d1 * d1 + d4 * d4 + d5 * d5));
   if (d6 > d7) {
    HEAPF32[i8 + 16 >> 2] = d1 * (d7 / d6);
    HEAPF32[i2 >> 2] = d4 * (d7 / d6);
    HEAPF32[i8 + 24 >> 2] = d5 * (d7 / d6);
   }
  }
  __Z7IN_MovefP9usercmd_s(0.0, i8);
 }
 HEAP8[i8 + 32 >> 0] = HEAP32[gb + 93932 >> 2];
 HEAP32[gb + 93932 >> 2] = 0;
 HEAP8[i8 + 33 >> 0] = HEAP32[gb + 92100 >> 2];
 HEAP32[gb + 92100 >> 2] = 0;
 i2 = __Z13CL_ButtonBitsi(1) | 0;
 HEAP16[i8 + 30 >> 1] = i2;
 do if (+HEAPF32[(HEAP32[gb + 118456 >> 2] | 0) + 12 >> 2] != 0.0) {
  d1 = +HEAPF32[i8 + 16 >> 2];
  if (d1 > 0.0) {
   HEAP16[i8 + 30 >> 1] = i2 | 8;
   break;
  }
  if (d1 < 0.0) HEAP16[i8 + 30 >> 1] = i2 | 16;
 } while (0);
 mftCall_vi(HEAP32[gb + 92340 + 136 >> 2] | 0, i9 | 0);
 if (!(HEAP32[gb + 35044 >> 2] | 0)) {
  HEAP32[i8 + 4 >> 2] = HEAP32[gb + 94312 >> 2];
  HEAP32[i8 + 4 + 4 >> 2] = HEAP32[gb + 94312 + 4 >> 2];
  HEAP32[i8 + 4 + 8 >> 2] = HEAP32[gb + 94312 + 8 >> 2];
 } else {
  i2 = HEAP32[i9 >> 2] | 0;
  HEAP32[i8 + 4 >> 2] = i2;
  i3 = HEAP32[i9 + 4 >> 2] | 0;
  HEAP32[i8 + 4 + 4 >> 2] = i3;
  i10 = HEAP32[i9 + 8 >> 2] | 0;
  HEAP32[i8 + 4 + 8 >> 2] = i10;
  HEAP32[gb + 94312 >> 2] = i2;
  HEAP32[gb + 94312 + 4 >> 2] = i3;
  HEAP32[gb + 94312 + 8 >> 2] = i10;
 }
 STACKTOP = i9;
 return;
}

function _PM_DrawPhysEntBBox(i3, i18, d17) {
 i3 = i3 | 0;
 i18 = i18 | 0;
 d17 = +d17;
 var i1 = 0, i2 = 0, i4 = 0, d5 = 0.0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, d25 = 0.0, d26 = 0.0, d27 = 0.0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 i2 = HEAP32[gb + 121136 >> 2] | 0;
 L1 : do if (!((i3 | 0) < 1 ? 1 : (HEAP32[i2 + 588 >> 2] | 0) <= (i3 | 0))) {
  i1 = HEAP32[i2 + 592 + (i3 * 224 | 0) + 48 >> 2] | 0;
  if (!i1) {
   i1 = 0;
   do {
    d15 = +HEAPF32[((i1 & 2 | 0) == 0 ? i2 + 592 + (i3 * 224 | 0) + 72 | 0 : i2 + 592 + (i3 * 224 | 0) + 60 | 0) >> 2] + +HEAPF32[i2 + 592 + (i3 * 224 | 0) + 40 >> 2];
    d16 = +HEAPF32[((i1 & 4 | 0) == 0 ? i2 + 592 + (i3 * 224 | 0) + 76 | 0 : i2 + 592 + (i3 * 224 | 0) + 64 | 0) >> 2] + +HEAPF32[i2 + 592 + (i3 * 224 | 0) + 44 >> 2];
    HEAPF32[i19 + 64 + (i1 * 12 | 0) >> 2] = +HEAPF32[((i1 & 1 | 0) == 0 ? i2 + 592 + (i3 * 224 | 0) + 68 | 0 : i2 + 592 + (i3 * 224 | 0) + 56 | 0) >> 2] + +HEAPF32[i2 + 592 + (i3 * 224 | 0) + 36 >> 2];
    HEAPF32[i19 + 64 + (i1 * 12 | 0) + 4 >> 2] = d15;
    HEAPF32[i19 + 64 + (i1 * 12 | 0) + 8 >> 2] = d16;
    i1 = i1 + 1 | 0;
   } while ((i1 | 0) != 8);
   i1 = 0;
   while (1) {
    _PM_DrawRectangle(i19 + 64 + ((HEAP32[gb + 36424 + (i1 << 4) + 4 >> 2] | 0) * 12 | 0) | 0, i19 + 64 + ((HEAP32[gb + 36424 + (i1 << 4) >> 2] | 0) * 12 | 0) | 0, i19 + 64 + ((HEAP32[gb + 36424 + (i1 << 4) + 8 >> 2] | 0) * 12 | 0) | 0, i19 + 64 + ((HEAP32[gb + 36424 + (i1 << 4) + 12 >> 2] | 0) * 12 | 0) | 0, i18, d17);
    i1 = i1 + 1 | 0;
    if ((i1 | 0) == 6) break L1;
   }
  }
  d14 = +HEAPF32[i2 + 592 + (i3 * 224 | 0) + 36 >> 2];
  d15 = +HEAPF32[i2 + 592 + (i3 * 224 | 0) + 40 >> 2];
  d16 = +HEAPF32[i2 + 592 + (i3 * 224 | 0) + 44 >> 2];
  mftCall_viii(HEAP32[i2 + 325012 >> 2] | 0, i1 | 0, i19 + 48 | 0, i19 + 36 | 0);
  i21 = HEAP32[i19 + 48 >> 2] | 0;
  i22 = HEAP32[i19 + 36 >> 2] | 0;
  i20 = HEAP32[i19 + 48 + 4 >> 2] | 0;
  i23 = HEAP32[i19 + 36 + 4 >> 2] | 0;
  i1 = HEAP32[i19 + 48 + 8 >> 2] | 0;
  i24 = HEAP32[i19 + 36 + 8 >> 2] | 0;
  HEAP32[i19 + 64 >> 2] = i22;
  HEAP32[i19 + 64 + 4 >> 2] = i23;
  HEAP32[i19 + 64 + 8 >> 2] = i24;
  HEAP32[i19 + 64 + 12 >> 2] = i21;
  HEAP32[i19 + 64 + 16 >> 2] = i23;
  HEAP32[i19 + 64 + 20 >> 2] = i24;
  HEAP32[i19 + 64 + 24 >> 2] = i22;
  HEAP32[i19 + 64 + 28 >> 2] = i20;
  HEAP32[i19 + 64 + 32 >> 2] = i24;
  HEAP32[i19 + 64 + 36 >> 2] = i21;
  HEAP32[i19 + 64 + 40 >> 2] = i20;
  HEAP32[i19 + 64 + 44 >> 2] = i24;
  HEAP32[i19 + 64 + 48 >> 2] = i22;
  HEAP32[i19 + 64 + 52 >> 2] = i23;
  HEAP32[i19 + 64 + 56 >> 2] = i1;
  HEAP32[i19 + 64 + 60 >> 2] = i21;
  HEAP32[i19 + 64 + 64 >> 2] = i23;
  HEAP32[i19 + 64 + 68 >> 2] = i1;
  HEAP32[i19 + 64 + 72 >> 2] = i22;
  HEAP32[i19 + 64 + 76 >> 2] = i20;
  HEAP32[i19 + 64 + 80 >> 2] = i1;
  HEAP32[i19 + 64 + 84 >> 2] = i21;
  HEAP32[i19 + 64 + 88 >> 2] = i20;
  HEAP32[i19 + 64 + 92 >> 2] = i1;
  if (+HEAPF32[i2 + 592 + (i3 * 224 | 0) + 84 >> 2] != 0.0) i4 = 7; else if (+HEAPF32[i2 + 592 + (i3 * 224 | 0) + 88 >> 2] != 0.0) i4 = 7; else if (+HEAPF32[i2 + 592 + (i3 * 224 | 0) + 92 >> 2] != 0.0) i4 = 7; else i1 = 0;
  if ((i4 | 0) == 7) {
   _AngleVectorsTranspose(i2 + 592 + (i3 * 224 | 0) + 84 | 0, i19 + 24 | 0, i19 + 12 | 0, i19);
   d5 = +HEAPF32[i19 + 24 >> 2];
   d6 = +HEAPF32[i19 + 24 + 4 >> 2];
   d7 = +HEAPF32[i19 + 24 + 8 >> 2];
   d8 = +HEAPF32[i19 + 12 >> 2];
   d9 = +HEAPF32[i19 + 12 + 4 >> 2];
   d10 = +HEAPF32[i19 + 12 + 8 >> 2];
   d11 = +HEAPF32[i19 >> 2];
   d12 = +HEAPF32[i19 + 4 >> 2];
   d13 = +HEAPF32[i19 + 8 >> 2];
   i1 = 0;
   do {
    i22 = i19 + 64 + (i1 * 12 | 0) | 0;
    d27 = +HEAPF32[i22 >> 2];
    i23 = i19 + 64 + (i1 * 12 | 0) + 4 | 0;
    d26 = +HEAPF32[i23 >> 2];
    i24 = i19 + 64 + (i1 * 12 | 0) + 8 | 0;
    d25 = +HEAPF32[i24 >> 2];
    HEAPF32[i22 >> 2] = d5 * d27 + d6 * d26 + d7 * d25;
    HEAPF32[i23 >> 2] = d8 * d27 + d9 * d26 + d10 * d25;
    HEAPF32[i24 >> 2] = d11 * d27 + d12 * d26 + d13 * d25;
    i1 = i1 + 1 | 0;
   } while ((i1 | 0) != 8);
   i1 = 0;
  }
  do {
   i24 = i19 + 64 + (i1 * 12 | 0) | 0;
   HEAPF32[i24 >> 2] = d14 + +HEAPF32[i24 >> 2];
   i24 = i19 + 64 + (i1 * 12 | 0) + 4 | 0;
   HEAPF32[i24 >> 2] = d15 + +HEAPF32[i24 >> 2];
   i24 = i19 + 64 + (i1 * 12 | 0) + 8 | 0;
   HEAPF32[i24 >> 2] = d16 + +HEAPF32[i24 >> 2];
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) != 8);
  i1 = 0;
  do {
   _PM_DrawRectangle(i19 + 64 + ((HEAP32[gb + 36424 + (i1 << 4) + 4 >> 2] | 0) * 12 | 0) | 0, i19 + 64 + ((HEAP32[gb + 36424 + (i1 << 4) >> 2] | 0) * 12 | 0) | 0, i19 + 64 + ((HEAP32[gb + 36424 + (i1 << 4) + 8 >> 2] | 0) * 12 | 0) | 0, i19 + 64 + ((HEAP32[gb + 36424 + (i1 << 4) + 12 >> 2] | 0) * 12 | 0) | 0, i18, d17);
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) != 6);
 } while (0);
 STACKTOP = i19;
 return;
}

function runPostSets30() {
 var i1 = 0;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 552 >> 2] = (HEAP32[gb + 552 >> 2] | 0) + i1;
 HEAP32[gb + 556 >> 2] = (HEAP32[gb + 556 >> 2] | 0) + (gb + 40023 | 0);
 HEAP32[gb + 560 >> 2] = (HEAP32[gb + 560 >> 2] | 0) + (gb + 568 | 0);
 i1 = g$__ZTVN10__cxxabiv117__class_type_infoE() | 0;
 HEAP32[gb + 568 >> 2] = (HEAP32[gb + 568 >> 2] | 0) + i1;
 HEAP32[gb + 572 >> 2] = (HEAP32[gb + 572 >> 2] | 0) + (gb + 40033 | 0);
 HEAP32[gb + 33836 >> 2] = (HEAP32[gb + 33836 >> 2] | 0) + (gb + 576 | 0);
 HEAP32[gb + 33840 >> 2] = fb + 155;
 HEAP32[gb + 33844 >> 2] = fb + 160;
 HEAP32[gb + 33848 >> 2] = fb + 120;
 HEAP32[gb + 33852 >> 2] = fb + 121;
 HEAP32[gb + 33856 >> 2] = fb + 3;
 HEAP32[gb + 33860 >> 2] = fb + 161;
 HEAP32[gb + 33864 >> 2] = fb + 162;
 HEAP32[gb + 33868 >> 2] = fb + 159;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 576 >> 2] = (HEAP32[gb + 576 >> 2] | 0) + i1;
 HEAP32[gb + 580 >> 2] = (HEAP32[gb + 580 >> 2] | 0) + (gb + 40066 | 0);
 HEAP32[gb + 584 >> 2] = (HEAP32[gb + 584 >> 2] | 0) + (gb + 568 | 0);
 HEAP32[gb + 33880 >> 2] = (HEAP32[gb + 33880 >> 2] | 0) + (gb + 592 | 0);
 HEAP32[gb + 33884 >> 2] = fb + 155;
 HEAP32[gb + 33888 >> 2] = fb + 163;
 HEAP32[gb + 33892 >> 2] = fb + 122;
 HEAP32[gb + 33896 >> 2] = fb + 123;
 HEAP32[gb + 33900 >> 2] = fb + 4;
 HEAP32[gb + 33904 >> 2] = fb + 161;
 HEAP32[gb + 33908 >> 2] = fb + 164;
 HEAP32[gb + 33912 >> 2] = fb + 159;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 592 >> 2] = (HEAP32[gb + 592 >> 2] | 0) + i1;
 HEAP32[gb + 596 >> 2] = (HEAP32[gb + 596 >> 2] | 0) + (gb + 40136 | 0);
 HEAP32[gb + 600 >> 2] = (HEAP32[gb + 600 >> 2] | 0) + (gb + 568 | 0);
 HEAP32[gb + 35004 >> 2] = (HEAP32[gb + 35004 >> 2] | 0) + (gb + 608 | 0);
 HEAP32[gb + 35008 >> 2] = fb + 155;
 HEAP32[gb + 35012 >> 2] = fb + 165;
 HEAP32[gb + 35016 >> 2] = fb + 124;
 HEAP32[gb + 35020 >> 2] = fb + 125;
 HEAP32[gb + 35024 >> 2] = fb + 5;
 HEAP32[gb + 35028 >> 2] = fb + 161;
 HEAP32[gb + 35032 >> 2] = fb + 164;
 HEAP32[gb + 35036 >> 2] = fb + 166;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 608 >> 2] = (HEAP32[gb + 608 >> 2] | 0) + i1;
 HEAP32[gb + 612 >> 2] = (HEAP32[gb + 612 >> 2] | 0) + (gb + 40340 | 0);
 HEAP32[gb + 616 >> 2] = (HEAP32[gb + 616 >> 2] | 0) + (gb + 568 | 0);
 HEAP32[gb + 35052 >> 2] = (HEAP32[gb + 35052 >> 2] | 0) + (gb + 624 | 0);
 HEAP32[gb + 35056 >> 2] = fb + 155;
 HEAP32[gb + 35060 >> 2] = fb + 167;
 HEAP32[gb + 35064 >> 2] = fb + 126;
 HEAP32[gb + 35068 >> 2] = fb + 127;
 HEAP32[gb + 35072 >> 2] = fb + 6;
 HEAP32[gb + 35076 >> 2] = fb + 161;
 HEAP32[gb + 35080 >> 2] = fb + 168;
 HEAP32[gb + 35084 >> 2] = fb + 159;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 624 >> 2] = (HEAP32[gb + 624 >> 2] | 0) + i1;
 HEAP32[gb + 628 >> 2] = (HEAP32[gb + 628 >> 2] | 0) + (gb + 40460 | 0);
 HEAP32[gb + 632 >> 2] = (HEAP32[gb + 632 >> 2] | 0) + (gb + 568 | 0);
 HEAP32[gb + 640 >> 2] = (HEAP32[gb + 640 >> 2] | 0) + (gb + 35100 | 0);
 HEAP32[gb + 35092 >> 2] = fb + 128;
 HEAP32[gb + 35096 >> 2] = fb + 80;
 HEAP32[gb + 35104 >> 2] = (HEAP32[gb + 35104 >> 2] | 0) + (gb + 17200 | 0);
 HEAP32[gb + 35108 >> 2] = fb + 169;
 HEAP32[gb + 35112 >> 2] = fb + 170;
 HEAP32[gb + 35116 >> 2] = fb + 171;
 HEAP32[gb + 35120 >> 2] = fb + 81;
 HEAP32[gb + 35124 >> 2] = fb + 2;
 HEAP32[gb + 35128 >> 2] = fb + 3;
 HEAP32[gb + 35132 >> 2] = fb + 37;
 HEAP32[gb + 35136 >> 2] = fb + 172;
 HEAP32[gb + 35140 >> 2] = fb + 173;
 HEAP32[gb + 35144 >> 2] = fb + 174;
 HEAP32[gb + 35148 >> 2] = fb + 38;
 HEAP32[gb + 35152 >> 2] = fb + 5;
 HEAP32[gb + 35156 >> 2] = fb + 2;
 HEAP32[gb + 35160 >> 2] = fb + 12;
 HEAP32[gb + 35164 >> 2] = fb + 1;
 HEAP32[gb + 35168 >> 2] = fb + 1;
 HEAP32[gb + 35172 >> 2] = fb + 1;
 HEAP32[gb + 35176 >> 2] = fb + 2;
 HEAP32[gb + 35180 >> 2] = fb + 2;
 HEAP32[gb + 35184 >> 2] = fb + 175;
 HEAP32[gb + 35188 >> 2] = fb + 176;
 HEAP32[gb + 35192 >> 2] = fb + 177;
 HEAP32[gb + 35196 >> 2] = fb + 178;
 HEAP32[gb + 35200 >> 2] = fb + 2;
 HEAP32[gb + 35204 >> 2] = fb + 39;
 HEAP32[gb + 35208 >> 2] = fb + 40;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 17200 >> 2] = (HEAP32[gb + 17200 >> 2] | 0) + i1;
 HEAP32[gb + 17204 >> 2] = (HEAP32[gb + 17204 >> 2] | 0) + (gb + 40477 | 0);
 HEAP32[gb + 17208 >> 2] = (HEAP32[gb + 17208 >> 2] | 0) + (gb + 17360 | 0);
 HEAP32[gb + 35216 >> 2] = (HEAP32[gb + 35216 >> 2] | 0) + (gb + 17216 | 0);
 HEAP32[gb + 35220 >> 2] = fb + 155;
 HEAP32[gb + 35224 >> 2] = fb + 179;
 HEAP32[gb + 35228 >> 2] = fb + 129;
 HEAP32[gb + 35232 >> 2] = fb + 130;
 HEAP32[gb + 35236 >> 2] = fb + 7;
 HEAP32[gb + 35240 >> 2] = fb + 161;
 runPostSets31();
}

function __ZN8CHudAmmo9DrawWListEf(i10, d2) {
 i10 = i10 | 0;
 d2 = +d2;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = HEAP32[gb + 81320 >> 2] | 0;
 switch (i1 | 0) {
 case 0:
  {
   i1 = 0;
   break;
  }
 case 1:
  {
   i1 = -1;
   i3 = 5;
   break;
  }
 default:
  {
   i1 = HEAP32[i1 + 144 >> 2] | 0;
   if ((i1 | 0) > 0) if (!(__ZN15WeaponsResource11GetFirstPosEi(gb + 81328 | 0, i1) | 0)) {
    HEAP32[gb + 81320 >> 2] = 1;
    i1 = -1;
    i3 = 5;
   } else i3 = 5; else i3 = 5;
  }
 }
 if ((i3 | 0) == 5) {
  i4 = 0;
  i5 = 10;
  while (1) {
   HEAP32[i11 + 8 >> 2] = 255;
   HEAP32[i11 + 4 >> 2] = 160;
   HEAP32[i11 >> 2] = 0;
   __Z11ScaleColorsRiS_S_i(i11 + 8 | 0, i11 + 4 | 0, i11, 255);
   i3 = (HEAP32[i10 + 32 >> 2] | 0) + i4 | 0;
   if ((i3 | 0) < 0) i3 = 0; else i3 = HEAP32[(HEAP32[gb + 46040 + 112 >> 2] | 0) + (i3 << 2) >> 2] | 0;
   mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, i3 | 0, HEAP32[i11 + 8 >> 2] | 0, HEAP32[i11 + 4 >> 2] | 0, HEAP32[i11 >> 2] | 0);
   do if ((i1 | 0) == (i4 | 0)) {
    i3 = __ZN15WeaponsResource11GetFirstPosEi(gb + 81328 | 0, i1) | 0;
    if (!i3) {
     i3 = HEAP32[gb + 92108 >> 2] | 0;
     break;
    } else {
     i3 = (HEAP32[i3 + 176 >> 2] | 0) - (HEAP32[i3 + 172 >> 2] | 0) | 0;
     break;
    }
   } else i3 = HEAP32[gb + 92108 >> 2] | 0; while (0);
   mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i5 | 0, 10, (HEAP32[gb + 46040 + 116 >> 2] | 0) + ((HEAP32[i10 + 32 >> 2] | 0) + i4 << 4) | 0);
   i4 = i4 + 1 | 0;
   if ((i4 | 0) == 5) break; else i5 = i5 + 5 + i3 | 0;
  }
  i8 = 0;
  i9 = 10;
  while (1) {
   i4 = HEAP32[gb + 92104 >> 2] | 0;
   if ((i8 | 0) == (i1 | 0)) {
    i3 = __ZN15WeaponsResource11GetFirstPosEi(gb + 81328 | 0, i1) | 0;
    if (!i3) i3 = HEAP32[gb + 92108 >> 2] | 0; else i3 = (HEAP32[i3 + 176 >> 2] | 0) - (HEAP32[i3 + 172 >> 2] | 0) | 0;
    i7 = 0;
    i4 = i4 + 10 | 0;
    do {
     i6 = HEAP32[gb + 81328 + 10496 + (i1 * 24 | 0) + (i7 << 2) >> 2] | 0;
     if (i6) if (HEAP32[i6 + 156 >> 2] | 0) {
      HEAP32[i11 + 8 >> 2] = 255;
      HEAP32[i11 + 4 >> 2] = 160;
      HEAP32[i11 >> 2] = 0;
      if ((HEAP32[gb + 81320 >> 2] | 0) == (i6 | 0)) {
       mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, HEAP32[i6 + 168 >> 2] | 0, 255, 160, 0);
       mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i9 | 0, i4 | 0, i6 + 172 | 0);
       i5 = HEAP32[i10 + 36 >> 2] | 0;
       if ((i5 | 0) < 0) i5 = 0; else i5 = HEAP32[(HEAP32[gb + 46040 + 112 >> 2] | 0) + (i5 << 2) >> 2] | 0;
       mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, i5 | 0, 255, 160, 0);
       mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i9 | 0, i4 | 0, (HEAP32[gb + 46040 + 116 >> 2] | 0) + (HEAP32[i10 + 36 >> 2] << 4) | 0);
      } else {
       if (!(__ZN15WeaponsResource7HasAmmoEP6WEAPON(gb + 81328 | 0, i6) | 0)) {
        HEAP32[i11 + 8 >> 2] = 255;
        HEAP32[i11 + 4 >> 2] = 16;
        HEAP32[i11 >> 2] = 16;
        __Z11ScaleColorsRiS_S_i(i11 + 8 | 0, i11 + 4 | 0, i11, 128);
       } else __Z11ScaleColorsRiS_S_i(i11 + 8 | 0, i11 + 4 | 0, i11, 192);
       mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, HEAP32[i6 + 188 >> 2] | 0, HEAP32[i11 + 8 >> 2] | 0, HEAP32[i11 + 4 >> 2] | 0, HEAP32[i11 >> 2] | 0);
       mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i9 | 0, i4 | 0, i6 + 192 | 0);
      }
      i5 = HEAP32[gb + 92116 >> 2] | 0;
      __Z11DrawAmmoBarP6WEAPONiiii(i6, ((i5 | 0) / 2 | 0) + i9 | 0, i4, i5, HEAP32[gb + 92112 >> 2] | 0);
      i4 = i4 + 5 + (HEAP32[i6 + 184 >> 2] | 0) - (HEAP32[i6 + 180 >> 2] | 0) | 0;
     }
     i7 = i7 + 1 | 0;
    } while ((i7 | 0) != 5);
   } else {
    HEAP32[i11 + 8 >> 2] = 255;
    HEAP32[i11 + 4 >> 2] = 160;
    HEAP32[i11 >> 2] = 0;
    i5 = i4;
    i6 = 0;
    i4 = i4 + 10 | 0;
    while (1) {
     i3 = HEAP32[gb + 81328 + 10496 + (i8 * 24 | 0) + (i6 << 2) >> 2] | 0;
     if (!i3) i3 = i5; else if (!(HEAP32[i3 + 156 >> 2] | 0)) i3 = i5; else {
      i7 = (__ZN15WeaponsResource7HasAmmoEP6WEAPON(gb + 81328 | 0, i3) | 0) == 0;
      HEAP32[i11 + 8 >> 2] = 255;
      i12 = i7 ? 16 : 160;
      i3 = i7 ? 16 : 0;
      HEAP32[i11 + 4 >> 2] = i12;
      HEAP32[i11 >> 2] = i3;
      mftCall_viiiiiiii(HEAP32[gb + 92340 + 44 >> 2] | 0, i9 | 0, i4 | 0, HEAP32[gb + 92108 >> 2] | 0, i5 | 0, 255, i12 | 0, i3 | 0, (i7 ? 96 : 128) | 0);
      i7 = HEAP32[gb + 92104 >> 2] | 0;
      i3 = i7;
      i4 = i4 + 5 + i7 | 0;
     }
     i6 = i6 + 1 | 0;
     if ((i6 | 0) == 5) break; else i5 = i3;
    }
    i3 = HEAP32[gb + 92108 >> 2] | 0;
   }
   i8 = i8 + 1 | 0;
   if ((i8 | 0) == 5) {
    i1 = 1;
    break;
   } else i9 = i9 + 5 + i3 | 0;
  }
 }
 STACKTOP = i11;
 return i1 | 0;
}

function __ZN4CHud7VidInitEv(i8) {
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 HEAP32[i8 + 8108 >> 2] = 532;
 mftCall_ii(HEAP32[gb + 92340 + 48 >> 2] | 0, i8 + 8108 | 0) | 0;
 HEAP32[i8 + 4 >> 2] = 0;
 HEAP32[i8 + 32 >> 2] = 0;
 i4 = (HEAP32[gb + 46040 + 8112 >> 2] | 0) < 640 ? 320 : 640;
 HEAP32[i8 + 96 >> 2] = i4;
 i1 = HEAP32[i8 + 12 >> 2] | 0;
 do if (!i1) {
  i3 = mftCall_iii(HEAP32[gb + 92340 + 40 >> 2] | 0, gb + 40902 | 0, i8 + 20 | 0) | 0;
  HEAP32[i8 + 12 >> 2] = i3;
  if (!i3) {
   i1 = i8 + 116 | 0;
   break;
  }
  HEAP32[i8 + 16 >> 2] = 0;
  i7 = HEAP32[i8 + 20 >> 2] | 0;
  if ((i7 | 0) > 0) {
   i4 = HEAP32[i8 + 96 >> 2] | 0;
   i1 = 0;
   i5 = 0;
   i6 = i3;
   while (1) {
    i2 = i1 + 1 | 0;
    if ((HEAP32[i6 + 132 >> 2] | 0) == (i4 | 0)) {
     HEAP32[i8 + 16 >> 2] = i2;
     i1 = i2;
    }
    i5 = i5 + 1 | 0;
    if ((i5 | 0) == (i7 | 0)) break; else i6 = i6 + 152 | 0;
   }
  } else i1 = 0;
  HEAP32[i8 + 112 >> 2] = __Znaj((i1 >>> 0 > 1073741823 ? -1 : i1 << 2) | 0) | 0;
  HEAP32[i8 + 116 >> 2] = __Znaj((i1 >>> 0 > 268435455 ? -1 : i1 << 4) | 0) | 0;
  HEAP32[i8 + 120 >> 2] = __Znaj(((i1 | 0) < 0 ? -1 : i1 * 24 | 0) | 0) | 0;
  if ((i7 | 0) > 0) {
   i1 = i7;
   i2 = 0;
   i4 = 0;
   while (1) {
    if ((HEAP32[i3 + 132 >> 2] | 0) == (HEAP32[i8 + 96 >> 2] | 0)) {
     HEAP32[i9 >> 2] = i3 + 64;
     _sprintf(i9 + 16 | 0, gb + 40918 | 0, i9 | 0) | 0;
     i1 = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, i9 + 16 | 0) | 0;
     HEAP32[(HEAP32[i8 + 112 >> 2] | 0) + (i2 << 2) >> 2] = i1;
     i1 = (HEAP32[i8 + 116 >> 2] | 0) + (i2 << 4) | 0;
     i7 = i3 + 136 | 0;
     HEAP32[i1 >> 2] = HEAP32[i7 >> 2];
     HEAP32[i1 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
     HEAP32[i1 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
     HEAP32[i1 + 12 >> 2] = HEAP32[i7 + 12 >> 2];
     _strncpy((HEAP32[i8 + 120 >> 2] | 0) + (i2 * 24 | 0) | 0, i3 | 0, 24) | 0;
     i1 = HEAP32[i8 + 20 >> 2] | 0;
     i2 = i2 + 1 | 0;
    }
    i4 = i4 + 1 | 0;
    if ((i4 | 0) >= (i1 | 0)) {
     i1 = i8 + 116 | 0;
     break;
    } else i3 = i3 + 152 | 0;
   }
  } else i1 = i8 + 116 | 0;
 } else {
  HEAP32[i8 + 16 >> 2] = 0;
  i5 = HEAP32[i8 + 20 >> 2] | 0;
  if ((i5 | 0) > 0) {
   i2 = 0;
   i6 = 0;
   while (1) {
    i3 = i2 + 1 | 0;
    if ((HEAP32[i1 + 132 >> 2] | 0) == (i4 | 0)) {
     HEAP32[i8 + 16 >> 2] = i3;
     i2 = i3;
    }
    i6 = i6 + 1 | 0;
    if ((i6 | 0) == (i5 | 0)) break; else i1 = i1 + 152 | 0;
   }
  }
  i1 = HEAP32[i8 + 112 >> 2] | 0;
  if (i1 | 0) __ZdaPv(i1 | 0);
  i1 = HEAP32[i8 + 116 >> 2] | 0;
  if (i1 | 0) __ZdaPv(i1 | 0);
  i1 = HEAP32[i8 + 120 >> 2] | 0;
  if (i1 | 0) __ZdaPv(i1 | 0);
  i1 = HEAP32[i8 + 16 >> 2] | 0;
  HEAP32[i8 + 112 >> 2] = __Znaj((i1 >>> 0 > 1073741823 ? -1 : i1 << 2) | 0) | 0;
  HEAP32[i8 + 116 >> 2] = __Znaj((i1 >>> 0 > 268435455 ? -1 : i1 << 4) | 0) | 0;
  HEAP32[i8 + 120 >> 2] = __Znaj(((i1 | 0) < 0 ? -1 : i1 * 24 | 0) | 0) | 0;
  i1 = HEAP32[i8 + 20 >> 2] | 0;
  if ((i1 | 0) > 0) {
   i2 = 0;
   i3 = 0;
   i4 = HEAP32[i8 + 12 >> 2] | 0;
   while (1) {
    if ((HEAP32[i4 + 132 >> 2] | 0) == (HEAP32[i8 + 96 >> 2] | 0)) {
     HEAP32[i9 + 8 >> 2] = i4 + 64;
     _sprintf(i9 + 16 | 0, gb + 40918 | 0, i9 + 8 | 0) | 0;
     i1 = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, i9 + 16 | 0) | 0;
     HEAP32[(HEAP32[i8 + 112 >> 2] | 0) + (i2 << 2) >> 2] = i1;
     i1 = (HEAP32[i8 + 116 >> 2] | 0) + (i2 << 4) | 0;
     i7 = i4 + 136 | 0;
     HEAP32[i1 >> 2] = HEAP32[i7 >> 2];
     HEAP32[i1 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
     HEAP32[i1 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
     HEAP32[i1 + 12 >> 2] = HEAP32[i7 + 12 >> 2];
     _strncpy((HEAP32[i8 + 120 >> 2] | 0) + (i2 * 24 | 0) | 0, i4 | 0, 24) | 0;
     i1 = HEAP32[i8 + 20 >> 2] | 0;
     i2 = i2 + 1 | 0;
    }
    i3 = i3 + 1 | 0;
    if ((i3 | 0) >= (i1 | 0)) {
     i1 = i8 + 116 | 0;
     break;
    } else i4 = i4 + 152 | 0;
   }
  } else i1 = i8 + 116 | 0;
 } while (0);
 i7 = __ZN4CHud14GetSpriteIndexEPKc(i8, gb + 40933 | 0) | 0;
 HEAP32[i8 + 8652 >> 2] = i7;
 i6 = HEAP32[i1 >> 2] | 0;
 HEAP32[i8 + 108 >> 2] = (HEAP32[i6 + (i7 << 4) + 12 >> 2] | 0) - (HEAP32[i6 + (i7 << 4) + 8 >> 2] | 0);
 __ZN8CHudAmmo7VidInitEv(i8 + 128 | 0) | 0;
 __ZN10CHudHealth7VidInitEv(i8 + 168 | 0) | 0;
 __ZN13CHudSpectator7VidInitEv(i8 + 424 | 0) | 0;
 __ZN9CHudTrain7VidInitEv(i8 + 5232 | 0) | 0;
 __ZN11CHudBattery7VidInitEv(i8 + 5184 | 0) | 0;
 __ZN14CHudFlashlight7VidInitEv(i8 + 5260 | 0) | 0;
 __ZN11CHudMessage7VidInitEv(i8 + 5324 | 0) | 0;
 __ZN15CHudDeathNotice7VidInitEv(i8 + 6132 | 0) | 0;
 mftCall_ii(HEAP32[(HEAP32[i8 + 6264 >> 2] | 0) + 12 >> 2] | 0, i8 + 6264 | 0) | 0;
 STACKTOP = i9;
 return;
}

function __ZN15HistoryResource15DrawAmmoHistoryEf(i8, d6) {
 i8 = i8 | 0;
 d6 = +d6;
 var i1 = 0, i2 = 0, i3 = 0, d4 = 0.0, i5 = 0, i7 = 0, i9 = 0, d10 = 0.0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i7 = 0;
 L1 : do {
  i2 = i8 + (i7 << 4) | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  L3 : do if (i1 | 0) {
   i3 = i8 + (i7 << 4) + 4 | 0;
   d10 = +HEAPF32[i3 >> 2];
   d4 = +HEAPF32[gb + 46040 + 36 >> 2] + +(HEAP32[gb + 33872 >> 2] | 0);
   d4 = d10 < d4 ? d10 : d4;
   HEAPF32[i3 >> 2] = d4;
   if (d4 <= d6) {
    HEAP32[i2 >> 2] = 0;
    HEAP32[i2 + 4 >> 2] = 0;
    HEAP32[i2 + 8 >> 2] = 0;
    HEAP32[i2 + 12 >> 2] = 0;
    i1 = 0;
    do {
     if (HEAP32[i8 + (i1 << 4) >> 2] | 0) break L3;
     i1 = i1 + 1 | 0;
    } while ((i1 | 0) < 12);
    HEAP32[i8 + 196 >> 2] = 0;
    break;
   }
   switch (i1 | 0) {
   case 1:
    {
     i1 = __ZN15WeaponsResource20GetAmmoPicFromWeaponEiR7wrect_s(gb + 81328 | 0, HEAP32[i8 + (i7 << 4) + 12 >> 2] | 0, i9 + 24 | 0) | 0;
     HEAP32[i9 + 20 >> 2] = 255;
     HEAP32[i9 + 16 >> 2] = 160;
     HEAP32[i9 >> 2] = 0;
     d4 = (+HEAPF32[i3 >> 2] - d6) * 80.0;
     __Z11ScaleColorsRiS_S_i(i9 + 20 | 0, i9 + 16 | 0, i9, ~~(d4 < 255.0 ? d4 : 255.0));
     i3 = HEAP32[gb + 92140 + 192 >> 2] | 0;
     i3 = (HEAP32[gb + 46040 + 8116 >> 2] | 0) + -32 + (Math_imul(i3, -2) | 0) - (Math_imul(i3 + 5 | 0, i7) | 0) | 0;
     i2 = HEAP32[gb + 46040 + 8112 >> 2] | 0;
     if (i1 | 0) {
      i1 = HEAP32[i1 >> 2] | 0;
      if (i1 | 0) {
       mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, i1 | 0, HEAP32[i9 + 20 >> 2] | 0, HEAP32[i9 + 16 >> 2] | 0, HEAP32[i9 >> 2] | 0);
       mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i2 + -24 | 0, i3 | 0, i9 + 24 | 0);
      }
     }
     if (!(d4 < 200.0 ? +HEAPF32[(HEAP32[gb + 93740 >> 2] | 0) + 12 >> 2] == 2.0 : 0)) __ZN4CHud19DrawHudNumberStringEiiiiiii(0, i2 + -34 | 0, i3, i2 + -124 | 0, HEAP32[i8 + (i7 << 4) + 8 >> 2] | 0, HEAP32[i9 + 20 >> 2] | 0, HEAP32[i9 + 16 >> 2] | 0, HEAP32[i9 >> 2] | 0) | 0;
     break L3;
    }
   case 2:
    {
     i1 = HEAP32[i8 + (i7 << 4) + 12 >> 2] | 0;
     i2 = gb + 81328 + (i1 * 328 | 0) | 0;
     if (!i2) break L1;
     HEAP32[i9 + 24 >> 2] = 255;
     HEAP32[i9 + 20 >> 2] = 160;
     HEAP32[i9 + 16 >> 2] = 0;
     if (!(__ZN15WeaponsResource7HasAmmoEP6WEAPON(gb + 81328 | 0, i2) | 0)) {
      HEAP32[i9 + 24 >> 2] = 255;
      HEAP32[i9 + 20 >> 2] = 16;
      HEAP32[i9 + 16 >> 2] = 16;
     }
     __Z11ScaleColorsRiS_S_i(i9 + 24 | 0, i9 + 20 | 0, i9 + 16 | 0, ~~((d4 - d6) * 80.0 < 255.0 ? (d4 - d6) * 80.0 : 255.0));
     i3 = HEAP32[gb + 92140 + 192 >> 2] | 0;
     i3 = (HEAP32[gb + 46040 + 8116 >> 2] | 0) + -32 + (Math_imul(i3, -2) | 0) - (Math_imul(i3 + 5 | 0, i7) | 0) | 0;
     i5 = gb + 81328 + (i1 * 328 | 0) + 192 | 0;
     i2 = (HEAP32[gb + 46040 + 8112 >> 2] | 0) - (HEAP32[gb + 81328 + (i1 * 328 | 0) + 196 >> 2] | 0) + (HEAP32[i5 >> 2] | 0) | 0;
     mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, HEAP32[gb + 81328 + (i1 * 328 | 0) + 188 >> 2] | 0, HEAP32[i9 + 24 >> 2] | 0, HEAP32[i9 + 20 >> 2] | 0, HEAP32[i9 + 16 >> 2] | 0);
     mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i2 | 0, i3 | 0, i5 | 0);
     break L3;
    }
   case 3:
    {
     i2 = i8 + (i7 << 4) + 12 | 0;
     i1 = HEAP32[i2 >> 2] | 0;
     if (i1 | 0) {
      i3 = (HEAP32[gb + 46040 + 116 >> 2] | 0) + (i1 << 4) | 0;
      HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
      HEAP32[i9 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
      HEAP32[i9 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
      HEAP32[i9 + 12 >> 2] = HEAP32[i3 + 12 >> 2];
      HEAP32[i9 + 24 >> 2] = 255;
      HEAP32[i9 + 20 >> 2] = 160;
      HEAP32[i9 + 16 >> 2] = 0;
      __Z11ScaleColorsRiS_S_i(i9 + 24 | 0, i9 + 20 | 0, i9 + 16 | 0, ~~((d4 - d6) * 80.0 < 255.0 ? (d4 - d6) * 80.0 : 255.0));
      i3 = HEAP32[gb + 92140 + 192 >> 2] | 0;
      i3 = (HEAP32[gb + 46040 + 8116 >> 2] | 0) + -32 + (Math_imul(i3, -2) | 0) - (Math_imul(i3 + 5 | 0, i7) | 0) | 0;
      i5 = (HEAP32[gb + 46040 + 8112 >> 2] | 0) + -10 - (HEAP32[i9 + 4 >> 2] | 0) + (HEAP32[i9 >> 2] | 0) | 0;
      i1 = HEAP32[i2 >> 2] | 0;
      if ((i1 | 0) < 0) i1 = 0; else i1 = HEAP32[(HEAP32[gb + 46040 + 112 >> 2] | 0) + (i1 << 2) >> 2] | 0;
      mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, i1 | 0, HEAP32[i9 + 24 >> 2] | 0, HEAP32[i9 + 20 >> 2] | 0, HEAP32[i9 + 16 >> 2] | 0);
      mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i5 | 0, i3 | 0, i9 | 0);
     }
     break L3;
    }
   default:
    break L3;
   }
  } while (0);
  i7 = i7 + 1 | 0;
 } while ((i7 | 0) < 12);
 STACKTOP = i9;
 return 1;
}

function __ZN13CHudSpectator17DrawOverviewLayerEv(i16) {
 i16 = i16 | 0;
 var i1 = 0, d2 = 0.0, i3 = 0, i4 = 0, i5 = 0, d6 = 0.0, d7 = 0.0, i8 = 0, d9 = 0.0, d10 = 0.0, i11 = 0, d12 = 0.0, d13 = 0.0, i14 = 0, d15 = 0.0, i17 = 0, i18 = 0, i19 = 0;
 i17 = (HEAP32[i16 + 4708 >> 2] | 0) != 0;
 i14 = mftCall_ii(HEAP32[gb + 92340 + 248 >> 2] | 0, HEAP32[i16 + 4680 >> 2] | 0) | 0;
 if (i17) {
  i19 = ~~+Math_sqrt(+(+((HEAP32[(HEAP32[i16 + 4708 >> 2] | 0) + 72 >> 2] | 0) / 12 | 0 | 0)));
  i18 = i19 << 2;
  i19 = i19 * 3 | 0;
 } else {
  i18 = 8;
  i19 = 6;
 }
 d12 = +HEAPF32[i16 + 1468 >> 2];
 d13 = +HEAPF32[i16 + 1468 + 4 >> 2];
 d15 = +HEAPF32[i16 + 1488 >> 2] * (90.0 - +HEAPF32[gb + 116248 >> 2]) * .011111111380159855;
 mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 4 >> 2] | 0, 2);
 mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 40 >> 2] | 0, 1);
 mftCall_vdddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 16 >> 2] | 0, 1.0, 1.0, 1.0, 1.0);
 d2 = +HEAPF32[i16 + 1480 >> 2];
 if (!(HEAP32[i16 + 1748 >> 2] | 0)) {
  d9 = -(8192.0 / d2) / +(i18 | 0);
  d10 = -(8192.0 / (d2 * 1.3333333730697632)) / +(i19 | 0);
  if ((i19 | 0) > 0) {
   i8 = (i18 | 0) > 0;
   i1 = 0;
   i11 = 0;
   d6 = d12 + 4096.0 / (d2 * 1.3333333730697632);
   while (1) {
    if (i8) {
     d2 = d9 + d6;
     i4 = i1;
     i5 = 0;
     d7 = d13 + 4096.0 / +HEAPF32[i16 + 1480 >> 2];
     while (1) {
      i3 = HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 44 >> 2] | 0;
      if (i17) mftCall_iii(i3 | 0, HEAP32[i16 + 4708 >> 2] | 0, i4 | 0) | 0; else mftCall_iii(i3 | 0, i14 | 0, 0) | 0;
      mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 8 >> 2] | 0, 2);
      mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 0.0, 0.0);
      mftCall_vddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 32 >> 2] | 0, +d6, +d7, +d15);
      mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 0.0, 1.0);
      mftCall_vddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 32 >> 2] | 0, +d2, +d7, +d15);
      mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 1.0, 1.0);
      d7 = d10 + d7;
      mftCall_vddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 32 >> 2] | 0, +d2, +d7, +d15);
      mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 1.0, 0.0);
      mftCall_vddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 32 >> 2] | 0, +d6, +d7, +d15);
      mftCall_v(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 12 >> 2] | 0);
      i5 = i5 + 1 | 0;
      if ((i5 | 0) == (i18 | 0)) break; else i4 = i4 + 1 | 0;
     }
     i1 = i1 + i18 | 0;
    } else d2 = d9 + d6;
    i11 = i11 + 1 | 0;
    if ((i11 | 0) == (i19 | 0)) break; else d6 = d2;
   }
  }
 } else {
  d9 = 8192.0 / d2 / +(i18 | 0);
  d10 = -(8192.0 / (d2 * 1.3333333730697632)) / +(i19 | 0);
  if ((i19 | 0) > 0) {
   i8 = (i18 | 0) > 0;
   i1 = 0;
   i11 = 0;
   d7 = d13 + 4096.0 / (d2 * 1.3333333730697632);
   while (1) {
    if (i8) {
     d2 = d10 + d7;
     i4 = i1;
     i5 = 0;
     d6 = d12 - 4096.0 / +HEAPF32[i16 + 1480 >> 2];
     while (1) {
      i3 = HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 44 >> 2] | 0;
      if (i17) mftCall_iii(i3 | 0, HEAP32[i16 + 4708 >> 2] | 0, i4 | 0) | 0; else mftCall_iii(i3 | 0, i14 | 0, 0) | 0;
      mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 8 >> 2] | 0, 2);
      mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 0.0, 0.0);
      mftCall_vddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 32 >> 2] | 0, +d6, +d7, +d15);
      mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 1.0, 0.0);
      d13 = d6;
      d6 = d9 + d6;
      mftCall_vddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 32 >> 2] | 0, +d6, +d7, +d15);
      mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 1.0, 1.0);
      mftCall_vddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 32 >> 2] | 0, +d6, +d2, +d15);
      mftCall_vdd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 24 >> 2] | 0, 0.0, 1.0);
      mftCall_vddd(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 32 >> 2] | 0, +d13, +d2, +d15);
      mftCall_v(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 12 >> 2] | 0);
      i5 = i5 + 1 | 0;
      if ((i5 | 0) == (i18 | 0)) break; else i4 = i4 + 1 | 0;
     }
     i1 = i1 + i18 | 0;
    } else d2 = d10 + d7;
    i11 = i11 + 1 | 0;
    if ((i11 | 0) == (i19 | 0)) break; else d7 = d2;
   }
  }
 }
 return;
}

function _EV_FireCrossbow2(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, d5 = 0.0, i6 = 0, d7 = 0.0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 HEAP32[i3 + 48 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i3 + 48 + 4 >> 2] = HEAP32[i1 + 12 >> 2];
 HEAP32[i3 + 48 + 8 >> 2] = HEAP32[i1 + 16 >> 2];
 HEAP32[i3 + 36 >> 2] = HEAP32[i1 + 20 >> 2];
 HEAP32[i3 + 36 + 4 >> 2] = HEAP32[i1 + 24 >> 2];
 HEAP32[i3 + 36 + 8 >> 2] = HEAP32[i1 + 28 >> 2];
 mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i3 + 36 | 0, i3 + 128 | 0, i3 + 140 | 0, i3 + 152 | 0);
 __Z17EV_GetGunPositionP12event_args_sPfS1_(i1, i3 + 176 | 0, i3 + 48 | 0);
 _VectorMA(i3 + 176 | 0, 8192.0, i3 + 128 | 0, i3 + 164 | 0);
 i4 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0;
 i6 = (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 15) | 0) + 93 | 0;
 mftCall_viiiiddii(i4 | 0, i2 | 0, i3 + 48 | 0, 1, gb + 37180 | 0, 1.0, .800000011920929, 0, i6 | 0);
 i6 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0;
 d5 = +mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, .949999988079071, 1.0);
 i4 = (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 15) | 0) + 93 | 0;
 mftCall_viiiiddii(i6 | 0, i2 | 0, i3 + 48 | 0, 3, gb + 37203 | 0, +d5, .800000011920929, 0, i4 | 0);
 do if (__Z10EV_IsLocali(i2) | 0) {
  if (HEAP32[i1 + 56 >> 2] | 0) {
   mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0, 4, 1);
   break;
  }
  if (HEAP32[i1 + 60 >> 2] | 0) mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0, 6, 1);
 } while (0);
 mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 44 >> 2] | 0);
 mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 52 >> 2] | 0, i2 + -1 | 0);
 mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 56 >> 2] | 0, 2);
 mftCall_viiiii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 60 >> 2] | 0, i3 + 176 | 0, i3 + 164 | 0, 2, -1, i3 + 60 | 0);
 L8 : do if (+HEAPF32[i3 + 60 + 16 >> 2] < 1.0) {
  i1 = mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 36 >> 2] | 0, HEAP32[i3 + 60 + 48 >> 2] | 0) | 0;
  if ((HEAP32[i1 + 96 >> 2] | 0) != 4) switch (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 1) | 0) {
  case 0:
   {
    mftCall_viiiiddii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0, i2 | 0, i3 + 60 + 20 | 0, 4, gb + 37228 | 0, 1.0, .800000011920929, 0, 100);
    break L8;
   }
  case 1:
   {
    mftCall_viiiiddii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0, i2 | 0, i3 + 60 + 20 | 0, 4, gb + 37253 | 0, 1.0, .800000011920929, 0, 100);
    break L8;
   }
  default:
   break L8;
  }
  if (!(HEAP32[i1 + 104 >> 2] | 0)) {
   i6 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0;
   i2 = i3 + 60 + 20 | 0;
   d5 = +mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, .949999988079071, 1.0);
   mftCall_viiiiddii(i6 | 0, 0, i2 | 0, 4, gb + 37278 | 0, +d5, .800000011920929, 0, 100);
   if ((mftCall_iii(HEAP32[gb + 92340 + 228 >> 2] | 0, i2 | 0, 0) | 0) != -3) mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 136 >> 2] | 0, i2 | 0);
   i1 = mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 12 >> 2] | 0, gb + 37300 | 0) | 0;
   _VectorAngles(i3 + 128 | 0, i3 + 24 | 0);
   i6 = HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 192 >> 2] | 0;
   d7 = +HEAPF32[i3 + 60 + 24 >> 2] - +HEAPF32[i3 + 128 + 4 >> 2] * 10.0;
   d5 = +HEAPF32[i3 + 60 + 28 >> 2] - +HEAPF32[i3 + 128 + 8 >> 2] * 10.0;
   HEAPF32[i3 + 12 >> 2] = +HEAPF32[i2 >> 2] - +HEAPF32[i3 + 128 >> 2] * 10.0;
   HEAPF32[i3 + 12 + 4 >> 2] = d7;
   HEAPF32[i3 + 12 + 8 >> 2] = d5;
   HEAPF32[i3 >> 2] = 0.0;
   HEAPF32[i3 + 4 >> 2] = 0.0;
   HEAPF32[i3 + 8 >> 2] = 0.0;
   i1 = mftCall_iiiidii(i6 | 0, i3 + 12 | 0, i3 | 0, i3 + 24 | 0, 5.0, i1 | 0, 0) | 0;
   if (i1 | 0) {
    HEAP32[i1 >> 2] = HEAP32[i1 >> 2] | 524288;
    d5 = +HEAPF32[i3 + 60 + 24 >> 2] - +HEAPF32[i3 + 128 + 4 >> 2] * 10.0;
    d7 = +HEAPF32[i3 + 60 + 28 >> 2] - +HEAPF32[i3 + 128 + 8 >> 2] * 10.0;
    HEAPF32[i1 + 368 >> 2] = +HEAPF32[i2 >> 2] - +HEAPF32[i3 + 128 >> 2] * 10.0;
    HEAPF32[i1 + 372 >> 2] = d5;
    HEAPF32[i1 + 376 >> 2] = d7;
    HEAP32[i1 + 380 >> 2] = HEAP32[i3 + 24 >> 2];
    HEAP32[i1 + 380 + 4 >> 2] = HEAP32[i3 + 24 + 4 >> 2];
    HEAP32[i1 + 380 + 8 >> 2] = HEAP32[i3 + 24 + 8 >> 2];
    HEAP32[i1 + 40 >> 2] = fb + 1;
   }
  }
 } while (0);
 mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 48 >> 2] | 0);
 STACKTOP = i3;
 return;
}

function runPostSets14() {
 var i1 = 0;
 HEAP32[gb + 22868 >> 2] = fb + 18;
 HEAP32[gb + 22872 >> 2] = fb + 6;
 HEAP32[gb + 22876 >> 2] = fb + 7;
 HEAP32[gb + 22880 >> 2] = fb + 8;
 HEAP32[gb + 22884 >> 2] = fb + 4;
 HEAP32[gb + 22888 >> 2] = fb + 19;
 HEAP32[gb + 22892 >> 2] = fb + 9;
 HEAP32[gb + 22896 >> 2] = fb + 10;
 HEAP32[gb + 22900 >> 2] = fb + 52;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 248 >> 2] = (HEAP32[gb + 248 >> 2] | 0) + i1;
 HEAP32[gb + 252 >> 2] = (HEAP32[gb + 252 >> 2] | 0) + (gb + 37984 | 0);
 HEAP32[gb + 256 >> 2] = (HEAP32[gb + 256 >> 2] | 0) + (gb + 128 | 0);
 HEAP32[gb + 22904 >> 2] = (HEAP32[gb + 22904 >> 2] | 0) + (gb + 33184 | 0);
 HEAP32[gb + 23108 >> 2] = (HEAP32[gb + 23108 >> 2] | 0) + (gb + 18040 | 0);
 HEAP32[gb + 23368 >> 2] = (HEAP32[gb + 23368 >> 2] | 0) + (gb + 29744 | 0);
 HEAP32[gb + 23576 >> 2] = (HEAP32[gb + 23576 >> 2] | 0) + (gb + 28656 | 0);
 HEAP32[gb + 23784 >> 2] = (HEAP32[gb + 23784 >> 2] | 0) + (gb + 17432 | 0);
 HEAP32[gb + 23988 >> 2] = (HEAP32[gb + 23988 >> 2] | 0) + (gb + 31840 | 0);
 HEAP32[gb + 24200 >> 2] = (HEAP32[gb + 24200 >> 2] | 0) + (gb + 30352 | 0);
 HEAP32[gb + 24412 >> 2] = (HEAP32[gb + 24412 >> 2] | 0) + (gb + 19036 | 0);
 HEAP32[gb + 24632 >> 2] = (HEAP32[gb + 24632 >> 2] | 0) + (gb + 18408 | 0);
 HEAP32[gb + 24868 >> 2] = (HEAP32[gb + 24868 >> 2] | 0) + (gb + 28288 | 0);
 HEAP32[gb + 25080 >> 2] = (HEAP32[gb + 25080 >> 2] | 0) + (gb + 19644 | 0);
 HEAP32[gb + 25276 >> 2] = (HEAP32[gb + 25276 >> 2] | 0) + (gb + 31472 | 0);
 HEAP32[gb + 25472 >> 2] = (HEAP32[gb + 25472 >> 2] | 0) + (gb + 32816 | 0);
 HEAP32[gb + 25672 >> 2] = (HEAP32[gb + 25672 >> 2] | 0) + (gb + 32448 | 0);
 HEAP32[gb + 25880 >> 2] = (HEAP32[gb + 25880 >> 2] | 0) + (gb + 264 | 0);
 HEAP32[gb + 25884 >> 2] = fb + 75;
 HEAP32[gb + 25888 >> 2] = fb + 76;
 HEAP32[gb + 25892 >> 2] = fb + 18;
 HEAP32[gb + 25896 >> 2] = fb + 53;
 HEAP32[gb + 25900 >> 2] = fb + 54;
 HEAP32[gb + 25904 >> 2] = fb + 75;
 HEAP32[gb + 25908 >> 2] = fb + 3;
 HEAP32[gb + 25912 >> 2] = fb + 23;
 HEAP32[gb + 25916 >> 2] = fb + 76;
 HEAP32[gb + 25920 >> 2] = fb + 2;
 HEAP32[gb + 25924 >> 2] = fb + 3;
 HEAP32[gb + 25928 >> 2] = fb + 3;
 HEAP32[gb + 25932 >> 2] = fb + 3;
 HEAP32[gb + 25936 >> 2] = fb + 8;
 HEAP32[gb + 25940 >> 2] = fb + 67;
 HEAP32[gb + 25944 >> 2] = fb + 1;
 HEAP32[gb + 25948 >> 2] = fb + 3;
 HEAP32[gb + 25952 >> 2] = fb + 49;
 HEAP32[gb + 25956 >> 2] = fb + 5;
 HEAP32[gb + 25960 >> 2] = fb + 47;
 HEAP32[gb + 25964 >> 2] = fb + 9;
 HEAP32[gb + 25968 >> 2] = fb + 10;
 HEAP32[gb + 25972 >> 2] = fb + 55;
 HEAP32[gb + 25976 >> 2] = fb + 56;
 HEAP32[gb + 25980 >> 2] = fb + 2;
 HEAP32[gb + 25984 >> 2] = fb + 2;
 HEAP32[gb + 25988 >> 2] = fb + 50;
 HEAP32[gb + 25992 >> 2] = fb + 5;
 HEAP32[gb + 25996 >> 2] = fb + 6;
 HEAP32[gb + 26e3 >> 2] = fb + 3;
 HEAP32[gb + 26004 >> 2] = fb + 77;
 HEAP32[gb + 26008 >> 2] = fb + 78;
 HEAP32[gb + 26012 >> 2] = fb + 7;
 HEAP32[gb + 26016 >> 2] = fb + 77;
 HEAP32[gb + 26020 >> 2] = fb + 78;
 HEAP32[gb + 26024 >> 2] = fb + 10;
 HEAP32[gb + 26028 >> 2] = fb + 11;
 HEAP32[gb + 26032 >> 2] = fb + 8;
 HEAP32[gb + 26036 >> 2] = fb + 12;
 HEAP32[gb + 26040 >> 2] = fb + 79;
 HEAP32[gb + 26044 >> 2] = fb + 80;
 HEAP32[gb + 26048 >> 2] = fb + 81;
 HEAP32[gb + 26052 >> 2] = fb + 16;
 HEAP32[gb + 26056 >> 2] = fb + 8;
 HEAP32[gb + 26060 >> 2] = fb + 4;
 HEAP32[gb + 26064 >> 2] = fb + 1;
 HEAP32[gb + 26068 >> 2] = fb + 5;
 HEAP32[gb + 26072 >> 2] = fb + 46;
 HEAP32[gb + 26076 >> 2] = fb + 9;
 HEAP32[gb + 26080 >> 2] = fb + 82;
 HEAP32[gb + 26084 >> 2] = fb + 6;
 HEAP32[gb + 26088 >> 2] = fb + 7;
 HEAP32[gb + 26092 >> 2] = fb + 8;
 HEAP32[gb + 26096 >> 2] = fb + 11;
 HEAP32[gb + 26100 >> 2] = fb + 83;
 HEAP32[gb + 26104 >> 2] = fb + 9;
 HEAP32[gb + 26108 >> 2] = fb + 10;
 HEAP32[gb + 26112 >> 2] = fb + 19;
 HEAP32[gb + 26116 >> 2] = fb + 20;
 HEAP32[gb + 26120 >> 2] = fb + 50;
 HEAP32[gb + 26124 >> 2] = fb + 84;
 HEAP32[gb + 26128 >> 2] = fb + 1;
 HEAP32[gb + 26132 >> 2] = fb + 51;
 HEAP32[gb + 26136 >> 2] = fb + 37;
 HEAP32[gb + 26140 >> 2] = fb + 52;
 HEAP32[gb + 26144 >> 2] = fb + 53;
 HEAP32[gb + 26148 >> 2] = fb + 54;
 HEAP32[gb + 26152 >> 2] = fb + 55;
 HEAP32[gb + 26156 >> 2] = fb + 54;
 HEAP32[gb + 26160 >> 2] = fb + 38;
 HEAP32[gb + 26164 >> 2] = fb + 39;
 HEAP32[gb + 26168 >> 2] = fb + 1;
 runPostSets15();
}

function __ZN8CHudAmmo4DrawEf(i11, d2) {
 i11 = i11 | 0;
 d2 = +d2;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 do if ((HEAP32[gb + 46040 + 8640 >> 2] | 0) < 0) if (!(HEAP32[gb + 46040 + 84 >> 2] & 5)) {
  __ZN8CHudAmmo9DrawWListEf(i11, 0.0) | 0;
  __ZN15HistoryResource15DrawAmmoHistoryEf(gb + 92140 | 0, d2) | 0;
  if (!(HEAP32[i11 + 16 >> 2] & 1)) i1 = 0; else {
   i8 = HEAP32[i11 + 28 >> 2] | 0;
   if (!i8) i1 = 0; else {
    if ((HEAP32[i8 + 128 >> 2] | 0) < 0) if ((HEAP32[i8 + 132 >> 2] | 0) < 0) {
     i1 = 0;
     break;
    }
    i10 = HEAP32[gb + 46040 + 8652 >> 2] | 0;
    i4 = HEAP32[gb + 46040 + 116 >> 2] | 0;
    i10 = (HEAP32[i4 + (i10 << 4) + 4 >> 2] | 0) - (HEAP32[i4 + (i10 << 4) >> 2] | 0) | 0;
    d2 = +HEAPF32[i11 + 20 >> 2];
    i4 = d2 < 100.0 ? 100 : ~~d2;
    if (d2 > 0.0) HEAPF32[i11 + 20 >> 2] = d2 - +HEAPF64[gb + 46040 + 48 >> 3] * 20.0;
    HEAP32[i12 + 8 >> 2] = 255;
    HEAP32[i12 + 4 >> 2] = 160;
    HEAP32[i12 >> 2] = 0;
    __Z11ScaleColorsRiS_S_i(i12 + 8 | 0, i12 + 4 | 0, i12, i4);
    i9 = HEAP32[gb + 46040 + 108 >> 2] | 0;
    i9 = (HEAP32[gb + 46040 + 8116 >> 2] | 0) - i9 + ((i9 | 0) / -2 | 0) | 0;
    i1 = HEAP32[i11 + 28 >> 2] | 0;
    if ((HEAP32[i1 + 128 >> 2] | 0) > 0) {
     i7 = (HEAP32[i1 + 212 >> 2] | 0) - (HEAP32[i1 + 216 >> 2] | 0) | 0;
     i1 = HEAP32[i8 + 160 >> 2] | 0;
     i3 = HEAP32[gb + 46040 + 8112 >> 2] | 0;
     if ((i1 | 0) > -1) {
      i3 = (__ZN4CHud13DrawHudNumberEiiiiiii(gb + 46040 | 0, i7 - (i10 << 3) + i3 | 0, i9, 5, i1, HEAP32[i12 + 8 >> 2] | 0, HEAP32[i12 + 4 >> 2] | 0, HEAP32[i12 >> 2] | 0) | 0) + ((i10 | 0) / 2 | 0) | 0;
      HEAP32[i12 + 8 >> 2] = 255;
      HEAP32[i12 + 4 >> 2] = 160;
      HEAP32[i12 >> 2] = 0;
      mftCall_viiiiiiii(HEAP32[gb + 92340 + 44 >> 2] | 0, i3 | 0, i9 | 0, (i10 | 0) / 10 | 0 | 0, HEAP32[gb + 46040 + 108 >> 2] | 0, 255, 160, 0, i4 | 0);
      __Z11ScaleColorsRiS_S_i(i12 + 8 | 0, i12 + 4 | 0, i12, i4);
      i1 = HEAP32[i8 + 128 >> 2] | 0;
      if ((i1 | 0) < 0) i1 = 0; else i1 = HEAP32[gb + 81328 + 10640 + (i1 << 2) >> 2] | 0;
      i14 = HEAP32[i12 + 8 >> 2] | 0;
      i13 = HEAP32[i12 + 4 >> 2] | 0;
      i7 = HEAP32[i12 >> 2] | 0;
      i4 = i14;
      i5 = i13;
      i6 = i7;
      i1 = __ZN4CHud13DrawHudNumberEiiiiiii(gb + 46040 | 0, ((i10 | 0) / 10 | 0) + ((i10 | 0) / 2 | 0) + i3 | 0, i9, 5, i1, i14, i13, i7) | 0;
     } else {
      i1 = HEAP32[i8 + 128 >> 2] | 0;
      if ((i1 | 0) < 0) i1 = 0; else i1 = HEAP32[gb + 81328 + 10640 + (i1 << 2) >> 2] | 0;
      i15 = HEAP32[i12 + 8 >> 2] | 0;
      i13 = HEAP32[i12 + 4 >> 2] | 0;
      i14 = HEAP32[i12 >> 2] | 0;
      i4 = i15;
      i5 = i13;
      i6 = i14;
      i1 = __ZN4CHud13DrawHudNumberEiiiiiii(gb + 46040 | 0, i7 - (i10 << 2) + i3 | 0, i9, 5, i1, i15, i13, i14) | 0;
     }
     i14 = HEAP32[i11 + 28 >> 2] | 0;
     i15 = ((HEAP32[i14 + 224 >> 2] | 0) - (HEAP32[i14 + 220 >> 2] | 0) | 0) / 8 | 0;
     mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, HEAP32[i14 + 208 >> 2] | 0, i4 | 0, i5 | 0, i6 | 0);
     mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i1 | 0, i9 - i15 | 0, (HEAP32[i11 + 28 >> 2] | 0) + 212 | 0);
    }
    i1 = HEAP32[i8 + 132 >> 2] | 0;
    if ((i1 | 0) > 0) {
     i3 = HEAP32[i11 + 28 >> 2] | 0;
     i1 = HEAP32[gb + 81328 + 10640 + (i1 << 2) >> 2] | 0;
     if ((i1 | 0) > 0) {
      i15 = HEAP32[gb + 46040 + 108 >> 2] | 0;
      i7 = HEAP32[i12 + 8 >> 2] | 0;
      i8 = HEAP32[i12 + 4 >> 2] | 0;
      i13 = HEAP32[i12 >> 2] | 0;
      i14 = __ZN4CHud13DrawHudNumberEiiiiiii(gb + 46040 | 0, (HEAP32[i3 + 232 >> 2] | 0) - (i10 << 2) - (HEAP32[i3 + 236 >> 2] | 0) + (HEAP32[gb + 46040 + 8112 >> 2] | 0) | 0, i9 - i15 + ((i15 | 0) / -4 | 0) | 0, 5, i1, i7, i8, i13) | 0;
      mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, HEAP32[(HEAP32[i11 + 28 >> 2] | 0) + 228 >> 2] | 0, i7 | 0, i8 | 0, i13 | 0);
      i1 = HEAP32[i11 + 28 >> 2] | 0;
      mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i14 | 0, i9 - i15 + ((i15 | 0) / -4 | 0) - (((HEAP32[i1 + 244 >> 2] | 0) - (HEAP32[i1 + 240 >> 2] | 0) | 0) / 8 | 0) | 0, i1 + 232 | 0);
      i1 = 1;
     } else i1 = 1;
    } else i1 = 1;
   }
  }
 } else i1 = 1; else i1 = 1; while (0);
 STACKTOP = i12;
 return i1 | 0;
}

function __ZN13CHudStatusBar17ParseStatusStringEi(i8, i7) {
 i8 = i8 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 i1 = i9 + 40 | 0;
 i2 = i1 + 128 | 0;
 do {
  HEAP8[i1 >> 0] = 0;
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) < (i2 | 0));
 __ZN15CHudTextMessage18LocaliseTextStringEPKcPci(i8 + 20 + (i7 << 7) | 0, i9 + 40 | 0, 128) | 0;
 i1 = i8 + 276 + (i7 << 7) | 0;
 i2 = i1 + 128 | 0;
 do {
  HEAP32[i1 >> 2] = 0;
  i1 = i1 + 4 | 0;
 } while ((i1 | 0) < (i2 | 0));
 i1 = HEAP8[i9 + 40 >> 0] | 0;
 L1 : do if (i1 << 24 >> 24) {
  i5 = i8 + 276 + (i7 << 7) | 0;
  i2 = i9 + 40 | 0;
  L3 : while (1) {
   i4 = (i5 - (i8 + 276 + (i7 << 7)) | 0) > 127;
   L5 : while (1) {
    if (i1 << 24 >> 24 == 10) {
     i1 = i2;
     while (1) {
      i2 = i1 + 1 | 0;
      i1 = HEAP8[i2 >> 0] | 0;
      if (i1 << 24 >> 24 == 10) i1 = i2; else break;
     }
    }
    if (i4 | (i2 - (i9 + 40) | 0) > 127) break L1;
    i3 = _atoi(i2 | 0) | 0;
    if (i3 >>> 0 < 8) if (!(HEAP32[i8 + 532 + (i3 << 2) >> 2] | 0)) i6 = 32; else {
     if ((i1 + -48 & 255) < 10) {
      i1 = i2;
      while (1) {
       i2 = i1 + 1 | 0;
       i1 = HEAP8[i2 >> 0] | 0;
       if ((i1 + -48 & 255) < 10) i1 = i2; else break;
      }
     }
     switch (i1 << 24 >> 24) {
     case 0:
     case 10:
      break;
     default:
      break L5;
     }
    } else i6 = 32;
    L19 : do if ((i6 | 0) == 32) while (1) {
     i6 = 0;
     switch (i1 << 24 >> 24) {
     case 10:
     case 0:
      break L19;
     default:
      {}
     }
     i6 = i2 + 1 | 0;
     i1 = HEAP8[i6 >> 0] | 0;
     i2 = i6;
     i6 = 32;
    } while (0);
    if (!(i1 << 24 >> 24)) break L1;
   }
   while (1) {
    L26 : while (1) {
     switch (i1 << 24 >> 24) {
     case 0:
      break L1;
     case 10:
      {
       i1 = 10;
       continue L3;
      }
     case 37:
      break;
     default:
      {
       i6 = 15;
       break L26;
      }
     }
     i4 = HEAP8[i2 + 1 >> 0] | 0;
     if (i4 << 24 >> 24 == 37) {
      i6 = 18;
      break;
     }
     i2 = i2 + 2 | 0;
     i3 = _atoi(i2 | 0) | 0;
     while (1) {
      i1 = HEAP8[i2 >> 0] | 0;
      if ((i1 + -48 & 255) < 10) i2 = i2 + 1 | 0; else break;
     }
     if (i3 >>> 0 < 8) {
      i6 = 22;
      break;
     }
    }
    if ((i6 | 0) == 15) {
     i6 = 0;
     HEAP8[i5 >> 0] = i1;
     i3 = i5 + 1 | 0;
     i2 = i2 + 1 | 0;
    } else if ((i6 | 0) == 18) {
     i6 = 0;
     HEAP8[i5 >> 0] = 37;
     i3 = i5 + 1 | 0;
     i2 = i2 + 2 | 0;
    } else if ((i6 | 0) == 22) {
     i6 = 0;
     i3 = HEAP32[i8 + 532 + (i3 << 2) >> 2] | 0;
     L36 : do switch (i4 << 24 >> 24 | 0) {
     case 112:
      {
       i1 = gb + 54736 + (i3 << 5) | 0;
       mftCall_vii(HEAP32[gb + 92340 + 84 >> 2] | 0, i3 | 0, i1 | 0);
       i1 = HEAP32[i1 >> 2] | 0;
       if (!i1) {
        HEAP8[i9 + 8 >> 0] = HEAP8[gb + 43526 >> 0] | 0;
        HEAP8[i9 + 8 + 1 >> 0] = HEAP8[gb + 43526 + 1 >> 0] | 0;
        HEAP8[i9 + 8 + 2 >> 0] = HEAP8[gb + 43526 + 2 >> 0] | 0;
        HEAP8[i9 + 8 + 3 >> 0] = HEAP8[gb + 43526 + 3 >> 0] | 0;
        HEAP8[i9 + 8 + 4 >> 0] = HEAP8[gb + 43526 + 4 >> 0] | 0;
        HEAP8[i9 + 8 + 5 >> 0] = HEAP8[gb + 43526 + 5 >> 0] | 0;
        HEAP8[i9 + 8 + 6 >> 0] = HEAP8[gb + 43526 + 6 >> 0] | 0;
        i6 = 28;
        break L36;
       } else {
        _strncpy(i9 + 8 | 0, i1 | 0, 32) | 0;
        HEAP32[i8 + 568 + (i7 << 2) >> 2] = __Z14GetClientColori(i3) | 0;
        i6 = 28;
        break L36;
       }
      }
     case 105:
      {
       HEAP32[i9 >> 2] = i3;
       _sprintf(i9 + 8 | 0, gb + 44773 | 0, i9 | 0) | 0;
       i6 = 28;
       break;
      }
     default:
      {
       HEAP8[i9 + 8 >> 0] = 0;
       i1 = i5;
      }
     } while (0);
     L43 : do if ((i6 | 0) == 28) {
      i6 = 0;
      i1 = HEAP8[i9 + 8 >> 0] | 0;
      if (!(i1 << 24 >> 24)) i1 = i5; else {
       i3 = i1;
       i4 = i9 + 8 | 0;
       i1 = i5;
       do {
        if ((i1 - (i8 + 276 + (i7 << 7)) | 0) >= 128) break L43;
        HEAP8[i1 >> 0] = i3;
        i4 = i4 + 1 | 0;
        i1 = i1 + 1 | 0;
        i3 = HEAP8[i4 >> 0] | 0;
       } while (i3 << 24 >> 24 != 0);
      }
     } while (0);
     i3 = i1;
    }
    i1 = HEAP8[i2 >> 0] | 0;
    i5 = i3;
   }
  }
 } while (0);
 STACKTOP = i9;
 return;
}

function __ZN20CStudioModelRenderer20StudioSetUpTransformEi(i11, i4) {
 i11 = i11 | 0;
 i4 = i4 | 0;
 var d1 = 0.0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, i12 = 0, i13 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = HEAP32[i11 + 48 >> 2] | 0;
 i2 = HEAP32[i3 + 2888 >> 2] | 0;
 HEAP32[i12 >> 2] = i2;
 i6 = HEAP32[i3 + 2888 + 4 >> 2] | 0;
 HEAP32[i12 + 4 >> 2] = i6;
 HEAP32[i12 + 8 >> 2] = HEAP32[i3 + 2888 + 8 >> 2];
 HEAP32[i12 + 12 + 8 >> 2] = HEAP32[i3 + 716 + 8 >> 2];
 i5 = HEAP32[i3 + 716 >> 2] | 0;
 HEAP32[i12 + 12 >> 2] = i5;
 HEAP32[i12 + 12 + 4 >> 2] = HEAP32[i3 + 716 + 4 >> 2];
 d10 = (HEAP32[tempDoublePtr >> 2] = i2, +HEAPF32[tempDoublePtr >> 2]);
 d1 = (HEAP32[tempDoublePtr >> 2] = i5, +HEAPF32[tempDoublePtr >> 2]);
 d9 = (HEAP32[tempDoublePtr >> 2] = i6, +HEAPF32[tempDoublePtr >> 2]);
 switch (HEAP32[i3 + 776 >> 2] | 0) {
 case 4:
  {
   d1 = +HEAPF64[i11 + 8 >> 3];
   d7 = +HEAPF32[i3 + 780 >> 2];
   if (d1 < d7 + 1.0) {
    d8 = +HEAPF32[i3 + 2832 >> 2];
    if (d7 != d8) d1 = (d1 - d7) / (d7 - d8) + -1.0; else d1 = -1.0;
   } else d1 = -1.0;
   d7 = (HEAP32[i11 + 24 >> 2] | 0) == 0 ? 0.0 : d1;
   HEAPF32[i12 >> 2] = d10 + d7 * (d10 - +HEAPF32[i3 + 2844 >> 2]);
   HEAPF32[i12 + 4 >> 2] = d9 + d7 * (d9 - +HEAPF32[i3 + 2844 + 4 >> 2]);
   i2 = 2;
   do {
    HEAPF32[i12 + (i2 << 2) >> 2] = +HEAPF32[i12 + (i2 << 2) >> 2] + d7 * (+HEAPF32[i3 + 2888 + (i2 << 2) >> 2] - +HEAPF32[i3 + 2844 + (i2 << 2) >> 2]);
    i2 = i2 + 1 | 0;
   } while ((i2 | 0) != 3);
   i2 = 0;
   do {
    d1 = +HEAPF32[i3 + 2900 + (i2 << 2) >> 2] - +HEAPF32[i3 + 2856 + (i2 << 2) >> 2];
    if (d1 > 180.0) d1 = d1 + -360.0; else if (d1 < -180.0) d1 = d1 + 360.0;
    i6 = i12 + 12 + (i2 << 2) | 0;
    HEAPF32[i6 >> 2] = +HEAPF32[i6 >> 2] + d7 * d1;
    i2 = i2 + 1 | 0;
   } while ((i2 | 0) != 3);
   d1 = +HEAPF32[i12 + 12 >> 2];
   break;
  }
 case 0:
  break;
 default:
  {
   i6 = HEAP32[i3 + 2900 >> 2] | 0;
   HEAP32[i12 + 12 >> 2] = i6;
   HEAP32[i12 + 12 + 4 >> 2] = HEAP32[i3 + 2900 + 4 >> 2];
   HEAP32[i12 + 12 + 8 >> 2] = HEAP32[i3 + 2900 + 8 >> 2];
   d1 = (HEAP32[tempDoublePtr >> 2] = i6, +HEAPF32[tempDoublePtr >> 2]);
  }
 }
 HEAPF32[i12 + 12 >> 2] = -d1;
 _AngleMatrix(i12 + 12 | 0, HEAP32[i11 + 16544 >> 2] | 0);
 if (!(mftCall_i(HEAP32[gb + 94440 + 160 >> 2] | 0) | 0)) {
  HEAP32[gb + 116128 >> 2] = HEAP32[i11 + 16500 >> 2];
  HEAP32[gb + 116128 + 4 >> 2] = HEAP32[i11 + 16504 >> 2];
  HEAP32[gb + 116128 + 8 >> 2] = HEAP32[i11 + 16508 >> 2];
  HEAP32[gb + 116128 + 16 >> 2] = HEAP32[i11 + 16488 >> 2];
  HEAP32[gb + 116128 + 20 >> 2] = HEAP32[i11 + 16492 >> 2];
  HEAP32[gb + 116128 + 24 >> 2] = HEAP32[i11 + 16496 >> 2];
  _VectorInverse(gb + 116128 + 16 | 0);
  HEAP32[gb + 116128 + 32 >> 2] = HEAP32[i11 + 16512 >> 2];
  HEAP32[gb + 116128 + 36 >> 2] = HEAP32[i11 + 16516 >> 2];
  HEAP32[gb + 116128 + 40 >> 2] = HEAP32[i11 + 16520 >> 2];
  d8 = +HEAPF32[i12 >> 2];
  i6 = HEAP32[i11 + 16544 >> 2] | 0;
  HEAPF32[i6 + 12 >> 2] = d8 - +HEAPF32[i11 + 16524 >> 2];
  d9 = +HEAPF32[i12 + 4 >> 2];
  HEAPF32[i6 + 28 >> 2] = d9 - +HEAPF32[i11 + 16528 >> 2];
  d10 = +HEAPF32[i12 + 8 >> 2];
  HEAPF32[i6 + 44 >> 2] = d10 - +HEAPF32[i11 + 16532 >> 2];
  __Z16ConcatTransformsPA4_fS0_S0_(gb + 116128 | 0, i6, HEAP32[i11 + 16548 >> 2] | 0);
  i6 = (HEAPF32[tempDoublePtr >> 2] = d8, HEAP32[tempDoublePtr >> 2] | 0);
  i3 = (HEAPF32[tempDoublePtr >> 2] = d9, HEAP32[tempDoublePtr >> 2] | 0);
  i2 = (HEAPF32[tempDoublePtr >> 2] = d10, HEAP32[tempDoublePtr >> 2] | 0);
  if (!i4) i4 = i6; else {
   i4 = HEAP32[i11 + 16548 >> 2] | 0;
   i5 = 0;
   do {
    i13 = i4 + (i5 << 2) | 0;
    HEAPF32[i13 >> 2] = +HEAPF32[i11 + 16480 >> 2] * 4.656612873077393e-10 * +HEAPF32[i13 >> 2];
    i13 = i4 + 16 + (i5 << 2) | 0;
    HEAPF32[i13 >> 2] = +HEAPF32[i11 + 16484 >> 2] * 4.656612873077393e-10 * +HEAPF32[i13 >> 2];
    i13 = i4 + 32 + (i5 << 2) | 0;
    HEAPF32[i13 >> 2] = +HEAPF32[i13 >> 2] * 4.656612873077393e-10;
    i5 = i5 + 1 | 0;
   } while ((i5 | 0) != 4);
   i4 = i6;
  }
 } else {
  i4 = HEAP32[i12 >> 2] | 0;
  i3 = HEAP32[i12 + 4 >> 2] | 0;
  i2 = HEAP32[i12 + 8 >> 2] | 0;
 }
 i13 = HEAP32[i11 + 16544 >> 2] | 0;
 HEAP32[i13 + 12 >> 2] = i4;
 HEAP32[i13 + 28 >> 2] = i3;
 HEAP32[i13 + 44 >> 2] = i2;
 STACKTOP = i12;
 return;
}

function _PM_CheckStuck() {
 var i1 = 0, i2 = 0, d3 = 0.0, d4 = 0.0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, d9 = 0.0, d10 = 0.0, d11 = 0.0, i12 = 0, i13 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i8 = HEAP32[gb + 121136 >> 2] | 0;
 i8 = mftCall_iii(HEAP32[i8 + 324956 >> 2] | 0, i8 + 56 | 0, i12 | 0) | 0;
 i2 = HEAP32[gb + 121136 >> 2] | 0;
 L1 : do if ((i8 | 0) == -1) {
  HEAP32[gb + 121164 + (HEAP32[i2 >> 2] << 3) + (HEAP32[i2 + 4 >> 2] << 2) >> 2] = 0;
  i1 = 0;
 } else {
  d9 = +HEAPF32[i2 + 56 >> 2];
  d10 = +HEAPF32[i2 + 60 >> 2];
  d11 = +HEAPF32[i2 + 64 >> 2];
  i1 = HEAP32[i2 + 4 >> 2] | 0;
  do if (!i1) {
   if (i8 | 0) if (!(HEAP32[i2 + 592 + (i8 * 224 | 0) + 48 >> 2] | 0)) {
    i1 = 0;
    break;
   }
   i5 = HEAP32[i2 >> 2] | 0;
   HEAP32[gb + 121164 + (i5 << 3) >> 2] = 0;
   i6 = 0;
   i7 = 0;
   i1 = 0;
   while (1) {
    HEAP32[gb + 121164 + (i5 << 3) + (i6 << 2) >> 2] = i7 + 1;
    i7 = (i7 | 0) % 54 | 0;
    d3 = +HEAPF32[gb + 121420 + (i7 * 12 | 0) + 4 >> 2];
    d4 = +HEAPF32[gb + 121420 + (i7 * 12 | 0) + 8 >> 2];
    HEAPF32[i12 + 68 >> 2] = d9 + +HEAPF32[gb + 121420 + (i7 * 12 | 0) >> 2];
    HEAPF32[i12 + 68 + 4 >> 2] = d10 + d3;
    HEAPF32[i12 + 68 + 8 >> 2] = d11 + d4;
    if ((mftCall_iii(HEAP32[i2 + 324956 >> 2] | 0, i12 + 68 | 0, i12 | 0) | 0) == -1) {
     i5 = 8;
     break;
    }
    i1 = i1 + 1 | 0;
    i2 = HEAP32[gb + 121136 >> 2] | 0;
    if ((i1 | 0) >= 54) {
     i5 = 11;
     break;
    }
    i13 = HEAP32[i2 >> 2] | 0;
    i7 = HEAP32[i2 + 4 >> 2] | 0;
    i5 = i13;
    i6 = i7;
    i7 = HEAP32[gb + 121164 + (i13 << 3) + (i7 << 2) >> 2] | 0;
   }
   if ((i5 | 0) == 8) {
    i1 = HEAP32[gb + 121136 >> 2] | 0;
    HEAP32[gb + 121164 + (HEAP32[i1 >> 2] << 3) + (HEAP32[i1 + 4 >> 2] << 2) >> 2] = 0;
    HEAP32[i1 + 56 >> 2] = HEAP32[i12 + 68 >> 2];
    HEAP32[i1 + 60 >> 2] = HEAP32[i12 + 68 + 4 >> 2];
    HEAP32[i1 + 64 >> 2] = HEAP32[i12 + 68 + 8 >> 2];
    i1 = 0;
    break L1;
   } else if ((i5 | 0) == 11) {
    i1 = HEAP32[i2 + 4 >> 2] | 0;
    break;
   }
  } while (0);
  d3 = +mftCall_d(HEAP32[i2 + 324972 >> 2] | 0);
  i2 = HEAP32[gb + 121136 >> 2] | 0;
  i1 = gb + 122068 + (HEAP32[i2 >> 2] << 3) + (((i1 | 0) == 0 & 1) << 2) | 0;
  if (!(+HEAPF32[i1 >> 2] >= d3 + -.05)) {
   HEAPF32[i1 >> 2] = d3;
   mftCall_vii(HEAP32[i2 + 324976 >> 2] | 0, i8 | 0, i12 | 0);
   i2 = HEAP32[gb + 121136 >> 2] | 0;
   i13 = gb + 121164 + (HEAP32[i2 >> 2] << 3) + (HEAP32[i2 + 4 >> 2] << 2) | 0;
   i1 = HEAP32[i13 >> 2] | 0;
   HEAP32[i13 >> 2] = i1 + 1;
   d3 = +HEAPF32[gb + 121420 + (((i1 | 0) % 54 | 0) * 12 | 0) + 4 >> 2];
   d4 = +HEAPF32[gb + 121420 + (((i1 | 0) % 54 | 0) * 12 | 0) + 8 >> 2];
   HEAPF32[i12 + 68 >> 2] = d9 + +HEAPF32[gb + 121420 + (((i1 | 0) % 54 | 0) * 12 | 0) >> 2];
   HEAPF32[i12 + 68 + 4 >> 2] = d10 + d3;
   HEAPF32[i12 + 68 + 8 >> 2] = d11 + d4;
   i2 = mftCall_iii(HEAP32[i2 + 324956 >> 2] | 0, i12 + 68 | 0, 0) | 0;
   i1 = HEAP32[gb + 121136 >> 2] | 0;
   if ((i2 | 0) == -1) {
    HEAP32[gb + 121164 + (HEAP32[i1 >> 2] << 3) + (HEAP32[i1 + 4 >> 2] << 2) >> 2] = 0;
    HEAP32[i1 + 56 >> 2] = HEAP32[i12 + 68 >> 2];
    HEAP32[i1 + 60 >> 2] = HEAP32[i12 + 68 + 4 >> 2];
    HEAP32[i1 + 64 >> 2] = HEAP32[i12 + 68 + 8 >> 2];
    i1 = 0;
    break;
   }
   if (!(HEAP16[i1 + 283766 >> 1] & 7)) i1 = 1; else if (!(HEAP32[i1 + 592 + (i2 * 224 | 0) + 32 >> 2] | 0)) i1 = 1; else {
    i5 = 0;
    L22 : while (1) {
     d4 = d11 + +(i5 | 0);
     i1 = -8;
     while (1) {
      d3 = d9 + +(i1 | 0);
      i2 = -8;
      while (1) {
       HEAPF32[i12 + 68 >> 2] = d3;
       HEAPF32[i12 + 68 + 4 >> 2] = d10 + +(i2 | 0);
       HEAPF32[i12 + 68 + 8 >> 2] = d4;
       if ((mftCall_iii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 324956 >> 2] | 0, i12 + 68 | 0, 0) | 0) == -1) break L22;
       if ((i2 | 0) > 0) break; else i2 = i2 + 8 | 0;
      }
      if ((i1 | 0) > 0) break; else i1 = i1 + 8 | 0;
     }
     i5 = i5 + 18 | 0;
     if ((i5 | 0) > 72) {
      i1 = 1;
      break L1;
     }
    }
    i1 = HEAP32[gb + 121136 >> 2] | 0;
    HEAP32[i1 + 56 >> 2] = HEAP32[i12 + 68 >> 2];
    HEAP32[i1 + 60 >> 2] = HEAP32[i12 + 68 + 4 >> 2];
    HEAP32[i1 + 64 >> 2] = HEAP32[i12 + 68 + 8 >> 2];
    i1 = 0;
   }
  } else i1 = 1;
 } while (0);
 STACKTOP = i12;
 return i1 | 0;
}

function __ZN15CHudDeathNotice4DrawEf(i12, d11) {
 i12 = i12 | 0;
 d11 = +d11;
 var i1 = 0, d2 = 0.0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, d8 = 0.0, i9 = 0, i10 = 0, i13 = 0, i14 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = 0;
 do {
  i6 = gb + 92912 + (i1 * 156 | 0) | 0;
  i4 = HEAP32[gb + 92912 + (i1 * 156 | 0) + 128 >> 2] | 0;
  if (!i4) break;
  i3 = gb + 92912 + (i1 * 156 | 0) + 144 | 0;
  d2 = +HEAPF32[i3 >> 2];
  do if (d2 < d11) {
   _memmove(i6 | 0, gb + 92912 + ((i1 + 1 | 0) * 156 | 0) | 0, (4 - i1 | 0) * 156 | 0) | 0;
   i1 = i1 + -1 | 0;
  } else {
   d8 = +HEAPF32[gb + 46040 + 36 >> 2] + +(HEAP32[gb + 35040 >> 2] | 0);
   HEAPF32[i3 >> 2] = d2 < d8 ? d2 : d8;
   i10 = ~~(+(HEAP32[gb + 46040 + 8116 >> 2] | 0) * 2.0833334419876337e-03 * 32.0 + .5) + (i1 * 20 | 2) | 0;
   if ((i4 | 0) == -1) i4 = HEAP32[i12 + 20 >> 2] | 0;
   i3 = HEAP32[gb + 46040 + 8112 >> 2] | 0;
   i9 = gb + 92912 + (i1 * 156 | 0) + 64 | 0;
   HEAP32[i13 + 4 >> 2] = 0;
   HEAP32[i13 >> 2] = 0;
   if (+HEAPF32[(HEAP32[gb + 93740 >> 2] | 0) + 12 >> 2] == 1.0) i5 = __ZN4CHud16DrawHudStringLenEPc(0, i9) | 0; else {
    mftCall_viii(HEAP32[gb + 92340 + 116 >> 2] | 0, i9 | 0, i13 + 4 | 0, i13 | 0);
    i5 = HEAP32[i13 + 4 >> 2] | 0;
   }
   i14 = HEAP32[gb + 46040 + 116 >> 2] | 0;
   i5 = (HEAP32[i14 + (i4 << 4) >> 2] | 0) - (HEAP32[i14 + (i4 << 4) + 4 >> 2] | 0) + (i3 - i5) | 0;
   if (!(HEAP32[gb + 92912 + (i1 * 156 | 0) + 132 >> 2] | 0)) {
    HEAP32[i13 + 4 >> 2] = 0;
    HEAP32[i13 >> 2] = 0;
    if (+HEAPF32[(HEAP32[gb + 93740 >> 2] | 0) + 12 >> 2] == 1.0) i3 = __ZN4CHud16DrawHudStringLenEPc(0, i6) | 0; else {
     mftCall_viii(HEAP32[gb + 92340 + 116 >> 2] | 0, i6 | 0, i13 + 4 | 0, i13 | 0);
     i3 = HEAP32[i13 + 4 >> 2] | 0;
    }
    i5 = i5 + -5 - i3 | 0;
    i3 = HEAP32[gb + 92912 + (i1 * 156 | 0) + 148 >> 2] | 0;
    do if (i3 | 0) {
     d7 = +HEAPF32[i3 >> 2];
     d8 = +HEAPF32[i3 + 4 >> 2];
     d2 = +HEAPF32[i3 + 8 >> 2];
     if (+HEAPF32[(HEAP32[gb + 93740 >> 2] | 0) + 12 >> 2] == 1.0) {
      HEAPF32[gb + 93744 >> 2] = d7;
      HEAPF32[gb + 93744 + 4 >> 2] = d8;
      HEAPF32[gb + 93744 + 8 >> 2] = d2;
      break;
     } else {
      mftCall_vddd(HEAP32[gb + 92340 + 112 >> 2] | 0, +d7, +d8, +d2);
      break;
     }
    } while (0);
    if (+HEAPF32[(HEAP32[gb + 93740 >> 2] | 0) + 12 >> 2] == 1.0) i3 = __ZN4CHud13DrawHudStringEiiiPciii(0, i5, i10, 9999, i6, ~~(+HEAPF32[gb + 93744 >> 2] * 255.0), ~~(+HEAPF32[gb + 93744 + 4 >> 2] * 255.0), ~~(+HEAPF32[gb + 93744 + 8 >> 2] * 255.0)) | 0; else i3 = mftCall_iiii(HEAP32[gb + 92340 + 108 >> 2] | 0, i5 | 0, i10 | 0, i6 | 0) | 0;
    i5 = i3 + 5 | 0;
   }
   i6 = (HEAP32[gb + 92912 + (i1 * 156 | 0) + 136 >> 2] | 0) == 0;
   if ((i4 | 0) < 0) i3 = 0; else i3 = HEAP32[(HEAP32[gb + 46040 + 112 >> 2] | 0) + (i4 << 2) >> 2] | 0;
   mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, i3 | 0, (i6 ? 255 : 10) | 0, (i6 ? 80 : 240) | 0, (i6 ? 0 : 10) | 0);
   mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i5 | 0, i10 | 0, (HEAP32[gb + 46040 + 116 >> 2] | 0) + (i4 << 4) | 0);
   i14 = HEAP32[gb + 46040 + 116 >> 2] | 0;
   i4 = (HEAP32[i14 + (i4 << 4) + 4 >> 2] | 0) - (HEAP32[i14 + (i4 << 4) >> 2] | 0) + i5 | 0;
   if (!(HEAP32[gb + 92912 + (i1 * 156 | 0) + 140 >> 2] | 0)) {
    i3 = HEAP32[gb + 92912 + (i1 * 156 | 0) + 152 >> 2] | 0;
    do if (i3 | 0) {
     d7 = +HEAPF32[i3 >> 2];
     d8 = +HEAPF32[i3 + 4 >> 2];
     d2 = +HEAPF32[i3 + 8 >> 2];
     if (+HEAPF32[(HEAP32[gb + 93740 >> 2] | 0) + 12 >> 2] == 1.0) {
      HEAPF32[gb + 93744 >> 2] = d7;
      HEAPF32[gb + 93744 + 4 >> 2] = d8;
      HEAPF32[gb + 93744 + 8 >> 2] = d2;
      break;
     } else {
      mftCall_vddd(HEAP32[gb + 92340 + 112 >> 2] | 0, +d7, +d8, +d2);
      break;
     }
    } while (0);
    if (+HEAPF32[(HEAP32[gb + 93740 >> 2] | 0) + 12 >> 2] == 1.0) {
     __ZN4CHud13DrawHudStringEiiiPciii(0, i4, i10, 9999, i9, ~~(+HEAPF32[gb + 93744 >> 2] * 255.0), ~~(+HEAPF32[gb + 93744 + 4 >> 2] * 255.0), ~~(+HEAPF32[gb + 93744 + 8 >> 2] * 255.0)) | 0;
     break;
    } else {
     mftCall_iiii(HEAP32[gb + 92340 + 108 >> 2] | 0, i4 | 0, i10 | 0, i9 | 0) | 0;
     break;
    }
   }
  } while (0);
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) < 4);
 STACKTOP = i13;
 return 1;
}

function _PM_PushEntity(i17, i1) {
 i17 = i17 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, d13 = 0.0, i14 = 0, i15 = 0, i16 = 0, i18 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 i7 = HEAP32[gb + 121136 >> 2] | 0;
 HEAPF32[i18 + 136 >> 2] = +HEAPF32[i7 + 56 >> 2] + +HEAPF32[i1 >> 2];
 HEAPF32[i18 + 136 + 4 >> 2] = +HEAPF32[i7 + 60 >> 2] + +HEAPF32[i1 + 4 >> 2];
 HEAPF32[i18 + 136 + 8 >> 2] = +HEAPF32[i7 + 64 >> 2] + +HEAPF32[i1 + 8 >> 2];
 mftCall_viiiii(HEAP32[i7 + 324992 >> 2] | 0, i18 + 68 | 0, i7 + 56 | 0, i18 + 136 | 0, 0, -1);
 i7 = HEAP32[i18 + 68 >> 2] | 0;
 HEAP32[i18 + 16 >> 2] = HEAP32[i18 + 68 + 4 >> 2];
 HEAP32[i18 + 16 + 4 >> 2] = HEAP32[i18 + 68 + 4 + 4 >> 2];
 HEAP32[i18 + 16 + 8 >> 2] = HEAP32[i18 + 68 + 4 + 8 >> 2];
 d13 = +HEAPF32[i18 + 68 + 16 >> 2];
 i14 = HEAP32[i18 + 68 + 20 >> 2] | 0;
 i15 = HEAP32[i18 + 68 + 24 >> 2] | 0;
 i16 = HEAP32[i18 + 68 + 28 >> 2] | 0;
 HEAP32[i18 >> 2] = HEAP32[i18 + 68 + 32 >> 2];
 HEAP32[i18 + 4 >> 2] = HEAP32[i18 + 68 + 32 + 4 >> 2];
 HEAP32[i18 + 8 >> 2] = HEAP32[i18 + 68 + 32 + 8 >> 2];
 HEAP32[i18 + 12 >> 2] = HEAP32[i18 + 68 + 32 + 12 >> 2];
 i8 = HEAP32[i18 + 68 + 48 >> 2] | 0;
 i9 = HEAP32[i18 + 68 + 52 >> 2] | 0;
 i10 = HEAP32[i18 + 68 + 56 >> 2] | 0;
 i11 = HEAP32[i18 + 68 + 60 >> 2] | 0;
 i12 = HEAP32[i18 + 68 + 64 >> 2] | 0;
 i2 = HEAP32[gb + 121136 >> 2] | 0;
 HEAP32[i2 + 56 >> 2] = i14;
 HEAP32[i2 + 60 >> 2] = i15;
 HEAP32[i2 + 64 >> 2] = i16;
 if ((i7 | 0) == 0 & d13 < 1.0) {
  HEAP32[i18 + 48 >> 2] = HEAP32[i18 + 16 >> 2];
  HEAP32[i18 + 48 + 4 >> 2] = HEAP32[i18 + 16 + 4 >> 2];
  HEAP32[i18 + 48 + 8 >> 2] = HEAP32[i18 + 16 + 8 >> 2];
  HEAP32[i18 + 32 >> 2] = HEAP32[i18 >> 2];
  HEAP32[i18 + 32 + 4 >> 2] = HEAP32[i18 + 4 >> 2];
  HEAP32[i18 + 32 + 8 >> 2] = HEAP32[i18 + 8 >> 2];
  HEAP32[i18 + 32 + 12 >> 2] = HEAP32[i18 + 12 >> 2];
  i6 = HEAP32[i2 + 283788 >> 2] | 0;
  L3 : do if ((i6 | 0) > 0) {
   i1 = 0;
   do {
    if ((HEAP32[i2 + 283792 + (i1 * 68 | 0) + 48 >> 2] | 0) == (i8 | 0)) break L3;
    i1 = i1 + 1 | 0;
   } while ((i1 | 0) < (i6 | 0));
  } else i1 = 0; while (0);
  if ((i1 | 0) == (i6 | 0)) {
   i3 = HEAP32[i2 + 92 >> 2] | 0;
   i4 = HEAP32[i2 + 96 >> 2] | 0;
   i5 = HEAP32[i2 + 100 >> 2] | 0;
   if ((i6 | 0) > 599) {
    mftCall_vii(HEAP32[i2 + 324964 >> 2] | 0, gb + 45738 | 0, i18 + 64 | 0);
    i1 = HEAP32[gb + 121136 >> 2] | 0;
    i2 = i1;
    i1 = HEAP32[i1 + 283788 >> 2] | 0;
   } else i1 = i6;
   HEAP32[i2 + 283788 >> 2] = i1 + 1;
   HEAP32[i2 + 283792 + (i1 * 68 | 0) >> 2] = 0;
   i6 = i2 + 283792 + (i1 * 68 | 0) + 4 | 0;
   HEAP32[i6 >> 2] = HEAP32[i18 + 48 >> 2];
   HEAP32[i6 + 4 >> 2] = HEAP32[i18 + 48 + 4 >> 2];
   HEAP32[i6 + 8 >> 2] = HEAP32[i18 + 48 + 8 >> 2];
   HEAPF32[i2 + 283792 + (i1 * 68 | 0) + 16 >> 2] = d13;
   HEAP32[i2 + 283792 + (i1 * 68 | 0) + 20 >> 2] = i14;
   HEAP32[i2 + 283792 + (i1 * 68 | 0) + 24 >> 2] = i15;
   HEAP32[i2 + 283792 + (i1 * 68 | 0) + 28 >> 2] = i16;
   i6 = i2 + 283792 + (i1 * 68 | 0) + 32 | 0;
   HEAP32[i6 >> 2] = HEAP32[i18 + 32 >> 2];
   HEAP32[i6 + 4 >> 2] = HEAP32[i18 + 32 + 4 >> 2];
   HEAP32[i6 + 8 >> 2] = HEAP32[i18 + 32 + 8 >> 2];
   HEAP32[i6 + 12 >> 2] = HEAP32[i18 + 32 + 12 >> 2];
   HEAP32[i2 + 283792 + (i1 * 68 | 0) + 48 >> 2] = i8;
   HEAP32[i2 + 283792 + (i1 * 68 | 0) + 52 >> 2] = i3;
   HEAP32[i2 + 283792 + (i1 * 68 | 0) + 56 >> 2] = i4;
   HEAP32[i2 + 283792 + (i1 * 68 | 0) + 60 >> 2] = i5;
   HEAP32[i2 + 283792 + (i1 * 68 | 0) + 64 >> 2] = i12;
  }
 }
 HEAP32[i17 >> 2] = i7;
 HEAP32[i17 + 4 >> 2] = HEAP32[i18 + 16 >> 2];
 HEAP32[i17 + 4 + 4 >> 2] = HEAP32[i18 + 16 + 4 >> 2];
 HEAP32[i17 + 4 + 8 >> 2] = HEAP32[i18 + 16 + 8 >> 2];
 HEAPF32[i17 + 16 >> 2] = d13;
 HEAP32[i17 + 20 >> 2] = i14;
 HEAP32[i17 + 24 >> 2] = i15;
 HEAP32[i17 + 28 >> 2] = i16;
 HEAP32[i17 + 32 >> 2] = HEAP32[i18 >> 2];
 HEAP32[i17 + 32 + 4 >> 2] = HEAP32[i18 + 4 >> 2];
 HEAP32[i17 + 32 + 8 >> 2] = HEAP32[i18 + 8 >> 2];
 HEAP32[i17 + 32 + 12 >> 2] = HEAP32[i18 + 12 >> 2];
 HEAP32[i17 + 48 >> 2] = i8;
 HEAP32[i17 + 52 >> 2] = i9;
 HEAP32[i17 + 56 >> 2] = i10;
 HEAP32[i17 + 60 >> 2] = i11;
 HEAP32[i17 + 64 >> 2] = i12;
 STACKTOP = i18;
 return;
}

function __ZN13CHudSpectator15DirectorMessageEiPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, d6 = 0.0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 i1 = __Z9READ_BYTEv() | 0;
 do switch (i1 | 0) {
 case 1:
  {
   HEAP32[gb + 121120 >> 2] = 0;
   HEAP32[gb + 121116 >> 2] = 0;
   __ZN4CHud15MsgFunc_InitHUDEPKciPv(gb + 46040 | 0, 0, 0, 0);
   __ZN4CHud16MsgFunc_ResetHUDEPKciPv(gb + 46040 | 0, 0, 0, 0) | 0;
   break;
  }
 case 2:
  {
   HEAP32[i3 + 4724 >> 2] = __Z9READ_WORDv() | 0;
   HEAP32[i3 + 4728 >> 2] = __Z9READ_WORDv() | 0;
   HEAP32[i3 + 3816 >> 2] = __Z9READ_LONGv() | 0;
   if (+HEAPF32[(HEAP32[i3 + 3852 >> 2] | 0) + 12 >> 2] != 0.0) {
    i2 = HEAP32[gb + 121108 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i3 + 4724 >> 2] | 0)) {
     i1 = HEAP32[gb + 121112 >> 2] | 0;
     if ((i1 | 0) != (HEAP32[i3 + 4728 >> 2] | 0)) i4 = 6;
    } else i4 = 6;
    if ((i4 | 0) == 6) {
     __Z15V_ResetChaseCamv();
     i2 = HEAP32[i3 + 4724 >> 2] | 0;
     i1 = HEAP32[i3 + 4728 >> 2] | 0;
    }
    HEAP32[gb + 121108 >> 2] = i2;
    HEAP32[gb + 121112 >> 2] = i1;
   }
   break;
  }
 case 3:
  {
   if (+HEAPF32[(HEAP32[i3 + 3852 >> 2] | 0) + 12 >> 2] != 0.0) __ZN13CHudSpectator8SetModesEii(i3, __Z9READ_BYTEv() | 0, -1);
   break;
  }
 case 4:
  {
   if (+HEAPF32[(HEAP32[i3 + 3852 >> 2] | 0) + 12 >> 2] != 0.0) {
    d6 = +__Z10READ_COORDv();
    HEAPF32[gb + 116212 >> 2] = d6;
    d6 = +__Z10READ_COORDv();
    HEAPF32[gb + 116212 + 4 >> 2] = d6;
    d6 = +__Z10READ_COORDv();
    HEAPF32[gb + 116212 + 8 >> 2] = d6;
    d6 = +__Z10READ_COORDv();
    HEAPF32[gb + 116224 >> 2] = d6;
    d6 = +__Z10READ_COORDv();
    HEAPF32[gb + 116224 + 4 >> 2] = d6;
    d6 = +__Z10READ_COORDv();
    HEAPF32[gb + 116224 + 8 >> 2] = d6;
    mftCall_vi(HEAP32[gb + 92340 + 140 >> 2] | 0, gb + 116224 | 0);
    HEAP32[gb + 121144 >> 2] = 1;
   }
   break;
  }
 case 6:
  {
   i4 = HEAP32[i3 + 1400 >> 2] | 0;
   HEAP32[i3 + 24 + (i4 * 44 | 0) >> 2] = __Z9READ_BYTEv() | 0;
   i2 = __Z9READ_LONGv() | 0;
   HEAP32[i3 + 24 + (i4 * 44 | 0) + 4 >> 2] = i2 >>> 16 & 255;
   HEAP32[i3 + 24 + (i4 * 44 | 0) + 5 >> 2] = i2 >>> 8 & 255;
   HEAP32[i3 + 24 + (i4 * 44 | 0) + 6 >> 2] = i2 & 255;
   HEAP8[i3 + 24 + (i4 * 44 | 0) + 8 >> 0] = i2 >>> 16;
   HEAP8[i3 + 24 + (i4 * 44 | 0) + 9 >> 0] = i2 >>> 8;
   HEAP8[i3 + 24 + (i4 * 44 | 0) + 10 >> 0] = i2;
   HEAP8[i3 + 24 + (i4 * 44 | 0) + 7 >> 0] = -1;
   HEAP8[i3 + 24 + (i4 * 44 | 0) + 11 >> 0] = -1;
   HEAPF32[i3 + 24 + (i4 * 44 | 0) + 12 >> 2] = +__Z10READ_FLOATv();
   HEAPF32[i3 + 24 + (i4 * 44 | 0) + 16 >> 2] = +__Z10READ_FLOATv();
   HEAPF32[i3 + 24 + (i4 * 44 | 0) + 20 >> 2] = +__Z10READ_FLOATv();
   HEAPF32[i3 + 24 + (i4 * 44 | 0) + 24 >> 2] = +__Z10READ_FLOATv();
   HEAPF32[i3 + 24 + (i4 * 44 | 0) + 28 >> 2] = +__Z10READ_FLOATv();
   HEAPF32[i3 + 24 + (i4 * 44 | 0) + 32 >> 2] = +__Z10READ_FLOATv();
   i2 = i3 + 376 + (HEAP32[i3 + 1400 >> 2] << 7) | 0;
   __Z11READ_STRINGv() | 0;
   _strncpy(i2 | 0, gb + 127001 | 0, 128) | 0;
   i2 = HEAP32[i3 + 1400 >> 2] | 0;
   HEAP8[i3 + 376 + (i2 << 7) + 127 >> 0] = 0;
   HEAP32[i3 + 24 + (i4 * 44 | 0) + 40 >> 2] = i3 + 376 + (i2 << 7);
   HEAP32[i3 + 24 + (i4 * 44 | 0) + 36 >> 2] = gb + 42085;
   __ZN11CHudMessage10MessageAddEP20client_textmessage_s(gb + 46040 + 5324 | 0, i3 + 24 + (i4 * 44 | 0) | 0);
   HEAP32[i3 + 1400 >> 2] = ((HEAP32[i3 + 1400 >> 2] | 0) + 1 | 0) % 8 | 0;
   break;
  }
 case 7:
  {
   __Z11READ_STRINGv() | 0;
   d6 = +__Z10READ_FLOATv();
   mftCall_viiiiddii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0, 0, gb + 116236 | 0, 4, gb + 127001 | 0, +d6, .800000011920929, 0, 100);
   break;
  }
 case 5:
  {
   +__Z10READ_FLOATv();
   break;
  }
 case 8:
  {
   __Z9READ_LONGv() | 0;
   HEAP32[i3 + 3820 >> 2] = __Z9READ_LONGv() | 0;
   __Z9READ_WORDv() | 0;
   break;
  }
 case 10:
 case 9:
  break;
 case 12:
  {
   i4 = HEAP32[gb + 92340 + 80 >> 2] | 0;
   __Z11READ_STRINGv() | 0;
   mftCall_ii(i4 | 0, gb + 127001 | 0) | 0;
   break;
  }
 default:
  {
   i4 = HEAP32[gb + 92340 + 164 >> 2] | 0;
   HEAP32[i5 >> 2] = i1;
   mftCall_vii(i4 | 0, gb + 42097 | 0, i5 | 0);
  }
 } while (0);
 STACKTOP = i5;
 return;
}

function __ZN10CHudHealth8DrawPainEf(i5, d1) {
 i5 = i5 | 0;
 d1 = +d1;
 var i2 = 0, d3 = 0.0, i4 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 d1 = +HEAPF32[i5 + 32 >> 2];
 if (d1 != 0.0) i2 = 5; else if (+HEAPF32[i5 + 36 >> 2] != 0.0) i2 = 5; else if (+HEAPF32[i5 + 40 >> 2] != 0.0) i2 = 5; else if (+HEAPF32[i5 + 44 >> 2] != 0.0) i2 = 5;
 if ((i2 | 0) == 5) {
  d3 = +HEAPF64[gb + 46040 + 48 >> 3] * 2.0;
  if (d1 > .4) {
   i6 = (HEAP32[i5 + 20 >> 2] | 0) > 25;
   HEAP32[i4 + 8 >> 2] = i6 ? 255 : 250;
   HEAP32[i4 + 4 >> 2] = i6 ? 160 : 0;
   HEAP32[i4 >> 2] = 0;
   __Z11ScaleColorsRiS_S_i(i4 + 8 | 0, i4 + 4 | 0, i4, d1 > .5 ? ~~(d1 * 255.0) : 127);
   mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, HEAP32[i5 + 52 >> 2] | 0, HEAP32[i4 + 8 >> 2] | 0, HEAP32[i4 + 4 >> 2] | 0, HEAP32[i4 >> 2] | 0);
   i6 = (HEAP32[gb + 46040 + 8112 >> 2] | 0) / 2 | 0;
   i6 = i6 - ((mftCall_iii(HEAP32[gb + 92340 + 12 >> 2] | 0, HEAP32[i5 + 52 >> 2] | 0, 0) | 0) / 2 | 0) | 0;
   i2 = (HEAP32[gb + 46040 + 8116 >> 2] | 0) / 2 | 0;
   i2 = (Math_imul(mftCall_iii(HEAP32[gb + 92340 + 8 >> 2] | 0, HEAP32[i5 + 52 >> 2] | 0, 0) | 0, -3) | 0) + i2 | 0;
   mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i6 | 0, i2 | 0, 0);
   d1 = +HEAPF32[i5 + 32 >> 2] - d3;
   d1 = d1 < 0.0 ? 0.0 : d1;
  } else d1 = 0.0;
  HEAPF32[i5 + 32 >> 2] = d1;
  d1 = +HEAPF32[i5 + 44 >> 2];
  if (d1 > .4) {
   i2 = (HEAP32[i5 + 20 >> 2] | 0) > 25;
   HEAP32[i4 + 8 >> 2] = i2 ? 255 : 250;
   HEAP32[i4 + 4 >> 2] = i2 ? 160 : 0;
   HEAP32[i4 >> 2] = 0;
   __Z11ScaleColorsRiS_S_i(i4 + 8 | 0, i4 + 4 | 0, i4, d1 > .5 ? ~~(d1 * 255.0) : 127);
   mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, HEAP32[i5 + 52 >> 2] | 0, HEAP32[i4 + 8 >> 2] | 0, HEAP32[i4 + 4 >> 2] | 0, HEAP32[i4 >> 2] | 0);
   i2 = (HEAP32[gb + 46040 + 8112 >> 2] | 0) / 2 | 0;
   i2 = ((mftCall_iii(HEAP32[gb + 92340 + 12 >> 2] | 0, HEAP32[i5 + 52 >> 2] | 0, 1) | 0) << 1) + i2 | 0;
   i6 = (HEAP32[gb + 46040 + 8116 >> 2] | 0) / 2 | 0;
   i6 = i6 - ((mftCall_iii(HEAP32[gb + 92340 + 8 >> 2] | 0, HEAP32[i5 + 52 >> 2] | 0, 1) | 0) / 2 | 0) | 0;
   mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 1, i2 | 0, i6 | 0, 0);
   d1 = +HEAPF32[i5 + 44 >> 2] - d3;
   d1 = d1 < 0.0 ? 0.0 : d1;
  } else d1 = 0.0;
  HEAPF32[i5 + 44 >> 2] = d1;
  d1 = +HEAPF32[i5 + 36 >> 2];
  if (d1 > .4) {
   i2 = (HEAP32[i5 + 20 >> 2] | 0) > 25;
   HEAP32[i4 + 8 >> 2] = i2 ? 255 : 250;
   HEAP32[i4 + 4 >> 2] = i2 ? 160 : 0;
   HEAP32[i4 >> 2] = 0;
   __Z11ScaleColorsRiS_S_i(i4 + 8 | 0, i4 + 4 | 0, i4, d1 > .5 ? ~~(d1 * 255.0) : 127);
   mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, HEAP32[i5 + 52 >> 2] | 0, HEAP32[i4 + 8 >> 2] | 0, HEAP32[i4 + 4 >> 2] | 0, HEAP32[i4 >> 2] | 0);
   i2 = (HEAP32[gb + 46040 + 8112 >> 2] | 0) / 2 | 0;
   i2 = i2 - ((mftCall_iii(HEAP32[gb + 92340 + 12 >> 2] | 0, HEAP32[i5 + 52 >> 2] | 0, 2) | 0) / 2 | 0) | 0;
   i6 = (HEAP32[gb + 46040 + 8116 >> 2] | 0) / 2 | 0;
   i6 = ((mftCall_iii(HEAP32[gb + 92340 + 8 >> 2] | 0, HEAP32[i5 + 52 >> 2] | 0, 2) | 0) << 1) + i6 | 0;
   mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 2, i2 | 0, i6 | 0, 0);
   d1 = +HEAPF32[i5 + 36 >> 2] - d3;
   d1 = d1 < 0.0 ? 0.0 : d1;
  } else d1 = 0.0;
  HEAPF32[i5 + 36 >> 2] = d1;
  d1 = +HEAPF32[i5 + 40 >> 2];
  if (d1 > .4) {
   i2 = (HEAP32[i5 + 20 >> 2] | 0) > 25;
   HEAP32[i4 + 8 >> 2] = i2 ? 255 : 250;
   HEAP32[i4 + 4 >> 2] = i2 ? 160 : 0;
   HEAP32[i4 >> 2] = 0;
   __Z11ScaleColorsRiS_S_i(i4 + 8 | 0, i4 + 4 | 0, i4, d1 > .5 ? ~~(d1 * 255.0) : 127);
   mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, HEAP32[i5 + 52 >> 2] | 0, HEAP32[i4 + 8 >> 2] | 0, HEAP32[i4 + 4 >> 2] | 0, HEAP32[i4 >> 2] | 0);
   i2 = (HEAP32[gb + 46040 + 8112 >> 2] | 0) / 2 | 0;
   i2 = (Math_imul(mftCall_iii(HEAP32[gb + 92340 + 12 >> 2] | 0, HEAP32[i5 + 52 >> 2] | 0, 3) | 0, -3) | 0) + i2 | 0;
   i6 = (HEAP32[gb + 46040 + 8116 >> 2] | 0) / 2 | 0;
   i6 = i6 - ((mftCall_iii(HEAP32[gb + 92340 + 8 >> 2] | 0, HEAP32[i5 + 52 >> 2] | 0, 3) | 0) / 2 | 0) | 0;
   mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 3, i2 | 0, i6 | 0, 0);
   d1 = +HEAPF32[i5 + 40 >> 2] - d3;
   d1 = d1 < 0.0 ? 0.0 : d1;
  } else d1 = 0.0;
  HEAPF32[i5 + 40 >> 2] = d1;
 }
 STACKTOP = i4;
 return 1;
}

function __ZN14CHudScoreboard11DrawPlayersEifiPc(i14, i15, d2, i12, i13) {
 i14 = i14 | 0;
 i15 = i15 | 0;
 d2 = +d2;
 i12 = i12 | 0;
 i13 = i13 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i16 = 0, i17 = 0, i18 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = HEAP32[gb + 118500 >> 2] | 0;
 if (!i1) i16 = 3; else if (+HEAPF32[i1 + 12 >> 2] != 0.0 ? (HEAP32[gb + 46040 + 8112 >> 2] | 0) > 399 : 0) {
  i11 = 1;
  i1 = 400;
 } else i16 = 3;
 if ((i16 | 0) == 3) {
  i11 = 0;
  i1 = 320;
 }
 HEAP32[gb + 36340 >> 2] = i1;
 i10 = i11 ? 380 : 300;
 while (1) {
  i4 = 0;
  i5 = -99999;
  i7 = 1;
  i3 = 99999;
  while (1) {
   do if (!(HEAP32[gb + 54736 + (i7 << 5) >> 2] | 0)) {
    i9 = i4;
    i1 = i5;
   } else {
    i1 = HEAP16[gb + 122336 + (i7 * 24 | 0) >> 1] | 0;
    if ((i1 | 0) < (i5 | 0)) {
     i9 = i4;
     i1 = i5;
    } else {
     if (i13 | 0) if (_strcasecmp(gb + 122336 + (i7 * 24 | 0) + 8 | 0, i13 | 0) | 0) {
      i9 = i4;
      i1 = i5;
      break;
     }
     i8 = HEAP16[gb + 122336 + (i7 * 24 | 0) + 2 >> 1] | 0;
     i18 = (i1 | 0) > (i5 | 0) | (i8 | 0) < (i3 | 0);
     i9 = i18 ? i7 : i4;
     i1 = i18 ? i1 : i5;
     i3 = i18 ? i8 : i3;
    }
   } while (0);
   i7 = i7 + 1 | 0;
   if ((i7 | 0) == 64) break; else {
    i4 = i9;
    i5 = i1;
   }
  }
  if (!i9) break;
  i8 = ~~(d2 * 13.0 + 15.0);
  if ((i8 | 0) > ((HEAP32[gb + 46040 + 8116 >> 2] | 0) + -50 | 0)) break;
  i4 = __Z14GetClientColori(i9) | 0;
  i1 = ~~(+HEAPF32[i4 >> 2] * 255.0);
  i7 = ~~(+HEAPF32[i4 + 4 >> 2] * 255.0);
  i4 = ~~(+HEAPF32[i4 + 8 >> 2] * 255.0);
  do if ((i9 | 0) == (HEAP32[i14 + 24 >> 2] | 0)) {
   i3 = HEAP32[i14 + 28 >> 2] | 0;
   if (!i3) i16 = 20; else {
    d6 = +HEAPF32[gb + 46040 + 36 >> 2];
    if (+(i3 | 0) > d6) {
     i5 = HEAP32[gb + 92340 + 44 >> 2] | 0;
     if (!(HEAP8[gb + 54736 + (i9 << 5) + 6 >> 0] | 0)) {
      mftCall_viiiiiiii(i5 | 0, i15 + 15 | 0, i8 | 0, i10 | 0, 13, 255, 0, 0, ~~((+(i3 | 0) - d6) * 15.0) | 0);
      break;
     } else {
      mftCall_viiiiiiii(i5 | 0, i15 + 15 | 0, i8 | 0, i10 | 0, 13, 80, 155, 0, 70);
      break;
     }
    } else i16 = 20;
   }
  } else i16 = 20; while (0);
  if ((i16 | 0) == 20) {
   i16 = 0;
   if (HEAP8[gb + 54736 + (i9 << 5) + 6 >> 0] | 0) mftCall_viiiiiiii(HEAP32[gb + 92340 + 44 >> 2] | 0, i15 + 15 | 0, i8 | 0, i10 | 0, 13, 0, 0, 255, 70);
  }
  i5 = gb + 54736 + (i9 << 5) | 0;
  __Z13DrawUtfStringiiiPciii(i15 + 20 + i12 | 0, i8, i15 + 145 | 0, HEAP32[i5 >> 2] | 0, i1, i7, i4) | 0;
  __ZN4CHud19DrawHudNumberStringEiiiiiii(0, i15 + 170 | 0, i8, i15 + 130 | 0, HEAP16[gb + 122336 + (i9 * 24 | 0) >> 1] | 0, i1, i7, i4) | 0;
  __Z13DrawUtfStringiiiPciii(i15 + 180 | 0, i8, i15 + 200 | 0, gb + 44747 | 0, i1, i7, i4) | 0;
  __ZN4CHud19DrawHudNumberStringEiiiiiii(0, i15 + 210 | 0, i8, i15 + 185 | 0, HEAP16[gb + 122336 + (i9 * 24 | 0) + 2 >> 1] | 0, i1, i7, i4) | 0;
  HEAP32[i17 >> 2] = HEAP16[gb + 54736 + (i9 << 5) + 4 >> 1];
  _sprintf(gb + 132761 | 0, gb + 44773 | 0, i17 | 0) | 0;
  __ZN4CHud20DrawHudStringReverseEiiiPciii(0, i15 + 295 | 0, i8, i15 + 245 | 0, gb + 132761 | 0, i1, i7, i4) | 0;
  if (i11) {
   i3 = HEAP8[gb + 54736 + (i9 << 5) + 8 >> 0] | 0;
   if ((i3 & 255) > 62) {
    HEAP8[gb + 132761 >> 0] = HEAP8[gb + 44781 >> 0] | 0;
    HEAP8[gb + 132761 + 1 >> 0] = HEAP8[gb + 44781 + 1 >> 0] | 0;
    HEAP8[gb + 132761 + 2 >> 0] = HEAP8[gb + 44781 + 2 >> 0] | 0;
    HEAP8[gb + 132761 + 3 >> 0] = HEAP8[gb + 44781 + 3 >> 0] | 0;
    HEAP8[gb + 132761 + 4 >> 0] = HEAP8[gb + 44781 + 4 >> 0] | 0;
    HEAP8[gb + 132761 + 5 >> 0] = HEAP8[gb + 44781 + 5 >> 0] | 0;
    i4 = 16;
    i3 = 16;
    i1 = 255;
   } else {
    HEAP32[i17 + 8 >> 2] = i3 & 255;
    _sprintf(gb + 132761 | 0, gb + 44776 | 0, i17 + 8 | 0) | 0;
    i3 = i7;
   }
   __Z13DrawUtfStringiiiPciii(i15 + 370 | 0, i8, i15 + 420 | 0, gb + 132761 | 0, i1, i3, i4) | 0;
  }
  HEAP32[i5 >> 2] = 0;
  d2 = d2 + 1.0;
 }
 STACKTOP = i17;
 return ~~d2 | 0;
}

function _PM_SpectatorMove() {
 var d1 = 0.0, i2 = 0, i3 = 0, d4 = 0.0, i5 = 0, i6 = 0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i2 = HEAP32[gb + 121136 >> 2] | 0;
 do if ((HEAP32[i2 + 508 >> 2] | 0) == 3) {
  if (HEAP32[gb + 121144 >> 2] | 0) {
   HEAP32[i2 + 56 >> 2] = HEAP32[gb + 116212 >> 2];
   HEAP32[i2 + 60 >> 2] = HEAP32[gb + 116212 + 4 >> 2];
   HEAP32[i2 + 64 >> 2] = HEAP32[gb + 116212 + 8 >> 2];
   HEAP32[i2 + 68 >> 2] = HEAP32[gb + 116224 >> 2];
   HEAP32[i2 + 72 >> 2] = HEAP32[gb + 116224 + 4 >> 2];
   HEAP32[i2 + 76 >> 2] = HEAP32[gb + 116224 + 8 >> 2];
   HEAP32[i2 + 92 >> 2] = HEAP32[gb + 121124 >> 2];
   HEAP32[i2 + 96 >> 2] = HEAP32[gb + 121124 + 4 >> 2];
   HEAP32[i2 + 100 >> 2] = HEAP32[gb + 121124 + 8 >> 2];
   HEAP32[gb + 121144 >> 2] = 0;
   break;
  }
  d1 = +_Length(i2 + 92 | 0);
  if (d1 < 1.0) {
   HEAP32[i2 + 92 >> 2] = HEAP32[gb + 121124 >> 2];
   HEAP32[i2 + 96 >> 2] = HEAP32[gb + 121124 + 4 >> 2];
   HEAP32[i2 + 100 >> 2] = HEAP32[gb + 121124 + 8 >> 2];
  } else {
   i6 = HEAP32[i2 + 324848 >> 2] | 0;
   d10 = +HEAPF32[i6 + 4 >> 2];
   d10 = d1 - +HEAPF32[i2 + 16 >> 2] * +HEAPF32[i6 + 28 >> 2] * 1.5 * (d1 < d10 ? d10 : d1);
   _VectorScale(i2 + 92 | 0, (d10 < 0.0 ? 0.0 : d10) / d1, i2 + 92 | 0);
   i2 = HEAP32[gb + 121136 >> 2] | 0;
  }
  d1 = +HEAPF32[i2 + 283752 >> 2];
  d4 = +HEAPF32[i2 + 283756 >> 2];
  +_VectorNormalize(i2 + 20 | 0);
  +_VectorNormalize((HEAP32[gb + 121136 >> 2] | 0) + 32 | 0);
  i2 = HEAP32[gb + 121136 >> 2] | 0;
  i3 = 0;
  do {
   HEAPF32[i11 + 12 + (i3 << 2) >> 2] = d1 * +HEAPF32[i2 + 20 + (i3 << 2) >> 2] + d4 * +HEAPF32[i2 + 32 + (i3 << 2) >> 2];
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) != 3);
  d4 = +HEAPF32[i2 + 283760 >> 2] + +HEAPF32[i11 + 12 + 8 >> 2];
  HEAPF32[i11 + 12 + 8 >> 2] = d4;
  HEAP32[i11 >> 2] = HEAP32[i11 + 12 >> 2];
  HEAP32[i11 + 4 >> 2] = HEAP32[i11 + 12 + 4 >> 2];
  HEAPF32[i11 + 8 >> 2] = d4;
  d4 = +_VectorNormalize(i11);
  i2 = HEAP32[gb + 121136 >> 2] | 0;
  i3 = HEAP32[i2 + 324848 >> 2] | 0;
  d1 = +HEAPF32[i3 + 12 >> 2];
  if (d4 > d1) {
   _VectorScale(i11 + 12 | 0, d1 / d4, i11 + 12 | 0);
   i2 = HEAP32[gb + 121136 >> 2] | 0;
   i6 = HEAP32[i2 + 324848 >> 2] | 0;
   i3 = i6;
   d4 = +HEAPF32[i6 + 12 >> 2];
  }
  i5 = i2 + 92 | 0;
  d7 = +HEAPF32[i5 >> 2];
  d8 = +HEAPF32[i11 >> 2];
  d9 = +HEAPF32[i2 + 96 >> 2];
  d10 = +HEAPF32[i11 + 4 >> 2];
  d1 = d4 - (d7 * d8 + d9 * d10 + +HEAPF32[i2 + 100 >> 2] * +HEAPF32[i11 + 8 >> 2]);
  if (!(d1 <= 0.0)) {
   i6 = i2 + 16 | 0;
   d4 = d4 * +HEAPF32[i3 + 16 >> 2] * +HEAPF32[i6 >> 2];
   d1 = d4 > d1 ? d1 : d4;
   HEAPF32[i5 >> 2] = d7 + d8 * d1;
   HEAPF32[i2 + 96 >> 2] = d1 * d10 + d9;
   i3 = 2;
   do {
    HEAPF32[i2 + 92 + (i3 << 2) >> 2] = d1 * +HEAPF32[i11 + (i3 << 2) >> 2] + +HEAPF32[i2 + 92 + (i3 << 2) >> 2];
    i3 = i3 + 1 | 0;
   } while ((i3 | 0) != 3);
   i3 = i2 + 56 | 0;
   _VectorMA(i3, +HEAPF32[i6 >> 2], i5, i3);
  }
 } else {
  i5 = HEAP32[i2 + 512 >> 2] | 0;
  if ((i5 | 0) >= 1) {
   i6 = HEAP32[i2 + 588 >> 2] | 0;
   L22 : do if ((i6 | 0) > 0) {
    i3 = 0;
    do {
     if ((HEAP32[i2 + 592 + (i3 * 224 | 0) + 80 >> 2] | 0) == (i5 | 0)) break L22;
     i3 = i3 + 1 | 0;
    } while ((i3 | 0) < (i6 | 0));
   } else i3 = 0; while (0);
   if ((i3 | 0) != (i6 | 0)) {
    HEAP32[i2 + 68 >> 2] = HEAP32[i2 + 592 + (i3 * 224 | 0) + 84 >> 2];
    HEAP32[i2 + 72 >> 2] = HEAP32[i2 + 592 + (i3 * 224 | 0) + 88 >> 2];
    HEAP32[i2 + 76 >> 2] = HEAP32[i2 + 592 + (i3 * 224 | 0) + 92 >> 2];
    HEAP32[i2 + 56 >> 2] = HEAP32[i2 + 592 + (i3 * 224 | 0) + 36 >> 2];
    HEAP32[i2 + 60 >> 2] = HEAP32[i2 + 592 + (i3 * 224 | 0) + 40 >> 2];
    HEAP32[i2 + 64 >> 2] = HEAP32[i2 + 592 + (i3 * 224 | 0) + 44 >> 2];
    HEAP32[i2 + 92 >> 2] = HEAP32[gb + 121124 >> 2];
    HEAP32[i2 + 96 >> 2] = HEAP32[gb + 121124 + 4 >> 2];
    HEAP32[i2 + 100 >> 2] = HEAP32[gb + 121124 + 8 >> 2];
   }
  }
 } while (0);
 STACKTOP = i11;
 return;
}

function runPostSets29() {
 var i1 = 0;
 HEAP32[gb + 33456 >> 2] = fb + 11;
 HEAP32[gb + 33460 >> 2] = fb + 12;
 HEAP32[gb + 33464 >> 2] = fb + 13;
 HEAP32[gb + 33468 >> 2] = fb + 14;
 HEAP32[gb + 33472 >> 2] = fb + 11;
 HEAP32[gb + 33476 >> 2] = fb + 23;
 HEAP32[gb + 33480 >> 2] = fb + 24;
 HEAP32[gb + 33484 >> 2] = fb + 14;
 HEAP32[gb + 33488 >> 2] = fb + 25;
 HEAP32[gb + 33492 >> 2] = fb + 116;
 HEAP32[gb + 33496 >> 2] = fb + 15;
 HEAP32[gb + 33500 >> 2] = fb + 16;
 HEAP32[gb + 33504 >> 2] = fb + 27;
 HEAP32[gb + 33508 >> 2] = fb + 28;
 HEAP32[gb + 33512 >> 2] = fb + 15;
 HEAP32[gb + 33516 >> 2] = fb + 1;
 HEAP32[gb + 33520 >> 2] = fb + 29;
 HEAP32[gb + 33524 >> 2] = fb + 149;
 HEAP32[gb + 33528 >> 2] = fb + 150;
 HEAP32[gb + 33532 >> 2] = fb + 151;
 HEAP32[gb + 33536 >> 2] = fb + 152;
 HEAP32[gb + 33540 >> 2] = fb + 20;
 HEAP32[gb + 33544 >> 2] = fb + 30;
 HEAP32[gb + 33548 >> 2] = fb + 117;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 520 >> 2] = (HEAP32[gb + 520 >> 2] | 0) + i1;
 HEAP32[gb + 524 >> 2] = (HEAP32[gb + 524 >> 2] | 0) + (gb + 39616 | 0);
 HEAP32[gb + 528 >> 2] = (HEAP32[gb + 528 >> 2] | 0) + (gb + 216 | 0);
 HEAP32[gb + 33556 >> 2] = (HEAP32[gb + 33556 >> 2] | 0) + (gb + 536 | 0);
 HEAP32[gb + 33560 >> 2] = fb + 153;
 HEAP32[gb + 33564 >> 2] = fb + 154;
 HEAP32[gb + 33568 >> 2] = fb + 12;
 HEAP32[gb + 33572 >> 2] = fb + 17;
 HEAP32[gb + 33576 >> 2] = fb + 18;
 HEAP32[gb + 33580 >> 2] = fb + 1;
 HEAP32[gb + 33584 >> 2] = fb + 3;
 HEAP32[gb + 33588 >> 2] = fb + 23;
 HEAP32[gb + 33592 >> 2] = fb + 2;
 HEAP32[gb + 33596 >> 2] = fb + 2;
 HEAP32[gb + 33600 >> 2] = fb + 1;
 HEAP32[gb + 33604 >> 2] = fb + 1;
 HEAP32[gb + 33608 >> 2] = fb + 1;
 HEAP32[gb + 33612 >> 2] = fb + 1;
 HEAP32[gb + 33616 >> 2] = fb + 3;
 HEAP32[gb + 33620 >> 2] = fb + 1;
 HEAP32[gb + 33624 >> 2] = fb + 3;
 HEAP32[gb + 33628 >> 2] = fb + 4;
 HEAP32[gb + 33632 >> 2] = fb + 5;
 HEAP32[gb + 33636 >> 2] = fb + 6;
 HEAP32[gb + 33640 >> 2] = fb + 2;
 HEAP32[gb + 33644 >> 2] = fb + 3;
 HEAP32[gb + 33648 >> 2] = fb + 4;
 HEAP32[gb + 33652 >> 2] = fb + 5;
 HEAP32[gb + 33656 >> 2] = fb + 1;
 HEAP32[gb + 33660 >> 2] = fb + 1;
 HEAP32[gb + 33664 >> 2] = fb + 7;
 HEAP32[gb + 33668 >> 2] = fb + 5;
 HEAP32[gb + 33672 >> 2] = fb + 6;
 HEAP32[gb + 33676 >> 2] = fb + 3;
 HEAP32[gb + 33680 >> 2] = fb + 6;
 HEAP32[gb + 33684 >> 2] = fb + 7;
 HEAP32[gb + 33688 >> 2] = fb + 7;
 HEAP32[gb + 33692 >> 2] = fb + 8;
 HEAP32[gb + 33696 >> 2] = fb + 9;
 HEAP32[gb + 33700 >> 2] = fb + 10;
 HEAP32[gb + 33704 >> 2] = fb + 11;
 HEAP32[gb + 33708 >> 2] = fb + 8;
 HEAP32[gb + 33712 >> 2] = fb + 12;
 HEAP32[gb + 33716 >> 2] = fb + 13;
 HEAP32[gb + 33720 >> 2] = fb + 14;
 HEAP32[gb + 33724 >> 2] = fb + 15;
 HEAP32[gb + 33728 >> 2] = fb + 16;
 HEAP32[gb + 33732 >> 2] = fb + 8;
 HEAP32[gb + 33736 >> 2] = fb + 4;
 HEAP32[gb + 33740 >> 2] = fb + 1;
 HEAP32[gb + 33744 >> 2] = fb + 5;
 HEAP32[gb + 33748 >> 2] = fb + 32;
 HEAP32[gb + 33752 >> 2] = fb + 9;
 HEAP32[gb + 33756 >> 2] = fb + 18;
 HEAP32[gb + 33760 >> 2] = fb + 6;
 HEAP32[gb + 33764 >> 2] = fb + 7;
 HEAP32[gb + 33768 >> 2] = fb + 8;
 HEAP32[gb + 33772 >> 2] = fb + 4;
 HEAP32[gb + 33776 >> 2] = fb + 19;
 HEAP32[gb + 33780 >> 2] = fb + 9;
 HEAP32[gb + 33784 >> 2] = fb + 10;
 HEAP32[gb + 33788 >> 2] = fb + 79;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 536 >> 2] = (HEAP32[gb + 536 >> 2] | 0) + i1;
 HEAP32[gb + 540 >> 2] = (HEAP32[gb + 540 >> 2] | 0) + (gb + 39645 | 0);
 HEAP32[gb + 544 >> 2] = (HEAP32[gb + 544 >> 2] | 0) + (gb + 248 | 0);
 HEAP32[gb + 33796 >> 2] = (HEAP32[gb + 33796 >> 2] | 0) + (gb + 552 | 0);
 HEAP32[gb + 33800 >> 2] = fb + 155;
 HEAP32[gb + 33804 >> 2] = fb + 156;
 HEAP32[gb + 33808 >> 2] = fb + 118;
 HEAP32[gb + 33812 >> 2] = fb + 119;
 HEAP32[gb + 33816 >> 2] = fb + 2;
 HEAP32[gb + 33820 >> 2] = fb + 157;
 HEAP32[gb + 33824 >> 2] = fb + 158;
 HEAP32[gb + 33828 >> 2] = fb + 159;
 runPostSets30();
}

function runPostSets18() {
 var i1 = 0;
 HEAP32[gb + 29212 >> 2] = fb + 1;
 HEAP32[gb + 29216 >> 2] = fb + 5;
 HEAP32[gb + 29220 >> 2] = fb + 32;
 HEAP32[gb + 29224 >> 2] = fb + 9;
 HEAP32[gb + 29228 >> 2] = fb + 18;
 HEAP32[gb + 29232 >> 2] = fb + 6;
 HEAP32[gb + 29236 >> 2] = fb + 7;
 HEAP32[gb + 29240 >> 2] = fb + 8;
 HEAP32[gb + 29244 >> 2] = fb + 4;
 HEAP32[gb + 29248 >> 2] = fb + 19;
 HEAP32[gb + 29252 >> 2] = fb + 9;
 HEAP32[gb + 29256 >> 2] = fb + 10;
 HEAP32[gb + 29260 >> 2] = fb + 61;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 312 >> 2] = (HEAP32[gb + 312 >> 2] | 0) + i1;
 HEAP32[gb + 316 >> 2] = (HEAP32[gb + 316 >> 2] | 0) + (gb + 38466 | 0);
 HEAP32[gb + 320 >> 2] = (HEAP32[gb + 320 >> 2] | 0) + (gb + 248 | 0);
 HEAP32[gb + 29268 >> 2] = (HEAP32[gb + 29268 >> 2] | 0) + (gb + 328 | 0);
 HEAP32[gb + 29272 >> 2] = fb + 101;
 HEAP32[gb + 29276 >> 2] = fb + 102;
 HEAP32[gb + 29280 >> 2] = fb + 12;
 HEAP32[gb + 29284 >> 2] = fb + 17;
 HEAP32[gb + 29288 >> 2] = fb + 18;
 HEAP32[gb + 29292 >> 2] = fb + 1;
 HEAP32[gb + 29296 >> 2] = fb + 3;
 HEAP32[gb + 29300 >> 2] = fb + 23;
 HEAP32[gb + 29304 >> 2] = fb + 2;
 HEAP32[gb + 29308 >> 2] = fb + 2;
 HEAP32[gb + 29312 >> 2] = fb + 1;
 HEAP32[gb + 29316 >> 2] = fb + 1;
 HEAP32[gb + 29320 >> 2] = fb + 1;
 HEAP32[gb + 29324 >> 2] = fb + 1;
 HEAP32[gb + 29328 >> 2] = fb + 3;
 HEAP32[gb + 29332 >> 2] = fb + 1;
 HEAP32[gb + 29336 >> 2] = fb + 3;
 HEAP32[gb + 29340 >> 2] = fb + 4;
 HEAP32[gb + 29344 >> 2] = fb + 5;
 HEAP32[gb + 29348 >> 2] = fb + 6;
 HEAP32[gb + 29352 >> 2] = fb + 2;
 HEAP32[gb + 29356 >> 2] = fb + 3;
 HEAP32[gb + 29360 >> 2] = fb + 4;
 HEAP32[gb + 29364 >> 2] = fb + 5;
 HEAP32[gb + 29368 >> 2] = fb + 1;
 HEAP32[gb + 29372 >> 2] = fb + 1;
 HEAP32[gb + 29376 >> 2] = fb + 7;
 HEAP32[gb + 29380 >> 2] = fb + 5;
 HEAP32[gb + 29384 >> 2] = fb + 6;
 HEAP32[gb + 29388 >> 2] = fb + 3;
 HEAP32[gb + 29392 >> 2] = fb + 6;
 HEAP32[gb + 29396 >> 2] = fb + 7;
 HEAP32[gb + 29400 >> 2] = fb + 7;
 HEAP32[gb + 29404 >> 2] = fb + 8;
 HEAP32[gb + 29408 >> 2] = fb + 9;
 HEAP32[gb + 29412 >> 2] = fb + 10;
 HEAP32[gb + 29416 >> 2] = fb + 11;
 HEAP32[gb + 29420 >> 2] = fb + 8;
 HEAP32[gb + 29424 >> 2] = fb + 12;
 HEAP32[gb + 29428 >> 2] = fb + 13;
 HEAP32[gb + 29432 >> 2] = fb + 14;
 HEAP32[gb + 29436 >> 2] = fb + 15;
 HEAP32[gb + 29440 >> 2] = fb + 16;
 HEAP32[gb + 29444 >> 2] = fb + 8;
 HEAP32[gb + 29448 >> 2] = fb + 4;
 HEAP32[gb + 29452 >> 2] = fb + 1;
 HEAP32[gb + 29456 >> 2] = fb + 5;
 HEAP32[gb + 29460 >> 2] = fb + 32;
 HEAP32[gb + 29464 >> 2] = fb + 9;
 HEAP32[gb + 29468 >> 2] = fb + 18;
 HEAP32[gb + 29472 >> 2] = fb + 6;
 HEAP32[gb + 29476 >> 2] = fb + 7;
 HEAP32[gb + 29480 >> 2] = fb + 8;
 HEAP32[gb + 29484 >> 2] = fb + 4;
 HEAP32[gb + 29488 >> 2] = fb + 19;
 HEAP32[gb + 29492 >> 2] = fb + 9;
 HEAP32[gb + 29496 >> 2] = fb + 10;
 HEAP32[gb + 29500 >> 2] = fb + 62;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 328 >> 2] = (HEAP32[gb + 328 >> 2] | 0) + i1;
 HEAP32[gb + 332 >> 2] = (HEAP32[gb + 332 >> 2] | 0) + (gb + 38504 | 0);
 HEAP32[gb + 336 >> 2] = (HEAP32[gb + 336 >> 2] | 0) + (gb + 248 | 0);
 HEAP32[gb + 29508 >> 2] = (HEAP32[gb + 29508 >> 2] | 0) + (gb + 344 | 0);
 HEAP32[gb + 29512 >> 2] = fb + 103;
 HEAP32[gb + 29516 >> 2] = fb + 104;
 HEAP32[gb + 29520 >> 2] = fb + 12;
 HEAP32[gb + 29524 >> 2] = fb + 17;
 HEAP32[gb + 29528 >> 2] = fb + 18;
 HEAP32[gb + 29532 >> 2] = fb + 1;
 HEAP32[gb + 29536 >> 2] = fb + 3;
 HEAP32[gb + 29540 >> 2] = fb + 23;
 HEAP32[gb + 29544 >> 2] = fb + 2;
 HEAP32[gb + 29548 >> 2] = fb + 2;
 HEAP32[gb + 29552 >> 2] = fb + 1;
 HEAP32[gb + 29556 >> 2] = fb + 1;
 HEAP32[gb + 29560 >> 2] = fb + 1;
 HEAP32[gb + 29564 >> 2] = fb + 1;
 HEAP32[gb + 29568 >> 2] = fb + 3;
 HEAP32[gb + 29572 >> 2] = fb + 1;
 HEAP32[gb + 29576 >> 2] = fb + 3;
 HEAP32[gb + 29580 >> 2] = fb + 4;
 HEAP32[gb + 29584 >> 2] = fb + 5;
 runPostSets19();
}

function runPostSets10() {
 var i1 = 0;
 HEAP32[gb + 21316 >> 2] = fb + 57;
 HEAP32[gb + 21320 >> 2] = fb + 1;
 HEAP32[gb + 21324 >> 2] = fb + 42;
 HEAP32[gb + 21328 >> 2] = fb + 1;
 HEAP32[gb + 21332 >> 2] = fb + 1;
 HEAP32[gb + 21336 >> 2] = fb + 58;
 HEAP32[gb + 21340 >> 2] = fb + 57;
 HEAP32[gb + 21344 >> 2] = fb + 23;
 HEAP32[gb + 21348 >> 2] = fb + 59;
 HEAP32[gb + 21352 >> 2] = fb + 43;
 HEAP32[gb + 21356 >> 2] = fb + 1;
 HEAP32[gb + 21360 >> 2] = fb + 60;
 HEAP32[gb + 21364 >> 2] = fb + 1;
 HEAP32[gb + 21368 >> 2] = fb + 2;
 HEAP32[gb + 21372 >> 2] = fb + 44;
 HEAP32[gb + 21376 >> 2] = fb + 3;
 HEAP32[gb + 21380 >> 2] = fb + 58;
 HEAP32[gb + 21384 >> 2] = fb + 61;
 HEAP32[gb + 21388 >> 2] = fb + 59;
 HEAP32[gb + 21392 >> 2] = fb + 45;
 HEAP32[gb + 21396 >> 2] = fb + 60;
 HEAP32[gb + 21400 >> 2] = fb + 61;
 HEAP32[gb + 21404 >> 2] = fb + 62;
 HEAP32[gb + 21408 >> 2] = fb + 63;
 HEAP32[gb + 21412 >> 2] = fb + 4;
 HEAP32[gb + 21416 >> 2] = fb + 24;
 HEAP32[gb + 21420 >> 2] = fb + 62;
 HEAP32[gb + 21424 >> 2] = fb + 63;
 HEAP32[gb + 21428 >> 2] = fb + 64;
 HEAP32[gb + 21432 >> 2] = fb + 64;
 HEAP32[gb + 21436 >> 2] = fb + 65;
 HEAP32[gb + 21440 >> 2] = fb + 66;
 HEAP32[gb + 21444 >> 2] = fb + 65;
 HEAP32[gb + 21448 >> 2] = fb + 25;
 HEAP32[gb + 21452 >> 2] = fb + 66;
 HEAP32[gb + 21456 >> 2] = fb + 67;
 HEAP32[gb + 21460 >> 2] = fb + 68;
 HEAP32[gb + 21464 >> 2] = fb + 69;
 HEAP32[gb + 21468 >> 2] = fb + 26;
 HEAP32[gb + 21472 >> 2] = fb + 70;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 184 >> 2] = (HEAP32[gb + 184 >> 2] | 0) + i1;
 HEAP32[gb + 188 >> 2] = (HEAP32[gb + 188 >> 2] | 0) + (gb + 37921 | 0);
 HEAP32[gb + 192 >> 2] = (HEAP32[gb + 192 >> 2] | 0) + (gb + 200 | 0);
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 200 >> 2] = (HEAP32[gb + 200 >> 2] | 0) + i1;
 HEAP32[gb + 204 >> 2] = (HEAP32[gb + 204 >> 2] | 0) + (gb + 37931 | 0);
 HEAP32[gb + 208 >> 2] = (HEAP32[gb + 208 >> 2] | 0) + (gb + 168 | 0);
 HEAP32[gb + 21480 >> 2] = (HEAP32[gb + 21480 >> 2] | 0) + (gb + 200 | 0);
 HEAP32[gb + 21484 >> 2] = fb + 47;
 HEAP32[gb + 21488 >> 2] = fb + 48;
 HEAP32[gb + 21492 >> 2] = fb + 18;
 HEAP32[gb + 21496 >> 2] = fb + 35;
 HEAP32[gb + 21500 >> 2] = fb + 36;
 HEAP32[gb + 21504 >> 2] = fb + 1;
 HEAP32[gb + 21508 >> 2] = fb + 3;
 HEAP32[gb + 21512 >> 2] = fb + 23;
 HEAP32[gb + 21516 >> 2] = fb + 2;
 HEAP32[gb + 21520 >> 2] = fb + 2;
 HEAP32[gb + 21524 >> 2] = fb + 2;
 HEAP32[gb + 21528 >> 2] = fb + 2;
 HEAP32[gb + 21532 >> 2] = fb + 2;
 HEAP32[gb + 21536 >> 2] = fb + 7;
 HEAP32[gb + 21540 >> 2] = fb + 67;
 HEAP32[gb + 21544 >> 2] = fb + 1;
 HEAP32[gb + 21548 >> 2] = fb + 3;
 HEAP32[gb + 21552 >> 2] = fb + 49;
 HEAP32[gb + 21556 >> 2] = fb + 5;
 HEAP32[gb + 21560 >> 2] = fb + 47;
 HEAP32[gb + 21564 >> 2] = fb + 2;
 HEAP32[gb + 21568 >> 2] = fb + 3;
 HEAP32[gb + 21572 >> 2] = fb + 4;
 HEAP32[gb + 21576 >> 2] = fb + 5;
 HEAP32[gb + 21580 >> 2] = fb + 1;
 HEAP32[gb + 21584 >> 2] = fb + 2;
 HEAP32[gb + 21588 >> 2] = fb + 50;
 HEAP32[gb + 21592 >> 2] = fb + 5;
 HEAP32[gb + 21596 >> 2] = fb + 6;
 HEAP32[gb + 21600 >> 2] = fb + 3;
 HEAP32[gb + 21604 >> 2] = fb + 6;
 HEAP32[gb + 21608 >> 2] = fb + 7;
 HEAP32[gb + 21612 >> 2] = fb + 7;
 HEAP32[gb + 21616 >> 2] = fb + 8;
 HEAP32[gb + 21620 >> 2] = fb + 51;
 HEAP32[gb + 21624 >> 2] = fb + 10;
 HEAP32[gb + 21628 >> 2] = fb + 11;
 HEAP32[gb + 21632 >> 2] = fb + 8;
 HEAP32[gb + 21636 >> 2] = fb + 12;
 HEAP32[gb + 21640 >> 2] = fb + 13;
 HEAP32[gb + 21644 >> 2] = fb + 14;
 HEAP32[gb + 21648 >> 2] = fb + 15;
 HEAP32[gb + 21652 >> 2] = fb + 16;
 HEAP32[gb + 21656 >> 2] = fb + 8;
 HEAP32[gb + 21660 >> 2] = fb + 4;
 HEAP32[gb + 21664 >> 2] = fb + 1;
 HEAP32[gb + 21668 >> 2] = fb + 5;
 HEAP32[gb + 21672 >> 2] = fb + 46;
 HEAP32[gb + 21676 >> 2] = fb + 9;
 HEAP32[gb + 21680 >> 2] = fb + 52;
 HEAP32[gb + 21684 >> 2] = fb + 6;
 runPostSets11();
}

function runPostSets5() {
 var i1 = 0;
 HEAP32[gb + 19396 >> 2] = fb + 30;
 HEAP32[gb + 19400 >> 2] = fb + 41;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 80 >> 2] = (HEAP32[gb + 80 >> 2] | 0) + i1;
 HEAP32[gb + 84 >> 2] = (HEAP32[gb + 84 >> 2] | 0) + (gb + 37770 | 0);
 HEAP32[gb + 88 >> 2] = (HEAP32[gb + 88 >> 2] | 0) + (gb + 216 | 0);
 HEAP32[gb + 19408 >> 2] = (HEAP32[gb + 19408 >> 2] | 0) + (gb + 96 | 0);
 HEAP32[gb + 19412 >> 2] = fb + 41;
 HEAP32[gb + 19416 >> 2] = fb + 42;
 HEAP32[gb + 19420 >> 2] = fb + 12;
 HEAP32[gb + 19424 >> 2] = fb + 17;
 HEAP32[gb + 19428 >> 2] = fb + 18;
 HEAP32[gb + 19432 >> 2] = fb + 1;
 HEAP32[gb + 19436 >> 2] = fb + 3;
 HEAP32[gb + 19440 >> 2] = fb + 23;
 HEAP32[gb + 19444 >> 2] = fb + 2;
 HEAP32[gb + 19448 >> 2] = fb + 2;
 HEAP32[gb + 19452 >> 2] = fb + 1;
 HEAP32[gb + 19456 >> 2] = fb + 1;
 HEAP32[gb + 19460 >> 2] = fb + 1;
 HEAP32[gb + 19464 >> 2] = fb + 1;
 HEAP32[gb + 19468 >> 2] = fb + 3;
 HEAP32[gb + 19472 >> 2] = fb + 1;
 HEAP32[gb + 19476 >> 2] = fb + 3;
 HEAP32[gb + 19480 >> 2] = fb + 4;
 HEAP32[gb + 19484 >> 2] = fb + 5;
 HEAP32[gb + 19488 >> 2] = fb + 6;
 HEAP32[gb + 19492 >> 2] = fb + 2;
 HEAP32[gb + 19496 >> 2] = fb + 3;
 HEAP32[gb + 19500 >> 2] = fb + 4;
 HEAP32[gb + 19504 >> 2] = fb + 5;
 HEAP32[gb + 19508 >> 2] = fb + 1;
 HEAP32[gb + 19512 >> 2] = fb + 1;
 HEAP32[gb + 19516 >> 2] = fb + 7;
 HEAP32[gb + 19520 >> 2] = fb + 5;
 HEAP32[gb + 19524 >> 2] = fb + 6;
 HEAP32[gb + 19528 >> 2] = fb + 3;
 HEAP32[gb + 19532 >> 2] = fb + 6;
 HEAP32[gb + 19536 >> 2] = fb + 7;
 HEAP32[gb + 19540 >> 2] = fb + 7;
 HEAP32[gb + 19544 >> 2] = fb + 8;
 HEAP32[gb + 19548 >> 2] = fb + 9;
 HEAP32[gb + 19552 >> 2] = fb + 10;
 HEAP32[gb + 19556 >> 2] = fb + 11;
 HEAP32[gb + 19560 >> 2] = fb + 8;
 HEAP32[gb + 19564 >> 2] = fb + 12;
 HEAP32[gb + 19568 >> 2] = fb + 13;
 HEAP32[gb + 19572 >> 2] = fb + 14;
 HEAP32[gb + 19576 >> 2] = fb + 15;
 HEAP32[gb + 19580 >> 2] = fb + 16;
 HEAP32[gb + 19584 >> 2] = fb + 8;
 HEAP32[gb + 19588 >> 2] = fb + 4;
 HEAP32[gb + 19592 >> 2] = fb + 1;
 HEAP32[gb + 19596 >> 2] = fb + 5;
 HEAP32[gb + 19600 >> 2] = fb + 32;
 HEAP32[gb + 19604 >> 2] = fb + 9;
 HEAP32[gb + 19608 >> 2] = fb + 18;
 HEAP32[gb + 19612 >> 2] = fb + 6;
 HEAP32[gb + 19616 >> 2] = fb + 7;
 HEAP32[gb + 19620 >> 2] = fb + 8;
 HEAP32[gb + 19624 >> 2] = fb + 4;
 HEAP32[gb + 19628 >> 2] = fb + 19;
 HEAP32[gb + 19632 >> 2] = fb + 9;
 HEAP32[gb + 19636 >> 2] = fb + 10;
 HEAP32[gb + 19640 >> 2] = fb + 27;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 96 >> 2] = (HEAP32[gb + 96 >> 2] | 0) + i1;
 HEAP32[gb + 100 >> 2] = (HEAP32[gb + 100 >> 2] | 0) + (gb + 37801 | 0);
 HEAP32[gb + 104 >> 2] = (HEAP32[gb + 104 >> 2] | 0) + (gb + 248 | 0);
 HEAP32[gb + 19648 >> 2] = (HEAP32[gb + 19648 >> 2] | 0) + (gb + 112 | 0);
 HEAP32[gb + 19652 >> 2] = fb + 43;
 HEAP32[gb + 19656 >> 2] = fb + 44;
 HEAP32[gb + 19660 >> 2] = fb + 1;
 HEAP32[gb + 19664 >> 2] = fb + 1;
 HEAP32[gb + 19668 >> 2] = fb + 2;
 HEAP32[gb + 19672 >> 2] = fb + 1;
 HEAP32[gb + 19676 >> 2] = fb + 3;
 HEAP32[gb + 19680 >> 2] = fb + 4;
 HEAP32[gb + 19684 >> 2] = fb + 2;
 HEAP32[gb + 19688 >> 2] = fb + 2;
 HEAP32[gb + 19692 >> 2] = fb + 1;
 HEAP32[gb + 19696 >> 2] = fb + 1;
 HEAP32[gb + 19700 >> 2] = fb + 1;
 HEAP32[gb + 19704 >> 2] = fb + 1;
 HEAP32[gb + 19708 >> 2] = fb + 3;
 HEAP32[gb + 19712 >> 2] = fb + 1;
 HEAP32[gb + 19716 >> 2] = fb + 3;
 HEAP32[gb + 19720 >> 2] = fb + 4;
 HEAP32[gb + 19724 >> 2] = fb + 5;
 HEAP32[gb + 19728 >> 2] = fb + 6;
 HEAP32[gb + 19732 >> 2] = fb + 2;
 HEAP32[gb + 19736 >> 2] = fb + 3;
 HEAP32[gb + 19740 >> 2] = fb + 4;
 HEAP32[gb + 19744 >> 2] = fb + 5;
 HEAP32[gb + 19748 >> 2] = fb + 1;
 HEAP32[gb + 19752 >> 2] = fb + 1;
 HEAP32[gb + 19756 >> 2] = fb + 7;
 HEAP32[gb + 19760 >> 2] = fb + 5;
 HEAP32[gb + 19764 >> 2] = fb + 6;
 HEAP32[gb + 19768 >> 2] = fb + 3;
 runPostSets6();
}

function runPostSets12() {
 var i1 = 0;
 HEAP32[gb + 22092 >> 2] = fb + 1;
 HEAP32[gb + 22096 >> 2] = fb + 7;
 HEAP32[gb + 22100 >> 2] = fb + 5;
 HEAP32[gb + 22104 >> 2] = fb + 6;
 HEAP32[gb + 22108 >> 2] = fb + 3;
 HEAP32[gb + 22112 >> 2] = fb + 6;
 HEAP32[gb + 22116 >> 2] = fb + 7;
 HEAP32[gb + 22120 >> 2] = fb + 7;
 HEAP32[gb + 22124 >> 2] = fb + 8;
 HEAP32[gb + 22128 >> 2] = fb + 9;
 HEAP32[gb + 22132 >> 2] = fb + 10;
 HEAP32[gb + 22136 >> 2] = fb + 11;
 HEAP32[gb + 22140 >> 2] = fb + 8;
 HEAP32[gb + 22144 >> 2] = fb + 12;
 HEAP32[gb + 22148 >> 2] = fb + 13;
 HEAP32[gb + 22152 >> 2] = fb + 14;
 HEAP32[gb + 22156 >> 2] = fb + 15;
 HEAP32[gb + 22160 >> 2] = fb + 16;
 HEAP32[gb + 22164 >> 2] = fb + 8;
 HEAP32[gb + 22168 >> 2] = fb + 4;
 HEAP32[gb + 22172 >> 2] = fb + 1;
 HEAP32[gb + 22176 >> 2] = fb + 5;
 HEAP32[gb + 22180 >> 2] = fb + 17;
 HEAP32[gb + 22184 >> 2] = fb + 9;
 HEAP32[gb + 22188 >> 2] = fb + 18;
 HEAP32[gb + 22192 >> 2] = fb + 6;
 HEAP32[gb + 22196 >> 2] = fb + 7;
 HEAP32[gb + 22200 >> 2] = fb + 8;
 HEAP32[gb + 22204 >> 2] = fb + 4;
 HEAP32[gb + 22208 >> 2] = fb + 19;
 HEAP32[gb + 22212 >> 2] = fb + 9;
 HEAP32[gb + 22216 >> 2] = fb + 10;
 HEAP32[gb + 22220 >> 2] = fb + 9;
 HEAP32[gb + 22224 >> 2] = fb + 20;
 HEAP32[gb + 22228 >> 2] = fb + 12;
 HEAP32[gb + 22232 >> 2] = fb + 46;
 HEAP32[gb + 22236 >> 2] = fb + 20;
 HEAP32[gb + 22240 >> 2] = fb + 68;
 HEAP32[gb + 22244 >> 2] = fb + 22;
 HEAP32[gb + 22248 >> 2] = fb + 27;
 HEAP32[gb + 22252 >> 2] = fb + 10;
 HEAP32[gb + 22256 >> 2] = fb + 11;
 HEAP32[gb + 22260 >> 2] = fb + 12;
 HEAP32[gb + 22264 >> 2] = fb + 13;
 HEAP32[gb + 22268 >> 2] = fb + 14;
 HEAP32[gb + 22272 >> 2] = fb + 11;
 HEAP32[gb + 22276 >> 2] = fb + 23;
 HEAP32[gb + 22280 >> 2] = fb + 24;
 HEAP32[gb + 22284 >> 2] = fb + 14;
 HEAP32[gb + 22288 >> 2] = fb + 25;
 HEAP32[gb + 22292 >> 2] = fb + 69;
 HEAP32[gb + 22296 >> 2] = fb + 15;
 HEAP32[gb + 22300 >> 2] = fb + 16;
 HEAP32[gb + 22304 >> 2] = fb + 27;
 HEAP32[gb + 22308 >> 2] = fb + 28;
 HEAP32[gb + 22312 >> 2] = fb + 15;
 HEAP32[gb + 22316 >> 2] = fb + 1;
 HEAP32[gb + 22320 >> 2] = fb + 29;
 HEAP32[gb + 22324 >> 2] = fb + 71;
 HEAP32[gb + 22328 >> 2] = fb + 27;
 HEAP32[gb + 22332 >> 2] = fb + 28;
 HEAP32[gb + 22336 >> 2] = fb + 29;
 HEAP32[gb + 22340 >> 2] = fb + 20;
 HEAP32[gb + 22344 >> 2] = fb + 30;
 HEAP32[gb + 22348 >> 2] = fb + 70;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 216 >> 2] = (HEAP32[gb + 216 >> 2] | 0) + i1;
 HEAP32[gb + 220 >> 2] = (HEAP32[gb + 220 >> 2] | 0) + (gb + 37946 | 0);
 HEAP32[gb + 224 >> 2] = (HEAP32[gb + 224 >> 2] | 0) + (gb + 232 | 0);
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 232 >> 2] = (HEAP32[gb + 232 >> 2] | 0) + i1;
 HEAP32[gb + 236 >> 2] = (HEAP32[gb + 236 >> 2] | 0) + (gb + 37966 | 0);
 HEAP32[gb + 240 >> 2] = (HEAP32[gb + 240 >> 2] | 0) + (gb + 152 | 0);
 HEAP32[gb + 22356 >> 2] = (HEAP32[gb + 22356 >> 2] | 0) + (gb + 232 | 0);
 HEAP32[gb + 22360 >> 2] = fb + 47;
 HEAP32[gb + 22364 >> 2] = fb + 48;
 HEAP32[gb + 22368 >> 2] = fb + 1;
 HEAP32[gb + 22372 >> 2] = fb + 47;
 HEAP32[gb + 22376 >> 2] = fb + 48;
 HEAP32[gb + 22380 >> 2] = fb + 1;
 HEAP32[gb + 22384 >> 2] = fb + 3;
 HEAP32[gb + 22388 >> 2] = fb + 4;
 HEAP32[gb + 22392 >> 2] = fb + 2;
 HEAP32[gb + 22396 >> 2] = fb + 2;
 HEAP32[gb + 22400 >> 2] = fb + 1;
 HEAP32[gb + 22404 >> 2] = fb + 1;
 HEAP32[gb + 22408 >> 2] = fb + 1;
 HEAP32[gb + 22412 >> 2] = fb + 1;
 HEAP32[gb + 22416 >> 2] = fb + 3;
 HEAP32[gb + 22420 >> 2] = fb + 1;
 HEAP32[gb + 22424 >> 2] = fb + 3;
 HEAP32[gb + 22428 >> 2] = fb + 4;
 HEAP32[gb + 22432 >> 2] = fb + 5;
 HEAP32[gb + 22436 >> 2] = fb + 6;
 HEAP32[gb + 22440 >> 2] = fb + 2;
 HEAP32[gb + 22444 >> 2] = fb + 3;
 HEAP32[gb + 22448 >> 2] = fb + 4;
 HEAP32[gb + 22452 >> 2] = fb + 5;
 HEAP32[gb + 22456 >> 2] = fb + 1;
 HEAP32[gb + 22460 >> 2] = fb + 1;
 runPostSets13();
}

function runPostSets7() {
 var i1 = 0;
 HEAP32[gb + 20160 >> 2] = fb + 10;
 HEAP32[gb + 20164 >> 2] = fb + 11;
 HEAP32[gb + 20168 >> 2] = fb + 8;
 HEAP32[gb + 20172 >> 2] = fb + 12;
 HEAP32[gb + 20176 >> 2] = fb + 13;
 HEAP32[gb + 20180 >> 2] = fb + 14;
 HEAP32[gb + 20184 >> 2] = fb + 15;
 HEAP32[gb + 20188 >> 2] = fb + 16;
 HEAP32[gb + 20192 >> 2] = fb + 8;
 HEAP32[gb + 20196 >> 2] = fb + 4;
 HEAP32[gb + 20200 >> 2] = fb + 1;
 HEAP32[gb + 20204 >> 2] = fb + 5;
 HEAP32[gb + 20208 >> 2] = fb + 46;
 HEAP32[gb + 20212 >> 2] = fb + 9;
 HEAP32[gb + 20216 >> 2] = fb + 18;
 HEAP32[gb + 20220 >> 2] = fb + 6;
 HEAP32[gb + 20224 >> 2] = fb + 7;
 HEAP32[gb + 20228 >> 2] = fb + 8;
 HEAP32[gb + 20232 >> 2] = fb + 4;
 HEAP32[gb + 20236 >> 2] = fb + 19;
 HEAP32[gb + 20240 >> 2] = fb + 9;
 HEAP32[gb + 20244 >> 2] = fb + 10;
 i1 = g$__ZTVN10__cxxabiv117__class_type_infoE() | 0;
 HEAP32[gb + 128 >> 2] = (HEAP32[gb + 128 >> 2] | 0) + i1;
 HEAP32[gb + 132 >> 2] = (HEAP32[gb + 132 >> 2] | 0) + (gb + 37863 | 0);
 HEAP32[gb + 20252 >> 2] = (HEAP32[gb + 20252 >> 2] | 0) + (gb + 136 | 0);
 HEAP32[gb + 20256 >> 2] = fb + 47;
 HEAP32[gb + 20260 >> 2] = fb + 48;
 HEAP32[gb + 20264 >> 2] = fb + 1;
 HEAP32[gb + 20268 >> 2] = fb + 29;
 HEAP32[gb + 20272 >> 2] = fb + 30;
 HEAP32[gb + 20276 >> 2] = fb + 1;
 HEAP32[gb + 20280 >> 2] = fb + 3;
 HEAP32[gb + 20284 >> 2] = fb + 23;
 HEAP32[gb + 20288 >> 2] = fb + 2;
 HEAP32[gb + 20292 >> 2] = fb + 2;
 HEAP32[gb + 20296 >> 2] = fb + 1;
 HEAP32[gb + 20300 >> 2] = fb + 1;
 HEAP32[gb + 20304 >> 2] = fb + 1;
 HEAP32[gb + 20308 >> 2] = fb + 1;
 HEAP32[gb + 20312 >> 2] = fb + 3;
 HEAP32[gb + 20316 >> 2] = fb + 1;
 HEAP32[gb + 20320 >> 2] = fb + 3;
 HEAP32[gb + 20324 >> 2] = fb + 4;
 HEAP32[gb + 20328 >> 2] = fb + 5;
 HEAP32[gb + 20332 >> 2] = fb + 6;
 HEAP32[gb + 20336 >> 2] = fb + 2;
 HEAP32[gb + 20340 >> 2] = fb + 3;
 HEAP32[gb + 20344 >> 2] = fb + 4;
 HEAP32[gb + 20348 >> 2] = fb + 5;
 HEAP32[gb + 20352 >> 2] = fb + 1;
 HEAP32[gb + 20356 >> 2] = fb + 1;
 HEAP32[gb + 20360 >> 2] = fb + 7;
 HEAP32[gb + 20364 >> 2] = fb + 5;
 HEAP32[gb + 20368 >> 2] = fb + 6;
 HEAP32[gb + 20372 >> 2] = fb + 3;
 HEAP32[gb + 20376 >> 2] = fb + 6;
 HEAP32[gb + 20380 >> 2] = fb + 7;
 HEAP32[gb + 20384 >> 2] = fb + 7;
 HEAP32[gb + 20388 >> 2] = fb + 8;
 HEAP32[gb + 20392 >> 2] = fb + 9;
 HEAP32[gb + 20396 >> 2] = fb + 10;
 HEAP32[gb + 20400 >> 2] = fb + 11;
 HEAP32[gb + 20404 >> 2] = fb + 8;
 HEAP32[gb + 20408 >> 2] = fb + 12;
 HEAP32[gb + 20412 >> 2] = fb + 13;
 HEAP32[gb + 20416 >> 2] = fb + 14;
 HEAP32[gb + 20420 >> 2] = fb + 15;
 HEAP32[gb + 20424 >> 2] = fb + 16;
 HEAP32[gb + 20428 >> 2] = fb + 8;
 HEAP32[gb + 20432 >> 2] = fb + 4;
 HEAP32[gb + 20436 >> 2] = fb + 1;
 HEAP32[gb + 20440 >> 2] = fb + 5;
 HEAP32[gb + 20444 >> 2] = fb + 46;
 HEAP32[gb + 20448 >> 2] = fb + 9;
 HEAP32[gb + 20452 >> 2] = fb + 18;
 HEAP32[gb + 20456 >> 2] = fb + 6;
 HEAP32[gb + 20460 >> 2] = fb + 7;
 HEAP32[gb + 20464 >> 2] = fb + 8;
 HEAP32[gb + 20468 >> 2] = fb + 4;
 HEAP32[gb + 20472 >> 2] = fb + 19;
 HEAP32[gb + 20476 >> 2] = fb + 9;
 HEAP32[gb + 20480 >> 2] = fb + 10;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 136 >> 2] = (HEAP32[gb + 136 >> 2] | 0) + i1;
 HEAP32[gb + 140 >> 2] = (HEAP32[gb + 140 >> 2] | 0) + (gb + 37877 | 0);
 HEAP32[gb + 144 >> 2] = (HEAP32[gb + 144 >> 2] | 0) + (gb + 128 | 0);
 HEAP32[gb + 20488 >> 2] = (HEAP32[gb + 20488 >> 2] | 0) + (gb + 152 | 0);
 HEAP32[gb + 20492 >> 2] = fb + 47;
 HEAP32[gb + 20496 >> 2] = fb + 48;
 HEAP32[gb + 20500 >> 2] = fb + 1;
 HEAP32[gb + 20504 >> 2] = fb + 31;
 HEAP32[gb + 20508 >> 2] = fb + 32;
 HEAP32[gb + 20512 >> 2] = fb + 1;
 HEAP32[gb + 20516 >> 2] = fb + 3;
 HEAP32[gb + 20520 >> 2] = fb + 23;
 HEAP32[gb + 20524 >> 2] = fb + 2;
 HEAP32[gb + 20528 >> 2] = fb + 2;
 HEAP32[gb + 20532 >> 2] = fb + 1;
 HEAP32[gb + 20536 >> 2] = fb + 1;
 runPostSets8();
}

function runPostSets20() {
 var i1 = 0;
 HEAP32[gb + 29976 >> 2] = fb + 10;
 HEAP32[gb + 29980 >> 2] = fb + 9;
 HEAP32[gb + 29984 >> 2] = fb + 64;
 HEAP32[gb + 29988 >> 2] = fb + 12;
 HEAP32[gb + 29992 >> 2] = fb + 65;
 HEAP32[gb + 29996 >> 2] = fb + 20;
 HEAP32[gb + 3e4 >> 2] = fb + 93;
 HEAP32[gb + 30004 >> 2] = fb + 22;
 HEAP32[gb + 30008 >> 2] = fb + 32;
 HEAP32[gb + 30012 >> 2] = fb + 10;
 HEAP32[gb + 30016 >> 2] = fb + 11;
 HEAP32[gb + 30020 >> 2] = fb + 12;
 HEAP32[gb + 30024 >> 2] = fb + 13;
 HEAP32[gb + 30028 >> 2] = fb + 14;
 HEAP32[gb + 30032 >> 2] = fb + 11;
 HEAP32[gb + 30036 >> 2] = fb + 23;
 HEAP32[gb + 30040 >> 2] = fb + 24;
 HEAP32[gb + 30044 >> 2] = fb + 14;
 HEAP32[gb + 30048 >> 2] = fb + 25;
 HEAP32[gb + 30052 >> 2] = fb + 94;
 HEAP32[gb + 30056 >> 2] = fb + 15;
 HEAP32[gb + 30060 >> 2] = fb + 16;
 HEAP32[gb + 30064 >> 2] = fb + 27;
 HEAP32[gb + 30068 >> 2] = fb + 28;
 HEAP32[gb + 30072 >> 2] = fb + 15;
 HEAP32[gb + 30076 >> 2] = fb + 1;
 HEAP32[gb + 30080 >> 2] = fb + 29;
 HEAP32[gb + 30084 >> 2] = fb + 107;
 HEAP32[gb + 30088 >> 2] = fb + 108;
 HEAP32[gb + 30092 >> 2] = fb + 109;
 HEAP32[gb + 30096 >> 2] = fb + 110;
 HEAP32[gb + 30100 >> 2] = fb + 20;
 HEAP32[gb + 30104 >> 2] = fb + 30;
 HEAP32[gb + 30108 >> 2] = fb + 95;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 360 >> 2] = (HEAP32[gb + 360 >> 2] | 0) + i1;
 HEAP32[gb + 364 >> 2] = (HEAP32[gb + 364 >> 2] | 0) + (gb + 38702 | 0);
 HEAP32[gb + 368 >> 2] = (HEAP32[gb + 368 >> 2] | 0) + (gb + 216 | 0);
 HEAP32[gb + 30116 >> 2] = (HEAP32[gb + 30116 >> 2] | 0) + (gb + 376 | 0);
 HEAP32[gb + 30120 >> 2] = fb + 111;
 HEAP32[gb + 30124 >> 2] = fb + 112;
 HEAP32[gb + 30128 >> 2] = fb + 12;
 HEAP32[gb + 30132 >> 2] = fb + 17;
 HEAP32[gb + 30136 >> 2] = fb + 18;
 HEAP32[gb + 30140 >> 2] = fb + 1;
 HEAP32[gb + 30144 >> 2] = fb + 3;
 HEAP32[gb + 30148 >> 2] = fb + 23;
 HEAP32[gb + 30152 >> 2] = fb + 2;
 HEAP32[gb + 30156 >> 2] = fb + 2;
 HEAP32[gb + 30160 >> 2] = fb + 1;
 HEAP32[gb + 30164 >> 2] = fb + 1;
 HEAP32[gb + 30168 >> 2] = fb + 1;
 HEAP32[gb + 30172 >> 2] = fb + 1;
 HEAP32[gb + 30176 >> 2] = fb + 3;
 HEAP32[gb + 30180 >> 2] = fb + 1;
 HEAP32[gb + 30184 >> 2] = fb + 3;
 HEAP32[gb + 30188 >> 2] = fb + 4;
 HEAP32[gb + 30192 >> 2] = fb + 5;
 HEAP32[gb + 30196 >> 2] = fb + 6;
 HEAP32[gb + 30200 >> 2] = fb + 2;
 HEAP32[gb + 30204 >> 2] = fb + 3;
 HEAP32[gb + 30208 >> 2] = fb + 4;
 HEAP32[gb + 30212 >> 2] = fb + 5;
 HEAP32[gb + 30216 >> 2] = fb + 1;
 HEAP32[gb + 30220 >> 2] = fb + 1;
 HEAP32[gb + 30224 >> 2] = fb + 7;
 HEAP32[gb + 30228 >> 2] = fb + 5;
 HEAP32[gb + 30232 >> 2] = fb + 6;
 HEAP32[gb + 30236 >> 2] = fb + 3;
 HEAP32[gb + 30240 >> 2] = fb + 6;
 HEAP32[gb + 30244 >> 2] = fb + 7;
 HEAP32[gb + 30248 >> 2] = fb + 7;
 HEAP32[gb + 30252 >> 2] = fb + 8;
 HEAP32[gb + 30256 >> 2] = fb + 9;
 HEAP32[gb + 30260 >> 2] = fb + 10;
 HEAP32[gb + 30264 >> 2] = fb + 11;
 HEAP32[gb + 30268 >> 2] = fb + 8;
 HEAP32[gb + 30272 >> 2] = fb + 12;
 HEAP32[gb + 30276 >> 2] = fb + 13;
 HEAP32[gb + 30280 >> 2] = fb + 14;
 HEAP32[gb + 30284 >> 2] = fb + 15;
 HEAP32[gb + 30288 >> 2] = fb + 16;
 HEAP32[gb + 30292 >> 2] = fb + 8;
 HEAP32[gb + 30296 >> 2] = fb + 4;
 HEAP32[gb + 30300 >> 2] = fb + 1;
 HEAP32[gb + 30304 >> 2] = fb + 5;
 HEAP32[gb + 30308 >> 2] = fb + 32;
 HEAP32[gb + 30312 >> 2] = fb + 9;
 HEAP32[gb + 30316 >> 2] = fb + 18;
 HEAP32[gb + 30320 >> 2] = fb + 6;
 HEAP32[gb + 30324 >> 2] = fb + 7;
 HEAP32[gb + 30328 >> 2] = fb + 8;
 HEAP32[gb + 30332 >> 2] = fb + 4;
 HEAP32[gb + 30336 >> 2] = fb + 19;
 HEAP32[gb + 30340 >> 2] = fb + 9;
 HEAP32[gb + 30344 >> 2] = fb + 10;
 HEAP32[gb + 30348 >> 2] = fb + 66;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 376 >> 2] = (HEAP32[gb + 376 >> 2] | 0) + i1;
 HEAP32[gb + 380 >> 2] = (HEAP32[gb + 380 >> 2] | 0) + (gb + 38711 | 0);
 runPostSets21();
}

function __ZN13CHudSpectator8SetModesEii(i6, i1, i2) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 i5 = HEAP32[gb + 121104 >> 2] | 0;
 i4 = (i1 | 0) == -1 ? i5 : i1;
 i3 = (HEAP32[i6 + 3856 >> 2] | 0) + 12 | 0;
 if ((i2 | 0) == -1) i1 = ~~+HEAPF32[i3 >> 2]; else i1 = i2;
 HEAPF32[i3 >> 2] = +(i1 | 0);
 if ((i4 + -1 | 0) >>> 0 > 5) mftCall_vii(HEAP32[gb + 92340 + 160 >> 2] | 0, gb + 41033 | 0, i7 | 0); else if ((i4 | 0) != (i5 | 0)) if (mftCall_i(HEAP32[gb + 92340 + 352 >> 2] | 0) | 0) {
  do if ((i4 | 0) != 3 & (HEAP32[gb + 121108 >> 2] | 0) == 0) {
   i1 = mftCall_ii(HEAP32[gb + 92340 + 212 >> 2] | 0, HEAP32[i6 + 4724 >> 2] | 0) | 0;
   if (i1 | 0) if (HEAP32[i1 + 4 >> 2] | 0) if (HEAP16[i1 + 746 >> 1] | 0) if ((mftCall_i(HEAP32[gb + 92340 + 204 >> 2] | 0) | 0) != (i1 | 0)) if (HEAP32[gb + 54736 + (HEAP32[i1 >> 2] << 5) >> 2] | 0) {
    HEAP32[gb + 121108 >> 2] = HEAP32[i6 + 4724 >> 2];
    HEAP32[gb + 121112 >> 2] = HEAP32[i6 + 4728 >> 2];
    break;
   }
   __ZN13CHudSpectator14FindNextPlayerEb(i6, 0);
  } while (0);
  switch (i4 | 0) {
  case 1:
   {
    HEAP32[gb + 121104 >> 2] = 1;
    break;
   }
  case 2:
   {
    HEAP32[gb + 121104 >> 2] = 2;
    break;
   }
  case 3:
   {
    HEAP32[gb + 121104 >> 2] = 3;
    i1 = HEAP32[gb + 121108 >> 2] | 0;
    if (i1 | 0) {
     __Z13V_GetChasePosiPfS_S_(i1, gb + 116260 | 0, gb + 116212 | 0, gb + 116224 | 0);
     mftCall_vi(HEAP32[gb + 92340 + 140 >> 2] | 0, gb + 116224 | 0);
     HEAP32[gb + 121144 >> 2] = 1;
    }
    break;
   }
  case 4:
   {
    HEAP32[gb + 121104 >> 2] = 4;
    break;
   }
  case 5:
   {
    HEAP32[gb + 121104 >> 2] = 5;
    HEAP32[i6 + 3824 >> 2] = HEAP32[i6 + 1480 >> 2];
    HEAP32[i6 + 3828 >> 2] = HEAP32[i6 + 1468 >> 2];
    HEAP32[i6 + 3828 + 4 >> 2] = HEAP32[i6 + 1468 + 4 >> 2];
    HEAP32[i6 + 3828 + 8 >> 2] = HEAP32[i6 + 1468 + 8 >> 2];
    break;
   }
  case 6:
   {
    HEAP32[gb + 121104 >> 2] = 6;
    HEAP32[i6 + 3824 >> 2] = HEAP32[i6 + 1480 >> 2];
    HEAP32[i6 + 3828 >> 2] = HEAP32[i6 + 1468 >> 2];
    HEAP32[i6 + 3828 + 4 >> 2] = HEAP32[i6 + 1468 + 4 >> 2];
    HEAP32[i6 + 3828 + 8 >> 2] = HEAP32[i6 + 1468 + 8 >> 2];
    break;
   }
  default:
   {}
  }
  if (((HEAP32[gb + 121104 >> 2] | 0) + -3 | 0) >>> 0 < 2) {
   HEAP32[i6 + 4692 >> 2] = 24;
   HEAP32[i6 + 4700 >> 2] = 0;
   HEAP32[i6 + 4696 >> 2] = 48;
   HEAP32[i6 + 4704 >> 2] = 24;
   i4 = HEAP32[gb + 92340 + 52 >> 2] | 0;
   i5 = HEAP32[i6 + 4688 >> 2] | 0;
   HEAP32[i7 + 40 >> 2] = HEAP32[i6 + 4692 >> 2];
   HEAP32[i7 + 40 + 4 >> 2] = HEAP32[i6 + 4692 + 4 >> 2];
   HEAP32[i7 + 40 + 8 >> 2] = HEAP32[i6 + 4692 + 8 >> 2];
   HEAP32[i7 + 40 + 12 >> 2] = HEAP32[i6 + 4692 + 12 >> 2];
   mftCall_viiiii(i4 | 0, i5 | 0, i7 + 40 | 0, 255, 255, 255);
  } else {
   HEAP32[i6 + 4692 >> 2] = 0;
   HEAP32[i6 + 4692 + 4 >> 2] = 0;
   HEAP32[i6 + 4692 + 8 >> 2] = 0;
   HEAP32[i6 + 4692 + 12 >> 2] = 0;
   i6 = HEAP32[gb + 92340 + 52 >> 2] | 0;
   HEAP32[i7 + 24 >> 2] = 0;
   HEAP32[i7 + 24 + 4 >> 2] = 0;
   HEAP32[i7 + 24 + 8 >> 2] = 0;
   HEAP32[i7 + 24 + 12 >> 2] = 0;
   HEAP32[i7 + 40 >> 2] = HEAP32[i7 + 24 >> 2];
   HEAP32[i7 + 40 + 4 >> 2] = HEAP32[i7 + 24 + 4 >> 2];
   HEAP32[i7 + 40 + 8 >> 2] = HEAP32[i7 + 24 + 8 >> 2];
   HEAP32[i7 + 40 + 12 >> 2] = HEAP32[i7 + 24 + 12 >> 2];
   mftCall_viiiii(i6 | 0, 0, i7 + 40 | 0, 0, 0, 0);
  }
  HEAP32[i7 + 8 >> 2] = HEAP32[gb + 121104 >> 2];
  _sprintf(i7 + 40 | 0, gb + 41058 | 0, i7 + 8 | 0) | 0;
  __ZN15CHudTextMessage26BufferedLocaliseTextStringEPKc(i7 + 40 | 0) | 0;
  HEAP32[i7 + 16 >> 2] = 4;
  HEAP32[i7 + 16 + 4 >> 2] = gb + 131672;
  _sprintf(i7 + 40 | 0, gb + 41071 | 0, i7 + 16 | 0) | 0;
  __ZN15CHudTextMessage15MsgFunc_TextMsgEPKciPv(0, 0, (_strlen(i7 + 40 | 0) | 0) + 1 | 0, i7 + 40 | 0) | 0;
 }
 STACKTOP = i7;
 return;
}

function runPostSets21() {
 var i1 = 0;
 HEAP32[gb + 384 >> 2] = (HEAP32[gb + 384 >> 2] | 0) + (gb + 248 | 0);
 HEAP32[gb + 30356 >> 2] = (HEAP32[gb + 30356 >> 2] | 0) + (gb + 392 | 0);
 HEAP32[gb + 30360 >> 2] = fb + 113;
 HEAP32[gb + 30364 >> 2] = fb + 114;
 HEAP32[gb + 30368 >> 2] = fb + 1;
 HEAP32[gb + 30372 >> 2] = fb + 1;
 HEAP32[gb + 30376 >> 2] = fb + 2;
 HEAP32[gb + 30380 >> 2] = fb + 1;
 HEAP32[gb + 30384 >> 2] = fb + 3;
 HEAP32[gb + 30388 >> 2] = fb + 4;
 HEAP32[gb + 30392 >> 2] = fb + 2;
 HEAP32[gb + 30396 >> 2] = fb + 2;
 HEAP32[gb + 30400 >> 2] = fb + 1;
 HEAP32[gb + 30404 >> 2] = fb + 1;
 HEAP32[gb + 30408 >> 2] = fb + 1;
 HEAP32[gb + 30412 >> 2] = fb + 1;
 HEAP32[gb + 30416 >> 2] = fb + 3;
 HEAP32[gb + 30420 >> 2] = fb + 1;
 HEAP32[gb + 30424 >> 2] = fb + 3;
 HEAP32[gb + 30428 >> 2] = fb + 4;
 HEAP32[gb + 30432 >> 2] = fb + 5;
 HEAP32[gb + 30436 >> 2] = fb + 6;
 HEAP32[gb + 30440 >> 2] = fb + 2;
 HEAP32[gb + 30444 >> 2] = fb + 3;
 HEAP32[gb + 30448 >> 2] = fb + 4;
 HEAP32[gb + 30452 >> 2] = fb + 5;
 HEAP32[gb + 30456 >> 2] = fb + 1;
 HEAP32[gb + 30460 >> 2] = fb + 1;
 HEAP32[gb + 30464 >> 2] = fb + 7;
 HEAP32[gb + 30468 >> 2] = fb + 5;
 HEAP32[gb + 30472 >> 2] = fb + 6;
 HEAP32[gb + 30476 >> 2] = fb + 3;
 HEAP32[gb + 30480 >> 2] = fb + 6;
 HEAP32[gb + 30484 >> 2] = fb + 7;
 HEAP32[gb + 30488 >> 2] = fb + 7;
 HEAP32[gb + 30492 >> 2] = fb + 8;
 HEAP32[gb + 30496 >> 2] = fb + 9;
 HEAP32[gb + 30500 >> 2] = fb + 10;
 HEAP32[gb + 30504 >> 2] = fb + 11;
 HEAP32[gb + 30508 >> 2] = fb + 8;
 HEAP32[gb + 30512 >> 2] = fb + 12;
 HEAP32[gb + 30516 >> 2] = fb + 13;
 HEAP32[gb + 30520 >> 2] = fb + 14;
 HEAP32[gb + 30524 >> 2] = fb + 15;
 HEAP32[gb + 30528 >> 2] = fb + 16;
 HEAP32[gb + 30532 >> 2] = fb + 8;
 HEAP32[gb + 30536 >> 2] = fb + 4;
 HEAP32[gb + 30540 >> 2] = fb + 1;
 HEAP32[gb + 30544 >> 2] = fb + 5;
 HEAP32[gb + 30548 >> 2] = fb + 17;
 HEAP32[gb + 30552 >> 2] = fb + 9;
 HEAP32[gb + 30556 >> 2] = fb + 18;
 HEAP32[gb + 30560 >> 2] = fb + 6;
 HEAP32[gb + 30564 >> 2] = fb + 7;
 HEAP32[gb + 30568 >> 2] = fb + 8;
 HEAP32[gb + 30572 >> 2] = fb + 4;
 HEAP32[gb + 30576 >> 2] = fb + 19;
 HEAP32[gb + 30580 >> 2] = fb + 9;
 HEAP32[gb + 30584 >> 2] = fb + 10;
 HEAP32[gb + 30588 >> 2] = fb + 9;
 HEAP32[gb + 30592 >> 2] = fb + 67;
 HEAP32[gb + 30596 >> 2] = fb + 12;
 HEAP32[gb + 30600 >> 2] = fb + 68;
 HEAP32[gb + 30604 >> 2] = fb + 20;
 HEAP32[gb + 30608 >> 2] = fb + 96;
 HEAP32[gb + 30612 >> 2] = fb + 97;
 HEAP32[gb + 30616 >> 2] = fb + 33;
 HEAP32[gb + 30620 >> 2] = fb + 10;
 HEAP32[gb + 30624 >> 2] = fb + 11;
 HEAP32[gb + 30628 >> 2] = fb + 12;
 HEAP32[gb + 30632 >> 2] = fb + 13;
 HEAP32[gb + 30636 >> 2] = fb + 14;
 HEAP32[gb + 30640 >> 2] = fb + 11;
 HEAP32[gb + 30644 >> 2] = fb + 23;
 HEAP32[gb + 30648 >> 2] = fb + 24;
 HEAP32[gb + 30652 >> 2] = fb + 14;
 HEAP32[gb + 30656 >> 2] = fb + 25;
 HEAP32[gb + 30660 >> 2] = fb + 98;
 HEAP32[gb + 30664 >> 2] = fb + 15;
 HEAP32[gb + 30668 >> 2] = fb + 16;
 HEAP32[gb + 30672 >> 2] = fb + 27;
 HEAP32[gb + 30676 >> 2] = fb + 28;
 HEAP32[gb + 30680 >> 2] = fb + 15;
 HEAP32[gb + 30684 >> 2] = fb + 1;
 HEAP32[gb + 30688 >> 2] = fb + 29;
 HEAP32[gb + 30692 >> 2] = fb + 115;
 HEAP32[gb + 30696 >> 2] = fb + 116;
 HEAP32[gb + 30700 >> 2] = fb + 117;
 HEAP32[gb + 30704 >> 2] = fb + 118;
 HEAP32[gb + 30708 >> 2] = fb + 20;
 HEAP32[gb + 30712 >> 2] = fb + 99;
 HEAP32[gb + 30716 >> 2] = fb + 100;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 392 >> 2] = (HEAP32[gb + 392 >> 2] | 0) + i1;
 HEAP32[gb + 396 >> 2] = (HEAP32[gb + 396 >> 2] | 0) + (gb + 38810 | 0);
 HEAP32[gb + 400 >> 2] = (HEAP32[gb + 400 >> 2] | 0) + (gb + 216 | 0);
 HEAP32[gb + 30724 >> 2] = (HEAP32[gb + 30724 >> 2] | 0) + (gb + 408 | 0);
 HEAP32[gb + 30728 >> 2] = fb + 119;
 HEAP32[gb + 30732 >> 2] = fb + 120;
 HEAP32[gb + 30736 >> 2] = fb + 12;
 runPostSets22();
}

function __Z24EV_HLDM_PlayTextureSoundiP9pmtrace_sPfS1_i(i2, i8, i6, i3, i7) {
 i2 = i2 | 0;
 i8 = i8 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 var d1 = 0.0, d4 = 0.0, d5 = 0.0, i9 = 0, i10 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 i2 = mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 32 >> 2] | 0, i8 | 0) | 0;
 if ((i2 | 0) > 0) {
  i2 = (i2 | 0) > (mftCall_i(HEAP32[gb + 92340 + 144 >> 2] | 0) | 0);
  i2 = i2 ? 0 : 70;
 } else if (!i2) {
  i2 = mftCall_iiii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 76 >> 2] | 0, HEAP32[i8 + 48 >> 2] | 0, i6 | 0, i3 | 0) | 0;
  if (!i2) i2 = 0; else {
   _strcpy(i9 + 80 | 0, i2 | 0) | 0;
   i2 = HEAP8[i9 + 80 >> 0] | 0;
   switch (i2 << 24 >> 24) {
   case 43:
   case 45:
    {
     i2 = HEAP8[i9 + 80 + 2 >> 0] | 0;
     i3 = i9 + 80 + 2 | 0;
     break;
    }
   default:
    i3 = i9 + 80 | 0;
   }
   switch (i2 << 24 >> 24) {
   case 32:
   case 126:
   case 33:
   case 123:
    {
     i2 = i3 + 1 | 0;
     break;
    }
   default:
    i2 = i3;
   }
   _strcpy(i9 + 16 | 0, i2 | 0) | 0;
   HEAP8[i9 + 16 + 12 >> 0] = 0;
   i2 = _PM_FindTextureType(i9 + 16 | 0) | 0;
  }
 } else i2 = 0;
 do switch (i2 << 24 >> 24 | 0) {
 case 70:
  {
   if ((i7 | 0) == 5) d1 = 0.0; else {
    HEAP32[i9 >> 2] = gb + 36989;
    HEAP32[i9 + 4 >> 2] = gb + 37013;
    i2 = 1;
    d4 = 1.0;
    d5 = 1.0;
    d1 = .20000000298023224;
    i10 = 22;
   }
   break;
  }
 case 77:
  {
   HEAP32[i9 >> 2] = gb + 45058;
   HEAP32[i9 + 4 >> 2] = gb + 45100;
   i2 = 1;
   d4 = .800000011920929;
   d5 = .8999999761581421;
   d1 = .30000001192092896;
   i10 = 22;
   break;
  }
 case 68:
  {
   HEAP32[i9 >> 2] = gb + 45142;
   HEAP32[i9 + 4 >> 2] = gb + 45182;
   HEAP32[i9 + 8 >> 2] = gb + 45162;
   i2 = 2;
   d4 = .800000011920929;
   d5 = .8999999761581421;
   d1 = .10000000149011612;
   i10 = 22;
   break;
  }
 case 86:
  {
   HEAP32[i9 >> 2] = gb + 45222;
   HEAP32[i9 + 4 >> 2] = gb + 45222;
   i2 = 1;
   d4 = .800000011920929;
   d5 = .5;
   d1 = .30000001192092896;
   i10 = 22;
   break;
  }
 case 71:
  {
   HEAP32[i9 >> 2] = gb + 45302;
   HEAP32[i9 + 4 >> 2] = gb + 45365;
   i2 = 1;
   d4 = .800000011920929;
   d5 = .8999999761581421;
   d1 = .5;
   i10 = 22;
   break;
  }
 case 84:
  {
   HEAP32[i9 >> 2] = gb + 45386;
   HEAP32[i9 + 4 >> 2] = gb + 45406;
   HEAP32[i9 + 8 >> 2] = gb + 45426;
   HEAP32[i9 + 12 >> 2] = gb + 45446;
   i2 = 3;
   d4 = .800000011920929;
   d5 = .800000011920929;
   d1 = .20000000298023224;
   i10 = 22;
   break;
  }
 case 83:
  {
   HEAP32[i9 >> 2] = gb + 45486;
   HEAP32[i9 + 4 >> 2] = gb + 45507;
   HEAP32[i9 + 8 >> 2] = gb + 45528;
   HEAP32[i9 + 12 >> 2] = gb + 45549;
   i2 = 3;
   d4 = .800000011920929;
   d5 = .8999999761581421;
   d1 = 0.0;
   i10 = 22;
   break;
  }
 case 87:
  {
   HEAP32[i9 >> 2] = gb + 36884;
   HEAP32[i9 + 4 >> 2] = gb + 36901;
   HEAP32[i9 + 8 >> 2] = gb + 36918;
   i2 = 2;
   d4 = .800000011920929;
   d5 = .8999999761581421;
   d1 = .20000000298023224;
   i10 = 22;
   break;
  }
 case 80:
 case 89:
  {
   HEAP32[i9 >> 2] = gb + 36935;
   HEAP32[i9 + 4 >> 2] = gb + 36953;
   HEAP32[i9 + 8 >> 2] = gb + 36971;
   i2 = 2;
   d4 = .800000011920929;
   d5 = .800000011920929;
   d1 = .20000000298023224;
   i10 = 22;
   break;
  }
 default:
  {
   HEAP32[i9 >> 2] = gb + 44978;
   HEAP32[i9 + 4 >> 2] = gb + 45018;
   i2 = 1;
   d4 = .800000011920929;
   d5 = .8999999761581421;
   d1 = .6000000238418579;
   i10 = 22;
  }
 } while (0);
 if ((i10 | 0) == 22) {
  i7 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0;
  i10 = HEAP32[i9 + ((mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, i2 | 0) | 0) << 2) >> 2] | 0;
  mftCall_viiiiddii(i7 | 0, 0, i8 + 20 | 0, 6, i10 | 0, +d5, +d4, 0, (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 15) | 0) + 96 | 0);
 }
 STACKTOP = i9;
 return +d1;
}

function __ZN4CHud4InitEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40605 | 0, fb + 20 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40610 | 0, fb + 21 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40619 | 0, fb + 22 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40628 | 0, fb + 23 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40636 | 0, fb + 24 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40645 | 0, fb + 25 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40652 | 0, fb + 26 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 40660 | 0, fb + 14 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 40673 | 0, fb + 15 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 40686 | 0, fb + 16 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 40708 | 0, fb + 17 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 40716 | 0, fb + 18 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40730 | 0, fb + 27 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40739 | 0, fb + 28 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40749 | 0, fb + 29 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40755 | 0, fb + 30 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40763 | 0, fb + 31 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40771 | 0, fb + 32 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40780 | 0, fb + 33 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40791 | 0, fb + 34 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40801 | 0, fb + 35 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40811 | 0, fb + 36 | 0) | 0;
 mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 40820 | 0, gb + 43877 | 0, 3) | 0;
 mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 40838 | 0, gb + 44858 | 0, 1) | 0;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 40853 | 0, gb + 44858 | 0, 1) | 0;
 HEAP32[gb + 93740 >> 2] = i1;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 + 88 >> 2] = 0;
 mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 40954 | 0, gb + 40866 | 0, 0) | 0;
 HEAP32[i2 + 124 >> 2] = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 41021 | 0, gb + 42416 | 0, 0) | 0;
 HEAP32[i2 + 100 >> 2] = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 40870 | 0, gb + 43877 | 0, 1) | 0;
 HEAP32[i2 + 104 >> 2] = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 40887 | 0, gb + 43877 | 0, 1) | 0;
 i1 = mftCall_ii(HEAP32[gb + 92340 + 288 >> 2] | 0, gb + 40896 | 0) | 0;
 HEAP32[gb + 93756 >> 2] = i1;
 HEAP32[i2 + 12 >> 2] = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (i1 | 0) {
  do {
   HEAP32[i2 >> 2] = HEAP32[i1 + 4 >> 2];
   _free(i1 | 0);
   i1 = HEAP32[i2 >> 2] | 0;
  } while ((i1 | 0) != 0);
  HEAP32[i2 >> 2] = 0;
 }
 HEAPF32[i2 + 36 >> 2] = 1.0;
 __ZN8CHudAmmo4InitEv(i2 + 128 | 0) | 0;
 __ZN10CHudHealth4InitEv(i2 + 168 | 0) | 0;
 __ZN11CHudSayText4InitEv(i2 + 6156 | 0) | 0;
 __ZN13CHudSpectator4InitEv(i2 + 424 | 0) | 0;
 __ZN10CHudGeiger4InitEv(i2 + 5160 | 0) | 0;
 __ZN9CHudTrain4InitEv(i2 + 5232 | 0) | 0;
 __ZN11CHudBattery4InitEv(i2 + 5184 | 0) | 0;
 __ZN14CHudFlashlight4InitEv(i2 + 5260 | 0) | 0;
 __ZN11CHudMessage4InitEv(i2 + 5324 | 0) | 0;
 __ZN13CHudStatusBar4InitEv(i2 + 5556 | 0) | 0;
 __ZN15CHudDeathNotice4InitEv(i2 + 6132 | 0) | 0;
 __ZN17CHudAmmoSecondary4InitEv(i2 + 6220 | 0) | 0;
 __ZN15CHudTextMessage4InitEv(i2 + 6264 | 0) | 0;
 __ZN15CHudStatusIcons4InitEv(i2 + 6284 | 0) | 0;
 __ZN8CHudMOTD4InitEv(i2 + 6536 | 0) | 0;
 __ZN14CHudScoreboard4InitEv(i2 + 6496 | 0) | 0;
 __ZN8CHudMenu4InitEv(i2 + 6184 | 0) | 0;
 __ZN4CHud16MsgFunc_ResetHUDEPKciPv(i2, 0, 0, 0) | 0;
 return;
}

function __ZN20CStudioModelRenderer15StudioDrawModelEi(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 HEAP32[i6 + 48 >> 2] = mftCall_i(HEAP32[gb + 94440 + 24 >> 2] | 0) | 0;
 mftCall_viii(HEAP32[gb + 94440 + 40 >> 2] | 0, i6 + 32 | 0, i6 + 8 | 0, i6 + 16 | 0);
 mftCall_viiii(HEAP32[gb + 94440 + 48 >> 2] | 0, i6 + 16524 | 0, i6 + 16488 | 0, i6 + 16500 | 0, i6 + 16512 | 0);
 mftCall_vii(HEAP32[gb + 94440 + 60 >> 2] | 0, i6 + 16480 | 0, i6 + 16484 | 0);
 i1 = HEAP32[i6 + 48 >> 2] | 0;
 do if ((HEAP32[i1 + 772 >> 2] | 0) == 17) {
  i1 = HEAP32[i1 + 764 >> 2] | 0;
  if ((i1 | 0) < 1) i1 = 0; else if ((i1 | 0) > (mftCall_i(HEAP32[gb + 92340 + 144 >> 2] | 0) | 0)) i1 = 0; else {
   _memcpy(i7 | 0, mftCall_ii(HEAP32[gb + 94440 + 32 >> 2] | 0, (HEAP32[(HEAP32[i6 + 48 >> 2] | 0) + 764 >> 2] | 0) + -1 | 0) | 0, 340) | 0;
   i4 = HEAP32[i6 + 48 >> 2] | 0;
   HEAP32[i7 + 4 >> 2] = HEAP32[i4 + 764 >> 2];
   HEAP32[i7 + 180 >> 2] = 0;
   HEAP32[i7 + 184 >> 2] = 0;
   HEAP32[i7 + 88 >> 2] = 0;
   HEAP32[i7 + 28 >> 2] = HEAP32[i4 + 716 >> 2];
   HEAP32[i7 + 28 + 4 >> 2] = HEAP32[i4 + 716 + 4 >> 2];
   HEAP32[i7 + 28 + 8 >> 2] = HEAP32[i4 + 716 + 8 >> 2];
   HEAP32[i7 + 16 >> 2] = HEAP32[i4 + 704 >> 2];
   HEAP32[i7 + 16 + 4 >> 2] = HEAP32[i4 + 704 + 4 >> 2];
   HEAP32[i7 + 16 + 8 >> 2] = HEAP32[i4 + 704 + 8 >> 2];
   i4 = HEAP32[i6 + 24 >> 2] | 0;
   HEAP32[i6 + 24 >> 2] = 0;
   i1 = mftCall_iiii(HEAP32[(HEAP32[i6 >> 2] | 0) + 16 >> 2] | 0, i6 | 0, i5 | 0, i7 | 0) | 0;
   HEAP32[i6 + 24 >> 2] = i4;
  }
 } else {
  i4 = HEAP32[i1 + 2964 >> 2] | 0;
  HEAP32[i6 + 52 >> 2] = i4;
  i4 = mftCall_ii(HEAP32[gb + 94440 + 16 >> 2] | 0, i4 | 0) | 0;
  HEAP32[i6 + 68 >> 2] = i4;
  mftCall_vi(HEAP32[gb + 94440 + 140 >> 2] | 0, i4 | 0);
  mftCall_vi(HEAP32[gb + 94440 + 144 >> 2] | 0, HEAP32[i6 + 52 >> 2] | 0);
  mftCall_vii(HEAP32[(HEAP32[i6 >> 2] | 0) + 24 >> 2] | 0, i6 | 0, 0);
  if (i5 & 1 | 0) {
   if (!(mftCall_i(HEAP32[gb + 94440 + 84 >> 2] | 0) | 0)) {
    i1 = 0;
    break;
   }
   i4 = HEAP32[i6 + 16540 >> 2] | 0;
   HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
   i4 = HEAP32[i6 + 16536 >> 2] | 0;
   HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
   if (!(HEAP32[(HEAP32[i6 + 68 >> 2] | 0) + 204 >> 2] | 0)) {
    i1 = 1;
    break;
   }
  }
  if ((HEAP32[(HEAP32[i6 + 48 >> 2] | 0) + 776 >> 2] | 0) == 12) {
   mftCall_vii(HEAP32[(HEAP32[i6 >> 2] | 0) + 40 >> 2] | 0, i6 | 0, HEAP32[i6 + 52 >> 2] | 0);
   i4 = i6;
  } else {
   mftCall_vi(HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] | 0, i6 | 0);
   i4 = i6;
  }
  mftCall_vi(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i6 | 0);
  if (i5 & 2 | 0) {
   mftCall_vi(HEAP32[(HEAP32[i4 >> 2] | 0) + 32 >> 2] | 0, i6 | 0);
   mftCall_v(HEAP32[gb + 94440 + 128 >> 2] | 0);
   i1 = HEAP32[HEAP32[i6 + 48 >> 2] >> 2] | 0;
   if ((i1 | 0) > 0) {
    i1 = (mftCall_ii(HEAP32[gb + 92340 + 212 >> 2] | 0, i1 | 0) | 0) + 2912 | 0;
    i2 = (HEAP32[i6 + 48 >> 2] | 0) + 2912 | 0;
    i3 = i1 + 48 | 0;
    do {
     HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
     i1 = i1 + 4 | 0;
     i2 = i2 + 4 | 0;
    } while ((i1 | 0) < (i3 | 0));
   }
  }
  if (i5 & 1 | 0) {
   HEAP32[i7 + 352 + 20 >> 2] = i7 + 340;
   mftCall_vii(HEAP32[gb + 94440 + 88 >> 2] | 0, HEAP32[i6 + 48 >> 2] | 0, i7 + 352 | 0);
   mftCall_vi(HEAP32[gb + 94440 + 92 >> 2] | 0, i7 + 352 | 0);
   mftCall_vi(HEAP32[gb + 94440 + 96 >> 2] | 0, i7 + 352 | 0);
   i1 = HEAP32[(HEAP32[i6 + 48 >> 2] | 0) + 740 >> 2] | 0;
   HEAP32[i6 + 80 >> 2] = i1 & 255;
   HEAP32[i6 + 84 >> 2] = i1 >>> 8 & 255;
   mftCall_vii(HEAP32[gb + 94440 + 120 >> 2] | 0, i1 & 255 | 0, i1 >>> 8 & 255 | 0);
   mftCall_vi(HEAP32[(HEAP32[i4 >> 2] | 0) + 76 >> 2] | 0, i6 | 0);
   i1 = 1;
  } else i1 = 1;
 } while (0);
 STACKTOP = i7;
 return i1 | 0;
}

function runPostSets15() {
 var i1 = 0;
 HEAP32[gb + 26172 >> 2] = fb + 1;
 HEAP32[gb + 26176 >> 2] = fb + 1;
 HEAP32[gb + 26180 >> 2] = fb + 1;
 HEAP32[gb + 26184 >> 2] = fb + 55;
 HEAP32[gb + 26188 >> 2] = fb + 56;
 HEAP32[gb + 26192 >> 2] = fb + 1;
 HEAP32[gb + 26196 >> 2] = fb + 2;
 HEAP32[gb + 26200 >> 2] = fb + 3;
 HEAP32[gb + 26204 >> 2] = fb + 4;
 HEAP32[gb + 26208 >> 2] = fb + 40;
 HEAP32[gb + 26212 >> 2] = fb + 21;
 HEAP32[gb + 26216 >> 2] = fb + 22;
 HEAP32[gb + 26220 >> 2] = fb + 41;
 HEAP32[gb + 26224 >> 2] = fb + 56;
 HEAP32[gb + 26228 >> 2] = fb + 57;
 HEAP32[gb + 26232 >> 2] = fb + 1;
 HEAP32[gb + 26236 >> 2] = fb + 42;
 HEAP32[gb + 26240 >> 2] = fb + 1;
 HEAP32[gb + 26244 >> 2] = fb + 1;
 HEAP32[gb + 26248 >> 2] = fb + 58;
 HEAP32[gb + 26252 >> 2] = fb + 57;
 HEAP32[gb + 26256 >> 2] = fb + 23;
 HEAP32[gb + 26260 >> 2] = fb + 59;
 HEAP32[gb + 26264 >> 2] = fb + 43;
 HEAP32[gb + 26268 >> 2] = fb + 1;
 HEAP32[gb + 26272 >> 2] = fb + 60;
 HEAP32[gb + 26276 >> 2] = fb + 1;
 HEAP32[gb + 26280 >> 2] = fb + 2;
 HEAP32[gb + 26284 >> 2] = fb + 44;
 HEAP32[gb + 26288 >> 2] = fb + 3;
 HEAP32[gb + 26292 >> 2] = fb + 58;
 HEAP32[gb + 26296 >> 2] = fb + 61;
 HEAP32[gb + 26300 >> 2] = fb + 59;
 HEAP32[gb + 26304 >> 2] = fb + 45;
 HEAP32[gb + 26308 >> 2] = fb + 60;
 HEAP32[gb + 26312 >> 2] = fb + 61;
 HEAP32[gb + 26316 >> 2] = fb + 62;
 HEAP32[gb + 26320 >> 2] = fb + 63;
 HEAP32[gb + 26324 >> 2] = fb + 4;
 HEAP32[gb + 26328 >> 2] = fb + 29;
 HEAP32[gb + 26332 >> 2] = fb + 79;
 HEAP32[gb + 26336 >> 2] = fb + 63;
 HEAP32[gb + 26340 >> 2] = fb + 64;
 HEAP32[gb + 26344 >> 2] = fb + 64;
 HEAP32[gb + 26348 >> 2] = fb + 65;
 HEAP32[gb + 26352 >> 2] = fb + 66;
 HEAP32[gb + 26356 >> 2] = fb + 65;
 HEAP32[gb + 26360 >> 2] = fb + 30;
 HEAP32[gb + 26364 >> 2] = fb + 80;
 HEAP32[gb + 26368 >> 2] = fb + 67;
 HEAP32[gb + 26372 >> 2] = fb + 68;
 HEAP32[gb + 26376 >> 2] = fb + 69;
 HEAP32[gb + 26380 >> 2] = fb + 26;
 HEAP32[gb + 26384 >> 2] = fb + 81;
 HEAP32[gb + 26388 >> 2] = fb + 82;
 HEAP32[gb + 26392 >> 2] = fb + 83;
 HEAP32[gb + 26396 >> 2] = fb + 84;
 HEAP32[gb + 26400 >> 2] = fb + 85;
 HEAP32[gb + 26404 >> 2] = fb + 86;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 264 >> 2] = (HEAP32[gb + 264 >> 2] | 0) + i1;
 HEAP32[gb + 268 >> 2] = (HEAP32[gb + 268 >> 2] | 0) + (gb + 38152 | 0);
 HEAP32[gb + 272 >> 2] = (HEAP32[gb + 272 >> 2] | 0) + (gb + 200 | 0);
 HEAP32[gb + 26408 >> 2] = (HEAP32[gb + 26408 >> 2] | 0) + (gb + 25876 | 0);
 HEAP32[gb + 28292 >> 2] = (HEAP32[gb + 28292 >> 2] | 0) + (gb + 280 | 0);
 HEAP32[gb + 28296 >> 2] = fb + 87;
 HEAP32[gb + 28300 >> 2] = fb + 88;
 HEAP32[gb + 28304 >> 2] = fb + 1;
 HEAP32[gb + 28308 >> 2] = fb + 1;
 HEAP32[gb + 28312 >> 2] = fb + 2;
 HEAP32[gb + 28316 >> 2] = fb + 1;
 HEAP32[gb + 28320 >> 2] = fb + 3;
 HEAP32[gb + 28324 >> 2] = fb + 4;
 HEAP32[gb + 28328 >> 2] = fb + 2;
 HEAP32[gb + 28332 >> 2] = fb + 2;
 HEAP32[gb + 28336 >> 2] = fb + 1;
 HEAP32[gb + 28340 >> 2] = fb + 1;
 HEAP32[gb + 28344 >> 2] = fb + 1;
 HEAP32[gb + 28348 >> 2] = fb + 1;
 HEAP32[gb + 28352 >> 2] = fb + 3;
 HEAP32[gb + 28356 >> 2] = fb + 1;
 HEAP32[gb + 28360 >> 2] = fb + 3;
 HEAP32[gb + 28364 >> 2] = fb + 4;
 HEAP32[gb + 28368 >> 2] = fb + 5;
 HEAP32[gb + 28372 >> 2] = fb + 6;
 HEAP32[gb + 28376 >> 2] = fb + 2;
 HEAP32[gb + 28380 >> 2] = fb + 3;
 HEAP32[gb + 28384 >> 2] = fb + 4;
 HEAP32[gb + 28388 >> 2] = fb + 5;
 HEAP32[gb + 28392 >> 2] = fb + 1;
 HEAP32[gb + 28396 >> 2] = fb + 1;
 HEAP32[gb + 28400 >> 2] = fb + 7;
 HEAP32[gb + 28404 >> 2] = fb + 5;
 HEAP32[gb + 28408 >> 2] = fb + 6;
 HEAP32[gb + 28412 >> 2] = fb + 3;
 HEAP32[gb + 28416 >> 2] = fb + 6;
 HEAP32[gb + 28420 >> 2] = fb + 7;
 HEAP32[gb + 28424 >> 2] = fb + 7;
 HEAP32[gb + 28428 >> 2] = fb + 8;
 HEAP32[gb + 28432 >> 2] = fb + 9;
 runPostSets16();
}

function runPostSets() {
 var i1 = 0;
 HEAP32[gb + 17436 >> 2] = (HEAP32[gb + 17436 >> 2] | 0) + (gb + 0 | 0);
 HEAP32[gb + 17440 >> 2] = fb + 1;
 HEAP32[gb + 17444 >> 2] = fb + 2;
 HEAP32[gb + 17448 >> 2] = fb + 1;
 HEAP32[gb + 17452 >> 2] = fb + 1;
 HEAP32[gb + 17456 >> 2] = fb + 2;
 HEAP32[gb + 17460 >> 2] = fb + 1;
 HEAP32[gb + 17464 >> 2] = fb + 3;
 HEAP32[gb + 17468 >> 2] = fb + 4;
 HEAP32[gb + 17472 >> 2] = fb + 2;
 HEAP32[gb + 17476 >> 2] = fb + 2;
 HEAP32[gb + 17480 >> 2] = fb + 1;
 HEAP32[gb + 17484 >> 2] = fb + 1;
 HEAP32[gb + 17488 >> 2] = fb + 1;
 HEAP32[gb + 17492 >> 2] = fb + 1;
 HEAP32[gb + 17496 >> 2] = fb + 3;
 HEAP32[gb + 17500 >> 2] = fb + 1;
 HEAP32[gb + 17504 >> 2] = fb + 3;
 HEAP32[gb + 17508 >> 2] = fb + 4;
 HEAP32[gb + 17512 >> 2] = fb + 5;
 HEAP32[gb + 17516 >> 2] = fb + 6;
 HEAP32[gb + 17520 >> 2] = fb + 2;
 HEAP32[gb + 17524 >> 2] = fb + 3;
 HEAP32[gb + 17528 >> 2] = fb + 4;
 HEAP32[gb + 17532 >> 2] = fb + 5;
 HEAP32[gb + 17536 >> 2] = fb + 1;
 HEAP32[gb + 17540 >> 2] = fb + 1;
 HEAP32[gb + 17544 >> 2] = fb + 7;
 HEAP32[gb + 17548 >> 2] = fb + 5;
 HEAP32[gb + 17552 >> 2] = fb + 6;
 HEAP32[gb + 17556 >> 2] = fb + 3;
 HEAP32[gb + 17560 >> 2] = fb + 6;
 HEAP32[gb + 17564 >> 2] = fb + 7;
 HEAP32[gb + 17568 >> 2] = fb + 7;
 HEAP32[gb + 17572 >> 2] = fb + 8;
 HEAP32[gb + 17576 >> 2] = fb + 9;
 HEAP32[gb + 17580 >> 2] = fb + 10;
 HEAP32[gb + 17584 >> 2] = fb + 11;
 HEAP32[gb + 17588 >> 2] = fb + 8;
 HEAP32[gb + 17592 >> 2] = fb + 12;
 HEAP32[gb + 17596 >> 2] = fb + 13;
 HEAP32[gb + 17600 >> 2] = fb + 14;
 HEAP32[gb + 17604 >> 2] = fb + 15;
 HEAP32[gb + 17608 >> 2] = fb + 16;
 HEAP32[gb + 17612 >> 2] = fb + 8;
 HEAP32[gb + 17616 >> 2] = fb + 4;
 HEAP32[gb + 17620 >> 2] = fb + 1;
 HEAP32[gb + 17624 >> 2] = fb + 5;
 HEAP32[gb + 17628 >> 2] = fb + 17;
 HEAP32[gb + 17632 >> 2] = fb + 9;
 HEAP32[gb + 17636 >> 2] = fb + 18;
 HEAP32[gb + 17640 >> 2] = fb + 6;
 HEAP32[gb + 17644 >> 2] = fb + 7;
 HEAP32[gb + 17648 >> 2] = fb + 8;
 HEAP32[gb + 17652 >> 2] = fb + 4;
 HEAP32[gb + 17656 >> 2] = fb + 19;
 HEAP32[gb + 17660 >> 2] = fb + 9;
 HEAP32[gb + 17664 >> 2] = fb + 10;
 HEAP32[gb + 17668 >> 2] = fb + 9;
 HEAP32[gb + 17672 >> 2] = fb + 11;
 HEAP32[gb + 17676 >> 2] = fb + 12;
 HEAP32[gb + 17680 >> 2] = fb + 13;
 HEAP32[gb + 17684 >> 2] = fb + 20;
 HEAP32[gb + 17688 >> 2] = fb + 21;
 HEAP32[gb + 17692 >> 2] = fb + 22;
 HEAP32[gb + 17696 >> 2] = fb + 10;
 HEAP32[gb + 17700 >> 2] = fb + 10;
 HEAP32[gb + 17704 >> 2] = fb + 11;
 HEAP32[gb + 17708 >> 2] = fb + 12;
 HEAP32[gb + 17712 >> 2] = fb + 13;
 HEAP32[gb + 17716 >> 2] = fb + 14;
 HEAP32[gb + 17720 >> 2] = fb + 11;
 HEAP32[gb + 17724 >> 2] = fb + 23;
 HEAP32[gb + 17728 >> 2] = fb + 24;
 HEAP32[gb + 17732 >> 2] = fb + 14;
 HEAP32[gb + 17736 >> 2] = fb + 25;
 HEAP32[gb + 17740 >> 2] = fb + 26;
 HEAP32[gb + 17744 >> 2] = fb + 15;
 HEAP32[gb + 17748 >> 2] = fb + 16;
 HEAP32[gb + 17752 >> 2] = fb + 27;
 HEAP32[gb + 17756 >> 2] = fb + 28;
 HEAP32[gb + 17760 >> 2] = fb + 15;
 HEAP32[gb + 17764 >> 2] = fb + 1;
 HEAP32[gb + 17768 >> 2] = fb + 29;
 HEAP32[gb + 17772 >> 2] = fb + 16;
 HEAP32[gb + 17776 >> 2] = fb + 17;
 HEAP32[gb + 17780 >> 2] = fb + 18;
 HEAP32[gb + 17784 >> 2] = fb + 19;
 HEAP32[gb + 17788 >> 2] = fb + 20;
 HEAP32[gb + 17792 >> 2] = fb + 30;
 HEAP32[gb + 17796 >> 2] = fb + 31;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 0 >> 2] = (HEAP32[gb + 0 >> 2] | 0) + i1;
 HEAP32[gb + 4 >> 2] = (HEAP32[gb + 4 >> 2] | 0) + (gb + 36624 | 0);
 HEAP32[gb + 8 >> 2] = (HEAP32[gb + 8 >> 2] | 0) + (gb + 216 | 0);
 HEAP32[gb + 17804 >> 2] = (HEAP32[gb + 17804 >> 2] | 0) + (gb + 16 | 0);
 HEAP32[gb + 17808 >> 2] = fb + 21;
 HEAP32[gb + 17812 >> 2] = fb + 22;
 HEAP32[gb + 17816 >> 2] = fb + 12;
 HEAP32[gb + 17820 >> 2] = fb + 17;
 runPostSets1();
}

function runPostSets23() {
 var i1 = 0;
 HEAP32[gb + 31128 >> 2] = fb + 14;
 HEAP32[gb + 31132 >> 2] = fb + 15;
 HEAP32[gb + 31136 >> 2] = fb + 16;
 HEAP32[gb + 31140 >> 2] = fb + 8;
 HEAP32[gb + 31144 >> 2] = fb + 4;
 HEAP32[gb + 31148 >> 2] = fb + 1;
 HEAP32[gb + 31152 >> 2] = fb + 5;
 HEAP32[gb + 31156 >> 2] = fb + 46;
 HEAP32[gb + 31160 >> 2] = fb + 9;
 HEAP32[gb + 31164 >> 2] = fb + 52;
 HEAP32[gb + 31168 >> 2] = fb + 6;
 HEAP32[gb + 31172 >> 2] = fb + 7;
 HEAP32[gb + 31176 >> 2] = fb + 8;
 HEAP32[gb + 31180 >> 2] = fb + 6;
 HEAP32[gb + 31184 >> 2] = fb + 19;
 HEAP32[gb + 31188 >> 2] = fb + 9;
 HEAP32[gb + 31192 >> 2] = fb + 10;
 HEAP32[gb + 31196 >> 2] = fb + 19;
 HEAP32[gb + 31200 >> 2] = fb + 20;
 HEAP32[gb + 31204 >> 2] = fb + 50;
 HEAP32[gb + 31208 >> 2] = fb + 53;
 HEAP32[gb + 31212 >> 2] = fb + 1;
 HEAP32[gb + 31216 >> 2] = fb + 51;
 HEAP32[gb + 31220 >> 2] = fb + 37;
 HEAP32[gb + 31224 >> 2] = fb + 52;
 HEAP32[gb + 31228 >> 2] = fb + 53;
 HEAP32[gb + 31232 >> 2] = fb + 54;
 HEAP32[gb + 31236 >> 2] = fb + 55;
 HEAP32[gb + 31240 >> 2] = fb + 54;
 HEAP32[gb + 31244 >> 2] = fb + 38;
 HEAP32[gb + 31248 >> 2] = fb + 39;
 HEAP32[gb + 31252 >> 2] = fb + 1;
 HEAP32[gb + 31256 >> 2] = fb + 1;
 HEAP32[gb + 31260 >> 2] = fb + 1;
 HEAP32[gb + 31264 >> 2] = fb + 1;
 HEAP32[gb + 31268 >> 2] = fb + 55;
 HEAP32[gb + 31272 >> 2] = fb + 56;
 HEAP32[gb + 31276 >> 2] = fb + 1;
 HEAP32[gb + 31280 >> 2] = fb + 2;
 HEAP32[gb + 31284 >> 2] = fb + 3;
 HEAP32[gb + 31288 >> 2] = fb + 4;
 HEAP32[gb + 31292 >> 2] = fb + 40;
 HEAP32[gb + 31296 >> 2] = fb + 21;
 HEAP32[gb + 31300 >> 2] = fb + 22;
 HEAP32[gb + 31304 >> 2] = fb + 41;
 HEAP32[gb + 31308 >> 2] = fb + 56;
 HEAP32[gb + 31312 >> 2] = fb + 57;
 HEAP32[gb + 31316 >> 2] = fb + 1;
 HEAP32[gb + 31320 >> 2] = fb + 42;
 HEAP32[gb + 31324 >> 2] = fb + 1;
 HEAP32[gb + 31328 >> 2] = fb + 1;
 HEAP32[gb + 31332 >> 2] = fb + 58;
 HEAP32[gb + 31336 >> 2] = fb + 57;
 HEAP32[gb + 31340 >> 2] = fb + 23;
 HEAP32[gb + 31344 >> 2] = fb + 59;
 HEAP32[gb + 31348 >> 2] = fb + 43;
 HEAP32[gb + 31352 >> 2] = fb + 1;
 HEAP32[gb + 31356 >> 2] = fb + 60;
 HEAP32[gb + 31360 >> 2] = fb + 1;
 HEAP32[gb + 31364 >> 2] = fb + 2;
 HEAP32[gb + 31368 >> 2] = fb + 44;
 HEAP32[gb + 31372 >> 2] = fb + 3;
 HEAP32[gb + 31376 >> 2] = fb + 58;
 HEAP32[gb + 31380 >> 2] = fb + 61;
 HEAP32[gb + 31384 >> 2] = fb + 59;
 HEAP32[gb + 31388 >> 2] = fb + 45;
 HEAP32[gb + 31392 >> 2] = fb + 60;
 HEAP32[gb + 31396 >> 2] = fb + 61;
 HEAP32[gb + 31400 >> 2] = fb + 62;
 HEAP32[gb + 31404 >> 2] = fb + 63;
 HEAP32[gb + 31408 >> 2] = fb + 4;
 HEAP32[gb + 31412 >> 2] = fb + 24;
 HEAP32[gb + 31416 >> 2] = fb + 62;
 HEAP32[gb + 31420 >> 2] = fb + 63;
 HEAP32[gb + 31424 >> 2] = fb + 64;
 HEAP32[gb + 31428 >> 2] = fb + 64;
 HEAP32[gb + 31432 >> 2] = fb + 65;
 HEAP32[gb + 31436 >> 2] = fb + 66;
 HEAP32[gb + 31440 >> 2] = fb + 65;
 HEAP32[gb + 31444 >> 2] = fb + 25;
 HEAP32[gb + 31448 >> 2] = fb + 66;
 HEAP32[gb + 31452 >> 2] = fb + 67;
 HEAP32[gb + 31456 >> 2] = fb + 68;
 HEAP32[gb + 31460 >> 2] = fb + 69;
 HEAP32[gb + 31464 >> 2] = fb + 26;
 HEAP32[gb + 31468 >> 2] = fb + 123;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 424 >> 2] = (HEAP32[gb + 424 >> 2] | 0) + i1;
 HEAP32[gb + 428 >> 2] = (HEAP32[gb + 428 >> 2] | 0) + (gb + 38953 | 0);
 HEAP32[gb + 432 >> 2] = (HEAP32[gb + 432 >> 2] | 0) + (gb + 184 | 0);
 HEAP32[gb + 31476 >> 2] = (HEAP32[gb + 31476 >> 2] | 0) + (gb + 440 | 0);
 HEAP32[gb + 31480 >> 2] = fb + 124;
 HEAP32[gb + 31484 >> 2] = fb + 125;
 HEAP32[gb + 31488 >> 2] = fb + 1;
 HEAP32[gb + 31492 >> 2] = fb + 1;
 HEAP32[gb + 31496 >> 2] = fb + 2;
 HEAP32[gb + 31500 >> 2] = fb + 1;
 HEAP32[gb + 31504 >> 2] = fb + 3;
 HEAP32[gb + 31508 >> 2] = fb + 4;
 HEAP32[gb + 31512 >> 2] = fb + 2;
 runPostSets24();
}

function runPostSets28() {
 var i1 = 0;
 HEAP32[gb + 33068 >> 2] = fb + 20;
 HEAP32[gb + 33072 >> 2] = fb + 112;
 HEAP32[gb + 33076 >> 2] = fb + 22;
 HEAP32[gb + 33080 >> 2] = fb + 36;
 HEAP32[gb + 33084 >> 2] = fb + 10;
 HEAP32[gb + 33088 >> 2] = fb + 11;
 HEAP32[gb + 33092 >> 2] = fb + 12;
 HEAP32[gb + 33096 >> 2] = fb + 13;
 HEAP32[gb + 33100 >> 2] = fb + 14;
 HEAP32[gb + 33104 >> 2] = fb + 11;
 HEAP32[gb + 33108 >> 2] = fb + 23;
 HEAP32[gb + 33112 >> 2] = fb + 24;
 HEAP32[gb + 33116 >> 2] = fb + 14;
 HEAP32[gb + 33120 >> 2] = fb + 25;
 HEAP32[gb + 33124 >> 2] = fb + 113;
 HEAP32[gb + 33128 >> 2] = fb + 15;
 HEAP32[gb + 33132 >> 2] = fb + 16;
 HEAP32[gb + 33136 >> 2] = fb + 27;
 HEAP32[gb + 33140 >> 2] = fb + 28;
 HEAP32[gb + 33144 >> 2] = fb + 15;
 HEAP32[gb + 33148 >> 2] = fb + 1;
 HEAP32[gb + 33152 >> 2] = fb + 29;
 HEAP32[gb + 33156 >> 2] = fb + 145;
 HEAP32[gb + 33160 >> 2] = fb + 27;
 HEAP32[gb + 33164 >> 2] = fb + 28;
 HEAP32[gb + 33168 >> 2] = fb + 146;
 HEAP32[gb + 33172 >> 2] = fb + 20;
 HEAP32[gb + 33176 >> 2] = fb + 30;
 HEAP32[gb + 33180 >> 2] = fb + 114;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 504 >> 2] = (HEAP32[gb + 504 >> 2] | 0) + i1;
 HEAP32[gb + 508 >> 2] = (HEAP32[gb + 508 >> 2] | 0) + (gb + 39410 | 0);
 HEAP32[gb + 512 >> 2] = (HEAP32[gb + 512 >> 2] | 0) + (gb + 216 | 0);
 HEAP32[gb + 33188 >> 2] = (HEAP32[gb + 33188 >> 2] | 0) + (gb + 520 | 0);
 HEAP32[gb + 33192 >> 2] = fb + 147;
 HEAP32[gb + 33196 >> 2] = fb + 148;
 HEAP32[gb + 33200 >> 2] = fb + 1;
 HEAP32[gb + 33204 >> 2] = fb + 1;
 HEAP32[gb + 33208 >> 2] = fb + 2;
 HEAP32[gb + 33212 >> 2] = fb + 1;
 HEAP32[gb + 33216 >> 2] = fb + 3;
 HEAP32[gb + 33220 >> 2] = fb + 4;
 HEAP32[gb + 33224 >> 2] = fb + 2;
 HEAP32[gb + 33228 >> 2] = fb + 2;
 HEAP32[gb + 33232 >> 2] = fb + 1;
 HEAP32[gb + 33236 >> 2] = fb + 1;
 HEAP32[gb + 33240 >> 2] = fb + 1;
 HEAP32[gb + 33244 >> 2] = fb + 1;
 HEAP32[gb + 33248 >> 2] = fb + 3;
 HEAP32[gb + 33252 >> 2] = fb + 1;
 HEAP32[gb + 33256 >> 2] = fb + 3;
 HEAP32[gb + 33260 >> 2] = fb + 4;
 HEAP32[gb + 33264 >> 2] = fb + 5;
 HEAP32[gb + 33268 >> 2] = fb + 6;
 HEAP32[gb + 33272 >> 2] = fb + 2;
 HEAP32[gb + 33276 >> 2] = fb + 3;
 HEAP32[gb + 33280 >> 2] = fb + 4;
 HEAP32[gb + 33284 >> 2] = fb + 5;
 HEAP32[gb + 33288 >> 2] = fb + 1;
 HEAP32[gb + 33292 >> 2] = fb + 1;
 HEAP32[gb + 33296 >> 2] = fb + 7;
 HEAP32[gb + 33300 >> 2] = fb + 5;
 HEAP32[gb + 33304 >> 2] = fb + 6;
 HEAP32[gb + 33308 >> 2] = fb + 3;
 HEAP32[gb + 33312 >> 2] = fb + 6;
 HEAP32[gb + 33316 >> 2] = fb + 7;
 HEAP32[gb + 33320 >> 2] = fb + 7;
 HEAP32[gb + 33324 >> 2] = fb + 8;
 HEAP32[gb + 33328 >> 2] = fb + 9;
 HEAP32[gb + 33332 >> 2] = fb + 10;
 HEAP32[gb + 33336 >> 2] = fb + 11;
 HEAP32[gb + 33340 >> 2] = fb + 8;
 HEAP32[gb + 33344 >> 2] = fb + 12;
 HEAP32[gb + 33348 >> 2] = fb + 13;
 HEAP32[gb + 33352 >> 2] = fb + 14;
 HEAP32[gb + 33356 >> 2] = fb + 15;
 HEAP32[gb + 33360 >> 2] = fb + 16;
 HEAP32[gb + 33364 >> 2] = fb + 8;
 HEAP32[gb + 33368 >> 2] = fb + 4;
 HEAP32[gb + 33372 >> 2] = fb + 1;
 HEAP32[gb + 33376 >> 2] = fb + 5;
 HEAP32[gb + 33380 >> 2] = fb + 17;
 HEAP32[gb + 33384 >> 2] = fb + 9;
 HEAP32[gb + 33388 >> 2] = fb + 18;
 HEAP32[gb + 33392 >> 2] = fb + 6;
 HEAP32[gb + 33396 >> 2] = fb + 7;
 HEAP32[gb + 33400 >> 2] = fb + 8;
 HEAP32[gb + 33404 >> 2] = fb + 4;
 HEAP32[gb + 33408 >> 2] = fb + 19;
 HEAP32[gb + 33412 >> 2] = fb + 9;
 HEAP32[gb + 33416 >> 2] = fb + 10;
 HEAP32[gb + 33420 >> 2] = fb + 9;
 HEAP32[gb + 33424 >> 2] = fb + 20;
 HEAP32[gb + 33428 >> 2] = fb + 12;
 HEAP32[gb + 33432 >> 2] = fb + 78;
 HEAP32[gb + 33436 >> 2] = fb + 20;
 HEAP32[gb + 33440 >> 2] = fb + 115;
 HEAP32[gb + 33444 >> 2] = fb + 22;
 HEAP32[gb + 33448 >> 2] = fb + 27;
 HEAP32[gb + 33452 >> 2] = fb + 10;
 runPostSets29();
}

function runPostSets27() {
 var i1 = 0;
 HEAP32[gb + 32680 >> 2] = fb + 10;
 HEAP32[gb + 32684 >> 2] = fb + 9;
 HEAP32[gb + 32688 >> 2] = fb + 20;
 HEAP32[gb + 32692 >> 2] = fb + 12;
 HEAP32[gb + 32696 >> 2] = fb + 76;
 HEAP32[gb + 32700 >> 2] = fb + 20;
 HEAP32[gb + 32704 >> 2] = fb + 109;
 HEAP32[gb + 32708 >> 2] = fb + 22;
 HEAP32[gb + 32712 >> 2] = fb + 35;
 HEAP32[gb + 32716 >> 2] = fb + 10;
 HEAP32[gb + 32720 >> 2] = fb + 11;
 HEAP32[gb + 32724 >> 2] = fb + 12;
 HEAP32[gb + 32728 >> 2] = fb + 13;
 HEAP32[gb + 32732 >> 2] = fb + 14;
 HEAP32[gb + 32736 >> 2] = fb + 11;
 HEAP32[gb + 32740 >> 2] = fb + 23;
 HEAP32[gb + 32744 >> 2] = fb + 24;
 HEAP32[gb + 32748 >> 2] = fb + 14;
 HEAP32[gb + 32752 >> 2] = fb + 25;
 HEAP32[gb + 32756 >> 2] = fb + 110;
 HEAP32[gb + 32760 >> 2] = fb + 15;
 HEAP32[gb + 32764 >> 2] = fb + 16;
 HEAP32[gb + 32768 >> 2] = fb + 27;
 HEAP32[gb + 32772 >> 2] = fb + 28;
 HEAP32[gb + 32776 >> 2] = fb + 15;
 HEAP32[gb + 32780 >> 2] = fb + 1;
 HEAP32[gb + 32784 >> 2] = fb + 29;
 HEAP32[gb + 32788 >> 2] = fb + 139;
 HEAP32[gb + 32792 >> 2] = fb + 140;
 HEAP32[gb + 32796 >> 2] = fb + 28;
 HEAP32[gb + 32800 >> 2] = fb + 141;
 HEAP32[gb + 32804 >> 2] = fb + 20;
 HEAP32[gb + 32808 >> 2] = fb + 30;
 HEAP32[gb + 32812 >> 2] = fb + 111;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 488 >> 2] = (HEAP32[gb + 488 >> 2] | 0) + i1;
 HEAP32[gb + 492 >> 2] = (HEAP32[gb + 492 >> 2] | 0) + (gb + 39372 | 0);
 HEAP32[gb + 496 >> 2] = (HEAP32[gb + 496 >> 2] | 0) + (gb + 216 | 0);
 HEAP32[gb + 32820 >> 2] = (HEAP32[gb + 32820 >> 2] | 0) + (gb + 504 | 0);
 HEAP32[gb + 32824 >> 2] = fb + 142;
 HEAP32[gb + 32828 >> 2] = fb + 143;
 HEAP32[gb + 32832 >> 2] = fb + 1;
 HEAP32[gb + 32836 >> 2] = fb + 1;
 HEAP32[gb + 32840 >> 2] = fb + 2;
 HEAP32[gb + 32844 >> 2] = fb + 1;
 HEAP32[gb + 32848 >> 2] = fb + 3;
 HEAP32[gb + 32852 >> 2] = fb + 144;
 HEAP32[gb + 32856 >> 2] = fb + 2;
 HEAP32[gb + 32860 >> 2] = fb + 2;
 HEAP32[gb + 32864 >> 2] = fb + 1;
 HEAP32[gb + 32868 >> 2] = fb + 1;
 HEAP32[gb + 32872 >> 2] = fb + 1;
 HEAP32[gb + 32876 >> 2] = fb + 1;
 HEAP32[gb + 32880 >> 2] = fb + 3;
 HEAP32[gb + 32884 >> 2] = fb + 1;
 HEAP32[gb + 32888 >> 2] = fb + 3;
 HEAP32[gb + 32892 >> 2] = fb + 4;
 HEAP32[gb + 32896 >> 2] = fb + 5;
 HEAP32[gb + 32900 >> 2] = fb + 6;
 HEAP32[gb + 32904 >> 2] = fb + 2;
 HEAP32[gb + 32908 >> 2] = fb + 3;
 HEAP32[gb + 32912 >> 2] = fb + 4;
 HEAP32[gb + 32916 >> 2] = fb + 5;
 HEAP32[gb + 32920 >> 2] = fb + 1;
 HEAP32[gb + 32924 >> 2] = fb + 1;
 HEAP32[gb + 32928 >> 2] = fb + 7;
 HEAP32[gb + 32932 >> 2] = fb + 5;
 HEAP32[gb + 32936 >> 2] = fb + 6;
 HEAP32[gb + 32940 >> 2] = fb + 3;
 HEAP32[gb + 32944 >> 2] = fb + 6;
 HEAP32[gb + 32948 >> 2] = fb + 7;
 HEAP32[gb + 32952 >> 2] = fb + 7;
 HEAP32[gb + 32956 >> 2] = fb + 8;
 HEAP32[gb + 32960 >> 2] = fb + 9;
 HEAP32[gb + 32964 >> 2] = fb + 10;
 HEAP32[gb + 32968 >> 2] = fb + 11;
 HEAP32[gb + 32972 >> 2] = fb + 8;
 HEAP32[gb + 32976 >> 2] = fb + 12;
 HEAP32[gb + 32980 >> 2] = fb + 13;
 HEAP32[gb + 32984 >> 2] = fb + 14;
 HEAP32[gb + 32988 >> 2] = fb + 15;
 HEAP32[gb + 32992 >> 2] = fb + 16;
 HEAP32[gb + 32996 >> 2] = fb + 8;
 HEAP32[gb + 33e3 >> 2] = fb + 4;
 HEAP32[gb + 33004 >> 2] = fb + 1;
 HEAP32[gb + 33008 >> 2] = fb + 5;
 HEAP32[gb + 33012 >> 2] = fb + 17;
 HEAP32[gb + 33016 >> 2] = fb + 9;
 HEAP32[gb + 33020 >> 2] = fb + 18;
 HEAP32[gb + 33024 >> 2] = fb + 6;
 HEAP32[gb + 33028 >> 2] = fb + 7;
 HEAP32[gb + 33032 >> 2] = fb + 8;
 HEAP32[gb + 33036 >> 2] = fb + 4;
 HEAP32[gb + 33040 >> 2] = fb + 19;
 HEAP32[gb + 33044 >> 2] = fb + 9;
 HEAP32[gb + 33048 >> 2] = fb + 10;
 HEAP32[gb + 33052 >> 2] = fb + 9;
 HEAP32[gb + 33056 >> 2] = fb + 20;
 HEAP32[gb + 33060 >> 2] = fb + 12;
 HEAP32[gb + 33064 >> 2] = fb + 77;
 runPostSets28();
}

function runPostSets25() {
 var i1 = 0;
 HEAP32[gb + 31904 >> 2] = fb + 3;
 HEAP32[gb + 31908 >> 2] = fb + 1;
 HEAP32[gb + 31912 >> 2] = fb + 3;
 HEAP32[gb + 31916 >> 2] = fb + 4;
 HEAP32[gb + 31920 >> 2] = fb + 5;
 HEAP32[gb + 31924 >> 2] = fb + 6;
 HEAP32[gb + 31928 >> 2] = fb + 2;
 HEAP32[gb + 31932 >> 2] = fb + 3;
 HEAP32[gb + 31936 >> 2] = fb + 4;
 HEAP32[gb + 31940 >> 2] = fb + 5;
 HEAP32[gb + 31944 >> 2] = fb + 1;
 HEAP32[gb + 31948 >> 2] = fb + 1;
 HEAP32[gb + 31952 >> 2] = fb + 7;
 HEAP32[gb + 31956 >> 2] = fb + 5;
 HEAP32[gb + 31960 >> 2] = fb + 6;
 HEAP32[gb + 31964 >> 2] = fb + 3;
 HEAP32[gb + 31968 >> 2] = fb + 6;
 HEAP32[gb + 31972 >> 2] = fb + 7;
 HEAP32[gb + 31976 >> 2] = fb + 7;
 HEAP32[gb + 31980 >> 2] = fb + 8;
 HEAP32[gb + 31984 >> 2] = fb + 9;
 HEAP32[gb + 31988 >> 2] = fb + 10;
 HEAP32[gb + 31992 >> 2] = fb + 11;
 HEAP32[gb + 31996 >> 2] = fb + 8;
 HEAP32[gb + 32e3 >> 2] = fb + 12;
 HEAP32[gb + 32004 >> 2] = fb + 13;
 HEAP32[gb + 32008 >> 2] = fb + 14;
 HEAP32[gb + 32012 >> 2] = fb + 15;
 HEAP32[gb + 32016 >> 2] = fb + 16;
 HEAP32[gb + 32020 >> 2] = fb + 8;
 HEAP32[gb + 32024 >> 2] = fb + 4;
 HEAP32[gb + 32028 >> 2] = fb + 1;
 HEAP32[gb + 32032 >> 2] = fb + 5;
 HEAP32[gb + 32036 >> 2] = fb + 17;
 HEAP32[gb + 32040 >> 2] = fb + 9;
 HEAP32[gb + 32044 >> 2] = fb + 18;
 HEAP32[gb + 32048 >> 2] = fb + 6;
 HEAP32[gb + 32052 >> 2] = fb + 7;
 HEAP32[gb + 32056 >> 2] = fb + 8;
 HEAP32[gb + 32060 >> 2] = fb + 4;
 HEAP32[gb + 32064 >> 2] = fb + 19;
 HEAP32[gb + 32068 >> 2] = fb + 9;
 HEAP32[gb + 32072 >> 2] = fb + 10;
 HEAP32[gb + 32076 >> 2] = fb + 9;
 HEAP32[gb + 32080 >> 2] = fb + 73;
 HEAP32[gb + 32084 >> 2] = fb + 12;
 HEAP32[gb + 32088 >> 2] = fb + 74;
 HEAP32[gb + 32092 >> 2] = fb + 20;
 HEAP32[gb + 32096 >> 2] = fb + 106;
 HEAP32[gb + 32100 >> 2] = fb + 22;
 HEAP32[gb + 32104 >> 2] = fb + 27;
 HEAP32[gb + 32108 >> 2] = fb + 10;
 HEAP32[gb + 32112 >> 2] = fb + 11;
 HEAP32[gb + 32116 >> 2] = fb + 12;
 HEAP32[gb + 32120 >> 2] = fb + 13;
 HEAP32[gb + 32124 >> 2] = fb + 14;
 HEAP32[gb + 32128 >> 2] = fb + 11;
 HEAP32[gb + 32132 >> 2] = fb + 23;
 HEAP32[gb + 32136 >> 2] = fb + 24;
 HEAP32[gb + 32140 >> 2] = fb + 14;
 HEAP32[gb + 32144 >> 2] = fb + 25;
 HEAP32[gb + 32148 >> 2] = fb + 107;
 HEAP32[gb + 32152 >> 2] = fb + 15;
 HEAP32[gb + 32156 >> 2] = fb + 16;
 HEAP32[gb + 32160 >> 2] = fb + 27;
 HEAP32[gb + 32164 >> 2] = fb + 28;
 HEAP32[gb + 32168 >> 2] = fb + 15;
 HEAP32[gb + 32172 >> 2] = fb + 1;
 HEAP32[gb + 32176 >> 2] = fb + 29;
 HEAP32[gb + 32180 >> 2] = fb + 131;
 HEAP32[gb + 32184 >> 2] = fb + 132;
 HEAP32[gb + 32188 >> 2] = fb + 133;
 HEAP32[gb + 32192 >> 2] = fb + 134;
 HEAP32[gb + 32196 >> 2] = fb + 20;
 HEAP32[gb + 32200 >> 2] = fb + 30;
 HEAP32[gb + 32204 >> 2] = fb + 108;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 456 >> 2] = (HEAP32[gb + 456 >> 2] | 0) + i1;
 HEAP32[gb + 460 >> 2] = (HEAP32[gb + 460 >> 2] | 0) + (gb + 39236 | 0);
 HEAP32[gb + 464 >> 2] = (HEAP32[gb + 464 >> 2] | 0) + (gb + 216 | 0);
 HEAP32[gb + 32212 >> 2] = (HEAP32[gb + 32212 >> 2] | 0) + (gb + 472 | 0);
 HEAP32[gb + 32216 >> 2] = fb + 135;
 HEAP32[gb + 32220 >> 2] = fb + 136;
 HEAP32[gb + 32224 >> 2] = fb + 12;
 HEAP32[gb + 32228 >> 2] = fb + 17;
 HEAP32[gb + 32232 >> 2] = fb + 18;
 HEAP32[gb + 32236 >> 2] = fb + 1;
 HEAP32[gb + 32240 >> 2] = fb + 3;
 HEAP32[gb + 32244 >> 2] = fb + 23;
 HEAP32[gb + 32248 >> 2] = fb + 2;
 HEAP32[gb + 32252 >> 2] = fb + 2;
 HEAP32[gb + 32256 >> 2] = fb + 1;
 HEAP32[gb + 32260 >> 2] = fb + 1;
 HEAP32[gb + 32264 >> 2] = fb + 1;
 HEAP32[gb + 32268 >> 2] = fb + 1;
 HEAP32[gb + 32272 >> 2] = fb + 3;
 HEAP32[gb + 32276 >> 2] = fb + 1;
 HEAP32[gb + 32280 >> 2] = fb + 3;
 HEAP32[gb + 32284 >> 2] = fb + 4;
 HEAP32[gb + 32288 >> 2] = fb + 5;
 runPostSets26();
}

function runPostSets24() {
 var i1 = 0;
 HEAP32[gb + 31516 >> 2] = fb + 2;
 HEAP32[gb + 31520 >> 2] = fb + 1;
 HEAP32[gb + 31524 >> 2] = fb + 1;
 HEAP32[gb + 31528 >> 2] = fb + 1;
 HEAP32[gb + 31532 >> 2] = fb + 1;
 HEAP32[gb + 31536 >> 2] = fb + 3;
 HEAP32[gb + 31540 >> 2] = fb + 1;
 HEAP32[gb + 31544 >> 2] = fb + 3;
 HEAP32[gb + 31548 >> 2] = fb + 4;
 HEAP32[gb + 31552 >> 2] = fb + 5;
 HEAP32[gb + 31556 >> 2] = fb + 6;
 HEAP32[gb + 31560 >> 2] = fb + 2;
 HEAP32[gb + 31564 >> 2] = fb + 3;
 HEAP32[gb + 31568 >> 2] = fb + 4;
 HEAP32[gb + 31572 >> 2] = fb + 5;
 HEAP32[gb + 31576 >> 2] = fb + 1;
 HEAP32[gb + 31580 >> 2] = fb + 1;
 HEAP32[gb + 31584 >> 2] = fb + 7;
 HEAP32[gb + 31588 >> 2] = fb + 5;
 HEAP32[gb + 31592 >> 2] = fb + 6;
 HEAP32[gb + 31596 >> 2] = fb + 3;
 HEAP32[gb + 31600 >> 2] = fb + 6;
 HEAP32[gb + 31604 >> 2] = fb + 7;
 HEAP32[gb + 31608 >> 2] = fb + 7;
 HEAP32[gb + 31612 >> 2] = fb + 8;
 HEAP32[gb + 31616 >> 2] = fb + 9;
 HEAP32[gb + 31620 >> 2] = fb + 10;
 HEAP32[gb + 31624 >> 2] = fb + 11;
 HEAP32[gb + 31628 >> 2] = fb + 8;
 HEAP32[gb + 31632 >> 2] = fb + 12;
 HEAP32[gb + 31636 >> 2] = fb + 13;
 HEAP32[gb + 31640 >> 2] = fb + 14;
 HEAP32[gb + 31644 >> 2] = fb + 15;
 HEAP32[gb + 31648 >> 2] = fb + 16;
 HEAP32[gb + 31652 >> 2] = fb + 8;
 HEAP32[gb + 31656 >> 2] = fb + 4;
 HEAP32[gb + 31660 >> 2] = fb + 1;
 HEAP32[gb + 31664 >> 2] = fb + 5;
 HEAP32[gb + 31668 >> 2] = fb + 17;
 HEAP32[gb + 31672 >> 2] = fb + 9;
 HEAP32[gb + 31676 >> 2] = fb + 18;
 HEAP32[gb + 31680 >> 2] = fb + 6;
 HEAP32[gb + 31684 >> 2] = fb + 7;
 HEAP32[gb + 31688 >> 2] = fb + 8;
 HEAP32[gb + 31692 >> 2] = fb + 4;
 HEAP32[gb + 31696 >> 2] = fb + 19;
 HEAP32[gb + 31700 >> 2] = fb + 9;
 HEAP32[gb + 31704 >> 2] = fb + 10;
 HEAP32[gb + 31708 >> 2] = fb + 9;
 HEAP32[gb + 31712 >> 2] = fb + 70;
 HEAP32[gb + 31716 >> 2] = fb + 71;
 HEAP32[gb + 31720 >> 2] = fb + 72;
 HEAP32[gb + 31724 >> 2] = fb + 101;
 HEAP32[gb + 31728 >> 2] = fb + 102;
 HEAP32[gb + 31732 >> 2] = fb + 22;
 HEAP32[gb + 31736 >> 2] = fb + 34;
 HEAP32[gb + 31740 >> 2] = fb + 10;
 HEAP32[gb + 31744 >> 2] = fb + 11;
 HEAP32[gb + 31748 >> 2] = fb + 12;
 HEAP32[gb + 31752 >> 2] = fb + 13;
 HEAP32[gb + 31756 >> 2] = fb + 14;
 HEAP32[gb + 31760 >> 2] = fb + 11;
 HEAP32[gb + 31764 >> 2] = fb + 23;
 HEAP32[gb + 31768 >> 2] = fb + 24;
 HEAP32[gb + 31772 >> 2] = fb + 14;
 HEAP32[gb + 31776 >> 2] = fb + 25;
 HEAP32[gb + 31780 >> 2] = fb + 103;
 HEAP32[gb + 31784 >> 2] = fb + 15;
 HEAP32[gb + 31788 >> 2] = fb + 16;
 HEAP32[gb + 31792 >> 2] = fb + 27;
 HEAP32[gb + 31796 >> 2] = fb + 28;
 HEAP32[gb + 31800 >> 2] = fb + 15;
 HEAP32[gb + 31804 >> 2] = fb + 1;
 HEAP32[gb + 31808 >> 2] = fb + 104;
 HEAP32[gb + 31812 >> 2] = fb + 126;
 HEAP32[gb + 31816 >> 2] = fb + 127;
 HEAP32[gb + 31820 >> 2] = fb + 28;
 HEAP32[gb + 31824 >> 2] = fb + 128;
 HEAP32[gb + 31828 >> 2] = fb + 20;
 HEAP32[gb + 31832 >> 2] = fb + 30;
 HEAP32[gb + 31836 >> 2] = fb + 105;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 440 >> 2] = (HEAP32[gb + 440 >> 2] | 0) + i1;
 HEAP32[gb + 444 >> 2] = (HEAP32[gb + 444 >> 2] | 0) + (gb + 39011 | 0);
 HEAP32[gb + 448 >> 2] = (HEAP32[gb + 448 >> 2] | 0) + (gb + 216 | 0);
 HEAP32[gb + 31844 >> 2] = (HEAP32[gb + 31844 >> 2] | 0) + (gb + 456 | 0);
 HEAP32[gb + 31848 >> 2] = fb + 129;
 HEAP32[gb + 31852 >> 2] = fb + 130;
 HEAP32[gb + 31856 >> 2] = fb + 1;
 HEAP32[gb + 31860 >> 2] = fb + 1;
 HEAP32[gb + 31864 >> 2] = fb + 2;
 HEAP32[gb + 31868 >> 2] = fb + 1;
 HEAP32[gb + 31872 >> 2] = fb + 3;
 HEAP32[gb + 31876 >> 2] = fb + 4;
 HEAP32[gb + 31880 >> 2] = fb + 2;
 HEAP32[gb + 31884 >> 2] = fb + 2;
 HEAP32[gb + 31888 >> 2] = fb + 1;
 HEAP32[gb + 31892 >> 2] = fb + 1;
 HEAP32[gb + 31896 >> 2] = fb + 1;
 HEAP32[gb + 31900 >> 2] = fb + 1;
 runPostSets25();
}

function runPostSets17() {
 var i1 = 0;
 HEAP32[gb + 28824 >> 2] = fb + 14;
 HEAP32[gb + 28828 >> 2] = fb + 15;
 HEAP32[gb + 28832 >> 2] = fb + 16;
 HEAP32[gb + 28836 >> 2] = fb + 8;
 HEAP32[gb + 28840 >> 2] = fb + 4;
 HEAP32[gb + 28844 >> 2] = fb + 1;
 HEAP32[gb + 28848 >> 2] = fb + 5;
 HEAP32[gb + 28852 >> 2] = fb + 17;
 HEAP32[gb + 28856 >> 2] = fb + 9;
 HEAP32[gb + 28860 >> 2] = fb + 18;
 HEAP32[gb + 28864 >> 2] = fb + 6;
 HEAP32[gb + 28868 >> 2] = fb + 7;
 HEAP32[gb + 28872 >> 2] = fb + 8;
 HEAP32[gb + 28876 >> 2] = fb + 4;
 HEAP32[gb + 28880 >> 2] = fb + 19;
 HEAP32[gb + 28884 >> 2] = fb + 9;
 HEAP32[gb + 28888 >> 2] = fb + 10;
 HEAP32[gb + 28892 >> 2] = fb + 9;
 HEAP32[gb + 28896 >> 2] = fb + 59;
 HEAP32[gb + 28900 >> 2] = fb + 12;
 HEAP32[gb + 28904 >> 2] = fb + 60;
 HEAP32[gb + 28908 >> 2] = fb + 20;
 HEAP32[gb + 28912 >> 2] = fb + 89;
 HEAP32[gb + 28916 >> 2] = fb + 22;
 HEAP32[gb + 28920 >> 2] = fb + 27;
 HEAP32[gb + 28924 >> 2] = fb + 10;
 HEAP32[gb + 28928 >> 2] = fb + 11;
 HEAP32[gb + 28932 >> 2] = fb + 12;
 HEAP32[gb + 28936 >> 2] = fb + 13;
 HEAP32[gb + 28940 >> 2] = fb + 14;
 HEAP32[gb + 28944 >> 2] = fb + 11;
 HEAP32[gb + 28948 >> 2] = fb + 23;
 HEAP32[gb + 28952 >> 2] = fb + 90;
 HEAP32[gb + 28956 >> 2] = fb + 14;
 HEAP32[gb + 28960 >> 2] = fb + 25;
 HEAP32[gb + 28964 >> 2] = fb + 91;
 HEAP32[gb + 28968 >> 2] = fb + 15;
 HEAP32[gb + 28972 >> 2] = fb + 16;
 HEAP32[gb + 28976 >> 2] = fb + 27;
 HEAP32[gb + 28980 >> 2] = fb + 28;
 HEAP32[gb + 28984 >> 2] = fb + 15;
 HEAP32[gb + 28988 >> 2] = fb + 1;
 HEAP32[gb + 28992 >> 2] = fb + 29;
 HEAP32[gb + 28996 >> 2] = fb + 95;
 HEAP32[gb + 29e3 >> 2] = fb + 96;
 HEAP32[gb + 29004 >> 2] = fb + 97;
 HEAP32[gb + 29008 >> 2] = fb + 98;
 HEAP32[gb + 29012 >> 2] = fb + 20;
 HEAP32[gb + 29016 >> 2] = fb + 30;
 HEAP32[gb + 29020 >> 2] = fb + 92;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 296 >> 2] = (HEAP32[gb + 296 >> 2] | 0) + i1;
 HEAP32[gb + 300 >> 2] = (HEAP32[gb + 300 >> 2] | 0) + (gb + 38460 | 0);
 HEAP32[gb + 304 >> 2] = (HEAP32[gb + 304 >> 2] | 0) + (gb + 216 | 0);
 HEAP32[gb + 29028 >> 2] = (HEAP32[gb + 29028 >> 2] | 0) + (gb + 312 | 0);
 HEAP32[gb + 29032 >> 2] = fb + 99;
 HEAP32[gb + 29036 >> 2] = fb + 100;
 HEAP32[gb + 29040 >> 2] = fb + 12;
 HEAP32[gb + 29044 >> 2] = fb + 17;
 HEAP32[gb + 29048 >> 2] = fb + 18;
 HEAP32[gb + 29052 >> 2] = fb + 1;
 HEAP32[gb + 29056 >> 2] = fb + 3;
 HEAP32[gb + 29060 >> 2] = fb + 23;
 HEAP32[gb + 29064 >> 2] = fb + 2;
 HEAP32[gb + 29068 >> 2] = fb + 2;
 HEAP32[gb + 29072 >> 2] = fb + 1;
 HEAP32[gb + 29076 >> 2] = fb + 1;
 HEAP32[gb + 29080 >> 2] = fb + 1;
 HEAP32[gb + 29084 >> 2] = fb + 1;
 HEAP32[gb + 29088 >> 2] = fb + 3;
 HEAP32[gb + 29092 >> 2] = fb + 1;
 HEAP32[gb + 29096 >> 2] = fb + 3;
 HEAP32[gb + 29100 >> 2] = fb + 4;
 HEAP32[gb + 29104 >> 2] = fb + 5;
 HEAP32[gb + 29108 >> 2] = fb + 6;
 HEAP32[gb + 29112 >> 2] = fb + 2;
 HEAP32[gb + 29116 >> 2] = fb + 3;
 HEAP32[gb + 29120 >> 2] = fb + 4;
 HEAP32[gb + 29124 >> 2] = fb + 5;
 HEAP32[gb + 29128 >> 2] = fb + 1;
 HEAP32[gb + 29132 >> 2] = fb + 1;
 HEAP32[gb + 29136 >> 2] = fb + 7;
 HEAP32[gb + 29140 >> 2] = fb + 5;
 HEAP32[gb + 29144 >> 2] = fb + 6;
 HEAP32[gb + 29148 >> 2] = fb + 3;
 HEAP32[gb + 29152 >> 2] = fb + 6;
 HEAP32[gb + 29156 >> 2] = fb + 7;
 HEAP32[gb + 29160 >> 2] = fb + 7;
 HEAP32[gb + 29164 >> 2] = fb + 8;
 HEAP32[gb + 29168 >> 2] = fb + 9;
 HEAP32[gb + 29172 >> 2] = fb + 10;
 HEAP32[gb + 29176 >> 2] = fb + 11;
 HEAP32[gb + 29180 >> 2] = fb + 8;
 HEAP32[gb + 29184 >> 2] = fb + 12;
 HEAP32[gb + 29188 >> 2] = fb + 13;
 HEAP32[gb + 29192 >> 2] = fb + 14;
 HEAP32[gb + 29196 >> 2] = fb + 15;
 HEAP32[gb + 29200 >> 2] = fb + 16;
 HEAP32[gb + 29204 >> 2] = fb + 8;
 HEAP32[gb + 29208 >> 2] = fb + 4;
 runPostSets18();
}

function runPostSets16() {
 var i1 = 0;
 HEAP32[gb + 28436 >> 2] = fb + 10;
 HEAP32[gb + 28440 >> 2] = fb + 11;
 HEAP32[gb + 28444 >> 2] = fb + 8;
 HEAP32[gb + 28448 >> 2] = fb + 12;
 HEAP32[gb + 28452 >> 2] = fb + 13;
 HEAP32[gb + 28456 >> 2] = fb + 14;
 HEAP32[gb + 28460 >> 2] = fb + 15;
 HEAP32[gb + 28464 >> 2] = fb + 16;
 HEAP32[gb + 28468 >> 2] = fb + 8;
 HEAP32[gb + 28472 >> 2] = fb + 4;
 HEAP32[gb + 28476 >> 2] = fb + 1;
 HEAP32[gb + 28480 >> 2] = fb + 5;
 HEAP32[gb + 28484 >> 2] = fb + 17;
 HEAP32[gb + 28488 >> 2] = fb + 9;
 HEAP32[gb + 28492 >> 2] = fb + 18;
 HEAP32[gb + 28496 >> 2] = fb + 6;
 HEAP32[gb + 28500 >> 2] = fb + 7;
 HEAP32[gb + 28504 >> 2] = fb + 8;
 HEAP32[gb + 28508 >> 2] = fb + 4;
 HEAP32[gb + 28512 >> 2] = fb + 19;
 HEAP32[gb + 28516 >> 2] = fb + 9;
 HEAP32[gb + 28520 >> 2] = fb + 10;
 HEAP32[gb + 28524 >> 2] = fb + 9;
 HEAP32[gb + 28528 >> 2] = fb + 57;
 HEAP32[gb + 28532 >> 2] = fb + 12;
 HEAP32[gb + 28536 >> 2] = fb + 58;
 HEAP32[gb + 28540 >> 2] = fb + 20;
 HEAP32[gb + 28544 >> 2] = fb + 85;
 HEAP32[gb + 28548 >> 2] = fb + 22;
 HEAP32[gb + 28552 >> 2] = fb + 31;
 HEAP32[gb + 28556 >> 2] = fb + 10;
 HEAP32[gb + 28560 >> 2] = fb + 11;
 HEAP32[gb + 28564 >> 2] = fb + 12;
 HEAP32[gb + 28568 >> 2] = fb + 13;
 HEAP32[gb + 28572 >> 2] = fb + 14;
 HEAP32[gb + 28576 >> 2] = fb + 11;
 HEAP32[gb + 28580 >> 2] = fb + 23;
 HEAP32[gb + 28584 >> 2] = fb + 24;
 HEAP32[gb + 28588 >> 2] = fb + 14;
 HEAP32[gb + 28592 >> 2] = fb + 25;
 HEAP32[gb + 28596 >> 2] = fb + 86;
 HEAP32[gb + 28600 >> 2] = fb + 15;
 HEAP32[gb + 28604 >> 2] = fb + 16;
 HEAP32[gb + 28608 >> 2] = fb + 27;
 HEAP32[gb + 28612 >> 2] = fb + 28;
 HEAP32[gb + 28616 >> 2] = fb + 15;
 HEAP32[gb + 28620 >> 2] = fb + 1;
 HEAP32[gb + 28624 >> 2] = fb + 87;
 HEAP32[gb + 28628 >> 2] = fb + 89;
 HEAP32[gb + 28632 >> 2] = fb + 90;
 HEAP32[gb + 28636 >> 2] = fb + 91;
 HEAP32[gb + 28640 >> 2] = fb + 92;
 HEAP32[gb + 28644 >> 2] = fb + 20;
 HEAP32[gb + 28648 >> 2] = fb + 30;
 HEAP32[gb + 28652 >> 2] = fb + 88;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 280 >> 2] = (HEAP32[gb + 280 >> 2] | 0) + i1;
 HEAP32[gb + 284 >> 2] = (HEAP32[gb + 284 >> 2] | 0) + (gb + 38239 | 0);
 HEAP32[gb + 288 >> 2] = (HEAP32[gb + 288 >> 2] | 0) + (gb + 216 | 0);
 HEAP32[gb + 28660 >> 2] = (HEAP32[gb + 28660 >> 2] | 0) + (gb + 296 | 0);
 HEAP32[gb + 28664 >> 2] = fb + 93;
 HEAP32[gb + 28668 >> 2] = fb + 94;
 HEAP32[gb + 28672 >> 2] = fb + 1;
 HEAP32[gb + 28676 >> 2] = fb + 1;
 HEAP32[gb + 28680 >> 2] = fb + 2;
 HEAP32[gb + 28684 >> 2] = fb + 1;
 HEAP32[gb + 28688 >> 2] = fb + 3;
 HEAP32[gb + 28692 >> 2] = fb + 4;
 HEAP32[gb + 28696 >> 2] = fb + 2;
 HEAP32[gb + 28700 >> 2] = fb + 2;
 HEAP32[gb + 28704 >> 2] = fb + 1;
 HEAP32[gb + 28708 >> 2] = fb + 1;
 HEAP32[gb + 28712 >> 2] = fb + 1;
 HEAP32[gb + 28716 >> 2] = fb + 1;
 HEAP32[gb + 28720 >> 2] = fb + 3;
 HEAP32[gb + 28724 >> 2] = fb + 1;
 HEAP32[gb + 28728 >> 2] = fb + 3;
 HEAP32[gb + 28732 >> 2] = fb + 4;
 HEAP32[gb + 28736 >> 2] = fb + 5;
 HEAP32[gb + 28740 >> 2] = fb + 6;
 HEAP32[gb + 28744 >> 2] = fb + 2;
 HEAP32[gb + 28748 >> 2] = fb + 3;
 HEAP32[gb + 28752 >> 2] = fb + 4;
 HEAP32[gb + 28756 >> 2] = fb + 5;
 HEAP32[gb + 28760 >> 2] = fb + 1;
 HEAP32[gb + 28764 >> 2] = fb + 1;
 HEAP32[gb + 28768 >> 2] = fb + 7;
 HEAP32[gb + 28772 >> 2] = fb + 5;
 HEAP32[gb + 28776 >> 2] = fb + 6;
 HEAP32[gb + 28780 >> 2] = fb + 3;
 HEAP32[gb + 28784 >> 2] = fb + 6;
 HEAP32[gb + 28788 >> 2] = fb + 7;
 HEAP32[gb + 28792 >> 2] = fb + 7;
 HEAP32[gb + 28796 >> 2] = fb + 8;
 HEAP32[gb + 28800 >> 2] = fb + 9;
 HEAP32[gb + 28804 >> 2] = fb + 10;
 HEAP32[gb + 28808 >> 2] = fb + 11;
 HEAP32[gb + 28812 >> 2] = fb + 8;
 HEAP32[gb + 28816 >> 2] = fb + 12;
 HEAP32[gb + 28820 >> 2] = fb + 13;
 runPostSets17();
}

function runPostSets6() {
 var i1 = 0;
 HEAP32[gb + 19772 >> 2] = fb + 6;
 HEAP32[gb + 19776 >> 2] = fb + 7;
 HEAP32[gb + 19780 >> 2] = fb + 7;
 HEAP32[gb + 19784 >> 2] = fb + 8;
 HEAP32[gb + 19788 >> 2] = fb + 9;
 HEAP32[gb + 19792 >> 2] = fb + 10;
 HEAP32[gb + 19796 >> 2] = fb + 11;
 HEAP32[gb + 19800 >> 2] = fb + 8;
 HEAP32[gb + 19804 >> 2] = fb + 12;
 HEAP32[gb + 19808 >> 2] = fb + 13;
 HEAP32[gb + 19812 >> 2] = fb + 14;
 HEAP32[gb + 19816 >> 2] = fb + 15;
 HEAP32[gb + 19820 >> 2] = fb + 16;
 HEAP32[gb + 19824 >> 2] = fb + 8;
 HEAP32[gb + 19828 >> 2] = fb + 4;
 HEAP32[gb + 19832 >> 2] = fb + 1;
 HEAP32[gb + 19836 >> 2] = fb + 5;
 HEAP32[gb + 19840 >> 2] = fb + 17;
 HEAP32[gb + 19844 >> 2] = fb + 9;
 HEAP32[gb + 19848 >> 2] = fb + 18;
 HEAP32[gb + 19852 >> 2] = fb + 6;
 HEAP32[gb + 19856 >> 2] = fb + 7;
 HEAP32[gb + 19860 >> 2] = fb + 8;
 HEAP32[gb + 19864 >> 2] = fb + 4;
 HEAP32[gb + 19868 >> 2] = fb + 19;
 HEAP32[gb + 19872 >> 2] = fb + 9;
 HEAP32[gb + 19876 >> 2] = fb + 10;
 HEAP32[gb + 19880 >> 2] = fb + 9;
 HEAP32[gb + 19884 >> 2] = fb + 20;
 HEAP32[gb + 19888 >> 2] = fb + 12;
 HEAP32[gb + 19892 >> 2] = fb + 28;
 HEAP32[gb + 19896 >> 2] = fb + 20;
 HEAP32[gb + 19900 >> 2] = fb + 42;
 HEAP32[gb + 19904 >> 2] = fb + 43;
 HEAP32[gb + 19908 >> 2] = fb + 16;
 HEAP32[gb + 19912 >> 2] = fb + 10;
 HEAP32[gb + 19916 >> 2] = fb + 11;
 HEAP32[gb + 19920 >> 2] = fb + 12;
 HEAP32[gb + 19924 >> 2] = fb + 13;
 HEAP32[gb + 19928 >> 2] = fb + 14;
 HEAP32[gb + 19932 >> 2] = fb + 11;
 HEAP32[gb + 19936 >> 2] = fb + 23;
 HEAP32[gb + 19940 >> 2] = fb + 24;
 HEAP32[gb + 19944 >> 2] = fb + 14;
 HEAP32[gb + 19948 >> 2] = fb + 25;
 HEAP32[gb + 19952 >> 2] = fb + 44;
 HEAP32[gb + 19956 >> 2] = fb + 15;
 HEAP32[gb + 19960 >> 2] = fb + 16;
 HEAP32[gb + 19964 >> 2] = fb + 27;
 HEAP32[gb + 19968 >> 2] = fb + 28;
 HEAP32[gb + 19972 >> 2] = fb + 15;
 HEAP32[gb + 19976 >> 2] = fb + 1;
 HEAP32[gb + 19980 >> 2] = fb + 29;
 HEAP32[gb + 19984 >> 2] = fb + 45;
 HEAP32[gb + 19988 >> 2] = fb + 27;
 HEAP32[gb + 19992 >> 2] = fb + 28;
 HEAP32[gb + 19996 >> 2] = fb + 46;
 HEAP32[gb + 2e4 >> 2] = fb + 20;
 HEAP32[gb + 20004 >> 2] = fb + 30;
 HEAP32[gb + 20008 >> 2] = fb + 45;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 112 >> 2] = (HEAP32[gb + 112 >> 2] | 0) + i1;
 HEAP32[gb + 116 >> 2] = (HEAP32[gb + 116 >> 2] | 0) + (gb + 37848 | 0);
 HEAP32[gb + 120 >> 2] = (HEAP32[gb + 120 >> 2] | 0) + (gb + 216 | 0);
 HEAP32[gb + 20016 >> 2] = (HEAP32[gb + 20016 >> 2] | 0) + (gb + 128 | 0);
 HEAP32[gb + 20020 >> 2] = fb + 47;
 HEAP32[gb + 20024 >> 2] = fb + 48;
 HEAP32[gb + 20028 >> 2] = fb + 12;
 HEAP32[gb + 20032 >> 2] = fb + 17;
 HEAP32[gb + 20036 >> 2] = fb + 18;
 HEAP32[gb + 20040 >> 2] = fb + 1;
 HEAP32[gb + 20044 >> 2] = fb + 3;
 HEAP32[gb + 20048 >> 2] = fb + 23;
 HEAP32[gb + 20052 >> 2] = fb + 2;
 HEAP32[gb + 20056 >> 2] = fb + 2;
 HEAP32[gb + 20060 >> 2] = fb + 1;
 HEAP32[gb + 20064 >> 2] = fb + 1;
 HEAP32[gb + 20068 >> 2] = fb + 1;
 HEAP32[gb + 20072 >> 2] = fb + 1;
 HEAP32[gb + 20076 >> 2] = fb + 3;
 HEAP32[gb + 20080 >> 2] = fb + 1;
 HEAP32[gb + 20084 >> 2] = fb + 3;
 HEAP32[gb + 20088 >> 2] = fb + 4;
 HEAP32[gb + 20092 >> 2] = fb + 5;
 HEAP32[gb + 20096 >> 2] = fb + 6;
 HEAP32[gb + 20100 >> 2] = fb + 2;
 HEAP32[gb + 20104 >> 2] = fb + 3;
 HEAP32[gb + 20108 >> 2] = fb + 4;
 HEAP32[gb + 20112 >> 2] = fb + 5;
 HEAP32[gb + 20116 >> 2] = fb + 1;
 HEAP32[gb + 20120 >> 2] = fb + 1;
 HEAP32[gb + 20124 >> 2] = fb + 7;
 HEAP32[gb + 20128 >> 2] = fb + 5;
 HEAP32[gb + 20132 >> 2] = fb + 6;
 HEAP32[gb + 20136 >> 2] = fb + 3;
 HEAP32[gb + 20140 >> 2] = fb + 6;
 HEAP32[gb + 20144 >> 2] = fb + 7;
 HEAP32[gb + 20148 >> 2] = fb + 7;
 HEAP32[gb + 20152 >> 2] = fb + 8;
 HEAP32[gb + 20156 >> 2] = fb + 9;
 runPostSets7();
}

function runPostSets9() {
 var i1 = 0;
 HEAP32[gb + 20928 >> 2] = fb + 18;
 HEAP32[gb + 20932 >> 2] = fb + 6;
 HEAP32[gb + 20936 >> 2] = fb + 7;
 HEAP32[gb + 20940 >> 2] = fb + 8;
 HEAP32[gb + 20944 >> 2] = fb + 4;
 HEAP32[gb + 20948 >> 2] = fb + 19;
 HEAP32[gb + 20952 >> 2] = fb + 9;
 HEAP32[gb + 20956 >> 2] = fb + 10;
 HEAP32[gb + 20960 >> 2] = fb + 9;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 168 >> 2] = (HEAP32[gb + 168 >> 2] | 0) + i1;
 HEAP32[gb + 172 >> 2] = (HEAP32[gb + 172 >> 2] | 0) + (gb + 37907 | 0);
 HEAP32[gb + 176 >> 2] = (HEAP32[gb + 176 >> 2] | 0) + (gb + 152 | 0);
 HEAP32[gb + 20968 >> 2] = (HEAP32[gb + 20968 >> 2] | 0) + (gb + 184 | 0);
 HEAP32[gb + 20972 >> 2] = fb + 49;
 HEAP32[gb + 20976 >> 2] = fb + 48;
 HEAP32[gb + 20980 >> 2] = fb + 18;
 HEAP32[gb + 20984 >> 2] = fb + 35;
 HEAP32[gb + 20988 >> 2] = fb + 36;
 HEAP32[gb + 20992 >> 2] = fb + 1;
 HEAP32[gb + 20996 >> 2] = fb + 3;
 HEAP32[gb + 21e3 >> 2] = fb + 23;
 HEAP32[gb + 21004 >> 2] = fb + 2;
 HEAP32[gb + 21008 >> 2] = fb + 2;
 HEAP32[gb + 21012 >> 2] = fb + 2;
 HEAP32[gb + 21016 >> 2] = fb + 2;
 HEAP32[gb + 21020 >> 2] = fb + 2;
 HEAP32[gb + 21024 >> 2] = fb + 5;
 HEAP32[gb + 21028 >> 2] = fb + 48;
 HEAP32[gb + 21032 >> 2] = fb + 1;
 HEAP32[gb + 21036 >> 2] = fb + 3;
 HEAP32[gb + 21040 >> 2] = fb + 49;
 HEAP32[gb + 21044 >> 2] = fb + 5;
 HEAP32[gb + 21048 >> 2] = fb + 47;
 HEAP32[gb + 21052 >> 2] = fb + 2;
 HEAP32[gb + 21056 >> 2] = fb + 3;
 HEAP32[gb + 21060 >> 2] = fb + 4;
 HEAP32[gb + 21064 >> 2] = fb + 5;
 HEAP32[gb + 21068 >> 2] = fb + 1;
 HEAP32[gb + 21072 >> 2] = fb + 2;
 HEAP32[gb + 21076 >> 2] = fb + 50;
 HEAP32[gb + 21080 >> 2] = fb + 5;
 HEAP32[gb + 21084 >> 2] = fb + 6;
 HEAP32[gb + 21088 >> 2] = fb + 3;
 HEAP32[gb + 21092 >> 2] = fb + 6;
 HEAP32[gb + 21096 >> 2] = fb + 7;
 HEAP32[gb + 21100 >> 2] = fb + 7;
 HEAP32[gb + 21104 >> 2] = fb + 8;
 HEAP32[gb + 21108 >> 2] = fb + 51;
 HEAP32[gb + 21112 >> 2] = fb + 10;
 HEAP32[gb + 21116 >> 2] = fb + 11;
 HEAP32[gb + 21120 >> 2] = fb + 8;
 HEAP32[gb + 21124 >> 2] = fb + 12;
 HEAP32[gb + 21128 >> 2] = fb + 13;
 HEAP32[gb + 21132 >> 2] = fb + 14;
 HEAP32[gb + 21136 >> 2] = fb + 15;
 HEAP32[gb + 21140 >> 2] = fb + 16;
 HEAP32[gb + 21144 >> 2] = fb + 8;
 HEAP32[gb + 21148 >> 2] = fb + 4;
 HEAP32[gb + 21152 >> 2] = fb + 1;
 HEAP32[gb + 21156 >> 2] = fb + 5;
 HEAP32[gb + 21160 >> 2] = fb + 46;
 HEAP32[gb + 21164 >> 2] = fb + 9;
 HEAP32[gb + 21168 >> 2] = fb + 52;
 HEAP32[gb + 21172 >> 2] = fb + 6;
 HEAP32[gb + 21176 >> 2] = fb + 7;
 HEAP32[gb + 21180 >> 2] = fb + 8;
 HEAP32[gb + 21184 >> 2] = fb + 6;
 HEAP32[gb + 21188 >> 2] = fb + 19;
 HEAP32[gb + 21192 >> 2] = fb + 9;
 HEAP32[gb + 21196 >> 2] = fb + 10;
 HEAP32[gb + 21200 >> 2] = fb + 19;
 HEAP32[gb + 21204 >> 2] = fb + 20;
 HEAP32[gb + 21208 >> 2] = fb + 50;
 HEAP32[gb + 21212 >> 2] = fb + 53;
 HEAP32[gb + 21216 >> 2] = fb + 1;
 HEAP32[gb + 21220 >> 2] = fb + 51;
 HEAP32[gb + 21224 >> 2] = fb + 37;
 HEAP32[gb + 21228 >> 2] = fb + 52;
 HEAP32[gb + 21232 >> 2] = fb + 53;
 HEAP32[gb + 21236 >> 2] = fb + 54;
 HEAP32[gb + 21240 >> 2] = fb + 55;
 HEAP32[gb + 21244 >> 2] = fb + 54;
 HEAP32[gb + 21248 >> 2] = fb + 38;
 HEAP32[gb + 21252 >> 2] = fb + 39;
 HEAP32[gb + 21256 >> 2] = fb + 1;
 HEAP32[gb + 21260 >> 2] = fb + 1;
 HEAP32[gb + 21264 >> 2] = fb + 1;
 HEAP32[gb + 21268 >> 2] = fb + 1;
 HEAP32[gb + 21272 >> 2] = fb + 55;
 HEAP32[gb + 21276 >> 2] = fb + 56;
 HEAP32[gb + 21280 >> 2] = fb + 1;
 HEAP32[gb + 21284 >> 2] = fb + 2;
 HEAP32[gb + 21288 >> 2] = fb + 3;
 HEAP32[gb + 21292 >> 2] = fb + 4;
 HEAP32[gb + 21296 >> 2] = fb + 40;
 HEAP32[gb + 21300 >> 2] = fb + 21;
 HEAP32[gb + 21304 >> 2] = fb + 22;
 HEAP32[gb + 21308 >> 2] = fb + 41;
 HEAP32[gb + 21312 >> 2] = fb + 56;
 runPostSets10();
}

function runPostSets3() {
 var i1 = 0;
 HEAP32[gb + 18600 >> 2] = fb + 5;
 HEAP32[gb + 18604 >> 2] = fb + 17;
 HEAP32[gb + 18608 >> 2] = fb + 9;
 HEAP32[gb + 18612 >> 2] = fb + 18;
 HEAP32[gb + 18616 >> 2] = fb + 6;
 HEAP32[gb + 18620 >> 2] = fb + 7;
 HEAP32[gb + 18624 >> 2] = fb + 8;
 HEAP32[gb + 18628 >> 2] = fb + 4;
 HEAP32[gb + 18632 >> 2] = fb + 19;
 HEAP32[gb + 18636 >> 2] = fb + 9;
 HEAP32[gb + 18640 >> 2] = fb + 10;
 HEAP32[gb + 18644 >> 2] = fb + 9;
 HEAP32[gb + 18648 >> 2] = fb + 22;
 HEAP32[gb + 18652 >> 2] = fb + 12;
 HEAP32[gb + 18656 >> 2] = fb + 23;
 HEAP32[gb + 18660 >> 2] = fb + 20;
 HEAP32[gb + 18664 >> 2] = fb + 36;
 HEAP32[gb + 18668 >> 2] = fb + 22;
 HEAP32[gb + 18672 >> 2] = fb + 14;
 HEAP32[gb + 18676 >> 2] = fb + 10;
 HEAP32[gb + 18680 >> 2] = fb + 11;
 HEAP32[gb + 18684 >> 2] = fb + 12;
 HEAP32[gb + 18688 >> 2] = fb + 13;
 HEAP32[gb + 18692 >> 2] = fb + 14;
 HEAP32[gb + 18696 >> 2] = fb + 11;
 HEAP32[gb + 18700 >> 2] = fb + 23;
 HEAP32[gb + 18704 >> 2] = fb + 24;
 HEAP32[gb + 18708 >> 2] = fb + 14;
 HEAP32[gb + 18712 >> 2] = fb + 25;
 HEAP32[gb + 18716 >> 2] = fb + 37;
 HEAP32[gb + 18720 >> 2] = fb + 15;
 HEAP32[gb + 18724 >> 2] = fb + 16;
 HEAP32[gb + 18728 >> 2] = fb + 27;
 HEAP32[gb + 18732 >> 2] = fb + 28;
 HEAP32[gb + 18736 >> 2] = fb + 15;
 HEAP32[gb + 18740 >> 2] = fb + 1;
 HEAP32[gb + 18744 >> 2] = fb + 29;
 HEAP32[gb + 18748 >> 2] = fb + 32;
 HEAP32[gb + 18752 >> 2] = fb + 27;
 HEAP32[gb + 18756 >> 2] = fb + 28;
 HEAP32[gb + 18760 >> 2] = fb + 33;
 HEAP32[gb + 18764 >> 2] = fb + 20;
 HEAP32[gb + 18768 >> 2] = fb + 30;
 HEAP32[gb + 18772 >> 2] = fb + 38;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 48 >> 2] = (HEAP32[gb + 48 >> 2] | 0) + i1;
 HEAP32[gb + 52 >> 2] = (HEAP32[gb + 52 >> 2] | 0) + (gb + 36866 | 0);
 HEAP32[gb + 56 >> 2] = (HEAP32[gb + 56 >> 2] | 0) + (gb + 216 | 0);
 HEAP32[gb + 18780 >> 2] = (HEAP32[gb + 18780 >> 2] | 0) + (gb + 64 | 0);
 HEAP32[gb + 18784 >> 2] = fb + 34;
 HEAP32[gb + 18788 >> 2] = fb + 35;
 HEAP32[gb + 18792 >> 2] = fb + 12;
 HEAP32[gb + 18796 >> 2] = fb + 17;
 HEAP32[gb + 18800 >> 2] = fb + 18;
 HEAP32[gb + 18804 >> 2] = fb + 1;
 HEAP32[gb + 18808 >> 2] = fb + 3;
 HEAP32[gb + 18812 >> 2] = fb + 23;
 HEAP32[gb + 18816 >> 2] = fb + 2;
 HEAP32[gb + 18820 >> 2] = fb + 2;
 HEAP32[gb + 18824 >> 2] = fb + 1;
 HEAP32[gb + 18828 >> 2] = fb + 1;
 HEAP32[gb + 18832 >> 2] = fb + 1;
 HEAP32[gb + 18836 >> 2] = fb + 1;
 HEAP32[gb + 18840 >> 2] = fb + 3;
 HEAP32[gb + 18844 >> 2] = fb + 1;
 HEAP32[gb + 18848 >> 2] = fb + 3;
 HEAP32[gb + 18852 >> 2] = fb + 4;
 HEAP32[gb + 18856 >> 2] = fb + 5;
 HEAP32[gb + 18860 >> 2] = fb + 6;
 HEAP32[gb + 18864 >> 2] = fb + 2;
 HEAP32[gb + 18868 >> 2] = fb + 3;
 HEAP32[gb + 18872 >> 2] = fb + 4;
 HEAP32[gb + 18876 >> 2] = fb + 5;
 HEAP32[gb + 18880 >> 2] = fb + 1;
 HEAP32[gb + 18884 >> 2] = fb + 1;
 HEAP32[gb + 18888 >> 2] = fb + 7;
 HEAP32[gb + 18892 >> 2] = fb + 5;
 HEAP32[gb + 18896 >> 2] = fb + 6;
 HEAP32[gb + 18900 >> 2] = fb + 3;
 HEAP32[gb + 18904 >> 2] = fb + 6;
 HEAP32[gb + 18908 >> 2] = fb + 7;
 HEAP32[gb + 18912 >> 2] = fb + 7;
 HEAP32[gb + 18916 >> 2] = fb + 8;
 HEAP32[gb + 18920 >> 2] = fb + 9;
 HEAP32[gb + 18924 >> 2] = fb + 10;
 HEAP32[gb + 18928 >> 2] = fb + 11;
 HEAP32[gb + 18932 >> 2] = fb + 8;
 HEAP32[gb + 18936 >> 2] = fb + 12;
 HEAP32[gb + 18940 >> 2] = fb + 13;
 HEAP32[gb + 18944 >> 2] = fb + 14;
 HEAP32[gb + 18948 >> 2] = fb + 15;
 HEAP32[gb + 18952 >> 2] = fb + 16;
 HEAP32[gb + 18956 >> 2] = fb + 8;
 HEAP32[gb + 18960 >> 2] = fb + 4;
 HEAP32[gb + 18964 >> 2] = fb + 1;
 HEAP32[gb + 18968 >> 2] = fb + 5;
 HEAP32[gb + 18972 >> 2] = fb + 32;
 HEAP32[gb + 18976 >> 2] = fb + 9;
 HEAP32[gb + 18980 >> 2] = fb + 18;
 HEAP32[gb + 18984 >> 2] = fb + 6;
 runPostSets4();
}

function runPostSets2() {
 var i1 = 0;
 HEAP32[gb + 18212 >> 2] = fb + 15;
 HEAP32[gb + 18216 >> 2] = fb + 16;
 HEAP32[gb + 18220 >> 2] = fb + 8;
 HEAP32[gb + 18224 >> 2] = fb + 4;
 HEAP32[gb + 18228 >> 2] = fb + 1;
 HEAP32[gb + 18232 >> 2] = fb + 5;
 HEAP32[gb + 18236 >> 2] = fb + 17;
 HEAP32[gb + 18240 >> 2] = fb + 9;
 HEAP32[gb + 18244 >> 2] = fb + 18;
 HEAP32[gb + 18248 >> 2] = fb + 6;
 HEAP32[gb + 18252 >> 2] = fb + 7;
 HEAP32[gb + 18256 >> 2] = fb + 8;
 HEAP32[gb + 18260 >> 2] = fb + 4;
 HEAP32[gb + 18264 >> 2] = fb + 19;
 HEAP32[gb + 18268 >> 2] = fb + 9;
 HEAP32[gb + 18272 >> 2] = fb + 10;
 HEAP32[gb + 18276 >> 2] = fb + 9;
 HEAP32[gb + 18280 >> 2] = fb + 20;
 HEAP32[gb + 18284 >> 2] = fb + 12;
 HEAP32[gb + 18288 >> 2] = fb + 21;
 HEAP32[gb + 18292 >> 2] = fb + 20;
 HEAP32[gb + 18296 >> 2] = fb + 33;
 HEAP32[gb + 18300 >> 2] = fb + 22;
 HEAP32[gb + 18304 >> 2] = fb + 13;
 HEAP32[gb + 18308 >> 2] = fb + 10;
 HEAP32[gb + 18312 >> 2] = fb + 11;
 HEAP32[gb + 18316 >> 2] = fb + 12;
 HEAP32[gb + 18320 >> 2] = fb + 13;
 HEAP32[gb + 18324 >> 2] = fb + 14;
 HEAP32[gb + 18328 >> 2] = fb + 11;
 HEAP32[gb + 18332 >> 2] = fb + 23;
 HEAP32[gb + 18336 >> 2] = fb + 24;
 HEAP32[gb + 18340 >> 2] = fb + 14;
 HEAP32[gb + 18344 >> 2] = fb + 25;
 HEAP32[gb + 18348 >> 2] = fb + 34;
 HEAP32[gb + 18352 >> 2] = fb + 15;
 HEAP32[gb + 18356 >> 2] = fb + 16;
 HEAP32[gb + 18360 >> 2] = fb + 27;
 HEAP32[gb + 18364 >> 2] = fb + 28;
 HEAP32[gb + 18368 >> 2] = fb + 15;
 HEAP32[gb + 18372 >> 2] = fb + 1;
 HEAP32[gb + 18376 >> 2] = fb + 29;
 HEAP32[gb + 18380 >> 2] = fb + 26;
 HEAP32[gb + 18384 >> 2] = fb + 27;
 HEAP32[gb + 18388 >> 2] = fb + 28;
 HEAP32[gb + 18392 >> 2] = fb + 29;
 HEAP32[gb + 18396 >> 2] = fb + 20;
 HEAP32[gb + 18400 >> 2] = fb + 30;
 HEAP32[gb + 18404 >> 2] = fb + 35;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 32 >> 2] = (HEAP32[gb + 32 >> 2] | 0) + i1;
 HEAP32[gb + 36 >> 2] = (HEAP32[gb + 36 >> 2] | 0) + (gb + 36818 | 0);
 HEAP32[gb + 40 >> 2] = (HEAP32[gb + 40 >> 2] | 0) + (gb + 216 | 0);
 HEAP32[gb + 18412 >> 2] = (HEAP32[gb + 18412 >> 2] | 0) + (gb + 48 | 0);
 HEAP32[gb + 18416 >> 2] = fb + 30;
 HEAP32[gb + 18420 >> 2] = fb + 31;
 HEAP32[gb + 18424 >> 2] = fb + 1;
 HEAP32[gb + 18428 >> 2] = fb + 1;
 HEAP32[gb + 18432 >> 2] = fb + 2;
 HEAP32[gb + 18436 >> 2] = fb + 1;
 HEAP32[gb + 18440 >> 2] = fb + 3;
 HEAP32[gb + 18444 >> 2] = fb + 4;
 HEAP32[gb + 18448 >> 2] = fb + 2;
 HEAP32[gb + 18452 >> 2] = fb + 2;
 HEAP32[gb + 18456 >> 2] = fb + 1;
 HEAP32[gb + 18460 >> 2] = fb + 1;
 HEAP32[gb + 18464 >> 2] = fb + 1;
 HEAP32[gb + 18468 >> 2] = fb + 1;
 HEAP32[gb + 18472 >> 2] = fb + 3;
 HEAP32[gb + 18476 >> 2] = fb + 1;
 HEAP32[gb + 18480 >> 2] = fb + 3;
 HEAP32[gb + 18484 >> 2] = fb + 4;
 HEAP32[gb + 18488 >> 2] = fb + 5;
 HEAP32[gb + 18492 >> 2] = fb + 6;
 HEAP32[gb + 18496 >> 2] = fb + 2;
 HEAP32[gb + 18500 >> 2] = fb + 3;
 HEAP32[gb + 18504 >> 2] = fb + 4;
 HEAP32[gb + 18508 >> 2] = fb + 5;
 HEAP32[gb + 18512 >> 2] = fb + 1;
 HEAP32[gb + 18516 >> 2] = fb + 1;
 HEAP32[gb + 18520 >> 2] = fb + 7;
 HEAP32[gb + 18524 >> 2] = fb + 5;
 HEAP32[gb + 18528 >> 2] = fb + 6;
 HEAP32[gb + 18532 >> 2] = fb + 3;
 HEAP32[gb + 18536 >> 2] = fb + 6;
 HEAP32[gb + 18540 >> 2] = fb + 7;
 HEAP32[gb + 18544 >> 2] = fb + 7;
 HEAP32[gb + 18548 >> 2] = fb + 8;
 HEAP32[gb + 18552 >> 2] = fb + 9;
 HEAP32[gb + 18556 >> 2] = fb + 10;
 HEAP32[gb + 18560 >> 2] = fb + 11;
 HEAP32[gb + 18564 >> 2] = fb + 8;
 HEAP32[gb + 18568 >> 2] = fb + 12;
 HEAP32[gb + 18572 >> 2] = fb + 13;
 HEAP32[gb + 18576 >> 2] = fb + 14;
 HEAP32[gb + 18580 >> 2] = fb + 15;
 HEAP32[gb + 18584 >> 2] = fb + 16;
 HEAP32[gb + 18588 >> 2] = fb + 8;
 HEAP32[gb + 18592 >> 2] = fb + 4;
 HEAP32[gb + 18596 >> 2] = fb + 1;
 runPostSets3();
}

function runPostSets4() {
 var i1 = 0;
 HEAP32[gb + 18988 >> 2] = fb + 7;
 HEAP32[gb + 18992 >> 2] = fb + 8;
 HEAP32[gb + 18996 >> 2] = fb + 4;
 HEAP32[gb + 19e3 >> 2] = fb + 19;
 HEAP32[gb + 19004 >> 2] = fb + 9;
 HEAP32[gb + 19008 >> 2] = fb + 10;
 HEAP32[gb + 19012 >> 2] = fb + 24;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 64 >> 2] = (HEAP32[gb + 64 >> 2] | 0) + i1;
 HEAP32[gb + 68 >> 2] = (HEAP32[gb + 68 >> 2] | 0) + (gb + 36873 | 0);
 HEAP32[gb + 72 >> 2] = (HEAP32[gb + 72 >> 2] | 0) + (gb + 248 | 0);
 HEAP32[gb + 19040 >> 2] = (HEAP32[gb + 19040 >> 2] | 0) + (gb + 80 | 0);
 HEAP32[gb + 19044 >> 2] = fb + 36;
 HEAP32[gb + 19048 >> 2] = fb + 37;
 HEAP32[gb + 19052 >> 2] = fb + 1;
 HEAP32[gb + 19056 >> 2] = fb + 1;
 HEAP32[gb + 19060 >> 2] = fb + 2;
 HEAP32[gb + 19064 >> 2] = fb + 1;
 HEAP32[gb + 19068 >> 2] = fb + 3;
 HEAP32[gb + 19072 >> 2] = fb + 4;
 HEAP32[gb + 19076 >> 2] = fb + 2;
 HEAP32[gb + 19080 >> 2] = fb + 2;
 HEAP32[gb + 19084 >> 2] = fb + 1;
 HEAP32[gb + 19088 >> 2] = fb + 1;
 HEAP32[gb + 19092 >> 2] = fb + 1;
 HEAP32[gb + 19096 >> 2] = fb + 1;
 HEAP32[gb + 19100 >> 2] = fb + 3;
 HEAP32[gb + 19104 >> 2] = fb + 1;
 HEAP32[gb + 19108 >> 2] = fb + 3;
 HEAP32[gb + 19112 >> 2] = fb + 4;
 HEAP32[gb + 19116 >> 2] = fb + 5;
 HEAP32[gb + 19120 >> 2] = fb + 6;
 HEAP32[gb + 19124 >> 2] = fb + 2;
 HEAP32[gb + 19128 >> 2] = fb + 3;
 HEAP32[gb + 19132 >> 2] = fb + 4;
 HEAP32[gb + 19136 >> 2] = fb + 5;
 HEAP32[gb + 19140 >> 2] = fb + 1;
 HEAP32[gb + 19144 >> 2] = fb + 1;
 HEAP32[gb + 19148 >> 2] = fb + 7;
 HEAP32[gb + 19152 >> 2] = fb + 5;
 HEAP32[gb + 19156 >> 2] = fb + 6;
 HEAP32[gb + 19160 >> 2] = fb + 3;
 HEAP32[gb + 19164 >> 2] = fb + 6;
 HEAP32[gb + 19168 >> 2] = fb + 7;
 HEAP32[gb + 19172 >> 2] = fb + 7;
 HEAP32[gb + 19176 >> 2] = fb + 8;
 HEAP32[gb + 19180 >> 2] = fb + 9;
 HEAP32[gb + 19184 >> 2] = fb + 10;
 HEAP32[gb + 19188 >> 2] = fb + 11;
 HEAP32[gb + 19192 >> 2] = fb + 8;
 HEAP32[gb + 19196 >> 2] = fb + 12;
 HEAP32[gb + 19200 >> 2] = fb + 13;
 HEAP32[gb + 19204 >> 2] = fb + 14;
 HEAP32[gb + 19208 >> 2] = fb + 15;
 HEAP32[gb + 19212 >> 2] = fb + 16;
 HEAP32[gb + 19216 >> 2] = fb + 8;
 HEAP32[gb + 19220 >> 2] = fb + 4;
 HEAP32[gb + 19224 >> 2] = fb + 1;
 HEAP32[gb + 19228 >> 2] = fb + 5;
 HEAP32[gb + 19232 >> 2] = fb + 17;
 HEAP32[gb + 19236 >> 2] = fb + 9;
 HEAP32[gb + 19240 >> 2] = fb + 18;
 HEAP32[gb + 19244 >> 2] = fb + 6;
 HEAP32[gb + 19248 >> 2] = fb + 7;
 HEAP32[gb + 19252 >> 2] = fb + 8;
 HEAP32[gb + 19256 >> 2] = fb + 4;
 HEAP32[gb + 19260 >> 2] = fb + 19;
 HEAP32[gb + 19264 >> 2] = fb + 9;
 HEAP32[gb + 19268 >> 2] = fb + 10;
 HEAP32[gb + 19272 >> 2] = fb + 9;
 HEAP32[gb + 19276 >> 2] = fb + 25;
 HEAP32[gb + 19280 >> 2] = fb + 12;
 HEAP32[gb + 19284 >> 2] = fb + 26;
 HEAP32[gb + 19288 >> 2] = fb + 20;
 HEAP32[gb + 19292 >> 2] = fb + 39;
 HEAP32[gb + 19296 >> 2] = fb + 22;
 HEAP32[gb + 19300 >> 2] = fb + 15;
 HEAP32[gb + 19304 >> 2] = fb + 10;
 HEAP32[gb + 19308 >> 2] = fb + 11;
 HEAP32[gb + 19312 >> 2] = fb + 12;
 HEAP32[gb + 19316 >> 2] = fb + 13;
 HEAP32[gb + 19320 >> 2] = fb + 14;
 HEAP32[gb + 19324 >> 2] = fb + 11;
 HEAP32[gb + 19328 >> 2] = fb + 23;
 HEAP32[gb + 19332 >> 2] = fb + 24;
 HEAP32[gb + 19336 >> 2] = fb + 14;
 HEAP32[gb + 19340 >> 2] = fb + 25;
 HEAP32[gb + 19344 >> 2] = fb + 40;
 HEAP32[gb + 19348 >> 2] = fb + 15;
 HEAP32[gb + 19352 >> 2] = fb + 16;
 HEAP32[gb + 19356 >> 2] = fb + 27;
 HEAP32[gb + 19360 >> 2] = fb + 28;
 HEAP32[gb + 19364 >> 2] = fb + 15;
 HEAP32[gb + 19368 >> 2] = fb + 1;
 HEAP32[gb + 19372 >> 2] = fb + 29;
 HEAP32[gb + 19376 >> 2] = fb + 38;
 HEAP32[gb + 19380 >> 2] = fb + 39;
 HEAP32[gb + 19384 >> 2] = fb + 28;
 HEAP32[gb + 19388 >> 2] = fb + 40;
 HEAP32[gb + 19392 >> 2] = fb + 20;
 runPostSets5();
}

function runPostSets22() {
 var i1 = 0;
 HEAP32[gb + 30740 >> 2] = fb + 17;
 HEAP32[gb + 30744 >> 2] = fb + 18;
 HEAP32[gb + 30748 >> 2] = fb + 1;
 HEAP32[gb + 30752 >> 2] = fb + 3;
 HEAP32[gb + 30756 >> 2] = fb + 23;
 HEAP32[gb + 30760 >> 2] = fb + 2;
 HEAP32[gb + 30764 >> 2] = fb + 2;
 HEAP32[gb + 30768 >> 2] = fb + 1;
 HEAP32[gb + 30772 >> 2] = fb + 1;
 HEAP32[gb + 30776 >> 2] = fb + 1;
 HEAP32[gb + 30780 >> 2] = fb + 1;
 HEAP32[gb + 30784 >> 2] = fb + 3;
 HEAP32[gb + 30788 >> 2] = fb + 1;
 HEAP32[gb + 30792 >> 2] = fb + 3;
 HEAP32[gb + 30796 >> 2] = fb + 4;
 HEAP32[gb + 30800 >> 2] = fb + 5;
 HEAP32[gb + 30804 >> 2] = fb + 6;
 HEAP32[gb + 30808 >> 2] = fb + 2;
 HEAP32[gb + 30812 >> 2] = fb + 3;
 HEAP32[gb + 30816 >> 2] = fb + 4;
 HEAP32[gb + 30820 >> 2] = fb + 5;
 HEAP32[gb + 30824 >> 2] = fb + 1;
 HEAP32[gb + 30828 >> 2] = fb + 1;
 HEAP32[gb + 30832 >> 2] = fb + 7;
 HEAP32[gb + 30836 >> 2] = fb + 5;
 HEAP32[gb + 30840 >> 2] = fb + 6;
 HEAP32[gb + 30844 >> 2] = fb + 3;
 HEAP32[gb + 30848 >> 2] = fb + 6;
 HEAP32[gb + 30852 >> 2] = fb + 7;
 HEAP32[gb + 30856 >> 2] = fb + 7;
 HEAP32[gb + 30860 >> 2] = fb + 8;
 HEAP32[gb + 30864 >> 2] = fb + 9;
 HEAP32[gb + 30868 >> 2] = fb + 10;
 HEAP32[gb + 30872 >> 2] = fb + 11;
 HEAP32[gb + 30876 >> 2] = fb + 8;
 HEAP32[gb + 30880 >> 2] = fb + 12;
 HEAP32[gb + 30884 >> 2] = fb + 13;
 HEAP32[gb + 30888 >> 2] = fb + 14;
 HEAP32[gb + 30892 >> 2] = fb + 15;
 HEAP32[gb + 30896 >> 2] = fb + 16;
 HEAP32[gb + 30900 >> 2] = fb + 8;
 HEAP32[gb + 30904 >> 2] = fb + 4;
 HEAP32[gb + 30908 >> 2] = fb + 1;
 HEAP32[gb + 30912 >> 2] = fb + 5;
 HEAP32[gb + 30916 >> 2] = fb + 32;
 HEAP32[gb + 30920 >> 2] = fb + 9;
 HEAP32[gb + 30924 >> 2] = fb + 18;
 HEAP32[gb + 30928 >> 2] = fb + 6;
 HEAP32[gb + 30932 >> 2] = fb + 7;
 HEAP32[gb + 30936 >> 2] = fb + 8;
 HEAP32[gb + 30940 >> 2] = fb + 4;
 HEAP32[gb + 30944 >> 2] = fb + 19;
 HEAP32[gb + 30948 >> 2] = fb + 9;
 HEAP32[gb + 30952 >> 2] = fb + 10;
 HEAP32[gb + 30956 >> 2] = fb + 69;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 408 >> 2] = (HEAP32[gb + 408 >> 2] | 0) + i1;
 HEAP32[gb + 412 >> 2] = (HEAP32[gb + 412 >> 2] | 0) + (gb + 38837 | 0);
 HEAP32[gb + 416 >> 2] = (HEAP32[gb + 416 >> 2] | 0) + (gb + 248 | 0);
 HEAP32[gb + 30964 >> 2] = (HEAP32[gb + 30964 >> 2] | 0) + (gb + 424 | 0);
 HEAP32[gb + 30968 >> 2] = fb + 121;
 HEAP32[gb + 30972 >> 2] = fb + 122;
 HEAP32[gb + 30976 >> 2] = fb + 18;
 HEAP32[gb + 30980 >> 2] = fb + 35;
 HEAP32[gb + 30984 >> 2] = fb + 36;
 HEAP32[gb + 30988 >> 2] = fb + 1;
 HEAP32[gb + 30992 >> 2] = fb + 3;
 HEAP32[gb + 30996 >> 2] = fb + 23;
 HEAP32[gb + 31e3 >> 2] = fb + 2;
 HEAP32[gb + 31004 >> 2] = fb + 2;
 HEAP32[gb + 31008 >> 2] = fb + 2;
 HEAP32[gb + 31012 >> 2] = fb + 2;
 HEAP32[gb + 31016 >> 2] = fb + 2;
 HEAP32[gb + 31020 >> 2] = fb + 5;
 HEAP32[gb + 31024 >> 2] = fb + 48;
 HEAP32[gb + 31028 >> 2] = fb + 1;
 HEAP32[gb + 31032 >> 2] = fb + 3;
 HEAP32[gb + 31036 >> 2] = fb + 49;
 HEAP32[gb + 31040 >> 2] = fb + 5;
 HEAP32[gb + 31044 >> 2] = fb + 47;
 HEAP32[gb + 31048 >> 2] = fb + 2;
 HEAP32[gb + 31052 >> 2] = fb + 3;
 HEAP32[gb + 31056 >> 2] = fb + 4;
 HEAP32[gb + 31060 >> 2] = fb + 5;
 HEAP32[gb + 31064 >> 2] = fb + 1;
 HEAP32[gb + 31068 >> 2] = fb + 2;
 HEAP32[gb + 31072 >> 2] = fb + 50;
 HEAP32[gb + 31076 >> 2] = fb + 5;
 HEAP32[gb + 31080 >> 2] = fb + 6;
 HEAP32[gb + 31084 >> 2] = fb + 3;
 HEAP32[gb + 31088 >> 2] = fb + 6;
 HEAP32[gb + 31092 >> 2] = fb + 7;
 HEAP32[gb + 31096 >> 2] = fb + 7;
 HEAP32[gb + 31100 >> 2] = fb + 8;
 HEAP32[gb + 31104 >> 2] = fb + 51;
 HEAP32[gb + 31108 >> 2] = fb + 10;
 HEAP32[gb + 31112 >> 2] = fb + 11;
 HEAP32[gb + 31116 >> 2] = fb + 8;
 HEAP32[gb + 31120 >> 2] = fb + 12;
 HEAP32[gb + 31124 >> 2] = fb + 13;
 runPostSets23();
}

function runPostSets26() {
 var i1 = 0;
 HEAP32[gb + 32292 >> 2] = fb + 6;
 HEAP32[gb + 32296 >> 2] = fb + 2;
 HEAP32[gb + 32300 >> 2] = fb + 3;
 HEAP32[gb + 32304 >> 2] = fb + 4;
 HEAP32[gb + 32308 >> 2] = fb + 5;
 HEAP32[gb + 32312 >> 2] = fb + 1;
 HEAP32[gb + 32316 >> 2] = fb + 1;
 HEAP32[gb + 32320 >> 2] = fb + 7;
 HEAP32[gb + 32324 >> 2] = fb + 5;
 HEAP32[gb + 32328 >> 2] = fb + 6;
 HEAP32[gb + 32332 >> 2] = fb + 3;
 HEAP32[gb + 32336 >> 2] = fb + 6;
 HEAP32[gb + 32340 >> 2] = fb + 7;
 HEAP32[gb + 32344 >> 2] = fb + 7;
 HEAP32[gb + 32348 >> 2] = fb + 8;
 HEAP32[gb + 32352 >> 2] = fb + 9;
 HEAP32[gb + 32356 >> 2] = fb + 10;
 HEAP32[gb + 32360 >> 2] = fb + 11;
 HEAP32[gb + 32364 >> 2] = fb + 8;
 HEAP32[gb + 32368 >> 2] = fb + 12;
 HEAP32[gb + 32372 >> 2] = fb + 13;
 HEAP32[gb + 32376 >> 2] = fb + 14;
 HEAP32[gb + 32380 >> 2] = fb + 15;
 HEAP32[gb + 32384 >> 2] = fb + 16;
 HEAP32[gb + 32388 >> 2] = fb + 8;
 HEAP32[gb + 32392 >> 2] = fb + 4;
 HEAP32[gb + 32396 >> 2] = fb + 1;
 HEAP32[gb + 32400 >> 2] = fb + 5;
 HEAP32[gb + 32404 >> 2] = fb + 32;
 HEAP32[gb + 32408 >> 2] = fb + 9;
 HEAP32[gb + 32412 >> 2] = fb + 18;
 HEAP32[gb + 32416 >> 2] = fb + 6;
 HEAP32[gb + 32420 >> 2] = fb + 7;
 HEAP32[gb + 32424 >> 2] = fb + 8;
 HEAP32[gb + 32428 >> 2] = fb + 4;
 HEAP32[gb + 32432 >> 2] = fb + 19;
 HEAP32[gb + 32436 >> 2] = fb + 9;
 HEAP32[gb + 32440 >> 2] = fb + 10;
 HEAP32[gb + 32444 >> 2] = fb + 75;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 472 >> 2] = (HEAP32[gb + 472 >> 2] | 0) + i1;
 HEAP32[gb + 476 >> 2] = (HEAP32[gb + 476 >> 2] | 0) + (gb + 39267 | 0);
 HEAP32[gb + 480 >> 2] = (HEAP32[gb + 480 >> 2] | 0) + (gb + 248 | 0);
 HEAP32[gb + 32452 >> 2] = (HEAP32[gb + 32452 >> 2] | 0) + (gb + 488 | 0);
 HEAP32[gb + 32456 >> 2] = fb + 137;
 HEAP32[gb + 32460 >> 2] = fb + 138;
 HEAP32[gb + 32464 >> 2] = fb + 1;
 HEAP32[gb + 32468 >> 2] = fb + 1;
 HEAP32[gb + 32472 >> 2] = fb + 2;
 HEAP32[gb + 32476 >> 2] = fb + 1;
 HEAP32[gb + 32480 >> 2] = fb + 3;
 HEAP32[gb + 32484 >> 2] = fb + 4;
 HEAP32[gb + 32488 >> 2] = fb + 2;
 HEAP32[gb + 32492 >> 2] = fb + 2;
 HEAP32[gb + 32496 >> 2] = fb + 1;
 HEAP32[gb + 32500 >> 2] = fb + 1;
 HEAP32[gb + 32504 >> 2] = fb + 1;
 HEAP32[gb + 32508 >> 2] = fb + 1;
 HEAP32[gb + 32512 >> 2] = fb + 3;
 HEAP32[gb + 32516 >> 2] = fb + 1;
 HEAP32[gb + 32520 >> 2] = fb + 3;
 HEAP32[gb + 32524 >> 2] = fb + 4;
 HEAP32[gb + 32528 >> 2] = fb + 5;
 HEAP32[gb + 32532 >> 2] = fb + 6;
 HEAP32[gb + 32536 >> 2] = fb + 2;
 HEAP32[gb + 32540 >> 2] = fb + 3;
 HEAP32[gb + 32544 >> 2] = fb + 4;
 HEAP32[gb + 32548 >> 2] = fb + 5;
 HEAP32[gb + 32552 >> 2] = fb + 1;
 HEAP32[gb + 32556 >> 2] = fb + 1;
 HEAP32[gb + 32560 >> 2] = fb + 7;
 HEAP32[gb + 32564 >> 2] = fb + 5;
 HEAP32[gb + 32568 >> 2] = fb + 6;
 HEAP32[gb + 32572 >> 2] = fb + 3;
 HEAP32[gb + 32576 >> 2] = fb + 6;
 HEAP32[gb + 32580 >> 2] = fb + 7;
 HEAP32[gb + 32584 >> 2] = fb + 7;
 HEAP32[gb + 32588 >> 2] = fb + 8;
 HEAP32[gb + 32592 >> 2] = fb + 9;
 HEAP32[gb + 32596 >> 2] = fb + 10;
 HEAP32[gb + 32600 >> 2] = fb + 11;
 HEAP32[gb + 32604 >> 2] = fb + 8;
 HEAP32[gb + 32608 >> 2] = fb + 12;
 HEAP32[gb + 32612 >> 2] = fb + 13;
 HEAP32[gb + 32616 >> 2] = fb + 14;
 HEAP32[gb + 32620 >> 2] = fb + 15;
 HEAP32[gb + 32624 >> 2] = fb + 16;
 HEAP32[gb + 32628 >> 2] = fb + 8;
 HEAP32[gb + 32632 >> 2] = fb + 4;
 HEAP32[gb + 32636 >> 2] = fb + 1;
 HEAP32[gb + 32640 >> 2] = fb + 5;
 HEAP32[gb + 32644 >> 2] = fb + 17;
 HEAP32[gb + 32648 >> 2] = fb + 9;
 HEAP32[gb + 32652 >> 2] = fb + 18;
 HEAP32[gb + 32656 >> 2] = fb + 6;
 HEAP32[gb + 32660 >> 2] = fb + 7;
 HEAP32[gb + 32664 >> 2] = fb + 8;
 HEAP32[gb + 32668 >> 2] = fb + 4;
 HEAP32[gb + 32672 >> 2] = fb + 19;
 HEAP32[gb + 32676 >> 2] = fb + 9;
 runPostSets27();
}

function runPostSets19() {
 var i1 = 0;
 HEAP32[gb + 29588 >> 2] = fb + 6;
 HEAP32[gb + 29592 >> 2] = fb + 2;
 HEAP32[gb + 29596 >> 2] = fb + 3;
 HEAP32[gb + 29600 >> 2] = fb + 4;
 HEAP32[gb + 29604 >> 2] = fb + 5;
 HEAP32[gb + 29608 >> 2] = fb + 1;
 HEAP32[gb + 29612 >> 2] = fb + 1;
 HEAP32[gb + 29616 >> 2] = fb + 7;
 HEAP32[gb + 29620 >> 2] = fb + 5;
 HEAP32[gb + 29624 >> 2] = fb + 6;
 HEAP32[gb + 29628 >> 2] = fb + 3;
 HEAP32[gb + 29632 >> 2] = fb + 6;
 HEAP32[gb + 29636 >> 2] = fb + 7;
 HEAP32[gb + 29640 >> 2] = fb + 7;
 HEAP32[gb + 29644 >> 2] = fb + 8;
 HEAP32[gb + 29648 >> 2] = fb + 9;
 HEAP32[gb + 29652 >> 2] = fb + 10;
 HEAP32[gb + 29656 >> 2] = fb + 11;
 HEAP32[gb + 29660 >> 2] = fb + 8;
 HEAP32[gb + 29664 >> 2] = fb + 12;
 HEAP32[gb + 29668 >> 2] = fb + 13;
 HEAP32[gb + 29672 >> 2] = fb + 14;
 HEAP32[gb + 29676 >> 2] = fb + 15;
 HEAP32[gb + 29680 >> 2] = fb + 16;
 HEAP32[gb + 29684 >> 2] = fb + 8;
 HEAP32[gb + 29688 >> 2] = fb + 4;
 HEAP32[gb + 29692 >> 2] = fb + 1;
 HEAP32[gb + 29696 >> 2] = fb + 5;
 HEAP32[gb + 29700 >> 2] = fb + 32;
 HEAP32[gb + 29704 >> 2] = fb + 9;
 HEAP32[gb + 29708 >> 2] = fb + 18;
 HEAP32[gb + 29712 >> 2] = fb + 6;
 HEAP32[gb + 29716 >> 2] = fb + 7;
 HEAP32[gb + 29720 >> 2] = fb + 8;
 HEAP32[gb + 29724 >> 2] = fb + 4;
 HEAP32[gb + 29728 >> 2] = fb + 19;
 HEAP32[gb + 29732 >> 2] = fb + 9;
 HEAP32[gb + 29736 >> 2] = fb + 10;
 HEAP32[gb + 29740 >> 2] = fb + 63;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 344 >> 2] = (HEAP32[gb + 344 >> 2] | 0) + i1;
 HEAP32[gb + 348 >> 2] = (HEAP32[gb + 348 >> 2] | 0) + (gb + 38543 | 0);
 HEAP32[gb + 352 >> 2] = (HEAP32[gb + 352 >> 2] | 0) + (gb + 248 | 0);
 HEAP32[gb + 29748 >> 2] = (HEAP32[gb + 29748 >> 2] | 0) + (gb + 360 | 0);
 HEAP32[gb + 29752 >> 2] = fb + 105;
 HEAP32[gb + 29756 >> 2] = fb + 106;
 HEAP32[gb + 29760 >> 2] = fb + 1;
 HEAP32[gb + 29764 >> 2] = fb + 1;
 HEAP32[gb + 29768 >> 2] = fb + 2;
 HEAP32[gb + 29772 >> 2] = fb + 1;
 HEAP32[gb + 29776 >> 2] = fb + 3;
 HEAP32[gb + 29780 >> 2] = fb + 4;
 HEAP32[gb + 29784 >> 2] = fb + 2;
 HEAP32[gb + 29788 >> 2] = fb + 2;
 HEAP32[gb + 29792 >> 2] = fb + 1;
 HEAP32[gb + 29796 >> 2] = fb + 1;
 HEAP32[gb + 29800 >> 2] = fb + 1;
 HEAP32[gb + 29804 >> 2] = fb + 1;
 HEAP32[gb + 29808 >> 2] = fb + 3;
 HEAP32[gb + 29812 >> 2] = fb + 1;
 HEAP32[gb + 29816 >> 2] = fb + 3;
 HEAP32[gb + 29820 >> 2] = fb + 4;
 HEAP32[gb + 29824 >> 2] = fb + 5;
 HEAP32[gb + 29828 >> 2] = fb + 6;
 HEAP32[gb + 29832 >> 2] = fb + 2;
 HEAP32[gb + 29836 >> 2] = fb + 3;
 HEAP32[gb + 29840 >> 2] = fb + 4;
 HEAP32[gb + 29844 >> 2] = fb + 5;
 HEAP32[gb + 29848 >> 2] = fb + 1;
 HEAP32[gb + 29852 >> 2] = fb + 1;
 HEAP32[gb + 29856 >> 2] = fb + 7;
 HEAP32[gb + 29860 >> 2] = fb + 5;
 HEAP32[gb + 29864 >> 2] = fb + 6;
 HEAP32[gb + 29868 >> 2] = fb + 3;
 HEAP32[gb + 29872 >> 2] = fb + 6;
 HEAP32[gb + 29876 >> 2] = fb + 7;
 HEAP32[gb + 29880 >> 2] = fb + 7;
 HEAP32[gb + 29884 >> 2] = fb + 8;
 HEAP32[gb + 29888 >> 2] = fb + 9;
 HEAP32[gb + 29892 >> 2] = fb + 10;
 HEAP32[gb + 29896 >> 2] = fb + 11;
 HEAP32[gb + 29900 >> 2] = fb + 8;
 HEAP32[gb + 29904 >> 2] = fb + 12;
 HEAP32[gb + 29908 >> 2] = fb + 13;
 HEAP32[gb + 29912 >> 2] = fb + 14;
 HEAP32[gb + 29916 >> 2] = fb + 15;
 HEAP32[gb + 29920 >> 2] = fb + 16;
 HEAP32[gb + 29924 >> 2] = fb + 8;
 HEAP32[gb + 29928 >> 2] = fb + 4;
 HEAP32[gb + 29932 >> 2] = fb + 1;
 HEAP32[gb + 29936 >> 2] = fb + 5;
 HEAP32[gb + 29940 >> 2] = fb + 17;
 HEAP32[gb + 29944 >> 2] = fb + 9;
 HEAP32[gb + 29948 >> 2] = fb + 18;
 HEAP32[gb + 29952 >> 2] = fb + 6;
 HEAP32[gb + 29956 >> 2] = fb + 7;
 HEAP32[gb + 29960 >> 2] = fb + 8;
 HEAP32[gb + 29964 >> 2] = fb + 4;
 HEAP32[gb + 29968 >> 2] = fb + 19;
 HEAP32[gb + 29972 >> 2] = fb + 9;
 runPostSets20();
}

function runPostSets8() {
 var i1 = 0;
 HEAP32[gb + 20540 >> 2] = fb + 1;
 HEAP32[gb + 20544 >> 2] = fb + 1;
 HEAP32[gb + 20548 >> 2] = fb + 3;
 HEAP32[gb + 20552 >> 2] = fb + 1;
 HEAP32[gb + 20556 >> 2] = fb + 3;
 HEAP32[gb + 20560 >> 2] = fb + 4;
 HEAP32[gb + 20564 >> 2] = fb + 5;
 HEAP32[gb + 20568 >> 2] = fb + 6;
 HEAP32[gb + 20572 >> 2] = fb + 2;
 HEAP32[gb + 20576 >> 2] = fb + 3;
 HEAP32[gb + 20580 >> 2] = fb + 4;
 HEAP32[gb + 20584 >> 2] = fb + 5;
 HEAP32[gb + 20588 >> 2] = fb + 1;
 HEAP32[gb + 20592 >> 2] = fb + 1;
 HEAP32[gb + 20596 >> 2] = fb + 7;
 HEAP32[gb + 20600 >> 2] = fb + 5;
 HEAP32[gb + 20604 >> 2] = fb + 6;
 HEAP32[gb + 20608 >> 2] = fb + 3;
 HEAP32[gb + 20612 >> 2] = fb + 6;
 HEAP32[gb + 20616 >> 2] = fb + 7;
 HEAP32[gb + 20620 >> 2] = fb + 7;
 HEAP32[gb + 20624 >> 2] = fb + 8;
 HEAP32[gb + 20628 >> 2] = fb + 9;
 HEAP32[gb + 20632 >> 2] = fb + 10;
 HEAP32[gb + 20636 >> 2] = fb + 11;
 HEAP32[gb + 20640 >> 2] = fb + 8;
 HEAP32[gb + 20644 >> 2] = fb + 12;
 HEAP32[gb + 20648 >> 2] = fb + 13;
 HEAP32[gb + 20652 >> 2] = fb + 14;
 HEAP32[gb + 20656 >> 2] = fb + 15;
 HEAP32[gb + 20660 >> 2] = fb + 16;
 HEAP32[gb + 20664 >> 2] = fb + 8;
 HEAP32[gb + 20668 >> 2] = fb + 4;
 HEAP32[gb + 20672 >> 2] = fb + 1;
 HEAP32[gb + 20676 >> 2] = fb + 5;
 HEAP32[gb + 20680 >> 2] = fb + 46;
 HEAP32[gb + 20684 >> 2] = fb + 9;
 HEAP32[gb + 20688 >> 2] = fb + 18;
 HEAP32[gb + 20692 >> 2] = fb + 6;
 HEAP32[gb + 20696 >> 2] = fb + 7;
 HEAP32[gb + 20700 >> 2] = fb + 8;
 HEAP32[gb + 20704 >> 2] = fb + 4;
 HEAP32[gb + 20708 >> 2] = fb + 19;
 HEAP32[gb + 20712 >> 2] = fb + 9;
 HEAP32[gb + 20716 >> 2] = fb + 10;
 HEAP32[gb + 20720 >> 2] = fb + 9;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 152 >> 2] = (HEAP32[gb + 152 >> 2] | 0) + i1;
 HEAP32[gb + 156 >> 2] = (HEAP32[gb + 156 >> 2] | 0) + (gb + 37890 | 0);
 HEAP32[gb + 160 >> 2] = (HEAP32[gb + 160 >> 2] | 0) + (gb + 136 | 0);
 HEAP32[gb + 20728 >> 2] = (HEAP32[gb + 20728 >> 2] | 0) + (gb + 168 | 0);
 HEAP32[gb + 20732 >> 2] = fb + 47;
 HEAP32[gb + 20736 >> 2] = fb + 48;
 HEAP32[gb + 20740 >> 2] = fb + 17;
 HEAP32[gb + 20744 >> 2] = fb + 33;
 HEAP32[gb + 20748 >> 2] = fb + 34;
 HEAP32[gb + 20752 >> 2] = fb + 1;
 HEAP32[gb + 20756 >> 2] = fb + 3;
 HEAP32[gb + 20760 >> 2] = fb + 23;
 HEAP32[gb + 20764 >> 2] = fb + 2;
 HEAP32[gb + 20768 >> 2] = fb + 2;
 HEAP32[gb + 20772 >> 2] = fb + 1;
 HEAP32[gb + 20776 >> 2] = fb + 1;
 HEAP32[gb + 20780 >> 2] = fb + 1;
 HEAP32[gb + 20784 >> 2] = fb + 1;
 HEAP32[gb + 20788 >> 2] = fb + 3;
 HEAP32[gb + 20792 >> 2] = fb + 1;
 HEAP32[gb + 20796 >> 2] = fb + 3;
 HEAP32[gb + 20800 >> 2] = fb + 4;
 HEAP32[gb + 20804 >> 2] = fb + 5;
 HEAP32[gb + 20808 >> 2] = fb + 47;
 HEAP32[gb + 20812 >> 2] = fb + 2;
 HEAP32[gb + 20816 >> 2] = fb + 3;
 HEAP32[gb + 20820 >> 2] = fb + 4;
 HEAP32[gb + 20824 >> 2] = fb + 5;
 HEAP32[gb + 20828 >> 2] = fb + 1;
 HEAP32[gb + 20832 >> 2] = fb + 2;
 HEAP32[gb + 20836 >> 2] = fb + 7;
 HEAP32[gb + 20840 >> 2] = fb + 5;
 HEAP32[gb + 20844 >> 2] = fb + 6;
 HEAP32[gb + 20848 >> 2] = fb + 3;
 HEAP32[gb + 20852 >> 2] = fb + 6;
 HEAP32[gb + 20856 >> 2] = fb + 7;
 HEAP32[gb + 20860 >> 2] = fb + 7;
 HEAP32[gb + 20864 >> 2] = fb + 8;
 HEAP32[gb + 20868 >> 2] = fb + 9;
 HEAP32[gb + 20872 >> 2] = fb + 10;
 HEAP32[gb + 20876 >> 2] = fb + 11;
 HEAP32[gb + 20880 >> 2] = fb + 8;
 HEAP32[gb + 20884 >> 2] = fb + 12;
 HEAP32[gb + 20888 >> 2] = fb + 13;
 HEAP32[gb + 20892 >> 2] = fb + 14;
 HEAP32[gb + 20896 >> 2] = fb + 15;
 HEAP32[gb + 20900 >> 2] = fb + 16;
 HEAP32[gb + 20904 >> 2] = fb + 8;
 HEAP32[gb + 20908 >> 2] = fb + 4;
 HEAP32[gb + 20912 >> 2] = fb + 1;
 HEAP32[gb + 20916 >> 2] = fb + 5;
 HEAP32[gb + 20920 >> 2] = fb + 46;
 HEAP32[gb + 20924 >> 2] = fb + 9;
 runPostSets9();
}

function runPostSets1() {
 var i1 = 0;
 HEAP32[gb + 17824 >> 2] = fb + 18;
 HEAP32[gb + 17828 >> 2] = fb + 1;
 HEAP32[gb + 17832 >> 2] = fb + 3;
 HEAP32[gb + 17836 >> 2] = fb + 23;
 HEAP32[gb + 17840 >> 2] = fb + 2;
 HEAP32[gb + 17844 >> 2] = fb + 2;
 HEAP32[gb + 17848 >> 2] = fb + 1;
 HEAP32[gb + 17852 >> 2] = fb + 1;
 HEAP32[gb + 17856 >> 2] = fb + 1;
 HEAP32[gb + 17860 >> 2] = fb + 1;
 HEAP32[gb + 17864 >> 2] = fb + 3;
 HEAP32[gb + 17868 >> 2] = fb + 1;
 HEAP32[gb + 17872 >> 2] = fb + 3;
 HEAP32[gb + 17876 >> 2] = fb + 4;
 HEAP32[gb + 17880 >> 2] = fb + 5;
 HEAP32[gb + 17884 >> 2] = fb + 6;
 HEAP32[gb + 17888 >> 2] = fb + 2;
 HEAP32[gb + 17892 >> 2] = fb + 3;
 HEAP32[gb + 17896 >> 2] = fb + 4;
 HEAP32[gb + 17900 >> 2] = fb + 5;
 HEAP32[gb + 17904 >> 2] = fb + 1;
 HEAP32[gb + 17908 >> 2] = fb + 1;
 HEAP32[gb + 17912 >> 2] = fb + 7;
 HEAP32[gb + 17916 >> 2] = fb + 5;
 HEAP32[gb + 17920 >> 2] = fb + 6;
 HEAP32[gb + 17924 >> 2] = fb + 3;
 HEAP32[gb + 17928 >> 2] = fb + 6;
 HEAP32[gb + 17932 >> 2] = fb + 7;
 HEAP32[gb + 17936 >> 2] = fb + 7;
 HEAP32[gb + 17940 >> 2] = fb + 8;
 HEAP32[gb + 17944 >> 2] = fb + 9;
 HEAP32[gb + 17948 >> 2] = fb + 10;
 HEAP32[gb + 17952 >> 2] = fb + 11;
 HEAP32[gb + 17956 >> 2] = fb + 8;
 HEAP32[gb + 17960 >> 2] = fb + 12;
 HEAP32[gb + 17964 >> 2] = fb + 13;
 HEAP32[gb + 17968 >> 2] = fb + 14;
 HEAP32[gb + 17972 >> 2] = fb + 15;
 HEAP32[gb + 17976 >> 2] = fb + 16;
 HEAP32[gb + 17980 >> 2] = fb + 8;
 HEAP32[gb + 17984 >> 2] = fb + 4;
 HEAP32[gb + 17988 >> 2] = fb + 1;
 HEAP32[gb + 17992 >> 2] = fb + 5;
 HEAP32[gb + 17996 >> 2] = fb + 32;
 HEAP32[gb + 18e3 >> 2] = fb + 9;
 HEAP32[gb + 18004 >> 2] = fb + 18;
 HEAP32[gb + 18008 >> 2] = fb + 6;
 HEAP32[gb + 18012 >> 2] = fb + 7;
 HEAP32[gb + 18016 >> 2] = fb + 8;
 HEAP32[gb + 18020 >> 2] = fb + 4;
 HEAP32[gb + 18024 >> 2] = fb + 19;
 HEAP32[gb + 18028 >> 2] = fb + 9;
 HEAP32[gb + 18032 >> 2] = fb + 10;
 HEAP32[gb + 18036 >> 2] = fb + 19;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 16 >> 2] = (HEAP32[gb + 16 >> 2] | 0) + i1;
 HEAP32[gb + 20 >> 2] = (HEAP32[gb + 20 >> 2] | 0) + (gb + 36635 | 0);
 HEAP32[gb + 24 >> 2] = (HEAP32[gb + 24 >> 2] | 0) + (gb + 248 | 0);
 HEAP32[gb + 18044 >> 2] = (HEAP32[gb + 18044 >> 2] | 0) + (gb + 32 | 0);
 HEAP32[gb + 18048 >> 2] = fb + 24;
 HEAP32[gb + 18052 >> 2] = fb + 25;
 HEAP32[gb + 18056 >> 2] = fb + 1;
 HEAP32[gb + 18060 >> 2] = fb + 1;
 HEAP32[gb + 18064 >> 2] = fb + 2;
 HEAP32[gb + 18068 >> 2] = fb + 1;
 HEAP32[gb + 18072 >> 2] = fb + 3;
 HEAP32[gb + 18076 >> 2] = fb + 4;
 HEAP32[gb + 18080 >> 2] = fb + 2;
 HEAP32[gb + 18084 >> 2] = fb + 2;
 HEAP32[gb + 18088 >> 2] = fb + 1;
 HEAP32[gb + 18092 >> 2] = fb + 1;
 HEAP32[gb + 18096 >> 2] = fb + 1;
 HEAP32[gb + 18100 >> 2] = fb + 1;
 HEAP32[gb + 18104 >> 2] = fb + 3;
 HEAP32[gb + 18108 >> 2] = fb + 1;
 HEAP32[gb + 18112 >> 2] = fb + 3;
 HEAP32[gb + 18116 >> 2] = fb + 4;
 HEAP32[gb + 18120 >> 2] = fb + 5;
 HEAP32[gb + 18124 >> 2] = fb + 6;
 HEAP32[gb + 18128 >> 2] = fb + 2;
 HEAP32[gb + 18132 >> 2] = fb + 3;
 HEAP32[gb + 18136 >> 2] = fb + 4;
 HEAP32[gb + 18140 >> 2] = fb + 5;
 HEAP32[gb + 18144 >> 2] = fb + 1;
 HEAP32[gb + 18148 >> 2] = fb + 1;
 HEAP32[gb + 18152 >> 2] = fb + 7;
 HEAP32[gb + 18156 >> 2] = fb + 5;
 HEAP32[gb + 18160 >> 2] = fb + 6;
 HEAP32[gb + 18164 >> 2] = fb + 3;
 HEAP32[gb + 18168 >> 2] = fb + 6;
 HEAP32[gb + 18172 >> 2] = fb + 7;
 HEAP32[gb + 18176 >> 2] = fb + 7;
 HEAP32[gb + 18180 >> 2] = fb + 8;
 HEAP32[gb + 18184 >> 2] = fb + 9;
 HEAP32[gb + 18188 >> 2] = fb + 10;
 HEAP32[gb + 18192 >> 2] = fb + 11;
 HEAP32[gb + 18196 >> 2] = fb + 8;
 HEAP32[gb + 18200 >> 2] = fb + 12;
 HEAP32[gb + 18204 >> 2] = fb + 13;
 HEAP32[gb + 18208 >> 2] = fb + 14;
 runPostSets2();
}

function __ZN6CGauss15SecondaryAttackEv(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, d5 = 0.0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = HEAP32[i3 + 128 >> 2] | 0;
 i2 = HEAP32[i3 + 92 >> 2] | 0;
 do if ((HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 448 >> 2] | 0) == 3) {
  if (!i2) mftCall_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 316 >> 2] | 0, i3 | 0) | 0; else {
   mftCall_iii(HEAP32[gb + 56972 + 360 >> 2] | 0, 0, 63) | 0;
   mftCall_viiii(HEAP32[(HEAP32[i3 >> 2] | 0) + 324 >> 2] | 0, i3 | 0, 0, 1, 0);
   HEAP32[i3 + 92 >> 2] = 0;
  }
  HEAPF32[i3 + 156 >> 2] = .5;
  HEAPF32[i3 + 160 >> 2] = .5;
 } else {
  if (!i2) {
   i2 = i1 + 1236 + (HEAP32[i3 + 168 >> 2] << 2) | 0;
   if ((HEAP32[i2 >> 2] | 0) < 1) {
    HEAPF32[i1 + 612 >> 2] = .5;
    break;
   } else {
    HEAP32[i3 + 212 >> 2] = 0;
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + -1;
    HEAPF32[i1 + 1592 >> 2] = 0.0;
    HEAP32[i1 + 692 >> 2] = 256;
    mftCall_viiii(HEAP32[(HEAP32[i3 >> 2] | 0) + 324 >> 2] | 0, i3 | 0, 3, 1, 0);
    HEAP32[i3 + 92 >> 2] = 1;
    HEAPF32[i3 + 164 >> 2] = .5;
    HEAP32[(HEAP32[i3 + 128 >> 2] | 0) + 1580 >> 2] = HEAP32[HEAP32[gb + 57604 >> 2] >> 2];
    i1 = __Z14bIsMultiplayerv() | 0;
    i2 = HEAP32[i3 + 128 >> 2] | 0;
    HEAPF32[i2 + 1584 >> 2] = i1 ? 1.5 : 4.0;
    mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 1, HEAP32[(HEAP32[i2 + 4 >> 2] | 0) + 520 >> 2] | 0, HEAP16[i3 + 218 >> 1] | 0, 0.0, gb + 56956 | 0, gb + 56956 | 0, 0.0, 0.0, 110, 0, 0, 0);
    HEAP32[i3 + 208 >> 2] = 128;
    break;
   }
  }
  if ((i2 | 0) == 1) {
   if (!(+HEAPF32[i3 + 164 >> 2] < 0.0)) break;
   mftCall_viiii(HEAP32[(HEAP32[i3 >> 2] | 0) + 324 >> 2] | 0, i3 | 0, 4, 1, 0);
   HEAP32[i3 + 92 >> 2] = 2;
   break;
  }
  d5 = +HEAPF32[i1 + 1592 >> 2];
  do if (d5 <= 0.0 & d5 != 1.0e3) {
   i2 = __Z14bIsMultiplayerv() | 0;
   i1 = HEAP32[i3 + 128 >> 2] | 0;
   i6 = i1 + 1236 + (HEAP32[i3 + 168 >> 2] << 2) | 0;
   HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
   if (i2) {
    HEAPF32[i1 + 1592 >> 2] = .10000000149011612;
    i2 = i3 + 168 | 0;
    break;
   } else {
    HEAPF32[i1 + 1592 >> 2] = .30000001192092896;
    i2 = i3 + 168 | 0;
    break;
   }
  } else i2 = i3 + 168 | 0; while (0);
  if ((HEAP32[i1 + 1236 + (HEAP32[i2 >> 2] << 2) >> 2] | 0) < 1) {
   __ZN6CGauss9StartFireEv(i3);
   HEAP32[i3 + 92 >> 2] = 0;
   HEAPF32[i3 + 164 >> 2] = 1.0;
   HEAPF32[(HEAP32[i3 + 128 >> 2] | 0) + 612 >> 2] = 1.0;
   break;
  }
  if (+HEAPF32[i1 + 1584 >> 2] <= 0.0) HEAPF32[i1 + 1592 >> 2] = 1.0e3;
  d5 = +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2] - +HEAPF32[i1 + 1580 >> 2];
  i2 = __Z14bIsMultiplayerv() | 0;
  i2 = ~~(d5 * (i2 ? 100.0 : 37.5) + 100.0);
  i1 = HEAP32[i3 + 208 >> 2] | 0;
  if (!i1) {
   i1 = HEAP32[gb + 56972 + 244 >> 2] | 0;
   HEAP32[i4 >> 2] = 0;
   mftCall_viii(i1 | 0, 1, gb + 37644 | 0, i4 | 0);
   i1 = HEAP32[i3 + 208 >> 2] | 0;
  }
  mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 1, HEAP32[(HEAP32[(HEAP32[i3 + 128 >> 2] | 0) + 4 >> 2] | 0) + 520 >> 2] | 0, HEAP16[i3 + 218 >> 1] | 0, 0.0, gb + 56956 | 0, gb + 56956 | 0, 0.0, 0.0, ((i2 | 0) > 250 ? 250 : i2) | 0, 0, (i1 | 0) == 128 | 0, 0);
  HEAP32[i3 + 208 >> 2] = 128;
  i6 = HEAP32[i3 + 128 >> 2] | 0;
  HEAP32[i6 + 692 >> 2] = 256;
  if (+HEAPF32[i6 + 1580 >> 2] < +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2] + -10.0) {
   mftCall_iii(HEAP32[gb + 56972 + 360 >> 2] | 0, 0, 63) | 0;
   mftCall_iii(HEAP32[gb + 56972 + 360 >> 2] | 0, 0, 63) | 0;
   HEAP32[i3 + 92 >> 2] = 0;
   HEAPF32[i3 + 164 >> 2] = 1.0;
   HEAPF32[(HEAP32[i3 + 128 >> 2] | 0) + 612 >> 2] = 1.0;
   mftCall_viiii(HEAP32[(HEAP32[i3 >> 2] | 0) + 324 >> 2] | 0, i3 | 0, 0, 1, 0);
  }
 } while (0);
 STACKTOP = i4;
 return;
}

function runPostSets11() {
 HEAP32[gb + 21688 >> 2] = fb + 7;
 HEAP32[gb + 21692 >> 2] = fb + 8;
 HEAP32[gb + 21696 >> 2] = fb + 6;
 HEAP32[gb + 21700 >> 2] = fb + 19;
 HEAP32[gb + 21704 >> 2] = fb + 9;
 HEAP32[gb + 21708 >> 2] = fb + 10;
 HEAP32[gb + 21712 >> 2] = fb + 19;
 HEAP32[gb + 21716 >> 2] = fb + 20;
 HEAP32[gb + 21720 >> 2] = fb + 50;
 HEAP32[gb + 21724 >> 2] = fb + 53;
 HEAP32[gb + 21728 >> 2] = fb + 1;
 HEAP32[gb + 21732 >> 2] = fb + 51;
 HEAP32[gb + 21736 >> 2] = fb + 37;
 HEAP32[gb + 21740 >> 2] = fb + 52;
 HEAP32[gb + 21744 >> 2] = fb + 53;
 HEAP32[gb + 21748 >> 2] = fb + 54;
 HEAP32[gb + 21752 >> 2] = fb + 55;
 HEAP32[gb + 21756 >> 2] = fb + 54;
 HEAP32[gb + 21760 >> 2] = fb + 38;
 HEAP32[gb + 21764 >> 2] = fb + 39;
 HEAP32[gb + 21768 >> 2] = fb + 1;
 HEAP32[gb + 21772 >> 2] = fb + 1;
 HEAP32[gb + 21776 >> 2] = fb + 1;
 HEAP32[gb + 21780 >> 2] = fb + 1;
 HEAP32[gb + 21784 >> 2] = fb + 55;
 HEAP32[gb + 21788 >> 2] = fb + 56;
 HEAP32[gb + 21792 >> 2] = fb + 1;
 HEAP32[gb + 21796 >> 2] = fb + 2;
 HEAP32[gb + 21800 >> 2] = fb + 3;
 HEAP32[gb + 21804 >> 2] = fb + 4;
 HEAP32[gb + 21808 >> 2] = fb + 40;
 HEAP32[gb + 21812 >> 2] = fb + 21;
 HEAP32[gb + 21816 >> 2] = fb + 22;
 HEAP32[gb + 21820 >> 2] = fb + 41;
 HEAP32[gb + 21824 >> 2] = fb + 56;
 HEAP32[gb + 21828 >> 2] = fb + 57;
 HEAP32[gb + 21832 >> 2] = fb + 1;
 HEAP32[gb + 21836 >> 2] = fb + 42;
 HEAP32[gb + 21840 >> 2] = fb + 1;
 HEAP32[gb + 21844 >> 2] = fb + 1;
 HEAP32[gb + 21848 >> 2] = fb + 58;
 HEAP32[gb + 21852 >> 2] = fb + 57;
 HEAP32[gb + 21856 >> 2] = fb + 23;
 HEAP32[gb + 21860 >> 2] = fb + 59;
 HEAP32[gb + 21864 >> 2] = fb + 43;
 HEAP32[gb + 21868 >> 2] = fb + 1;
 HEAP32[gb + 21872 >> 2] = fb + 60;
 HEAP32[gb + 21876 >> 2] = fb + 1;
 HEAP32[gb + 21880 >> 2] = fb + 2;
 HEAP32[gb + 21884 >> 2] = fb + 44;
 HEAP32[gb + 21888 >> 2] = fb + 3;
 HEAP32[gb + 21892 >> 2] = fb + 58;
 HEAP32[gb + 21896 >> 2] = fb + 61;
 HEAP32[gb + 21900 >> 2] = fb + 59;
 HEAP32[gb + 21904 >> 2] = fb + 45;
 HEAP32[gb + 21908 >> 2] = fb + 60;
 HEAP32[gb + 21912 >> 2] = fb + 61;
 HEAP32[gb + 21916 >> 2] = fb + 62;
 HEAP32[gb + 21920 >> 2] = fb + 63;
 HEAP32[gb + 21924 >> 2] = fb + 4;
 HEAP32[gb + 21928 >> 2] = fb + 24;
 HEAP32[gb + 21932 >> 2] = fb + 62;
 HEAP32[gb + 21936 >> 2] = fb + 63;
 HEAP32[gb + 21940 >> 2] = fb + 64;
 HEAP32[gb + 21944 >> 2] = fb + 64;
 HEAP32[gb + 21948 >> 2] = fb + 65;
 HEAP32[gb + 21952 >> 2] = fb + 66;
 HEAP32[gb + 21956 >> 2] = fb + 65;
 HEAP32[gb + 21960 >> 2] = fb + 25;
 HEAP32[gb + 21964 >> 2] = fb + 66;
 HEAP32[gb + 21968 >> 2] = fb + 67;
 HEAP32[gb + 21972 >> 2] = fb + 68;
 HEAP32[gb + 21976 >> 2] = fb + 69;
 HEAP32[gb + 21980 >> 2] = fb + 26;
 HEAP32[gb + 21988 >> 2] = (HEAP32[gb + 21988 >> 2] | 0) + (gb + 216 | 0);
 HEAP32[gb + 21992 >> 2] = fb + 47;
 HEAP32[gb + 21996 >> 2] = fb + 48;
 HEAP32[gb + 22e3 >> 2] = fb + 1;
 HEAP32[gb + 22004 >> 2] = fb + 1;
 HEAP32[gb + 22008 >> 2] = fb + 2;
 HEAP32[gb + 22012 >> 2] = fb + 1;
 HEAP32[gb + 22016 >> 2] = fb + 3;
 HEAP32[gb + 22020 >> 2] = fb + 4;
 HEAP32[gb + 22024 >> 2] = fb + 2;
 HEAP32[gb + 22028 >> 2] = fb + 2;
 HEAP32[gb + 22032 >> 2] = fb + 1;
 HEAP32[gb + 22036 >> 2] = fb + 1;
 HEAP32[gb + 22040 >> 2] = fb + 1;
 HEAP32[gb + 22044 >> 2] = fb + 1;
 HEAP32[gb + 22048 >> 2] = fb + 3;
 HEAP32[gb + 22052 >> 2] = fb + 1;
 HEAP32[gb + 22056 >> 2] = fb + 3;
 HEAP32[gb + 22060 >> 2] = fb + 4;
 HEAP32[gb + 22064 >> 2] = fb + 5;
 HEAP32[gb + 22068 >> 2] = fb + 6;
 HEAP32[gb + 22072 >> 2] = fb + 2;
 HEAP32[gb + 22076 >> 2] = fb + 3;
 HEAP32[gb + 22080 >> 2] = fb + 4;
 HEAP32[gb + 22084 >> 2] = fb + 5;
 HEAP32[gb + 22088 >> 2] = fb + 1;
 runPostSets12();
}

function runPostSets13() {
 HEAP32[gb + 22464 >> 2] = fb + 7;
 HEAP32[gb + 22468 >> 2] = fb + 5;
 HEAP32[gb + 22472 >> 2] = fb + 6;
 HEAP32[gb + 22476 >> 2] = fb + 3;
 HEAP32[gb + 22480 >> 2] = fb + 6;
 HEAP32[gb + 22484 >> 2] = fb + 7;
 HEAP32[gb + 22488 >> 2] = fb + 7;
 HEAP32[gb + 22492 >> 2] = fb + 8;
 HEAP32[gb + 22496 >> 2] = fb + 9;
 HEAP32[gb + 22500 >> 2] = fb + 10;
 HEAP32[gb + 22504 >> 2] = fb + 11;
 HEAP32[gb + 22508 >> 2] = fb + 8;
 HEAP32[gb + 22512 >> 2] = fb + 12;
 HEAP32[gb + 22516 >> 2] = fb + 13;
 HEAP32[gb + 22520 >> 2] = fb + 14;
 HEAP32[gb + 22524 >> 2] = fb + 15;
 HEAP32[gb + 22528 >> 2] = fb + 16;
 HEAP32[gb + 22532 >> 2] = fb + 8;
 HEAP32[gb + 22536 >> 2] = fb + 4;
 HEAP32[gb + 22540 >> 2] = fb + 1;
 HEAP32[gb + 22544 >> 2] = fb + 5;
 HEAP32[gb + 22548 >> 2] = fb + 17;
 HEAP32[gb + 22552 >> 2] = fb + 9;
 HEAP32[gb + 22556 >> 2] = fb + 18;
 HEAP32[gb + 22560 >> 2] = fb + 6;
 HEAP32[gb + 22564 >> 2] = fb + 7;
 HEAP32[gb + 22568 >> 2] = fb + 8;
 HEAP32[gb + 22572 >> 2] = fb + 4;
 HEAP32[gb + 22576 >> 2] = fb + 19;
 HEAP32[gb + 22580 >> 2] = fb + 9;
 HEAP32[gb + 22584 >> 2] = fb + 10;
 HEAP32[gb + 22588 >> 2] = fb + 9;
 HEAP32[gb + 22592 >> 2] = fb + 49;
 HEAP32[gb + 22596 >> 2] = fb + 50;
 HEAP32[gb + 22600 >> 2] = fb + 46;
 HEAP32[gb + 22604 >> 2] = fb + 71;
 HEAP32[gb + 22608 >> 2] = fb + 68;
 HEAP32[gb + 22612 >> 2] = fb + 22;
 HEAP32[gb + 22616 >> 2] = fb + 28;
 HEAP32[gb + 22620 >> 2] = fb + 72;
 HEAP32[gb + 22624 >> 2] = fb + 11;
 HEAP32[gb + 22628 >> 2] = fb + 73;
 HEAP32[gb + 22632 >> 2] = fb + 13;
 HEAP32[gb + 22636 >> 2] = fb + 14;
 HEAP32[gb + 22640 >> 2] = fb + 11;
 HEAP32[gb + 22644 >> 2] = fb + 72;
 HEAP32[gb + 22648 >> 2] = fb + 73;
 HEAP32[gb + 22652 >> 2] = fb + 51;
 HEAP32[gb + 22656 >> 2] = fb + 74;
 HEAP32[gb + 22660 >> 2] = fb + 69;
 HEAP32[gb + 22668 >> 2] = (HEAP32[gb + 22668 >> 2] | 0) + (gb + 248 | 0);
 HEAP32[gb + 22672 >> 2] = fb + 74;
 HEAP32[gb + 22676 >> 2] = fb + 48;
 HEAP32[gb + 22680 >> 2] = fb + 12;
 HEAP32[gb + 22684 >> 2] = fb + 17;
 HEAP32[gb + 22688 >> 2] = fb + 18;
 HEAP32[gb + 22692 >> 2] = fb + 1;
 HEAP32[gb + 22696 >> 2] = fb + 3;
 HEAP32[gb + 22700 >> 2] = fb + 23;
 HEAP32[gb + 22704 >> 2] = fb + 2;
 HEAP32[gb + 22708 >> 2] = fb + 2;
 HEAP32[gb + 22712 >> 2] = fb + 1;
 HEAP32[gb + 22716 >> 2] = fb + 1;
 HEAP32[gb + 22720 >> 2] = fb + 1;
 HEAP32[gb + 22724 >> 2] = fb + 1;
 HEAP32[gb + 22728 >> 2] = fb + 3;
 HEAP32[gb + 22732 >> 2] = fb + 1;
 HEAP32[gb + 22736 >> 2] = fb + 3;
 HEAP32[gb + 22740 >> 2] = fb + 4;
 HEAP32[gb + 22744 >> 2] = fb + 5;
 HEAP32[gb + 22748 >> 2] = fb + 6;
 HEAP32[gb + 22752 >> 2] = fb + 2;
 HEAP32[gb + 22756 >> 2] = fb + 3;
 HEAP32[gb + 22760 >> 2] = fb + 4;
 HEAP32[gb + 22764 >> 2] = fb + 5;
 HEAP32[gb + 22768 >> 2] = fb + 1;
 HEAP32[gb + 22772 >> 2] = fb + 1;
 HEAP32[gb + 22776 >> 2] = fb + 7;
 HEAP32[gb + 22780 >> 2] = fb + 5;
 HEAP32[gb + 22784 >> 2] = fb + 6;
 HEAP32[gb + 22788 >> 2] = fb + 3;
 HEAP32[gb + 22792 >> 2] = fb + 6;
 HEAP32[gb + 22796 >> 2] = fb + 7;
 HEAP32[gb + 22800 >> 2] = fb + 7;
 HEAP32[gb + 22804 >> 2] = fb + 8;
 HEAP32[gb + 22808 >> 2] = fb + 9;
 HEAP32[gb + 22812 >> 2] = fb + 10;
 HEAP32[gb + 22816 >> 2] = fb + 11;
 HEAP32[gb + 22820 >> 2] = fb + 8;
 HEAP32[gb + 22824 >> 2] = fb + 12;
 HEAP32[gb + 22828 >> 2] = fb + 13;
 HEAP32[gb + 22832 >> 2] = fb + 14;
 HEAP32[gb + 22836 >> 2] = fb + 15;
 HEAP32[gb + 22840 >> 2] = fb + 16;
 HEAP32[gb + 22844 >> 2] = fb + 8;
 HEAP32[gb + 22848 >> 2] = fb + 4;
 HEAP32[gb + 22852 >> 2] = fb + 1;
 HEAP32[gb + 22856 >> 2] = fb + 5;
 HEAP32[gb + 22860 >> 2] = fb + 32;
 HEAP32[gb + 22864 >> 2] = fb + 9;
 runPostSets14();
}

function __ZN11CHudMessage4DrawEf(i12, d11) {
 i12 = i12 | 0;
 d11 = +d11;
 var d1 = 0.0, i2 = 0, d3 = 0.0, i4 = 0, i5 = 0, d6 = 0.0, d7 = 0.0, d8 = 0.0, i9 = 0, i10 = 0;
 d1 = +HEAPF32[i12 + 216 >> 2];
 do if (d1 > 0.0) {
  d3 = +HEAPF32[gb + 46040 + 36 >> 2];
  if (d1 > d3) HEAPF32[i12 + 216 >> 2] = d3;
  i10 = HEAP32[i12 + 220 >> 2] | 0;
  d6 = +HEAPF32[i10 + 20 >> 2];
  d8 = d6 + +HEAPF32[i10 + 28 >> 2];
  d7 = +HEAPF32[i10 + 24 >> 2];
  if (d3 - d1 > d8 + d7) {
   HEAPF32[i12 + 216 >> 2] = 0.0;
   i4 = 0;
   break;
  }
  do if (d3 - d1 < 0.0) d1 = 0.0; else {
   if (d3 - d1 < d6) {
    d1 = 1.0 - (d6 - (d3 - d1)) / d6;
    break;
   }
   if (d8 < d3 - d1) if (d7 > 0.0) d1 = 1.0 - (d3 - d1 - d8) / d7; else d1 = 0.0; else d1 = 1.0;
  } while (0);
  i2 = HEAP32[i12 + 228 >> 2] | 0;
  i5 = HEAP32[gb + 46040 + 116 >> 2] | 0;
  i9 = (HEAP32[i5 + (i2 << 4) + 4 >> 2] | 0) - (HEAP32[i5 + (i2 << 4) >> 2] | 0) | 0;
  i4 = HEAP32[i12 + 224 >> 2] | 0;
  i4 = (HEAP32[i5 + (i4 << 4) + 4 >> 2] | 0) + i9 - (HEAP32[i5 + (i4 << 4) >> 2] | 0) | 0;
  i5 = (HEAP32[i5 + (i2 << 4) + 12 >> 2] | 0) - (HEAP32[i5 + (i2 << 4) + 8 >> 2] | 0) | 0;
  i4 = __ZN11CHudMessage9XPositionEfii(0, +HEAPF32[i10 + 12 >> 2], i4, i4) | 0;
  i5 = __ZN11CHudMessage9YPositionEfi(0, +HEAPF32[i10 + 16 >> 2], i5) | 0;
  if ((i2 | 0) < 0) i2 = 0; else i2 = HEAP32[(HEAP32[gb + 46040 + 112 >> 2] | 0) + (i2 << 2) >> 2] | 0;
  i10 = HEAP32[i10 + 4 >> 2] | 0;
  mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, i2 | 0, ~~(d1 * +(i10 & 255)) | 0, ~~(d1 * +((i10 & 65535) >>> 8 & 255)) | 0, ~~(d1 * +(i10 >>> 16 & 255)) | 0);
  mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i4 | 0, i5 | 0, (HEAP32[gb + 46040 + 116 >> 2] | 0) + (HEAP32[i12 + 228 >> 2] << 4) | 0);
  i2 = HEAP32[i12 + 224 >> 2] | 0;
  if ((i2 | 0) < 0) i2 = 0; else i2 = HEAP32[(HEAP32[gb + 46040 + 112 >> 2] | 0) + (i2 << 2) >> 2] | 0;
  i10 = HEAP32[(HEAP32[i12 + 220 >> 2] | 0) + 4 >> 2] | 0;
  mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, i2 | 0, ~~(d1 * +(i10 & 255)) | 0, ~~(d1 * +((i10 & 65535) >>> 8 & 255)) | 0, ~~(d1 * +(i10 >>> 16 & 255)) | 0);
  mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i4 + i9 | 0, i5 | 0, (HEAP32[gb + 46040 + 116 >> 2] | 0) + (HEAP32[i12 + 224 >> 2] << 4) | 0);
  i4 = 1;
 } else i4 = 0; while (0);
 d1 = +HEAPF32[gb + 46040 + 36 >> 2];
 i5 = 0;
 do {
  if (HEAP32[i12 + 20 + (i5 << 2) >> 2] | 0) {
   i2 = i12 + 84 + (i5 << 2) | 0;
   d3 = +HEAPF32[i2 >> 2];
   if (d3 > d1) HEAPF32[i2 >> 2] = d1 + +HEAPF32[i12 + 152 >> 2] - d3 + .2;
  }
  i5 = i5 + 1 | 0;
 } while ((i5 | 0) != 16);
 d1 = 0.0;
 i9 = 0;
 do {
  i5 = i12 + 20 + (i9 << 2) | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  do if (i2) {
   switch (HEAP32[i2 >> 2] | 0) {
   case 1:
   case 0:
    {
     d1 = +HEAPF32[i12 + 84 + (i9 << 2) >> 2] + +HEAPF32[i2 + 20 >> 2] + +HEAPF32[i2 + 24 >> 2] + +HEAPF32[i2 + 28 >> 2];
     break;
    }
   case 2:
    {
     d1 = +HEAPF32[i12 + 84 + (i9 << 2) >> 2] + +HEAPF32[i2 + 20 >> 2] * +((_strlen(HEAP32[i2 + 40 >> 2] | 0) | 0) >>> 0);
     d1 = +HEAPF32[i2 + 28 >> 2] + (+HEAPF32[i2 + 24 >> 2] + d1);
     break;
    }
   default:
    {}
   }
   if (!(d1 >= d11)) {
    HEAP32[i5 >> 2] = 0;
    break;
   } else {
    __ZN11CHudMessage15MessageDrawScanEP20client_textmessage_sf(i12, i2, d11 - +HEAPF32[i12 + 84 + (i9 << 2) >> 2]);
    i4 = i4 + 1 | 0;
    break;
   }
  } while (0);
  i9 = i9 + 1 | 0;
 } while ((i9 | 0) != 16);
 HEAP32[i12 + 152 >> 2] = HEAP32[gb + 46040 + 36 >> 2];
 if (!i4) HEAP32[i12 + 16 >> 2] = HEAP32[i12 + 16 >> 2] & -2;
 return 1;
}

function _PM_Jump() {
 var i1 = 0, i2 = 0, d3 = 0.0, i4 = 0, i5 = 0;
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 L1 : do if (!(HEAP32[i1 + 208 >> 2] | 0)) {
  i4 = (_atoi(mftCall_iii(HEAP32[i1 + 324948 >> 2] | 0, i1 + 324592 | 0, gb + 45895 | 0) | 0) | 0) == 1;
  i2 = HEAP32[gb + 121136 >> 2] | 0;
  if (i4) if ((HEAP32[i2 + 212 >> 2] | 0) == 5) break;
  d3 = +HEAPF32[i2 + 204 >> 2];
  if (d3 != 0.0) {
   d3 = d3 - +(HEAPU8[i2 + 283738 >> 0] | 0);
   HEAPF32[i2 + 204 >> 2] = d3;
   if (!(d3 < 0.0)) break;
   HEAPF32[i2 + 204 >> 2] = 0.0;
   break;
  }
  if ((HEAP32[i2 + 228 >> 2] | 0) > 1) {
   HEAP32[i2 + 224 >> 2] = -1;
   i1 = HEAP32[i2 + 232 >> 2] | 0;
   do if ((i1 | 0) == -3) HEAPF32[i2 + 100 >> 2] = 100.0; else if ((i1 | 0) == -4) {
    HEAPF32[i2 + 100 >> 2] = 80.0;
    break;
   } else {
    HEAPF32[i2 + 100 >> 2] = 50.0;
    break;
   } while (0);
   if (!(+HEAPF32[i2 + 172 >> 2] <= 0.0)) break;
   HEAPF32[i2 + 172 >> 2] = 1.0e3;
   switch (mftCall_iii(HEAP32[i2 + 325e3 >> 2] | 0, 0, 3) | 0) {
   case 0:
    {
     mftCall_viiddii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325044 >> 2] | 0, 4, gb + 45570 | 0, 1.0, .800000011920929, 0, 100);
     break L1;
    }
   case 1:
    {
     mftCall_viiddii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325044 >> 2] | 0, 4, gb + 45590 | 0, 1.0, .800000011920929, 0, 100);
     break L1;
    }
   case 2:
    {
     mftCall_viiddii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325044 >> 2] | 0, 4, gb + 45610 | 0, 1.0, .800000011920929, 0, 100);
     break L1;
    }
   case 3:
    {
     mftCall_viiddii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325044 >> 2] | 0, 4, gb + 45630 | 0, 1.0, .800000011920929, 0, 100);
     break L1;
    }
   default:
    break L1;
   }
  }
  i1 = HEAP32[i2 + 200 >> 2] | 0;
  if ((HEAP32[i2 + 224 >> 2] | 0) == -1) {
   HEAP32[i2 + 200 >> 2] = i1 | 2;
   break;
  }
  if (!(i1 & 2)) {
   HEAP32[i2 + 224 >> 2] = -1;
   _PM_PreventMegaBunnyJumping();
   i1 = HEAP32[gb + 121136 >> 2] | 0;
   if (i4) mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 4, gb + 45899 | 0, .5, .800000011920929, 0, 100); else {
    switch (HEAP8[i1 + 496 >> 0] | 0) {
    case 83:
     {
      i1 = 6;
      break;
     }
    case 77:
     {
      i1 = 1;
      break;
     }
    case 68:
     {
      i1 = 2;
      break;
     }
    case 86:
     {
      i1 = 3;
      break;
     }
    case 71:
     {
      i1 = 4;
      break;
     }
    case 84:
     {
      i1 = 5;
      break;
     }
    default:
     i1 = 0;
    }
    _PM_PlayStepSound(i1, 1.0);
   }
   i1 = HEAP32[gb + 121136 >> 2] | 0;
   i1 = (_atoi(mftCall_iii(HEAP32[i1 + 324948 >> 2] | 0, i1 + 324592 | 0, gb + 45919 | 0) | 0) | 0) == 1;
   i2 = HEAP32[gb + 121136 >> 2] | 0;
   if (!(HEAP32[i2 + 144 >> 2] | 0)) if (!(HEAP32[i2 + 184 >> 2] & 16384)) HEAPF32[i2 + 100 >> 2] = 268.3281555175781; else i5 = 35; else i5 = 35;
   do if ((i5 | 0) == 35) {
    if (i1) if (HEAP16[i2 + 283766 >> 1] & 4) if (+HEAPF32[i2 + 140 >> 2] > 0.0) if (+_Length(i2 + 92 | 0) > 50.0) {
     HEAPF32[i2 + 160 >> 2] = -5.0;
     i1 = 0;
     do {
      HEAPF32[i2 + 92 + (i1 << 2) >> 2] = +HEAPF32[i2 + 20 + (i1 << 2) >> 2] * 350.0 * 1.6;
      i1 = i1 + 1 | 0;
     } while ((i1 | 0) != 2);
     HEAPF32[i2 + 100 >> 2] = 299.33258056640625;
     break;
    }
    HEAPF32[i2 + 100 >> 2] = 268.3281555175781;
   } while (0);
   _PM_FixupGravityVelocity();
   i5 = (HEAP32[gb + 121136 >> 2] | 0) + 200 | 0;
   HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 2;
  }
 } else HEAP32[i1 + 200 >> 2] = HEAP32[i1 + 200 >> 2] | 2; while (0);
 return;
}

function __Z20UTIL_FindEntityInMapPcPfS0_(i7, i8, i6) {
 i7 = i7 | 0;
 i8 = i8 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, d3 = 0.0, i4 = 0, i5 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 2352 | 0;
 i1 = mftCall_ii(HEAP32[gb + 92340 + 212 >> 2] | 0, 0) | 0;
 L1 : do if (!i1) i1 = 0; else {
  i1 = HEAP32[i1 + 2964 >> 2] | 0;
  if (!i1) i1 = 0; else {
   i1 = HEAP32[i1 + 384 >> 2] | 0;
   if (!i1) i1 = 0; else {
    L4 : while (1) {
     i2 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i9 + 40 | 0) | 0;
     i1 = HEAP8[i9 + 40 >> 0] | 0;
     switch (i1 << 24 >> 24) {
     case 0:
     case 125:
      {
       i1 = 0;
       break L1;
      }
     default:
      {}
     }
     if (!i2) {
      i2 = 6;
      break;
     }
     if (i1 << 24 >> 24 != 123) {
      i2 = 9;
      break;
     }
     i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i2 | 0, i9 + 40 | 0) | 0;
     if ((HEAP8[i9 + 40 >> 0] | 0) != 125) {
      i5 = 0;
      while (1) {
       if (!i1) {
        i2 = 11;
        break L4;
       }
       _strcpy(i9 + 2088 | 0, i9 + 40 | 0) | 0;
       i2 = _strlen(i9 + 2088 | 0) | 0;
       L13 : do if (i2 | 0) do {
        i2 = i2 + -1 | 0;
        i4 = i9 + 2088 + i2 | 0;
        if ((HEAP8[i4 >> 0] | 0) != 32) break L13;
        HEAP8[i4 >> 0] = 0;
       } while ((i2 | 0) != 0); while (0);
       i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i9 + 40 | 0) | 0;
       if (!i1) {
        i2 = 16;
        break L4;
       }
       if ((HEAP8[i9 + 40 >> 0] | 0) == 125) {
        i2 = 18;
        break L4;
       }
       if (!(_strcmp(i9 + 2088 | 0, gb + 41317 | 0) | 0)) {
        i2 = (_strcmp(i9 + 40 | 0, i7 | 0) | 0) == 0;
        i2 = i2 ? 1 : i5;
       } else i2 = i5;
       if (!(_strcmp(i9 + 2088 | 0, gb + 41327 | 0) | 0)) {
        d3 = +_atof(i9 + 40 | 0);
        do if (!(d3 >= 0.0)) if ((~~d3 | 0) == -1) {
         HEAPF32[i6 >> 2] = -90.0;
         HEAPF32[i6 + 4 >> 2] = 0.0;
         break;
        } else {
         HEAPF32[i6 >> 2] = 90.0;
         HEAPF32[i6 + 4 >> 2] = 0.0;
         break;
        } else {
         HEAPF32[i6 >> 2] = 0.0;
         HEAPF32[i6 + 4 >> 2] = d3;
        } while (0);
        HEAPF32[i6 + 8 >> 2] = 0.0;
       }
       if (!(_strcmp(i9 + 2088 | 0, gb + 41333 | 0) | 0)) __Z19UTIL_StringToVectorPfPKc(i6, i9 + 40 | 0);
       if (!(_strcmp(i9 + 2088 | 0, gb + 41340 | 0) | 0)) __Z19UTIL_StringToVectorPfPKc(i8, i9 + 40 | 0);
       i1 = mftCall_iii(HEAP32[gb + 92340 + 320 >> 2] | 0, i1 | 0, i9 + 40 | 0) | 0;
       if ((HEAP8[i9 + 40 >> 0] | 0) == 125) break; else i5 = i2;
      }
      if (i2) {
       i1 = 1;
       break L1;
      }
     }
     if (!i1) {
      i1 = 0;
      break L1;
     }
    }
    if ((i2 | 0) == 6) {
     mftCall_vii(HEAP32[gb + 92340 + 164 >> 2] | 0, gb + 41185 | 0, i9 | 0);
     i1 = 0;
     break;
    } else if ((i2 | 0) == 9) {
     mftCall_vii(HEAP32[gb + 92340 + 164 >> 2] | 0, gb + 41234 | 0, i9 + 8 | 0);
     i1 = 0;
     break;
    } else if ((i2 | 0) == 11) {
     mftCall_vii(HEAP32[gb + 92340 + 164 >> 2] | 0, gb + 41185 | 0, i9 + 16 | 0);
     i1 = 0;
     break;
    } else if ((i2 | 0) == 16) {
     mftCall_vii(HEAP32[gb + 92340 + 164 >> 2] | 0, gb + 41185 | 0, i9 + 24 | 0);
     i1 = 0;
     break;
    } else if ((i2 | 0) == 18) {
     mftCall_vii(HEAP32[gb + 92340 + 164 >> 2] | 0, gb + 41268 | 0, i9 + 32 | 0);
     i1 = 0;
     break;
    }
   }
  }
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function _PM_CatagorizePosition() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, d17 = 0.0, i18 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 _PM_CheckWater() | 0;
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 HEAP32[i18 + 104 >> 2] = HEAP32[i1 + 56 >> 2];
 HEAP32[i18 + 104 + 4 >> 2] = HEAP32[i1 + 60 >> 2];
 HEAPF32[i18 + 104 + 8 >> 2] = +HEAPF32[i1 + 64 >> 2] + -2.0;
 if (+HEAPF32[i1 + 100 >> 2] > 180.0) HEAP32[i1 + 224 >> 2] = -1; else {
  mftCall_viiiii(HEAP32[i1 + 324992 >> 2] | 0, i18 + 36 | 0, i1 + 56 | 0, i18 + 104 | 0, 0, -1);
  i9 = HEAP32[i18 + 36 >> 2] | 0;
  i13 = HEAP32[i18 + 36 + 4 >> 2] | 0;
  HEAP32[i18 >> 2] = HEAP32[i18 + 36 + 8 >> 2];
  HEAP32[i18 + 4 >> 2] = HEAP32[i18 + 36 + 8 + 4 >> 2];
  HEAP32[i18 + 8 >> 2] = HEAP32[i18 + 36 + 8 + 8 >> 2];
  i14 = HEAP32[i18 + 36 + 20 >> 2] | 0;
  i15 = HEAP32[i18 + 36 + 24 >> 2] | 0;
  i16 = HEAP32[i18 + 36 + 28 >> 2] | 0;
  i8 = HEAP32[i18 + 36 + 32 >> 2] | 0;
  i7 = HEAP32[i18 + 36 + 32 + 4 >> 2] | 0;
  d17 = +HEAPF32[i18 + 36 + 40 >> 2];
  i10 = HEAP32[i18 + 36 + 44 >> 2] | 0;
  i11 = HEAP32[i18 + 36 + 48 >> 2] | 0;
  i12 = HEAP32[i18 + 36 + 64 >> 2] | 0;
  i2 = HEAP32[gb + 121136 >> 2] | 0;
  i6 = d17 < .7 ? -1 : i11;
  HEAP32[i2 + 224 >> 2] = i6;
  if ((i6 | 0) != -1) {
   HEAPF32[i2 + 204 >> 2] = 0.0;
   if ((i13 | i9 | 0) == 0 ? (HEAP32[i2 + 228 >> 2] | 0) < 2 : 0) {
    HEAP32[i2 + 56 >> 2] = i14;
    HEAP32[i2 + 60 >> 2] = i15;
    HEAP32[i2 + 64 >> 2] = i16;
   }
  }
  if ((i11 | 0) > 0) {
   HEAP32[i18 + 16 >> 2] = HEAP32[i18 >> 2];
   HEAP32[i18 + 16 + 4 >> 2] = HEAP32[i18 + 4 >> 2];
   HEAP32[i18 + 16 + 8 >> 2] = HEAP32[i18 + 8 >> 2];
   i6 = HEAP32[i2 + 283788 >> 2] | 0;
   L9 : do if ((i6 | 0) > 0) {
    i1 = 0;
    do {
     if ((HEAP32[i2 + 283792 + (i1 * 68 | 0) + 48 >> 2] | 0) == (i11 | 0)) break L9;
     i1 = i1 + 1 | 0;
    } while ((i1 | 0) < (i6 | 0));
   } else i1 = 0; while (0);
   if ((i1 | 0) == (i6 | 0)) {
    i3 = HEAP32[i2 + 92 >> 2] | 0;
    i4 = HEAP32[i2 + 96 >> 2] | 0;
    i5 = HEAP32[i2 + 100 >> 2] | 0;
    if ((i6 | 0) > 599) {
     mftCall_vii(HEAP32[i2 + 324964 >> 2] | 0, gb + 45738 | 0, i18 + 32 | 0);
     i1 = HEAP32[gb + 121136 >> 2] | 0;
     i2 = i1;
     i1 = HEAP32[i1 + 283788 >> 2] | 0;
    } else i1 = i6;
    HEAP32[i2 + 283788 >> 2] = i1 + 1;
    HEAP32[i2 + 283792 + (i1 * 68 | 0) >> 2] = i9;
    HEAP32[i2 + 283792 + (i1 * 68 | 0) + 4 >> 2] = i13;
    i13 = i2 + 283792 + (i1 * 68 | 0) + 8 | 0;
    HEAP32[i13 >> 2] = HEAP32[i18 + 16 >> 2];
    HEAP32[i13 + 4 >> 2] = HEAP32[i18 + 16 + 4 >> 2];
    HEAP32[i13 + 8 >> 2] = HEAP32[i18 + 16 + 8 >> 2];
    HEAP32[i2 + 283792 + (i1 * 68 | 0) + 20 >> 2] = i14;
    HEAP32[i2 + 283792 + (i1 * 68 | 0) + 24 >> 2] = i15;
    HEAP32[i2 + 283792 + (i1 * 68 | 0) + 28 >> 2] = i16;
    i16 = i2 + 283792 + (i1 * 68 | 0) + 32 | 0;
    HEAP32[i16 >> 2] = i8;
    HEAP32[i16 + 4 >> 2] = i7;
    HEAPF32[i2 + 283792 + (i1 * 68 | 0) + 40 >> 2] = d17;
    HEAP32[i2 + 283792 + (i1 * 68 | 0) + 44 >> 2] = i10;
    HEAP32[i2 + 283792 + (i1 * 68 | 0) + 48 >> 2] = i11;
    HEAP32[i2 + 283792 + (i1 * 68 | 0) + 52 >> 2] = i3;
    HEAP32[i2 + 283792 + (i1 * 68 | 0) + 56 >> 2] = i4;
    HEAP32[i2 + 283792 + (i1 * 68 | 0) + 60 >> 2] = i5;
    HEAP32[i2 + 283792 + (i1 * 68 | 0) + 64 >> 2] = i12;
   }
  }
 }
 STACKTOP = i18;
 return;
}

function __ZN20CStudioModelRenderer17StudioProcessGaitEP14entity_state_s(i8, i7) {
 i8 = i8 | 0;
 i7 = i7 | 0;
 var d1 = 0.0, i2 = 0, i3 = 0, d4 = 0.0, i5 = 0, d6 = 0.0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = HEAP32[i8 + 48 >> 2] | 0;
 i2 = HEAP32[i3 + 732 >> 2] | 0;
 i5 = HEAP32[i8 + 68 >> 2] | 0;
 if ((i2 | 0) >= (HEAP32[i5 + 164 >> 2] | 0)) {
  HEAP32[i3 + 732 >> 2] = 0;
  i2 = 0;
 }
 mftCall_viiii(HEAP32[(HEAP32[i8 >> 2] | 0) + 92 >> 2] | 0, i8 | 0, i5 + (HEAP32[i5 + 168 >> 2] | 0) + (i2 * 176 | 0) | 0, i9 | 0, i3 + 2900 | 0);
 i5 = HEAP32[i8 + 48 >> 2] | 0;
 HEAP32[i5 + 2856 >> 2] = HEAP32[i5 + 2900 >> 2];
 HEAP8[i5 + 796 >> 0] = HEAP32[i9 >> 2];
 i5 = HEAP32[i8 + 48 >> 2] | 0;
 HEAP8[i5 + 2880 >> 0] = HEAP8[i5 + 796 >> 0] | 0;
 i5 = HEAP32[i8 + 48 >> 2] | 0;
 HEAP8[i5 + 2840 >> 0] = HEAP8[i5 + 796 >> 0] | 0;
 d1 = +HEAPF64[i8 + 8 >> 3] - +HEAPF64[i8 + 16 >> 3];
 if (d1 < 0.0) d1 = 0.0; else if (d1 > 1.0) d1 = 1.0;
 mftCall_vii(HEAP32[(HEAP32[i8 >> 2] | 0) + 96 >> 2] | 0, i8 | 0, i7 | 0);
 i3 = HEAP32[i8 + 48 >> 2] | 0;
 i2 = (HEAP32[i8 + 56 >> 2] | 0) + 388 | 0;
 d6 = +HEAPF32[i2 >> 2];
 d4 = +HEAPF32[i3 + 2900 + 4 >> 2] - d6;
 d4 = d4 - +(~~(d4 * 2.7777778450399637e-03) * 360 | 0) < -180.0 ? d4 - +(~~(d4 * 2.7777778450399637e-03) * 360 | 0) + 360.0 : d4 - +(~~(d4 * 2.7777778450399637e-03) * 360 | 0);
 d4 = d4 > 180.0 ? d4 + -360.0 : d4;
 if (d4 > 120.0) {
  HEAPF32[i2 >> 2] = d6 + -180.0;
  HEAPF32[i8 + 64 >> 2] = -+HEAPF32[i8 + 64 >> 2];
  d4 = d4 + -180.0;
 } else if (d4 < -120.0) {
  HEAPF32[i2 >> 2] = d6 + 180.0;
  HEAPF32[i8 + 64 >> 2] = -+HEAPF32[i8 + 64 >> 2];
  d4 = d4 + 180.0;
 }
 i5 = ~~((d4 * .25 + 30.0) * 4.25) & 255;
 HEAP8[i3 + 792 >> 0] = i5;
 HEAP8[(HEAP32[i8 + 48 >> 2] | 0) + 793 >> 0] = i5;
 HEAP8[(HEAP32[i8 + 48 >> 2] | 0) + 794 >> 0] = i5;
 HEAP8[(HEAP32[i8 + 48 >> 2] | 0) + 795 >> 0] = i5;
 i5 = HEAP32[i8 + 48 >> 2] | 0;
 HEAP8[i5 + 2876 >> 0] = HEAP8[i5 + 792 >> 0] | 0;
 i5 = HEAP32[i8 + 48 >> 2] | 0;
 HEAP8[i5 + 2877 >> 0] = HEAP8[i5 + 793 >> 0] | 0;
 i5 = HEAP32[i8 + 48 >> 2] | 0;
 HEAP8[i5 + 2878 >> 0] = HEAP8[i5 + 794 >> 0] | 0;
 i5 = HEAP32[i8 + 48 >> 2] | 0;
 HEAP8[i5 + 2879 >> 0] = HEAP8[i5 + 795 >> 0] | 0;
 i5 = HEAP32[i8 + 56 >> 2] | 0;
 i2 = HEAP32[i5 + 388 >> 2] | 0;
 i3 = HEAP32[i8 + 48 >> 2] | 0;
 HEAP32[i3 + 2900 + 4 >> 2] = i2;
 d4 = (HEAP32[tempDoublePtr >> 2] = i2, +HEAPF32[tempDoublePtr >> 2]);
 if (d4 < 0.0) {
  HEAPF32[i3 + 2900 + 4 >> 2] = d4 + 360.0;
  i2 = (HEAPF32[tempDoublePtr >> 2] = d4 + 360.0, HEAP32[tempDoublePtr >> 2] | 0);
 }
 HEAP32[i3 + 2856 + 4 >> 2] = i2;
 i2 = HEAP32[i7 + 184 >> 2] | 0;
 i3 = HEAP32[i8 + 68 >> 2] | 0;
 if ((i2 | 0) >= (HEAP32[i3 + 164 >> 2] | 0)) {
  HEAP32[i7 + 184 >> 2] = 0;
  i2 = 0;
 }
 i3 = i3 + (HEAP32[i3 + 168 >> 2] | 0) | 0;
 d4 = +HEAPF32[i3 + (i2 * 176 | 0) + 76 >> 2];
 if (d4 > 0.0) {
  i3 = HEAP32[i3 + (i2 * 176 | 0) + 56 >> 2] | 0;
  d1 = +HEAPF32[i5 + 384 >> 2] + +HEAPF32[i8 + 64 >> 2] / d4 * +(i3 | 0);
  HEAPF32[i5 + 384 >> 2] = d1;
  i2 = i5 + 384 | 0;
 } else {
  d1 = d1 * +HEAPF32[i3 + (i2 * 176 | 0) + 32 >> 2] + +HEAPF32[i5 + 384 >> 2];
  HEAPF32[i5 + 384 >> 2] = d1;
  i3 = HEAP32[i3 + (i2 * 176 | 0) + 56 >> 2] | 0;
  i2 = i5 + 384 | 0;
 }
 d4 = +(i3 | 0);
 d6 = d1 - +(Math_imul(~~(d1 / d4), i3) | 0);
 HEAPF32[i2 >> 2] = d6 < 0.0 ? d6 + d4 : d6;
 STACKTOP = i9;
 return;
}

function _EV_EgonFire(i5) {
 i5 = i5 | 0;
 var i1 = 0, d2 = 0.0, i3 = 0, i4 = 0, i6 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 i6 = HEAP32[i5 + 4 >> 2] | 0;
 HEAP32[i7 + 140 >> 2] = HEAP32[i5 + 8 >> 2];
 HEAP32[i7 + 140 + 4 >> 2] = HEAP32[i5 + 12 >> 2];
 HEAP32[i7 + 140 + 8 >> 2] = HEAP32[i5 + 16 >> 2];
 i1 = HEAP32[i5 + 64 >> 2] | 0;
 i4 = (HEAP32[i5 + 60 >> 2] | 0) == 1;
 i3 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0;
 do if (!i1) if (i4) {
  mftCall_viiiiddii(i3 | 0, i6 | 0, i7 + 140 | 0, 6, gb + 37350 | 0, .9800000190734863, .800000011920929, 0, 125);
  break;
 } else {
  mftCall_viiiiddii(i3 | 0, i6 | 0, i7 + 140 | 0, 6, gb + 37350 | 0, .8999999761581421, .800000011920929, 0, 100);
  break;
 } else if (i4) {
  mftCall_viiiiddii(i3 | 0, i6 | 0, i7 + 140 | 0, 1, gb + 37325 | 0, .9800000190734863, .800000011920929, 0, 125);
  break;
 } else {
  mftCall_viiiiddii(i3 | 0, i6 | 0, i7 + 140 | 0, 1, gb + 37325 | 0, .8999999761581421, .800000011920929, 0, 100);
  break;
 } while (0);
 if (__Z10EV_IsLocali(i6) | 0) {
  i3 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0;
  i4 = mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 3) | 0;
  mftCall_vii(i3 | 0, HEAP32[gb + 19016 + (i4 << 2) >> 2] | 0, 1);
 }
 if ((i1 | 0) == 1) {
  i4 = (__Z10EV_IsLocali(i6) | 0) == 0;
  if (!(i4 | (HEAP32[gb + 56820 >> 2] | 0) != 0 | (HEAP32[gb + 56824 >> 2] | 0) != 0)) if (+HEAPF32[(HEAP32[gb + 93756 >> 2] | 0) + 12 >> 2] != 0.0) {
   i1 = mftCall_ii(HEAP32[gb + 92340 + 212 >> 2] | 0, i6 | 0) | 0;
   if (i1 | 0) {
    HEAP32[i7 + 104 >> 2] = HEAP32[gb + 46040 + 68 >> 2];
    HEAP32[i7 + 104 + 4 >> 2] = HEAP32[gb + 46040 + 72 >> 2];
    HEAP32[i7 + 104 + 8 >> 2] = HEAP32[gb + 46040 + 76 >> 2];
    mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i7 + 104 | 0, i7 + 92 | 0, i7 + 80 | 0, i7 + 68 | 0);
    __Z17EV_GetGunPositionP12event_args_sPfS1_(i5, i7 + 128 | 0, i1 + 2888 | 0);
    _VectorMA(i7 + 128 | 0, 2048.0, i7 + 92 | 0, i7 + 116 | 0);
    mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 40 >> 2] | 0, 0, 1);
    mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 44 >> 2] | 0);
    mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 52 >> 2] | 0, i6 + -1 | 0);
    mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 56 >> 2] | 0, 2);
    mftCall_viiiii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 60 >> 2] | 0, i7 + 128 | 0, i7 + 116 | 0, 2, -1, i7 | 0);
    mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 48 >> 2] | 0);
    i1 = mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 12 >> 2] | 0, gb + 37372 | 0) | 0;
    i3 = (mftCall_i(HEAP32[gb + 94440 + 160 >> 2] | 0) | 0) == 0;
    d2 = i3 ? 50.0 : .5;
    i3 = mftCall_iiiidddddidddd(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 228 >> 2] | 0, i6 | 4096 | 0, i7 + 20 | 0, i1 | 0, 99999.0, 3.5, .20000000298023224, .699999988079071, 55.0, 0, 0.0, +d2, +d2, 125.0) | 0;
    HEAP32[gb + 56820 >> 2] = i3;
    if (i3 | 0) HEAP32[i3 + 8 >> 2] = HEAP32[i3 + 8 >> 2] | 16;
    i6 = mftCall_iiiidddddidddd(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 228 >> 2] | 0, i6 | 4096 | 0, i7 + 20 | 0, i1 | 0, 99999.0, 5.0, .07999999821186066, .699999988079071, 25.0, 0, 0.0, +d2, +d2, 125.0) | 0;
    HEAP32[gb + 56824 >> 2] = i6;
   }
  }
 }
 STACKTOP = i7;
 return;
}

function _PM_Physics_Toss() {
 var i1 = 0, i2 = 0, d3 = 0.0, d4 = 0.0, d5 = 0.0, i6 = 0, d7 = 0.0, d8 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 _PM_CheckWater() | 0;
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 if (+HEAPF32[i1 + 100 >> 2] > 0.0) {
  HEAP32[i1 + 224 >> 2] = -1;
  i2 = 6;
 } else if ((HEAP32[i1 + 224 >> 2] | 0) == -1) i2 = 6; else if (!(_VectorCompare(i1 + 116 | 0, gb + 121124 | 0) | 0)) i2 = 6; else if (!(_VectorCompare(i1 + 92 | 0, gb + 121124 | 0) | 0)) i2 = 6;
 do if ((i2 | 0) == 6) {
  _PM_CheckVelocity();
  i1 = HEAP32[gb + 121136 >> 2] | 0;
  switch (HEAP32[i1 + 220 >> 2] | 0) {
  case 9:
  case 11:
  case 5:
   break;
  default:
   {
    d4 = +HEAPF32[i1 + 192 >> 2];
    d5 = +HEAPF32[i1 + 16 >> 2];
    HEAPF32[i1 + 100 >> 2] = +HEAPF32[i1 + 100 >> 2] - (d4 != 0.0 ? d4 : 1.0) * +HEAPF32[HEAP32[i1 + 324848 >> 2] >> 2] * d5 + d5 * +HEAPF32[i1 + 124 >> 2];
    HEAPF32[i1 + 124 >> 2] = 0.0;
    _PM_CheckVelocity();
    i1 = HEAP32[gb + 121136 >> 2] | 0;
   }
  }
  i2 = i1 + 92 | 0;
  HEAPF32[i2 >> 2] = +HEAPF32[i2 >> 2] + +HEAPF32[i1 + 116 >> 2];
  i2 = i1 + 96 | 0;
  HEAPF32[i2 >> 2] = +HEAPF32[i2 >> 2] + +HEAPF32[i1 + 120 >> 2];
  i2 = i1 + 100 | 0;
  HEAPF32[i2 >> 2] = +HEAPF32[i2 >> 2] + +HEAPF32[i1 + 124 >> 2];
  _PM_CheckVelocity();
  i2 = HEAP32[gb + 121136 >> 2] | 0;
  _VectorScale(i2 + 92 | 0, +HEAPF32[i2 + 16 >> 2], i6);
  i2 = HEAP32[gb + 121136 >> 2] | 0;
  HEAPF32[i2 + 92 >> 2] = +HEAPF32[i2 + 92 >> 2] - +HEAPF32[i2 + 116 >> 2];
  HEAPF32[i2 + 96 >> 2] = +HEAPF32[i2 + 96 >> 2] - +HEAPF32[i2 + 120 >> 2];
  HEAPF32[i2 + 100 >> 2] = +HEAPF32[i2 + 100 >> 2] - +HEAPF32[i2 + 124 >> 2];
  _PM_PushEntity(i6 + 12 | 0, i6);
  _PM_CheckVelocity();
  if (HEAP32[i6 + 12 >> 2] | 0) {
   i2 = HEAP32[gb + 121136 >> 2] | 0;
   HEAP32[i2 + 224 >> 2] = HEAP32[i6 + 12 + 48 >> 2];
   HEAP32[i2 + 92 >> 2] = HEAP32[gb + 121124 >> 2];
   HEAP32[i2 + 96 >> 2] = HEAP32[gb + 121124 + 4 >> 2];
   HEAP32[i2 + 100 >> 2] = HEAP32[gb + 121124 + 8 >> 2];
   break;
  }
  d5 = +HEAPF32[i6 + 12 + 16 >> 2];
  if (d5 == 1.0) {
   _PM_CheckWater() | 0;
   break;
  }
  i1 = HEAP32[gb + 121136 >> 2] | 0;
  switch (HEAP32[i1 + 220 >> 2] | 0) {
  case 10:
   {
    d3 = 2.0 - +HEAPF32[i1 + 196 >> 2];
    break;
   }
  case 11:
   {
    d3 = 2.0;
    break;
   }
  default:
   d3 = 1.0;
  }
  _PM_ClipVelocity(i1 + 92 | 0, i6 + 12 + 32 | 0, i1 + 92 | 0, d3) | 0;
  do if (+HEAPF32[i6 + 12 + 40 >> 2] > .7) {
   i1 = HEAP32[gb + 121136 >> 2] | 0;
   d3 = +HEAPF32[i1 + 100 >> 2];
   d4 = +HEAPF32[i1 + 16 >> 2];
   if (d3 < +HEAPF32[HEAP32[i1 + 324848 >> 2] >> 2] * d4) {
    HEAP32[i1 + 224 >> 2] = HEAP32[i6 + 12 + 48 >> 2];
    HEAPF32[i1 + 100 >> 2] = 0.0;
    d3 = 0.0;
   }
   d8 = +HEAPF32[i1 + 92 >> 2];
   d7 = +HEAPF32[i1 + 96 >> 2];
   if (!(d3 * d3 + (d8 * d8 + d7 * d7) < 900.0)) if ((HEAP32[i1 + 220 >> 2] & -2 | 0) == 10) {
    _VectorScale(i1 + 92 | 0, (1.0 - d5) * d4 * .9, i6);
    _PM_PushEntity(i6 + 12 | 0, i6);
    break;
   }
   HEAP32[i1 + 224 >> 2] = HEAP32[i6 + 12 + 48 >> 2];
   HEAP32[i1 + 92 >> 2] = HEAP32[gb + 121124 >> 2];
   HEAP32[i1 + 96 >> 2] = HEAP32[gb + 121124 + 4 >> 2];
   HEAP32[i1 + 100 >> 2] = HEAP32[gb + 121124 + 8 >> 2];
  } while (0);
  _PM_CheckWater() | 0;
 } while (0);
 STACKTOP = i6;
 return;
}

function _PM_UpdateStepSound() {
 var i1 = 0, d2 = 0.0, i3 = 0, i4 = 0, d5 = 0.0, d6 = 0.0, d7 = 0.0, i8 = 0, d9 = 0.0, i10 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 do if ((HEAP32[i1 + 148 >> 2] | 0) <= 0) if (!(HEAP32[i1 + 184 >> 2] & 4096)) {
  _PM_CatagorizeTextureType();
  i1 = HEAP32[gb + 121136 >> 2] | 0;
  d6 = +_Length(i1 + 92 | 0);
  i3 = (HEAP32[i1 + 220 >> 2] | 0) == 5;
  i4 = i3 | (HEAP32[i1 + 184 >> 2] & 16384 | 0) != 0;
  d5 = i4 ? 80.0 : 210.0;
  d2 = i4 ? 60.0 : 120.0;
  d7 = i4 ? 100.0 : 0.0;
  if (!i3) if ((HEAP32[i1 + 224 >> 2] | 0) == -1) break;
  if (+_Length(i1 + 92 | 0) > 0.0) {
   if (!(d6 >= d2)) if (HEAP32[i1 + 148 >> 2] | 0) break;
   i10 = HEAP32[i1 + 56 >> 2] | 0;
   HEAP32[i8 + 12 >> 2] = i10;
   i4 = HEAP32[i1 + 60 >> 2] | 0;
   HEAP32[i8 + 12 + 4 >> 2] = i4;
   d9 = +HEAPF32[i1 + 64 >> 2];
   HEAP32[i8 >> 2] = i10;
   HEAP32[i8 + 4 >> 2] = i4;
   i4 = HEAP32[i1 + 188 >> 2] | 0;
   d2 = +HEAPF32[i1 + 324900 + (i4 * 12 | 0) + 8 >> 2] - +HEAPF32[i1 + 324852 + (i4 * 12 | 0) + 8 >> 2];
   HEAPF32[i8 + 12 + 8 >> 2] = d9 - d2 * .3;
   HEAPF32[i8 + 8 >> 2] = d9 - d2 * .5;
   L11 : do if (i3) {
    HEAP32[i1 + 148 >> 2] = 350;
    i4 = 350;
    d2 = .3499999940395355;
    i3 = 8;
   } else {
    i10 = (mftCall_iii(HEAP32[i1 + 324980 >> 2] | 0, i8 + 12 | 0, 0) | 0) == -3;
    i1 = HEAP32[gb + 121136 >> 2] | 0;
    if (i10) {
     HEAP32[i1 + 148 >> 2] = 600;
     i4 = 600;
     d2 = .6499999761581421;
     i3 = 7;
     break;
    }
    if ((mftCall_iii(HEAP32[i1 + 324980 >> 2] | 0, i8 | 0, 0) | 0) == -3) {
     i4 = d6 < d5 ? 400 : 300;
     i1 = HEAP32[gb + 121136 >> 2] | 0;
     HEAP32[i1 + 148 >> 2] = i4;
     d2 = d6 < d5 ? .20000000298023224 : .5;
     i3 = 6;
     break;
    }
    i1 = HEAP32[gb + 121136 >> 2] | 0;
    switch (HEAP8[i1 + 496 >> 0] | 0) {
    case 83:
     {
      i4 = d6 < d5 ? 400 : 300;
      HEAP32[i1 + 148 >> 2] = i4;
      d2 = d6 < d5 ? .20000000298023224 : .5;
      i3 = 6;
      break L11;
     }
    case 77:
     {
      i4 = d6 < d5 ? 400 : 300;
      HEAP32[i1 + 148 >> 2] = i4;
      d2 = d6 < d5 ? .20000000298023224 : .5;
      i3 = 1;
      break L11;
     }
    case 68:
     {
      i4 = d6 < d5 ? 400 : 300;
      HEAP32[i1 + 148 >> 2] = i4;
      d2 = d6 < d5 ? .25 : .550000011920929;
      i3 = 2;
      break L11;
     }
    case 86:
     {
      i4 = d6 < d5 ? 400 : 300;
      HEAP32[i1 + 148 >> 2] = i4;
      d2 = d6 < d5 ? .4000000059604645 : .699999988079071;
      i3 = 3;
      break L11;
     }
    case 71:
     {
      i4 = d6 < d5 ? 400 : 300;
      HEAP32[i1 + 148 >> 2] = i4;
      d2 = d6 < d5 ? .20000000298023224 : .5;
      i3 = 4;
      break L11;
     }
    case 84:
     {
      i4 = d6 < d5 ? 400 : 300;
      HEAP32[i1 + 148 >> 2] = i4;
      d2 = d6 < d5 ? .20000000298023224 : .5;
      i3 = 5;
      break L11;
     }
    default:
     {
      i4 = d6 < d5 ? 400 : 300;
      HEAP32[i1 + 148 >> 2] = i4;
      d2 = d6 < d5 ? .20000000298023224 : .5;
      i3 = 0;
      break L11;
     }
    }
   } while (0);
   HEAP32[i1 + 148 >> 2] = ~~(d7 + +(i4 | 0));
   if (HEAP32[i1 + 184 >> 2] & 16384) d2 = d2 * .35;
   _PM_PlayStepSound(i3, d2);
  }
 } while (0);
 STACKTOP = i8;
 return;
}

function __ZN20CStudioModelRenderer23StudioCalcBoneQuaterionEifP13mstudiobone_tP13mstudioanim_tPfS4_(i1, i13, d17, i15, i14, i12, i16) {
 i1 = i1 | 0;
 i13 = i13 | 0;
 d17 = +d17;
 i15 = i15 | 0;
 i14 = i14 | 0;
 i12 = i12 | 0;
 i16 = i16 | 0;
 var d2 = 0.0, d3 = 0.0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, d18 = 0.0, d19 = 0.0, d20 = 0.0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i10 = 0;
 do {
  i9 = i10 + 3 | 0;
  i7 = HEAP16[i14 + (i9 << 1) >> 1] | 0;
  if (!(i7 << 16 >> 16)) {
   i8 = HEAP32[i15 + 64 + (i9 << 2) >> 2] | 0;
   HEAP32[i11 + 12 + (i10 << 2) >> 2] = i8;
   HEAP32[i11 + (i10 << 2) >> 2] = i8;
   d3 = (HEAP32[tempDoublePtr >> 2] = i8, +HEAPF32[tempDoublePtr >> 2]);
   d2 = d3;
  } else {
   i1 = HEAP8[i14 + (i7 & 65535) + 1 >> 0] | 0;
   i4 = HEAP16[i14 + (i7 & 65535) >> 1] | 0;
   i5 = (i1 & 255) < (i4 & 255) ? 0 : i13;
   if ((i5 | 0) < (i1 & 255 | 0)) {
    i6 = i4 & 255;
    i8 = (i4 & 65535) >>> 8 & 255;
    i7 = i14 + (i7 & 65535) | 0;
   } else {
    i6 = i4 & 255;
    i4 = i1 & 255;
    i7 = i14 + (i7 & 65535) | 0;
    do {
     i7 = i7 + ((i6 & 255) + 1 << 1) | 0;
     i1 = HEAP16[i7 >> 1] | 0;
     i6 = i1 & 255;
     i5 = (HEAPU8[i7 + 1 >> 0] | 0) < (i6 & 255) ? 0 : i5 - i4 | 0;
     i4 = (i1 & 65535) >>> 8 & 65535;
    } while ((i5 | 0) >= (i4 | 0));
    i8 = (i1 & 65535) >>> 8 & 255;
   }
   i6 = i6 & 255;
   do if ((i6 | 0) > (i5 | 0)) {
    i4 = i5 + 1 | 0;
    d2 = +(HEAP16[i7 + (i4 << 1) >> 1] | 0);
    i1 = i11 + 12 + (i10 << 2) | 0;
    HEAPF32[i1 >> 2] = d2;
    if ((i6 | 0) > (i4 | 0)) {
     d18 = +(HEAP16[i7 + (i5 + 2 << 1) >> 1] | 0);
     i4 = i11 + (i10 << 2) | 0;
     HEAPF32[i4 >> 2] = d18;
     d3 = d2;
     d2 = d18;
     break;
    }
    if ((i8 & 255 | 0) > (i4 | 0)) {
     i4 = i11 + (i10 << 2) | 0;
     HEAPF32[i4 >> 2] = d2;
     d3 = d2;
     break;
    } else {
     d18 = +(HEAP16[i7 + (i6 + 2 << 1) >> 1] | 0);
     i4 = i11 + (i10 << 2) | 0;
     HEAPF32[i4 >> 2] = d18;
     d3 = d2;
     d2 = d18;
     break;
    }
   } else {
    d2 = +(HEAP16[i7 + (i6 << 1) >> 1] | 0);
    i1 = i11 + 12 + (i10 << 2) | 0;
    HEAPF32[i1 >> 2] = d2;
    if ((i8 & 255 | 0) > (i5 + 1 | 0)) {
     i4 = i11 + (i10 << 2) | 0;
     HEAPF32[i4 >> 2] = d2;
     d3 = d2;
     break;
    } else {
     d18 = +(HEAP16[i7 + (i6 + 2 << 1) >> 1] | 0);
     i4 = i11 + (i10 << 2) | 0;
     HEAPF32[i4 >> 2] = d18;
     d3 = d2;
     d2 = d18;
     break;
    }
   } while (0);
   d20 = +HEAPF32[i15 + 64 + (i9 << 2) >> 2];
   d19 = +HEAPF32[i15 + 88 + (i9 << 2) >> 2];
   d18 = d20 + d3 * d19;
   HEAPF32[i1 >> 2] = d18;
   d3 = d20 + d2 * d19;
   HEAPF32[i4 >> 2] = d3;
   d2 = d18;
  }
  i1 = HEAP32[i15 + 40 + (i9 << 2) >> 2] | 0;
  if ((i1 | 0) != -1) {
   d20 = +HEAPF32[i12 + (i1 << 2) >> 2];
   HEAPF32[i11 + 12 + (i10 << 2) >> 2] = d2 + d20;
   HEAPF32[i11 + (i10 << 2) >> 2] = d3 + d20;
  }
  i10 = i10 + 1 | 0;
 } while ((i10 | 0) != 3);
 if (!(_VectorCompare(i11 + 12 | 0, i11) | 0)) {
  __Z15AngleQuaternionPfS_(i11 + 12 | 0, i11 + 40 | 0);
  __Z15AngleQuaternionPfS_(i11, i11 + 24 | 0);
  __Z15QuaternionSlerpPfS_fS_(i11 + 40 | 0, i11 + 24 | 0, d17, i16);
 } else __Z15AngleQuaternionPfS_(i11 + 12 | 0, i16);
 STACKTOP = i11;
 return;
}

function _PM_CreateStuckTable() {
 var i1 = 0, i2 = 0, d3 = 0.0, i4 = 0, d5 = 0.0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 _memset(gb + 121420 | 0, 0, 648) | 0;
 i1 = 0;
 d3 = -.125;
 while (1) {
  HEAPF32[gb + 121420 + (i1 * 12 | 0) >> 2] = 0.0;
  HEAPF32[gb + 121420 + (i1 * 12 | 0) + 4 >> 2] = 0.0;
  HEAPF32[gb + 121420 + (i1 * 12 | 0) + 8 >> 2] = d3;
  i1 = i1 + 1 | 0;
  if ((i1 | 0) == 3) {
   i1 = 3;
   d3 = -.125;
   break;
  } else d3 = d3 + .125;
 }
 while (1) {
  HEAPF32[gb + 121420 + (i1 * 12 | 0) >> 2] = 0.0;
  HEAPF32[gb + 121420 + (i1 * 12 | 0) + 4 >> 2] = d3;
  HEAPF32[gb + 121420 + (i1 * 12 | 0) + 8 >> 2] = 0.0;
  i1 = i1 + 1 | 0;
  if ((i1 | 0) == 6) {
   i1 = 6;
   d3 = -.125;
   break;
  } else d3 = d3 + .125;
 }
 while (1) {
  HEAPF32[gb + 121420 + (i1 * 12 | 0) >> 2] = d3;
  HEAPF32[gb + 121420 + (i1 * 12 | 0) + 4 >> 2] = 0.0;
  HEAPF32[gb + 121420 + (i1 * 12 | 0) + 8 >> 2] = 0.0;
  i1 = i1 + 1 | 0;
  if ((i1 | 0) == 9) {
   i1 = 9;
   d3 = -.125;
   break;
  } else d3 = d3 + .125;
 }
 while (1) {
  i4 = i1;
  d5 = -.125;
  do {
   i2 = i4;
   i4 = i4 + 2 | 0;
   d6 = -.125;
   while (1) {
    HEAPF32[gb + 121420 + (i2 * 12 | 0) >> 2] = d3;
    HEAPF32[gb + 121420 + (i2 * 12 | 0) + 4 >> 2] = d5;
    HEAPF32[gb + 121420 + (i2 * 12 | 0) + 8 >> 2] = d6;
    i2 = i2 + 1 | 0;
    if ((i2 | 0) == (i4 | 0)) break; else d6 = d6 + .25;
   }
   d5 = d5 + .25;
  } while (d5 <= .125);
  d3 = d3 + .25;
  if (!(d3 <= .125)) break; else i1 = i1 + 4 | 0;
 }
 HEAPF32[i13 >> 2] = 0.0;
 HEAPF32[i13 + 4 >> 2] = 1.0;
 HEAPF32[i13 + 8 >> 2] = 6.0;
 i1 = 0;
 i2 = 17;
 while (1) {
  i12 = HEAP32[i13 + (i1 << 2) >> 2] | 0;
  HEAPF32[gb + 121420 + (i2 * 12 | 0) >> 2] = 0.0;
  HEAPF32[gb + 121420 + (i2 * 12 | 0) + 4 >> 2] = 0.0;
  HEAP32[gb + 121420 + (i2 * 12 | 0) + 8 >> 2] = i12;
  i1 = i1 + 1 | 0;
  if ((i1 | 0) == 3) {
   i1 = 20;
   i2 = -2;
   break;
  } else i2 = i2 + 1 | 0;
 }
 while (1) {
  HEAPF32[gb + 121420 + (i1 * 12 | 0) >> 2] = 0.0;
  HEAPF32[gb + 121420 + (i1 * 12 | 0) + 4 >> 2] = +(i2 | 0);
  HEAPF32[gb + 121420 + (i1 * 12 | 0) + 8 >> 2] = 0.0;
  i1 = i1 + 1 | 0;
  if ((i1 | 0) == 23) {
   i1 = 23;
   i2 = -2;
   break;
  } else i2 = i2 + 2 | 0;
 }
 while (1) {
  HEAPF32[gb + 121420 + (i1 * 12 | 0) >> 2] = +(i2 | 0);
  HEAPF32[gb + 121420 + (i1 * 12 | 0) + 4 >> 2] = 0.0;
  HEAPF32[gb + 121420 + (i1 * 12 | 0) + 8 >> 2] = 0.0;
  i1 = i1 + 1 | 0;
  if ((i1 | 0) == 26) {
   i2 = 0;
   i8 = 26;
   i9 = 29;
   break;
  } else i2 = i2 + 2 | 0;
 }
 while (1) {
  i1 = HEAP32[i13 + (i2 << 2) >> 2] | 0;
  i4 = i8;
  i10 = i9;
  i11 = -2;
  while (1) {
   d3 = +(i11 | 0);
   i7 = i4;
   i12 = -2;
   while (1) {
    HEAPF32[gb + 121420 + (i7 * 12 | 0) >> 2] = d3;
    HEAPF32[gb + 121420 + (i7 * 12 | 0) + 4 >> 2] = +(i12 | 0);
    HEAP32[gb + 121420 + (i7 * 12 | 0) + 8 >> 2] = i1;
    i7 = i7 + 1 | 0;
    if ((i7 | 0) == (i10 | 0)) break; else i12 = i12 + 2 | 0;
   }
   if ((i11 | 0) > 0) break; else {
    i4 = i4 + 3 | 0;
    i10 = i10 + 3 | 0;
    i11 = i11 + 2 | 0;
   }
  }
  i2 = i2 + 1 | 0;
  if ((i2 | 0) == 3) break; else {
   i8 = i8 + 9 | 0;
   i9 = i9 + 9 | 0;
  }
 }
 STACKTOP = i13;
 return;
}

function _PM_WaterMove() {
 var i1 = 0, d2 = 0.0, d3 = 0.0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, d8 = 0.0, i9 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 d2 = +HEAPF32[i1 + 283752 >> 2];
 d3 = +HEAPF32[i1 + 283756 >> 2];
 i4 = 0;
 do {
  HEAPF32[i6 + 116 + (i4 << 2) >> 2] = +HEAPF32[i1 + 20 + (i4 << 2) >> 2] * d2 + +HEAPF32[i1 + 32 + (i4 << 2) >> 2] * d3;
  i4 = i4 + 1 | 0;
 } while ((i4 | 0) != 3);
 if (d2 != 0.0 | d3 != 0.0) i5 = 6; else if (+HEAPF32[i1 + 283760 >> 2] != 0.0) i5 = 6; else {
  d2 = +HEAPF32[i6 + 116 + 8 >> 2] + -60.0;
  HEAPF32[i6 + 116 + 8 >> 2] = d2;
 }
 if ((i5 | 0) == 6) {
  d2 = +HEAPF32[i1 + 283760 >> 2] + +HEAPF32[i6 + 116 + 8 >> 2];
  HEAPF32[i6 + 116 + 8 >> 2] = d2;
 }
 HEAP32[i6 + 104 >> 2] = HEAP32[i6 + 116 >> 2];
 HEAP32[i6 + 104 + 4 >> 2] = HEAP32[i6 + 116 + 4 >> 2];
 HEAPF32[i6 + 104 + 8 >> 2] = d2;
 d2 = +_VectorNormalize(i6 + 104 | 0);
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 d3 = +HEAPF32[i1 + 500 >> 2];
 if (d2 > d3) {
  _VectorScale(i6 + 116 | 0, d3 / d2, i6 + 116 | 0);
  i5 = HEAP32[gb + 121136 >> 2] | 0;
  i1 = i5;
  d2 = +HEAPF32[i5 + 500 >> 2];
 }
 d3 = d2 * .8;
 i5 = i1 + 92 | 0;
 d8 = +HEAPF32[i5 >> 2] + +HEAPF32[i1 + 116 >> 2];
 HEAPF32[i5 >> 2] = d8;
 i5 = i1 + 96 | 0;
 d7 = +HEAPF32[i5 >> 2] + +HEAPF32[i1 + 120 >> 2];
 HEAPF32[i5 >> 2] = d7;
 i5 = i1 + 100 | 0;
 d2 = +HEAPF32[i5 >> 2] + +HEAPF32[i1 + 124 >> 2];
 HEAPF32[i5 >> 2] = d2;
 HEAPF32[i6 + 68 >> 2] = d8;
 HEAPF32[i6 + 68 + 4 >> 2] = d7;
 HEAPF32[i6 + 68 + 8 >> 2] = d2;
 d2 = +_VectorNormalize(i6 + 68 | 0);
 if (d2 != 0.0) {
  i5 = HEAP32[gb + 121136 >> 2] | 0;
  d8 = d2 - d2 * +HEAPF32[i5 + 16 >> 2] * +HEAPF32[(HEAP32[i5 + 324848 >> 2] | 0) + 28 >> 2] * +HEAPF32[i5 + 196 >> 2];
  d8 = d8 < 0.0 ? 0.0 : d8;
  _VectorScale(i5 + 92 | 0, d8 / d2, i5 + 92 | 0);
  d2 = d8;
 } else d2 = 0.0;
 do if (!(d3 < .10000000149011612)) {
  d2 = d3 - d2;
  if (d2 > 0.0) {
   +_VectorNormalize(i6 + 116 | 0);
   i1 = HEAP32[gb + 121136 >> 2] | 0;
   d8 = d3 * +HEAPF32[(HEAP32[i1 + 324848 >> 2] | 0) + 16 >> 2] * +HEAPF32[i1 + 16 >> 2] * +HEAPF32[i1 + 196 >> 2];
   d2 = d8 > d2 ? d2 : d8;
   i4 = 0;
   do {
    i5 = i1 + 92 + (i4 << 2) | 0;
    HEAPF32[i5 >> 2] = d2 * +HEAPF32[i6 + 116 + (i4 << 2) >> 2] + +HEAPF32[i5 >> 2];
    i4 = i4 + 1 | 0;
   } while ((i4 | 0) != 3);
  } else i1 = HEAP32[gb + 121136 >> 2] | 0;
  _VectorMA(i1 + 56 | 0, +HEAPF32[i1 + 16 >> 2], i1 + 92 | 0, i6 + 80 | 0);
  HEAP32[i6 + 92 >> 2] = HEAP32[i6 + 80 >> 2];
  HEAP32[i6 + 92 + 4 >> 2] = HEAP32[i6 + 80 + 4 >> 2];
  i1 = HEAP32[gb + 121136 >> 2] | 0;
  HEAPF32[i6 + 92 + 8 >> 2] = +HEAPF32[i6 + 80 + 8 >> 2] + (+HEAPF32[(HEAP32[i1 + 324848 >> 2] | 0) + 48 >> 2] + 1.0);
  mftCall_viiiii(HEAP32[i1 + 324992 >> 2] | 0, i6 | 0, i6 + 92 | 0, i6 + 80 | 0, 0, -1);
  i1 = HEAP32[i6 + 20 >> 2] | 0;
  i4 = HEAP32[i6 + 24 >> 2] | 0;
  i5 = HEAP32[i6 + 28 >> 2] | 0;
  if (!(HEAP32[i6 + 4 >> 2] | 0)) if (!(HEAP32[i6 >> 2] | 0)) {
   i9 = HEAP32[gb + 121136 >> 2] | 0;
   HEAP32[i9 + 56 >> 2] = i1;
   HEAP32[i9 + 60 >> 2] = i4;
   HEAP32[i9 + 64 >> 2] = i5;
   break;
  }
  _PM_FlyMove() | 0;
 } while (0);
 STACKTOP = i6;
 return;
}

function __ZN13CHudSpectator4DrawEf(i9, d1) {
 i9 = i9 | 0;
 d1 = +d1;
 var i2 = 0, i3 = 0, d4 = 0.0, d5 = 0.0, d6 = 0.0, i7 = 0, i8 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 i2 = HEAP32[gb + 121104 >> 2] | 0;
 if (!i2) i2 = 0; else {
  d1 = +HEAPF32[i9 + 4716 >> 2];
  if ((i2 | 0) == 5 & d1 != 0.0) {
   d6 = d1 + +HEAPF32[i9 + 3824 >> 2];
   d6 = d6 > 3.0 ? 3.0 : d6;
   HEAPF32[i9 + 3824 >> 2] = d6;
   if (d6 < .5) HEAPF32[i9 + 3824 >> 2] = .5;
  }
  if ((i2 | 0) != 3 ? +HEAPF32[i9 + 4720 >> 2] != 0.0 : 0) {
   mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, gb + 116248 | 0, 0, i10 | 0, 0);
   +_VectorNormalize(i10);
   _VectorScale(i10, +HEAPF32[i9 + 4720 >> 2], i10);
   HEAPF32[i9 + 3828 >> 2] = +HEAPF32[i9 + 3828 >> 2] + +HEAPF32[i10 >> 2];
   HEAPF32[i9 + 3828 + 4 >> 2] = +HEAPF32[i9 + 3828 + 4 >> 2] + +HEAPF32[i10 + 4 >> 2];
   HEAPF32[i9 + 3828 + 8 >> 2] = +HEAPF32[i9 + 3828 + 8 >> 2] + +HEAPF32[i10 + 8 >> 2];
   i2 = HEAP32[gb + 121104 >> 2] | 0;
  }
  if ((i2 | 0) < 5) i2 = 1; else if (+HEAPF32[(HEAP32[i9 + 3840 >> 2] | 0) + 12 >> 2] != 0.0) {
   __ZN14CHudScoreboard17GetAllPlayersInfoEv(gb + 46040 + 6496 | 0);
   i8 = 0;
   do {
    i7 = i9 + 3888 + (i8 * 12 | 0) | 0;
    do if (!(+HEAPF32[i7 + 8 >> 2] < 0.0)) {
     if (+HEAPF32[(HEAP32[i9 + 3856 >> 2] | 0) + 12 >> 2] != 0.0) {
      d1 = +HEAPF32[i7 >> 2];
      i2 = HEAP32[i9 + 1752 >> 2] | 0;
      d5 = +(HEAP32[gb + 46040 + 8112 >> 2] | 0) * 1.5625000232830644e-03;
      if (d1 > +(~~(+(i2 | 0) * d5 + .5) | 0)) {
       d4 = +HEAPF32[i7 + 4 >> 2];
       i3 = HEAP32[i9 + 1756 >> 2] | 0;
       d6 = +(HEAP32[gb + 46040 + 8116 >> 2] | 0) * 2.0833334419876337e-03;
       if (d4 > +(~~(+(i3 | 0) * d6 + .5) | 0)) if (d1 < +(~~(d5 * +((HEAP32[i9 + 1764 >> 2] | 0) + i2 | 0) + .5) | 0)) if (d4 < +(~~(d6 * +((HEAP32[i9 + 1760 >> 2] | 0) + i3 | 0) + .5) | 0)) break;
      }
     }
     i2 = i8 + 1 | 0;
     i3 = __Z14GetClientColori(i2) | 0;
     i2 = HEAP32[gb + 54736 + (i2 << 5) >> 2] | 0;
     _memcpy(i10 + 16 | 0, i2 | 0, (_strlen(i2 | 0) | 0) + 1 | 0) | 0;
     i2 = (_strlen(i10 + 16 | 0) | 0) * 3 | 0;
     d1 = +HEAPF32[i3 >> 2];
     d4 = +HEAPF32[i3 + 4 >> 2];
     d5 = +HEAPF32[i3 + 8 >> 2];
     if (+HEAPF32[(HEAP32[gb + 93740 >> 2] | 0) + 12 >> 2] == 1.0) {
      HEAPF32[gb + 93744 >> 2] = d1;
      HEAPF32[gb + 93744 + 4 >> 2] = d4;
      HEAPF32[gb + 93744 + 8 >> 2] = d5;
      d1 = 1.0;
     } else {
      mftCall_vddd(HEAP32[gb + 92340 + 112 >> 2] | 0, +d1, +d4, +d5);
      d1 = +HEAPF32[(HEAP32[gb + 93740 >> 2] | 0) + 12 >> 2];
     }
     i3 = ~~(+HEAPF32[i7 >> 2] - +(i2 | 0));
     i2 = ~~+HEAPF32[i7 + 4 >> 2];
     if (d1 == 1.0) {
      __ZN4CHud13DrawHudStringEiiiPciii(0, i3, i2, 9999, i10 + 16 | 0, ~~(+HEAPF32[gb + 93744 >> 2] * 255.0), ~~(+HEAPF32[gb + 93744 + 4 >> 2] * 255.0), ~~(+HEAPF32[gb + 93744 + 8 >> 2] * 255.0)) | 0;
      break;
     } else {
      mftCall_iiii(HEAP32[gb + 92340 + 108 >> 2] | 0, i3 | 0, i2 | 0, i10 + 16 | 0) | 0;
      break;
     }
    } while (0);
    i8 = i8 + 1 | 0;
   } while ((i8 | 0) != 64);
   i2 = 1;
  } else i2 = 1;
 }
 STACKTOP = i10;
 return i2 | 0;
}

function __ZN8CHudAmmo17MsgFunc_CurWeaponEPKciPv(i5, i1, i2, i3) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 __Z10BEGIN_READPvi(i3, i2);
 i2 = __Z9READ_BYTEv() | 0;
 i4 = __Z9READ_CHARv() | 0;
 i3 = __Z9READ_CHARv() | 0;
 L1 : do if ((i4 | 0) < 1) {
  i1 = HEAP32[gb + 92340 + 52 >> 2] | 0;
  HEAP32[i6 >> 2] = HEAP32[gb + 92124 >> 2];
  HEAP32[i6 + 4 >> 2] = HEAP32[gb + 92124 + 4 >> 2];
  HEAP32[i6 + 8 >> 2] = HEAP32[gb + 92124 + 8 >> 2];
  HEAP32[i6 + 12 >> 2] = HEAP32[gb + 92124 + 12 >> 2];
  mftCall_viiiii(i1 | 0, 0, i6 | 0, 0, 0, 0);
  i1 = 0;
 } else {
  do if ((HEAP32[gb + 121104 >> 2] | 0) != 4) if ((i3 & i4 | 0) == -1) {
   HEAP32[gb + 46040 + 8644 >> 2] = 1;
   HEAP32[gb + 81320 >> 2] = 0;
   i1 = 1;
   break L1;
  } else {
   HEAP32[gb + 46040 + 8644 >> 2] = 0;
   break;
  } while (0);
  i1 = gb + 81328 + (i4 * 328 | 0) | 0;
  if (!i1) i1 = 0; else {
   HEAP32[gb + 81328 + (i4 * 328 | 0) + 160 >> 2] = (i3 | 0) < -1 ? 0 - i3 | 0 : i3;
   if (!i2) i1 = 1; else {
    HEAP32[i5 + 28 >> 2] = i1;
    do if ((HEAP32[gb + 46040 + 88 >> 2] | 0) > 89) {
     if ((i2 | 0) > 1) {
      i1 = HEAP32[gb + 81328 + (i4 * 328 | 0) + 268 >> 2] | 0;
      if (i1 | 0) {
       i3 = HEAP32[gb + 92340 + 52 >> 2] | 0;
       i4 = gb + 81328 + (i4 * 328 | 0) + 272 | 0;
       HEAP32[i6 >> 2] = HEAP32[i4 >> 2];
       HEAP32[i6 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
       HEAP32[i6 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
       HEAP32[i6 + 12 >> 2] = HEAP32[i4 + 12 >> 2];
       mftCall_viiiii(i3 | 0, i1 | 0, i6 | 0, 255, 255, 255);
       break;
      }
     }
     i2 = HEAP32[gb + 92340 + 52 >> 2] | 0;
     i3 = HEAP32[gb + 81328 + (i4 * 328 | 0) + 248 >> 2] | 0;
     i4 = gb + 81328 + (i4 * 328 | 0) + 252 | 0;
     HEAP32[i6 >> 2] = HEAP32[i4 >> 2];
     HEAP32[i6 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
     HEAP32[i6 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
     HEAP32[i6 + 12 >> 2] = HEAP32[i4 + 12 >> 2];
     mftCall_viiiii(i2 | 0, i3 | 0, i6 | 0, 255, 255, 255);
    } else {
     if ((i2 | 0) > 1) {
      i1 = HEAP32[gb + 81328 + (i4 * 328 | 0) + 308 >> 2] | 0;
      if (i1 | 0) {
       i3 = HEAP32[gb + 92340 + 52 >> 2] | 0;
       i4 = gb + 81328 + (i4 * 328 | 0) + 312 | 0;
       HEAP32[i6 >> 2] = HEAP32[i4 >> 2];
       HEAP32[i6 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
       HEAP32[i6 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
       HEAP32[i6 + 12 >> 2] = HEAP32[i4 + 12 >> 2];
       mftCall_viiiii(i3 | 0, i1 | 0, i6 | 0, 255, 255, 255);
       break;
      }
     }
     i2 = HEAP32[gb + 92340 + 52 >> 2] | 0;
     i3 = HEAP32[gb + 81328 + (i4 * 328 | 0) + 288 >> 2] | 0;
     i4 = gb + 81328 + (i4 * 328 | 0) + 292 | 0;
     HEAP32[i6 >> 2] = HEAP32[i4 >> 2];
     HEAP32[i6 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
     HEAP32[i6 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
     HEAP32[i6 + 12 >> 2] = HEAP32[i4 + 12 >> 2];
     mftCall_viiiii(i2 | 0, i3 | 0, i6 | 0, 255, 255, 255);
    } while (0);
    HEAPF32[i5 + 20 >> 2] = 200.0;
    HEAP32[i5 + 16 >> 2] = HEAP32[i5 + 16 >> 2] | 1;
    i1 = 1;
   }
  }
 } while (0);
 STACKTOP = i6;
 return i1 | 0;
}

function __Z8CAM_Initv() {
 var i1 = 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42175 | 0, fb + 24 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42187 | 0, fb + 25 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42199 | 0, fb + 26 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42213 | 0, fb + 27 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42227 | 0, fb + 28 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42239 | 0, fb + 29 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42251 | 0, fb + 30 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42264 | 0, fb + 31 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42277 | 0, fb + 32 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42284 | 0, fb + 33 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42291 | 0, fb + 34 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42299 | 0, fb + 35 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42307 | 0, fb + 36 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42319 | 0, fb + 37 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42331 | 0, fb + 38 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42345 | 0, fb + 39 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42359 | 0, fb + 40 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42372 | 0, fb + 41 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 42385 | 0, fb + 42 | 0) | 0;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 42163 | 0, gb + 44858 | 0, 0) | 0;
 HEAP32[gb + 93768 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 42392 | 0, gb + 44858 | 0, 0) | 0;
 HEAP32[gb + 93772 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 42403 | 0, gb + 42416 | 0, 0) | 0;
 HEAP32[gb + 93776 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 42419 | 0, gb + 44858 | 0, 0) | 0;
 HEAP32[gb + 93780 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 42434 | 0, gb + 42448 | 0, 0) | 0;
 HEAP32[gb + 93784 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 42451 | 0, gb + 44858 | 0, 0) | 0;
 HEAP32[gb + 93788 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 42463 | 0, gb + 42474 | 0, 0) | 0;
 HEAP32[gb + 93792 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 42479 | 0, gb + 42490 | 0, 0) | 0;
 HEAP32[gb + 93796 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 42494 | 0, gb + 42503 | 0, 0) | 0;
 HEAP32[gb + 93800 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 42509 | 0, gb + 42518 | 0, 0) | 0;
 HEAP32[gb + 93804 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 42525 | 0, gb + 42539 | 0, 0) | 0;
 HEAP32[gb + 93808 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 42545 | 0, gb + 42559 | 0, 0) | 0;
 HEAP32[gb + 93812 >> 2] = i1;
 return;
}

function __ZN11CHudSayText4DrawEf(i2, d3) {
 i2 = i2 | 0;
 d3 = +d3;
 var d1 = 0.0, i4 = 0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i4 = HEAP32[gb + 94428 >> 2] | 0;
 d6 = +HEAPF32[gb + 94432 >> 2];
 d1 = +HEAPF32[(HEAP32[i2 + 24 >> 2] | 0) + 12 >> 2] + d3;
 d6 = d6 < d1 ? d6 : d1;
 HEAPF32[gb + 94432 >> 2] = d6;
 do if (!(d6 <= d3)) i8 = 0; else if (!(HEAP8[gb + 129049 >> 0] | 0)) {
  HEAP32[i2 + 16 >> 2] = HEAP32[i2 + 16 >> 2] & -2;
  i8 = 0;
  break;
 } else {
  HEAPF32[gb + 94432 >> 2] = d1;
  __Z12ScrollTextUpv() | 0;
  i8 = 0;
  break;
 } while (0);
 while (1) {
  i2 = gb + 129049 + (i8 << 8) | 0;
  L8 : do switch (HEAP8[i2 >> 0] | 0) {
  case 0:
   break;
  case 2:
   {
    i5 = gb + 94380 + (i8 << 2) | 0;
    if (!(HEAP32[i5 >> 2] | 0)) i9 = 17; else {
     i7 = gb + 94404 + (i8 << 2) | 0;
     i10 = HEAP32[i7 >> 2] | 0;
     _strncpy(gb + 130585 | 0, i2 | 0, ((i10 | 0) < 64 ? i10 : 64) | 0) | 0;
     i2 = HEAP32[i7 >> 2] | 0;
     HEAP8[((i2 | 0) < 63 ? i2 : 63) + (gb + 130585) >> 0] = 0;
     i5 = HEAP32[i5 >> 2] | 0;
     d1 = +HEAPF32[i5 >> 2];
     d6 = +HEAPF32[i5 + 4 >> 2];
     d3 = +HEAPF32[i5 + 8 >> 2];
     do if (+HEAPF32[(HEAP32[gb + 93740 >> 2] | 0) + 12 >> 2] == 1.0) {
      HEAPF32[gb + 93744 >> 2] = d1;
      HEAPF32[gb + 93744 + 4 >> 2] = d6;
      HEAPF32[gb + 93744 + 8 >> 2] = d3;
      i9 = 12;
     } else {
      mftCall_vddd(HEAP32[gb + 92340 + 112 >> 2] | 0, +d1, +d6, +d3);
      if (+HEAPF32[(HEAP32[gb + 93740 >> 2] | 0) + 12 >> 2] == 1.0) {
       d1 = +HEAPF32[gb + 93744 >> 2];
       d6 = +HEAPF32[gb + 93744 + 4 >> 2];
       d3 = +HEAPF32[gb + 93744 + 8 >> 2];
       i9 = 12;
       break;
      } else {
       i5 = mftCall_iiii(HEAP32[gb + 92340 + 108 >> 2] | 0, 10, i4 | 0, gb + 130585 | 0) | 0;
       break;
      }
     } while (0);
     if ((i9 | 0) == 12) {
      i9 = 0;
      i5 = __ZN4CHud13DrawHudStringEiiiPciii(0, 10, i4, 9999, gb + 130585 | 0, ~~(d1 * 255.0), ~~(d6 * 255.0), ~~(d3 * 255.0)) | 0;
     }
     i2 = (HEAP32[i7 >> 2] | 0) + (gb + 129049 + (i8 << 8)) | 0;
     if (+HEAPF32[(HEAP32[gb + 93740 >> 2] | 0) + 12 >> 2] == 1.0) {
      __ZN4CHud13DrawHudStringEiiiPciii(0, i5, i4, 9999, i2, ~~(+HEAPF32[gb + 93744 >> 2] * 255.0), ~~(+HEAPF32[gb + 93744 + 4 >> 2] * 255.0), ~~(+HEAPF32[gb + 93744 + 8 >> 2] * 255.0)) | 0;
      break L8;
     } else {
      mftCall_iiii(HEAP32[gb + 92340 + 108 >> 2] | 0, i5 | 0, i4 | 0, i2 | 0) | 0;
      break L8;
     }
    }
    break;
   }
  default:
   i9 = 17;
  } while (0);
  do if ((i9 | 0) == 17) {
   i9 = 0;
   if (+HEAPF32[(HEAP32[gb + 93740 >> 2] | 0) + 12 >> 2] == 1.0) {
    __ZN4CHud13DrawHudStringEiiiPciii(0, 10, i4, 9999, i2, ~~(+HEAPF32[gb + 93744 >> 2] * 255.0), ~~(+HEAPF32[gb + 93744 + 4 >> 2] * 255.0), ~~(+HEAPF32[gb + 93744 + 8 >> 2] * 255.0)) | 0;
    break;
   } else {
    mftCall_iiii(HEAP32[gb + 92340 + 108 >> 2] | 0, 10, i4 | 0, i2 | 0) | 0;
    break;
   }
  } while (0);
  i8 = i8 + 1 | 0;
  if ((i8 | 0) == 5) break; else i4 = (HEAP32[gb + 94436 >> 2] | 0) + i4 | 0;
 }
 return 1;
}

function __ZN20CStudioModelRenderer16StudioMergeBonesEP7model_s(i6, i4) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0, d8 = 0.0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i2 = (HEAP32[i6 + 48 >> 2] | 0) + 732 | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i3 = HEAP32[i6 + 68 >> 2] | 0;
 if ((i1 | 0) >= (HEAP32[i3 + 164 >> 2] | 0)) {
  HEAP32[i2 >> 2] = 0;
  i1 = 0;
 }
 i3 = i3 + (HEAP32[i3 + 168 >> 2] | 0) + (i1 * 176 | 0) | 0;
 d8 = +mftCall_dii(HEAP32[(HEAP32[i6 >> 2] | 0) + 48 >> 2] | 0, i6 | 0, i3 | 0);
 i5 = mftCall_iiii(HEAP32[(HEAP32[i6 >> 2] | 0) + 20 >> 2] | 0, i6 | 0, i4 | 0, i3 | 0) | 0;
 mftCall_viiiiid(HEAP32[(HEAP32[i6 >> 2] | 0) + 72 >> 2] | 0, i6 | 0, gb + 94624 | 0, gb + 96160 | 0, i3 | 0, i5 | 0, +d8);
 i5 = HEAP32[i6 + 68 >> 2] | 0;
 i4 = i5 + (HEAP32[i5 + 144 >> 2] | 0) | 0;
 if ((HEAP32[i5 + 140 >> 2] | 0) > 0) {
  i5 = 0;
  do {
   i2 = HEAP32[i6 + 92 >> 2] | 0;
   L8 : do if ((i2 | 0) > 0) {
    i3 = i4 + (i5 * 112 | 0) | 0;
    i1 = 0;
    while (1) {
     if (!(_strcasecmp(i3 | 0, i6 + 96 + (i1 << 5) | 0) | 0)) break;
     i1 = i1 + 1 | 0;
     if ((i1 | 0) >= (i2 | 0)) break L8;
    }
    __Z10MatrixCopyPA4_fS0_(i6 + 4192 + (i1 * 48 | 0) | 0, (HEAP32[i6 + 16552 >> 2] | 0) + (i5 * 48 | 0) | 0);
    __Z10MatrixCopyPA4_fS0_(i6 + 10336 + (i1 * 48 | 0) | 0, (HEAP32[i6 + 16556 >> 2] | 0) + (i5 * 48 | 0) | 0);
    i2 = HEAP32[i6 + 92 >> 2] | 0;
   } else i1 = 0; while (0);
   do if ((i1 | 0) >= (i2 | 0)) {
    __Z16QuaternionMatrixPfPA4_f(gb + 96160 + (i5 << 4) | 0, i7);
    HEAP32[i7 + 12 >> 2] = HEAP32[gb + 94624 + (i5 * 12 | 0) >> 2];
    HEAP32[i7 + 28 >> 2] = HEAP32[gb + 94624 + (i5 * 12 | 0) + 4 >> 2];
    HEAP32[i7 + 44 >> 2] = HEAP32[gb + 94624 + (i5 * 12 | 0) + 8 >> 2];
    i2 = i4 + (i5 * 112 | 0) + 32 | 0;
    i1 = HEAP32[i2 >> 2] | 0;
    if ((i1 | 0) != -1) {
     i3 = HEAP32[i6 + 16552 >> 2] | 0;
     __Z16ConcatTransformsPA4_fS0_S0_(i3 + (i1 * 48 | 0) | 0, i7, i3 + (i5 * 48 | 0) | 0);
     i3 = HEAP32[i6 + 16556 >> 2] | 0;
     __Z16ConcatTransformsPA4_fS0_S0_(i3 + ((HEAP32[i2 >> 2] | 0) * 48 | 0) | 0, i7, i3 + (i5 * 48 | 0) | 0);
     break;
    }
    if (!(mftCall_i(HEAP32[gb + 94440 + 160 >> 2] | 0) | 0)) {
     __Z16ConcatTransformsPA4_fS0_S0_(HEAP32[i6 + 16548 >> 2] | 0, i7, (HEAP32[i6 + 16552 >> 2] | 0) + (i5 * 48 | 0) | 0);
     __Z16ConcatTransformsPA4_fS0_S0_(HEAP32[i6 + 16544 >> 2] | 0, i7, (HEAP32[i6 + 16556 >> 2] | 0) + (i5 * 48 | 0) | 0);
    } else {
     __Z16ConcatTransformsPA4_fS0_S0_(HEAP32[i6 + 16544 >> 2] | 0, i7, (HEAP32[i6 + 16552 >> 2] | 0) + (i5 * 48 | 0) | 0);
     __Z10MatrixCopyPA4_fS0_((HEAP32[i6 + 16552 >> 2] | 0) + (i5 * 48 | 0) | 0, (HEAP32[i6 + 16556 >> 2] | 0) + (i5 * 48 | 0) | 0);
    }
    mftCall_viii(HEAP32[(HEAP32[i6 >> 2] | 0) + 52 >> 2] | 0, i6 | 0, HEAP32[i6 + 48 >> 2] | 0, (HEAP32[i6 + 16552 >> 2] | 0) + (i5 * 48 | 0) | 0);
   } while (0);
   i5 = i5 + 1 | 0;
  } while ((i5 | 0) < (HEAP32[(HEAP32[i6 + 68 >> 2] | 0) + 140 >> 2] | 0));
 }
 STACKTOP = i7;
 return;
}

function __Z7IN_MovefP9usercmd_s(d1, i5) {
 d1 = +d1;
 i5 = i5 | 0;
 var i2 = 0, d3 = 0.0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(HEAP32[gb + 46040 + 8648 >> 2] | 0)) {
  if (+HEAPF32[(HEAP32[gb + 118460 >> 2] | 0) + 12 >> 2] != 2.0) {
   i2 = mftCall_i(HEAP32[gb + 92340 + 204 >> 2] | 0) | 0;
   if (!i2) i2 = 0; else i2 = (HEAP32[i2 + 776 >> 2] | 0) == 5;
  } else i2 = 0;
  if (!(__Z9CL_IsDeadv() | 0)) mftCall_vi(HEAP32[gb + 92340 + 136 >> 2] | 0, i4 | 0); else {
   HEAP32[i4 >> 2] = HEAP32[gb + 118484 >> 2];
   HEAP32[i4 + 4 >> 2] = HEAP32[gb + 118484 + 4 >> 2];
   HEAP32[i4 + 8 >> 2] = HEAP32[gb + 118484 + 8 >> 2];
  }
  d1 = +__ZN4CHud14GetSensitivityEv(gb + 46040 | 0);
  if (d1 != 0.0) {
   d1 = d1 * +HEAPF32[gb + 118476 >> 2];
   HEAPF32[gb + 118476 >> 2] = d1;
   d3 = +__ZN4CHud14GetSensitivityEv(gb + 46040 | 0);
   d3 = d3 * +HEAPF32[gb + 118480 >> 2];
  } else {
   d3 = +HEAPF32[(HEAP32[gb + 118452 >> 2] | 0) + 12 >> 2];
   d1 = d3 * +HEAPF32[gb + 118476 >> 2];
   HEAPF32[gb + 118476 >> 2] = d1;
   d3 = d3 * +HEAPF32[gb + 118480 >> 2];
  }
  HEAPF32[gb + 118480 >> 2] = d3;
  d1 = d1 + +HEAPF32[i4 + 4 >> 2];
  HEAPF32[i4 + 4 >> 2] = d1;
  if (i2) {
   if (+HEAPF32[(HEAP32[gb + 118460 >> 2] | 0) + 12 >> 2] == 1.0) HEAPF32[i4 + 4 >> 2] = d1 - +HEAPF32[gb + 118468 >> 2] * 5.0;
   HEAPF32[gb + 118468 >> 2] = 0.0;
  }
  if (!(HEAP8[gb + 46040 + 6560 >> 0] | 0)) {
   d3 = d3 + +HEAPF32[i4 >> 2];
   HEAPF32[i4 >> 2] = d3;
  } else {
   HEAPF32[gb + 46040 + 6556 >> 2] = d3 + +HEAPF32[gb + 46040 + 6556 >> 2];
   d3 = +HEAPF32[i4 >> 2];
  }
  d1 = +HEAPF32[(HEAP32[gb + 93968 >> 2] | 0) + 12 >> 2];
  if (d3 > d1) HEAPF32[i4 >> 2] = d1; else d1 = d3;
  d3 = -+HEAPF32[(HEAP32[gb + 93964 >> 2] | 0) + 12 >> 2];
  if (d1 < d3) HEAPF32[i4 >> 2] = d3;
  if (!(__Z9CL_IsDeadv() | 0)) mftCall_vi(HEAP32[gb + 92340 + 140 >> 2] | 0, i4 | 0);
  HEAP32[gb + 118484 >> 2] = HEAP32[i4 >> 2];
  HEAP32[gb + 118484 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
  HEAP32[gb + 118484 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
  i2 = HEAP32[gb + 118472 >> 2] | 0;
  if (i2 | 0) {
   __Z16IN_ToggleButtonsff(+HEAPF32[gb + 118464 >> 2] / +(i2 | 0), +HEAPF32[gb + 118468 >> 2] / +(i2 | 0));
   d1 = +HEAPF32[gb + 118464 >> 2];
   if (d1 != 0.0) HEAPF32[i5 + 16 >> 2] = d1 * +HEAPF32[(HEAP32[gb + 93976 >> 2] | 0) + 12 >> 2] / +(HEAP32[gb + 118472 >> 2] | 0);
   d3 = +HEAPF32[gb + 118468 >> 2];
   if (d3 != 0.0) HEAPF32[i5 + 20 >> 2] = d3 * +HEAPF32[(HEAP32[gb + 93984 >> 2] | 0) + 12 >> 2] / +(HEAP32[gb + 118472 >> 2] | 0);
   if ((d1 != 0.0 | d3 != 0.0) & (HEAP32[gb + 94152 + 8 >> 2] & 1 | 0) != 0) {
    d3 = +HEAPF32[(HEAP32[gb + 93988 >> 2] | 0) + 12 >> 2];
    HEAPF32[i5 + 16 >> 2] = d3 * +HEAPF32[i5 + 16 >> 2];
    HEAPF32[i5 + 20 >> 2] = d3 * +HEAPF32[i5 + 20 >> 2];
   }
  }
  HEAPF32[gb + 118476 >> 2] = 0.0;
  HEAPF32[gb + 118480 >> 2] = 0.0;
  HEAPF32[gb + 118464 >> 2] = 0.0;
  HEAPF32[gb + 118468 >> 2] = 0.0;
  HEAP32[gb + 118472 >> 2] = 0;
 }
 STACKTOP = i4;
 return;
}

function __ZN11CHudMessage15MessageDrawScanEP20client_textmessage_sf(i11, i10, d2) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 d2 = +d2;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i9 = HEAP32[i10 + 40 >> 2] | 0;
 HEAP32[i11 + 176 >> 2] = 1;
 HEAPF32[i11 + 152 >> 2] = d2;
 HEAP32[i11 + 148 >> 2] = i10;
 HEAP32[i11 + 164 >> 2] = 0;
 i1 = 1;
 i5 = 0;
 i6 = 0;
 i7 = i9;
 i3 = 0;
 L1 : while (1) {
  i4 = HEAP8[i7 >> 0] | 0;
  switch (i4 << 24 >> 24) {
  case 0:
   break L1;
  case 10:
   {
    i1 = i1 + 1 | 0;
    HEAP32[i11 + 176 >> 2] = i1;
    if ((i3 | 0) > (i5 | 0)) {
     HEAP32[i11 + 164 >> 2] = i3;
     i5 = i3;
     i3 = 0;
    } else i3 = 0;
    break;
   }
  default:
   i3 = (HEAP16[gb + 46040 + 8128 + (i4 << 24 >> 24 << 1) >> 1] | 0) + i3 | 0;
  }
  i6 = i6 + 1 | 0;
  i7 = i7 + 1 | 0;
 }
 HEAP32[i11 + 184 >> 2] = i6;
 i1 = Math_imul(HEAP32[gb + 46040 + 8124 >> 2] | 0, i1) | 0;
 HEAP32[i11 + 168 >> 2] = i1;
 HEAP32[i11 + 160 >> 2] = __ZN11CHudMessage9YPositionEfi(0, +HEAPF32[i10 + 16 >> 2], i1) | 0;
 HEAPF32[i11 + 208 >> 2] = 0.0;
 __ZN11CHudMessage16MessageScanStartEv(i11);
 i1 = HEAP32[i11 + 176 >> 2] | 0;
 if ((i1 | 0) > 0) {
  i8 = 0;
  i7 = i9;
  do {
   HEAP32[i11 + 180 >> 2] = 0;
   HEAP32[i11 + 172 >> 2] = 0;
   i5 = 0;
   i6 = 0;
   i4 = i7;
   L13 : while (1) {
    i3 = HEAP8[i4 >> 0] | 0;
    switch (i3 << 24 >> 24) {
    case 10:
    case 0:
     break L13;
    default:
     {}
    }
    HEAP8[i12 + i6 >> 0] = i3;
    i7 = (HEAP16[gb + 46040 + 8128 + ((i3 & 255) << 1) >> 1] | 0) + i5 | 0;
    HEAP32[i11 + 172 >> 2] = i7;
    i9 = i6 + 1 | 0;
    HEAP32[i11 + 180 >> 2] = i9;
    i5 = i7;
    i6 = i9;
    i4 = i4 + 1 | 0;
   }
   i7 = i4 + 1 | 0;
   HEAP8[i12 + i6 >> 0] = 0;
   i3 = __ZN11CHudMessage9XPositionEfii(0, +HEAPF32[i10 + 12 >> 2], i5, HEAP32[i11 + 164 >> 2] | 0) | 0;
   HEAP32[i11 + 156 >> 2] = i3;
   if ((i6 | 0) > 0) {
    i5 = 0;
    do {
     i1 = HEAPU8[i12 + i5 >> 0] | 0;
     HEAP32[i11 + 200 >> 2] = i1;
     i3 = (HEAP16[gb + 46040 + 8128 + (i1 << 1) >> 1] | 0) + i3 | 0;
     __ZN11CHudMessage19MessageScanNextCharEv(i11);
     i1 = HEAP32[i11 + 156 >> 2] | 0;
     if ((i1 | 0) > -1) {
      i4 = HEAP32[i11 + 160 >> 2] | 0;
      if (!((i4 | 0) < 0 ? 1 : (i3 | 0) > (HEAP32[gb + 46040 + 8112 >> 2] | 0))) mftCall_iiiiiii(HEAP32[gb + 92340 + 104 >> 2] | 0, i1 | 0, i4 | 0, HEAP32[i11 + 200 >> 2] | 0, HEAP32[i11 + 188 >> 2] | 0, HEAP32[i11 + 192 >> 2] | 0, HEAP32[i11 + 196 >> 2] | 0) | 0;
     }
     HEAP32[i11 + 156 >> 2] = i3;
     i5 = i5 + 1 | 0;
    } while ((i5 | 0) < (HEAP32[i11 + 180 >> 2] | 0));
    i1 = HEAP32[i11 + 176 >> 2] | 0;
   }
   HEAP32[i11 + 160 >> 2] = (HEAP32[i11 + 160 >> 2] | 0) + (HEAP32[gb + 46040 + 8124 >> 2] | 0);
   i8 = i8 + 1 | 0;
  } while ((i8 | 0) < (i1 | 0));
 }
 STACKTOP = i12;
 return;
}

function _PM_LadderMove(i2) {
 i2 = i2 | 0;
 var i1 = 0, d3 = 0.0, d4 = 0.0, i5 = 0, i6 = 0, d7 = 0.0, d8 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 if ((HEAP32[i1 + 220 >> 2] | 0) != 8) {
  mftCall_viii(HEAP32[i1 + 325012 >> 2] | 0, HEAP32[i2 + 48 >> 2] | 0, i6 + 96 | 0, i6 + 84 | 0);
  HEAPF32[i6 + 176 >> 2] = +HEAPF32[i6 + 96 >> 2] + +HEAPF32[i6 + 84 >> 2];
  HEAPF32[i6 + 176 + 4 >> 2] = +HEAPF32[i6 + 96 + 4 >> 2] + +HEAPF32[i6 + 84 + 4 >> 2];
  HEAPF32[i6 + 176 + 8 >> 2] = +HEAPF32[i6 + 96 + 8 >> 2] + +HEAPF32[i6 + 84 + 8 >> 2];
  _VectorScale(i6 + 176 | 0, .5, i6 + 176 | 0);
  i5 = HEAP32[gb + 121136 >> 2] | 0;
  HEAP32[i5 + 220 >> 2] = 5;
  HEAP32[i6 + 108 >> 2] = HEAP32[i5 + 56 >> 2];
  HEAP32[i6 + 108 + 4 >> 2] = HEAP32[i5 + 60 >> 2];
  HEAPF32[i6 + 108 + 8 >> 2] = +HEAPF32[i5 + 64 >> 2] + (+HEAPF32[i5 + 324852 + ((HEAP32[i5 + 188 >> 2] | 0) * 12 | 0) + 8 >> 2] + -1.0);
  i5 = (mftCall_iii(HEAP32[i5 + 324980 >> 2] | 0, i6 + 108 | 0, 0) | 0) == -2;
  i1 = HEAP32[gb + 121136 >> 2] | 0;
  HEAPF32[i1 + 192 >> 2] = 0.0;
  +mftCall_diiii(HEAP32[i1 + 325020 >> 2] | 0, i2 | 0, i1 + 56 | 0, i6 + 176 | 0, i6 + 120 | 0);
  if (+HEAPF32[i6 + 120 + 16 >> 2] != 1.0) {
   _AngleVectors((HEAP32[gb + 121136 >> 2] | 0) + 68 | 0, i6 + 72 | 0, i6 + 60 | 0, 0);
   i1 = HEAP32[gb + 121136 >> 2] | 0;
   i2 = HEAP16[i1 + 283766 >> 1] | 0;
   d3 = (i2 & 16) == 0 ? 0.0 : -200.0;
   d3 = (i2 & 8) == 0 ? d3 : d3 + 200.0;
   d4 = (i2 & 512) == 0 ? 0.0 : -200.0;
   d4 = (i2 & 1024) == 0 ? d4 : d4 + 200.0;
   do if (!(i2 & 2)) {
    if (!(d3 != 0.0 | d4 != 0.0)) {
     HEAPF32[i1 + 92 >> 2] = 0.0;
     HEAPF32[i1 + 96 >> 2] = 0.0;
     HEAPF32[i1 + 100 >> 2] = 0.0;
     break;
    }
    _VectorScale(i6 + 72 | 0, d3, i6 + 48 | 0);
    _VectorMA(i6 + 48 | 0, d4, i6 + 60 | 0, i6 + 48 | 0);
    HEAPF32[i6 >> 2] = 0.0;
    HEAPF32[i6 + 4 >> 2] = 0.0;
    HEAPF32[i6 + 8 >> 2] = 1.0;
    i1 = i6 + 120 + 32 | 0;
    _CrossProduct(i6, i1, i6 + 36 | 0);
    +_VectorNormalize(i6 + 36 | 0);
    d8 = +HEAPF32[i6 + 48 >> 2];
    d7 = +HEAPF32[i6 + 48 + 4 >> 2];
    d3 = +HEAPF32[i6 + 48 + 8 >> 2];
    d4 = d8 * +HEAPF32[i1 >> 2] + d7 * +HEAPF32[i6 + 120 + 36 >> 2] + d3 * +HEAPF32[i6 + 120 + 40 >> 2];
    _VectorScale(i1, d4, i6 + 24 | 0);
    HEAPF32[i6 + 12 >> 2] = d8 - +HEAPF32[i6 + 24 >> 2];
    HEAPF32[i6 + 12 + 4 >> 2] = d7 - +HEAPF32[i6 + 24 + 4 >> 2];
    HEAPF32[i6 + 12 + 8 >> 2] = d3 - +HEAPF32[i6 + 24 + 8 >> 2];
    _CrossProduct(i1, i6 + 36 | 0, i6);
    _VectorMA(i6 + 12 | 0, -d4, i6, (HEAP32[gb + 121136 >> 2] | 0) + 92 | 0);
    if (i5 & d4 > 0.0) {
     i5 = (HEAP32[gb + 121136 >> 2] | 0) + 92 | 0;
     _VectorMA(i5, 200.0, i1, i5);
    }
   } else {
    HEAP32[i1 + 220 >> 2] = 3;
    _VectorScale(i6 + 120 + 32 | 0, 270.0, i1 + 92 | 0);
   } while (0);
  }
 }
 STACKTOP = i6;
 return;
}

function __ZN11CHudBattery4DrawEf(i11, d1) {
 i11 = i11 | 0;
 d1 = +d1;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if (!(HEAP32[gb + 46040 + 84 >> 2] & 8)) {
  i9 = HEAP32[i11 + 32 >> 2] | 0;
  HEAP32[i10 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i10 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
  HEAP32[i10 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
  HEAP32[i10 + 12 >> 2] = HEAP32[i9 + 12 >> 2];
  i9 = HEAP32[i11 + 36 >> 2] | 0;
  i9 = ~~(+(HEAP32[i10 + 8 >> 2] | 0) + +(HEAP32[i11 + 44 >> 2] | 0) * +(100 - ((i9 | 0) > 100 ? 100 : i9) | 0) * .01);
  HEAP32[i10 + 8 >> 2] = i9;
  HEAP32[i10 + 24 >> 2] = 255;
  HEAP32[i10 + 20 >> 2] = 160;
  HEAP32[i10 + 16 >> 2] = 0;
  if ((HEAP32[gb + 46040 + 8640 >> 2] | 0) < 0) {
   d1 = +HEAPF32[i11 + 40 >> 2];
   if (d1 != 0.0) {
    if (d1 > 100.0) {
     HEAPF32[i11 + 40 >> 2] = 100.0;
     d1 = 100.0;
    }
    d1 = d1 - +HEAPF64[gb + 46040 + 48 >> 3] * 20.0;
    d1 = d1 <= 0.0 ? 0.0 : d1;
    HEAPF32[i11 + 40 >> 2] = d1;
    i2 = ~~(d1 * .009999999776482582 * 128.0 + 100.0);
   } else i2 = 100;
   __Z11ScaleColorsRiS_S_i(i10 + 24 | 0, i10 + 20 | 0, i10 + 16 | 0, i2);
   i6 = HEAP32[i11 + 28 >> 2] | 0;
   i6 = ((HEAP32[i6 + 12 >> 2] | 0) - (HEAP32[i6 + 8 >> 2] | 0) | 0) / 6 | 0;
   i8 = HEAP32[gb + 46040 + 108 >> 2] | 0;
   i8 = (HEAP32[gb + 46040 + 8116 >> 2] | 0) - i8 + ((i8 | 0) / -2 | 0) | 0;
   i7 = (HEAP32[gb + 46040 + 8112 >> 2] | 0) / 5 | 0;
   i2 = HEAP32[i11 + 20 >> 2] | 0;
   if (!i2) {
    i2 = __ZN4CHud14GetSpriteIndexEPKc(gb + 46040 | 0, gb + 40107 | 0) | 0;
    if ((i2 | 0) < 0) i2 = 0; else i2 = HEAP32[(HEAP32[gb + 46040 + 112 >> 2] | 0) + (i2 << 2) >> 2] | 0;
    HEAP32[i11 + 20 >> 2] = i2;
   }
   if (!(HEAP32[i11 + 24 >> 2] | 0)) {
    i3 = __ZN4CHud14GetSpriteIndexEPKc(gb + 46040 | 0, gb + 40118 | 0) | 0;
    if ((i3 | 0) < 0) i3 = 0; else i3 = HEAP32[(HEAP32[gb + 46040 + 112 >> 2] | 0) + (i3 << 2) >> 2] | 0;
    HEAP32[i11 + 24 >> 2] = i3;
   }
   i3 = HEAP32[i10 + 24 >> 2] | 0;
   i4 = HEAP32[i10 + 20 >> 2] | 0;
   i5 = HEAP32[i10 + 16 >> 2] | 0;
   mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0);
   mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i7 | 0, i8 - i6 | 0, HEAP32[i11 + 28 >> 2] | 0);
   if ((HEAP32[i10 + 12 >> 2] | 0) > (i9 | 0)) {
    mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, HEAP32[i11 + 24 >> 2] | 0, i3 | 0, i4 | 0, i5 | 0);
    mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i7 | 0, i9 + (i8 - i6) - (HEAP32[(HEAP32[i11 + 32 >> 2] | 0) + 8 >> 2] | 0) | 0, i10 | 0);
   }
   i9 = HEAP32[i11 + 28 >> 2] | 0;
   __ZN4CHud13DrawHudNumberEiiiiiii(gb + 46040 | 0, (HEAP32[i9 + 4 >> 2] | 0) + i7 - (HEAP32[i9 >> 2] | 0) | 0, i8, 5, HEAP32[i11 + 36 >> 2] | 0, i3, i4, i5) | 0;
  }
 }
 STACKTOP = i10;
 return 1;
}

function __Z19EV_HLDM_FireBulletsiPfS_S_iS_S_fiiPiff(i12, i8, i13, i15, i4, i17, i16, d5, i9, i11, i14, d6, d7) {
 i12 = i12 | 0;
 i8 = i8 | 0;
 i13 = i13 | 0;
 i15 = i15 | 0;
 i4 = i4 | 0;
 i17 = i17 | 0;
 i16 = i16 | 0;
 d5 = +d5;
 i9 = i9 | 0;
 i11 = i11 | 0;
 i14 = i14 | 0;
 d6 = +d6;
 d7 = +d7;
 var i1 = 0, d2 = 0.0, d3 = 0.0, i10 = 0, i18 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((i4 | 0) >= 1) {
  i10 = 1;
  while (1) {
   if ((i9 | 0) == 4) {
    do {
     d2 = +mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, -.5, .5);
     d2 = d2 + +mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, -.5, .5);
     d3 = +mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, -.5, .5);
     d3 = d3 + +mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, -.5, .5);
    } while (d2 * d2 + d3 * d3 > 1.0);
    i1 = 0;
    do {
     HEAPF32[i18 + (i1 << 2) >> 2] = +HEAPF32[i17 + (i1 << 2) >> 2] + (+HEAPF32[i16 + (i1 << 2) >> 2] + d2 * d6 * +HEAPF32[i13 + (i1 << 2) >> 2] + d3 * d7 * +HEAPF32[i15 + (i1 << 2) >> 2]) * d5;
     i1 = i1 + 1 | 0;
    } while ((i1 | 0) != 3);
   } else {
    i1 = 0;
    do {
     HEAPF32[i18 + (i1 << 2) >> 2] = +HEAPF32[i17 + (i1 << 2) >> 2] + (+HEAPF32[i16 + (i1 << 2) >> 2] + +HEAPF32[i13 + (i1 << 2) >> 2] * d6 + +HEAPF32[i15 + (i1 << 2) >> 2] * d7) * d5;
     i1 = i1 + 1 | 0;
    } while ((i1 | 0) != 3);
   }
   mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 40 >> 2] | 0, 0, 1);
   mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 44 >> 2] | 0);
   mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 52 >> 2] | 0, i12 + -1 | 0);
   mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 56 >> 2] | 0, 2);
   mftCall_viiiii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 60 >> 2] | 0, i17 | 0, i18 | 0, 2, -1, i18 + 12 | 0);
   i1 = __Z19EV_HLDM_CheckTraceriPfS_S_S_iiPi(i12, i17, i18 + 12 + 20 | 0, i8, i13, 0, i11, i14) | 0;
   L14 : do if (+HEAPF32[i18 + 12 + 16 >> 2] != 1.0) switch (i9 | 0) {
   case 3:
    {
     +__Z24EV_HLDM_PlayTextureSoundiP9pmtrace_sPfS1_i(0, i18 + 12 | 0, i17, i18, 3);
     __Z20EV_HLDM_DecalGunshotP9pmtrace_si(i18 + 12 | 0, 0);
     break L14;
    }
   case 2:
    {
     if (i1 | 0) break L14;
     +__Z24EV_HLDM_PlayTextureSoundiP9pmtrace_sPfS1_i(0, i18 + 12 | 0, i17, i18, 2);
     __Z20EV_HLDM_DecalGunshotP9pmtrace_si(i18 + 12 | 0, 0);
     break L14;
    }
   case 4:
    {
     __Z20EV_HLDM_DecalGunshotP9pmtrace_si(i18 + 12 | 0, 0);
     break L14;
    }
   default:
    {
     +__Z24EV_HLDM_PlayTextureSoundiP9pmtrace_sPfS1_i(0, i18 + 12 | 0, i17, i18, i9);
     __Z20EV_HLDM_DecalGunshotP9pmtrace_si(i18 + 12 | 0, 0);
     break L14;
    }
   } while (0);
   mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 48 >> 2] | 0);
   if ((i10 | 0) == (i4 | 0)) break; else i10 = i10 + 1 | 0;
  }
 }
 STACKTOP = i18;
 return;
}

function __ZN11CHudSayText38EnsureTextFitsInOneLineAndWrapIfHaveToEi(i9, i1) {
 i9 = i9 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[i10 + 4 >> 2] = 0;
 i7 = gb + 129049 + (i1 << 8) | 0;
 if (+HEAPF32[(HEAP32[gb + 93740 >> 2] | 0) + 12 >> 2] == 1.0) {
  HEAP32[gb + 94436 >> 2] = 13;
  i1 = __ZN4CHud16DrawHudStringLenEPc(0, i7) | 0;
  HEAP32[i10 + 4 >> 2] = i1;
 } else {
  mftCall_viii(HEAP32[gb + 92340 + 116 >> 2] | 0, i7 | 0, i10 + 4 | 0, gb + 94436 | 0);
  i1 = HEAP32[i10 + 4 >> 2] | 0;
 }
 i2 = HEAP32[gb + 46040 + 8112 >> 2] | 0;
 if ((i1 + 10 | 0) > (i2 + -40 | 0)) {
  HEAP32[i10 >> 2] = 0;
  i5 = 0;
  i6 = 10;
  i1 = i7;
  L7 : while (1) {
   switch (HEAP8[i1 >> 0] | 0) {
   case 0:
    break L7;
   case 47:
    {
     if ((HEAP8[i1 + 1 >> 0] | 0) == 40) {
      i4 = i1 + 2 | 0;
      while (1) {
       i1 = HEAP8[i4 >> 0] | 0;
       i3 = i4 + 1 | 0;
       if (i1 << 24 >> 24 != 41 & (i1 << 24 >> 24 == 0 ^ 1)) i4 = i3; else break;
      }
      i1 = i1 << 24 >> 24 == 0 ? i4 : i3;
      if (!(HEAP8[i1 >> 0] | 0)) break L7;
     }
     break;
    }
   default:
    {}
   }
   HEAP8[i10 + 8 + 1 >> 0] = 0;
   i3 = HEAP8[i1 >> 0] | 0;
   i4 = (i1 | 0) == (i7 | 0) | i3 << 24 >> 24 != 32 ? i5 : i1;
   HEAP8[i10 + 8 >> 0] = i3;
   if (+HEAPF32[(HEAP32[gb + 93740 >> 2] | 0) + 12 >> 2] == 1.0) {
    HEAP32[gb + 94436 >> 2] = 13;
    i3 = __ZN4CHud16DrawHudStringLenEPc(0, i10 + 8 | 0) | 0;
    HEAP32[i10 >> 2] = i3;
   } else {
    mftCall_viii(HEAP32[gb + 92340 + 116 >> 2] | 0, i10 + 8 | 0, i10 | 0, gb + 94436 | 0);
    i3 = HEAP32[i10 >> 2] | 0;
    i2 = HEAP32[gb + 46040 + 8112 >> 2] | 0;
   }
   i3 = i3 + i6 | 0;
   if ((i3 | 0) > (i2 + -40 | 0)) {
    i8 = 15;
    break;
   }
   i5 = i4;
   i6 = i3;
   i1 = i1 + 1 | 0;
  }
  if ((i8 | 0) == 15) {
   i4 = (i4 | 0) == 0 ? i1 + -1 | 0 : i4;
   L23 : while (1) {
    i1 = 0;
    do {
     if (!(HEAP8[gb + 129049 + (i1 << 8) >> 0] | 0)) break L23;
     i1 = i1 + 1 | 0;
    } while ((i1 | 0) < 5);
    if ((i1 | 0) != 5) break;
    i4 = i4 + (0 - ((__Z12ScrollTextUpv() | 0) << 8)) | 0;
   }
   i8 = (HEAP8[i4 >> 0] | 0) == 32;
   i2 = gb + 129049 + (i1 << 8) | 0;
   i3 = _strlen(i2 | 0) | 0;
   i3 = i3 - (_strlen(i4 | 0) | 0) | 0;
   if (i8) {
    if ((i3 | 0) < 257) _strcat(i2 | 0, i4 | 0) | 0;
   } else if ((i3 + -2 | 0) >>> 0 < 256) {
    i8 = (_strlen(i2 | 0) | 0) + (gb + 129049 + (i1 << 8)) | 0;
    HEAP8[i8 >> 0] = 32;
    HEAP8[i8 + 1 >> 0] = 0;
    _strcat(i2 | 0, i4 | 0) | 0;
   }
   HEAP8[i4 >> 0] = 0;
   __ZN11CHudSayText38EnsureTextFitsInOneLineAndWrapIfHaveToEi(i9, i1);
  }
 }
 STACKTOP = i10;
 return;
}

function __Z15CL_AdjustAnglesfPf(d1, i4) {
 d1 = +d1;
 i4 = i4 | 0;
 var d2 = 0.0, i3 = 0, d5 = 0.0, i6 = 0, i7 = 0;
 if (HEAP32[gb + 94152 + 8 >> 2] & 1) d1 = +HEAPF32[(HEAP32[gb + 94e3 >> 2] | 0) + 12 >> 2] * d1;
 if (!(HEAP32[gb + 94140 + 8 >> 2] & 1)) {
  i3 = (HEAP32[gb + 93992 >> 2] | 0) + 12 | 0;
  d5 = d1 * +HEAPF32[i3 >> 2];
  i6 = HEAP32[gb + 94056 + 8 >> 2] | 0;
  HEAP32[gb + 94056 + 8 >> 2] = i6 & 1;
  d5 = +HEAPF32[i4 + 4 >> 2] - d5 * ((i6 & 6 | 0) == 6 ? ((i6 & 1 | 0) == 0 ? .25 : .75) : (i6 & 6 | 0) == 0 ? (i6 & 1 | 0 ? 1.0 : 0.0) : (i6 & 6 | 0) == 4 ? 0.0 : (i6 & 7 | 0) == 3 ? .5 : 0.0);
  HEAPF32[i4 + 4 >> 2] = d5;
  d2 = d1 * +HEAPF32[i3 >> 2];
  i3 = HEAP32[gb + 94044 + 8 >> 2] | 0;
  HEAP32[gb + 94044 + 8 >> 2] = i3 & 1;
  HEAPF32[i4 + 4 >> 2] = +_anglemod(d5 + d2 * ((i3 & 6 | 0) == 6 ? ((i3 & 1 | 0) == 0 ? .25 : .75) : (i3 & 6 | 0) == 0 ? (i3 & 1 | 0 ? 1.0 : 0.0) : (i3 & 6 | 0) == 4 ? 0.0 : (i3 & 7 | 0) == 3 ? .5 : 0.0));
 }
 i3 = HEAP32[gb + 93996 >> 2] | 0;
 if (!(HEAP32[gb + 94020 + 8 >> 2] & 1)) {
  d2 = +HEAPF32[i4 >> 2];
  i3 = i3 + 12 | 0;
 } else {
  d5 = d1 * +HEAPF32[i3 + 12 >> 2];
  i6 = HEAP32[gb + 94068 + 8 >> 2] | 0;
  HEAP32[gb + 94068 + 8 >> 2] = i6 & 1;
  d5 = +HEAPF32[i4 >> 2] - d5 * ((i6 & 6 | 0) == 6 ? ((i6 & 1 | 0) == 0 ? .25 : .75) : (i6 & 6 | 0) == 0 ? (i6 & 1 | 0 ? 1.0 : 0.0) : (i6 & 6 | 0) == 4 ? 0.0 : (i6 & 7 | 0) == 3 ? .5 : 0.0);
  HEAPF32[i4 >> 2] = d5;
  d2 = d1 * +HEAPF32[i3 + 12 >> 2];
  i6 = HEAP32[gb + 94080 + 8 >> 2] | 0;
  HEAP32[gb + 94080 + 8 >> 2] = i6 & 1;
  d2 = d5 + d2 * ((i6 & 6 | 0) == 6 ? ((i6 & 1 | 0) == 0 ? .25 : .75) : (i6 & 6 | 0) == 0 ? (i6 & 1 | 0 ? 1.0 : 0.0) : (i6 & 6 | 0) == 4 ? 0.0 : (i6 & 7 | 0) == 3 ? .5 : 0.0);
  HEAPF32[i4 >> 2] = d2;
  i3 = i3 + 12 | 0;
 }
 i7 = HEAP32[gb + 94092 + 8 >> 2] | 0;
 HEAP32[gb + 94092 + 8 >> 2] = i7 & 1;
 i6 = HEAP32[gb + 94104 + 8 >> 2] | 0;
 HEAP32[gb + 94104 + 8 >> 2] = i6 & 1;
 d2 = d2 - d1 * +HEAPF32[i3 >> 2] * ((i7 & 6 | 0) == 6 ? ((i7 & 1 | 0) == 0 ? .25 : .75) : (i7 & 6 | 0) == 0 ? (i7 & 1 | 0 ? 1.0 : 0.0) : (i7 & 6 | 0) == 4 ? 0.0 : (i7 & 7 | 0) == 3 ? .5 : 0.0);
 HEAPF32[i4 >> 2] = d2;
 d2 = d2 + d1 * +HEAPF32[i3 >> 2] * ((i6 & 6 | 0) == 6 ? ((i6 & 1 | 0) == 0 ? .25 : .75) : (i6 & 6 | 0) == 0 ? (i6 & 1 | 0 ? 1.0 : 0.0) : (i6 & 6 | 0) == 4 ? 0.0 : (i6 & 7 | 0) == 3 ? .5 : 0.0);
 HEAPF32[i4 >> 2] = d2;
 d1 = +HEAPF32[(HEAP32[gb + 93968 >> 2] | 0) + 12 >> 2];
 if (d2 > d1) HEAPF32[i4 >> 2] = d1; else d1 = d2;
 d2 = -+HEAPF32[(HEAP32[gb + 93964 >> 2] | 0) + 12 >> 2];
 if (d1 < d2) HEAPF32[i4 >> 2] = d2;
 d1 = +HEAPF32[i4 + 8 >> 2];
 if (d1 > 50.0) HEAPF32[i4 + 8 >> 2] = 50.0; else if (d1 < -50.0) HEAPF32[i4 + 8 >> 2] = -50.0;
 return;
}

function runPostSets33() {
 var i1 = 0;
 HEAP32[gb + 36260 >> 2] = (HEAP32[gb + 36260 >> 2] | 0) + (gb + 44211 | 0);
 HEAP32[gb + 36264 >> 2] = (HEAP32[gb + 36264 >> 2] | 0) + (gb + 44229 | 0);
 HEAP32[gb + 36268 >> 2] = (HEAP32[gb + 36268 >> 2] | 0) + (gb + 44248 | 0);
 HEAP32[gb + 36272 >> 2] = (HEAP32[gb + 36272 >> 2] | 0) + (gb + 44267 | 0);
 HEAP32[gb + 36276 >> 2] = (HEAP32[gb + 36276 >> 2] | 0) + (gb + 44284 | 0);
 HEAP32[gb + 36280 >> 2] = (HEAP32[gb + 36280 >> 2] | 0) + (gb + 44301 | 0);
 HEAP32[gb + 36284 >> 2] = (HEAP32[gb + 36284 >> 2] | 0) + (gb + 44318 | 0);
 HEAP32[gb + 36288 >> 2] = (HEAP32[gb + 36288 >> 2] | 0) + (gb + 44335 | 0);
 HEAP32[gb + 36292 >> 2] = (HEAP32[gb + 36292 >> 2] | 0) + (gb + 44356 | 0);
 HEAP32[gb + 36296 >> 2] = (HEAP32[gb + 36296 >> 2] | 0) + (gb + 44377 | 0);
 HEAP32[gb + 36300 >> 2] = (HEAP32[gb + 36300 >> 2] | 0) + (gb + 44397 | 0);
 HEAP32[gb + 36304 >> 2] = (HEAP32[gb + 36304 >> 2] | 0) + (gb + 44417 | 0);
 HEAP32[gb + 36308 >> 2] = (HEAP32[gb + 36308 >> 2] | 0) + (gb + 44439 | 0);
 HEAP32[gb + 36312 >> 2] = (HEAP32[gb + 36312 >> 2] | 0) + (gb + 44461 | 0);
 HEAP32[gb + 36316 >> 2] = (HEAP32[gb + 36316 >> 2] | 0) + (gb + 44488 | 0);
 HEAP32[gb + 36320 >> 2] = (HEAP32[gb + 36320 >> 2] | 0) + (gb + 44515 | 0);
 HEAP32[gb + 36324 >> 2] = (HEAP32[gb + 36324 >> 2] | 0) + (gb + 44536 | 0);
 HEAP32[gb + 36348 >> 2] = (HEAP32[gb + 36348 >> 2] | 0) + (gb + 17400 | 0);
 HEAP32[gb + 36352 >> 2] = fb + 155;
 HEAP32[gb + 36356 >> 2] = fb + 201;
 HEAP32[gb + 36360 >> 2] = fb + 151;
 HEAP32[gb + 36364 >> 2] = fb + 152;
 HEAP32[gb + 36368 >> 2] = fb + 18;
 HEAP32[gb + 36372 >> 2] = fb + 161;
 HEAP32[gb + 36376 >> 2] = fb + 164;
 HEAP32[gb + 36380 >> 2] = fb + 202;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 17400 >> 2] = (HEAP32[gb + 17400 >> 2] | 0) + i1;
 HEAP32[gb + 17404 >> 2] = (HEAP32[gb + 17404 >> 2] | 0) + (gb + 44860 | 0);
 HEAP32[gb + 17408 >> 2] = (HEAP32[gb + 17408 >> 2] | 0) + (gb + 568 | 0);
 HEAP32[gb + 36388 >> 2] = (HEAP32[gb + 36388 >> 2] | 0) + (gb + 17416 | 0);
 HEAP32[gb + 36392 >> 2] = fb + 155;
 HEAP32[gb + 36396 >> 2] = fb + 203;
 HEAP32[gb + 36400 >> 2] = fb + 153;
 HEAP32[gb + 36404 >> 2] = fb + 154;
 HEAP32[gb + 36408 >> 2] = fb + 19;
 HEAP32[gb + 36412 >> 2] = fb + 161;
 HEAP32[gb + 36416 >> 2] = fb + 204;
 HEAP32[gb + 36420 >> 2] = fb + 159;
 i1 = g$__ZTVN10__cxxabiv120__si_class_type_infoE() | 0;
 HEAP32[gb + 17416 >> 2] = (HEAP32[gb + 17416 >> 2] | 0) + i1;
 HEAP32[gb + 17420 >> 2] = (HEAP32[gb + 17420 >> 2] | 0) + (gb + 44882 | 0);
 HEAP32[gb + 17424 >> 2] = (HEAP32[gb + 17424 >> 2] | 0) + (gb + 568 | 0);
}

function __ZN14CHudFlashlight4DrawEf(i9, d1) {
 i9 = i9 | 0;
 d1 = +d1;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if (!(HEAP8[gb + 54704 >> 0] | 0)) if (___cxa_guard_acquire(gb + 54704 | 0) | 0) {
  HEAP8[gb + 124952 >> 0] = (HEAP32[gb + 46040 + 84 >> 2] & 6 | 0) != 0 & 1;
  ___cxa_guard_release(gb + 54704 | 0);
 }
 i2 = HEAP8[gb + 124952 >> 0] | 0;
 i3 = (HEAP32[gb + 46040 + 84 >> 2] & 6 | 0) == 0;
 if ((i2 & 255 | 0) != (i3 & 1 | 0)) {
  HEAP8[gb + 124952 >> 0] = i3 & 1;
  i2 = HEAP32[gb + 92876 >> 2] | 0;
  if (!i2) i2 = i3 & 1; else {
   mftCall_vii(HEAP32[i2 + 20 >> 2] | 0, gb + 40395 | 0, i3 & 1 ^ 1 | 0);
   i2 = HEAP8[gb + 124952 >> 0] | 0;
  }
 }
 if (i2 << 24 >> 24) if ((HEAP32[gb + 46040 + 8640 >> 2] | 0) < 0) {
  i7 = (HEAP32[i9 + 52 >> 2] | 0) == 0 ? 100 : 225;
  i6 = +HEAPF32[i9 + 44 >> 2] < .2;
  HEAP32[i8 + 24 >> 2] = 255;
  HEAP32[i8 + 20 >> 2] = i6 ? 16 : 160;
  HEAP32[i8 + 16 >> 2] = i6 ? 16 : 0;
  __Z11ScaleColorsRiS_S_i(i8 + 24 | 0, i8 + 20 | 0, i8 + 16 | 0, i7);
  i7 = ((HEAP32[(HEAP32[i9 + 32 >> 2] | 0) + 12 >> 2] | 0) - (HEAP32[(HEAP32[i9 + 36 >> 2] | 0) + 8 >> 2] | 0) | 0) / 2 | 0;
  i6 = HEAP32[i9 + 60 >> 2] | 0;
  i6 = (HEAP32[gb + 46040 + 8112 >> 2] | 0) - i6 + ((i6 | 0) / -2 | 0) | 0;
  i2 = HEAP32[i8 + 24 >> 2] | 0;
  i3 = HEAP32[i8 + 20 >> 2] | 0;
  i4 = HEAP32[i8 + 16 >> 2] | 0;
  mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, HEAP32[i9 + 20 >> 2] | 0, i2 | 0, i3 | 0, i4 | 0);
  mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i6 | 0, i7 | 0, HEAP32[i9 + 32 >> 2] | 0);
  if (HEAP32[i9 + 52 >> 2] | 0) {
   i6 = (HEAP32[gb + 46040 + 8112 >> 2] | 0) - ((HEAP32[i9 + 60 >> 2] | 0) / 2 | 0) | 0;
   mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, HEAP32[i9 + 28 >> 2] | 0, i2 | 0, i3 | 0, i4 | 0);
   mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i6 | 0, i7 | 0, HEAP32[i9 + 40 >> 2] | 0);
  }
  i5 = HEAP32[i9 + 60 >> 2] | 0;
  i6 = ~~(+(i5 | 0) * (1.0 - +HEAPF32[i9 + 44 >> 2]));
  if ((i6 | 0) < (i5 | 0)) {
   i10 = HEAP32[gb + 46040 + 8112 >> 2] | 0;
   i11 = HEAP32[i9 + 36 >> 2] | 0;
   HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i8 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i8 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   HEAP32[i8 + 12 >> 2] = HEAP32[i11 + 12 >> 2];
   HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + i6;
   mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, HEAP32[i9 + 24 >> 2] | 0, i2 | 0, i3 | 0, i4 | 0);
   mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, ((i5 | 0) / -2 | 0) - i5 + i6 + i10 | 0, i7 | 0, i8 | 0);
  }
 }
 STACKTOP = i8;
 return 1;
}

function __Z21V_GetDoubleTargetsCamP11cl_entity_sS0_PfS1_(i2, i7, i4, i8) {
 i2 = i2 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 i8 = i8 | 0;
 var d1 = 0.0, i3 = 0, d5 = 0.0, i6 = 0, i9 = 0, i10 = 0, d11 = 0.0, i12 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i10 = HEAP32[gb + 46040 + 4240 >> 2] | 0;
 d1 = i10 & 32 | 0 ? -1.0 : 1.0;
 d5 = (i10 & 512 | 0) == 0 ? d1 * 16.0 + 112.0 : (d1 * 16.0 + 112.0) * 2.0;
 d11 = +HEAPF32[gb + 116300 >> 2] + +HEAPF32[gb + 116296 >> 2] * 32.0;
 HEAPF32[gb + 116300 >> 2] = d11;
 d5 = d5 > d11 ? d11 : d5;
 i3 = HEAP32[i2 + 2888 >> 2] | 0;
 HEAP32[i9 + 12 >> 2] = i3;
 i12 = HEAP32[i2 + 2888 + 4 >> 2] | 0;
 HEAP32[i9 + 12 + 4 >> 2] = i12;
 d11 = +HEAPF32[i2 + 2888 + 8 >> 2];
 HEAPF32[i9 + 12 + 8 >> 2] = d11 + ((HEAP32[i2 + 4 >> 2] | 0) == 0 ? 8.0 : 17.0);
 HEAPF32[i9 + 24 >> 2] = +HEAPF32[i7 + 2888 >> 2] - (HEAP32[tempDoublePtr >> 2] = i3, +HEAPF32[tempDoublePtr >> 2]);
 i3 = i9 + 24 + 4 | 0;
 HEAPF32[i3 >> 2] = +HEAPF32[i7 + 2888 + 4 >> 2] - (HEAP32[tempDoublePtr >> 2] = i12, +HEAPF32[tempDoublePtr >> 2]);
 HEAPF32[i9 + 24 + 8 >> 2] = +HEAPF32[i7 + 2888 + 8 >> 2] - d11;
 _VectorAngles(i9 + 24 | 0, i9 + 24 | 0);
 HEAPF32[i9 + 24 >> 2] = d1 * 12.5 - +HEAPF32[i9 + 24 >> 2];
 HEAPF32[i3 >> 2] = ((i10 & 16 | 0) == 0 ? -22.5 : 22.5) + +HEAPF32[i3 >> 2];
 d1 = +__Z21MaxAngleBetweenAnglesPfS_(gb + 116284 | 0, i9 + 24 | 0);
 i2 = HEAP32[gb + 36080 >> 2] | 0;
 do if ((i2 | 0) == 1 ? d1 < +HEAPF32[gb + 36076 >> 2] : 0) {
  HEAP32[i9 + 24 >> 2] = HEAP32[gb + 116284 >> 2];
  HEAP32[i3 >> 2] = HEAP32[gb + 116284 + 4 >> 2];
  HEAP32[i9 + 24 + 8 >> 2] = HEAP32[gb + 116284 + 8 >> 2];
  i6 = 6;
 } else {
  if ((i2 | 0) == 2 ? d1 < +HEAPF32[gb + 36072 >> 2] : 0) {
   HEAP32[gb + 36080 >> 2] = 1;
   i6 = 6;
   break;
  }
  HEAP32[gb + 36080 >> 2] = 2;
  if (!(HEAP32[gb + 36084 >> 2] | 0)) __Z25V_SmoothInterpolateAnglesPfS_S_f(gb + 116284 | 0, i9 + 24 | 0, i4, 180.0); else i6 = 6;
 } while (0);
 if ((i6 | 0) == 6) {
  HEAP32[i4 >> 2] = HEAP32[i9 + 24 >> 2];
  HEAP32[i4 + 4 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i4 + 8 >> 2] = HEAP32[i9 + 24 + 8 >> 2];
 }
 __Z16V_GetChaseOriginPfS_fS_(i9 + 24 | 0, i9 + 12 | 0, d5, i8);
 d1 = +HEAPF32[gb + 116300 >> 2];
 if (d1 < 64.0) {
  d1 = (1.0 - d1 * .015625) * 16.0 + +HEAPF32[i8 + 8 >> 2];
  HEAPF32[i8 + 8 >> 2] = d1;
 } else d1 = +HEAPF32[i8 + 8 >> 2];
 HEAPF32[i9 >> 2] = +HEAPF32[i7 + 2888 >> 2] - +HEAPF32[i8 >> 2];
 HEAPF32[i9 + 4 >> 2] = +HEAPF32[i7 + 2888 + 4 >> 2] - +HEAPF32[i8 + 4 >> 2];
 HEAPF32[i9 + 8 >> 2] = +HEAPF32[i7 + 2888 + 8 >> 2] - d1;
 _VectorAngles(i9, i9);
 STACKTOP = i9;
 return;
}

function _PM_CheckWaterJump() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, d6 = 0.0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 do if (!(+HEAPF32[i1 + 204 >> 2] != 0.0)) if (!(+HEAPF32[i1 + 100 >> 2] < -180.0)) {
  HEAP32[i5 + 204 >> 2] = HEAP32[i1 + 92 >> 2];
  HEAP32[i5 + 204 + 4 >> 2] = HEAP32[i1 + 96 >> 2];
  HEAPF32[i5 + 204 + 8 >> 2] = 0.0;
  d6 = +_VectorNormalize(i5 + 204 | 0);
  i4 = HEAP32[gb + 121136 >> 2] | 0;
  HEAP32[i5 + 216 >> 2] = HEAP32[i4 + 20 >> 2];
  HEAP32[i5 + 216 + 4 >> 2] = HEAP32[i4 + 24 >> 2];
  HEAPF32[i5 + 216 + 8 >> 2] = 0.0;
  +_VectorNormalize(i5 + 216 | 0);
  if (d6 != 0.0) if (+HEAPF32[i5 + 204 >> 2] * +HEAPF32[i5 + 216 >> 2] + +HEAPF32[i5 + 204 + 4 >> 2] * +HEAPF32[i5 + 216 + 4 >> 2] + +HEAPF32[i5 + 204 + 8 >> 2] * +HEAPF32[i5 + 216 + 8 >> 2] < 0.0) break;
  i2 = HEAP32[gb + 121136 >> 2] | 0;
  HEAP32[i5 + 240 >> 2] = HEAP32[i2 + 56 >> 2];
  HEAP32[i5 + 240 + 4 >> 2] = HEAP32[i2 + 60 >> 2];
  HEAPF32[i5 + 240 + 8 >> 2] = +HEAPF32[i2 + 64 >> 2] + 8.0;
  _VectorMA(i5 + 240 | 0, 24.0, i5 + 216 | 0, i5 + 228 | 0);
  i2 = HEAP32[gb + 121136 >> 2] | 0;
  i1 = HEAP32[i2 + 188 >> 2] | 0;
  HEAP32[i2 + 188 >> 2] = 2;
  mftCall_viiiii(HEAP32[i2 + 324992 >> 2] | 0, i5 + 68 | 0, i5 + 240 | 0, i5 + 228 | 0, 0, -1);
  i2 = i5 + 136 | 0;
  i3 = i5 + 68 | 0;
  i4 = i2 + 68 | 0;
  do {
   HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
   i2 = i2 + 4 | 0;
   i3 = i3 + 4 | 0;
  } while ((i2 | 0) < (i4 | 0));
  if (+HEAPF32[i5 + 136 + 16 >> 2] < 1.0) if (+Math_abs(+(+HEAPF32[i5 + 136 + 40 >> 2])) < .10000000149011612) {
   HEAPF32[i5 + 240 + 8 >> 2] = +HEAPF32[i5 + 240 + 8 >> 2] + (+HEAPF32[(HEAP32[gb + 121136 >> 2] | 0) + 324900 + (i1 * 12 | 0) + 8 >> 2] + -8.0);
   _VectorMA(i5 + 240 | 0, 24.0, i5 + 216 | 0, i5 + 228 | 0);
   _VectorMA(gb + 121124 | 0, -50.0, i5 + 136 + 32 | 0, (HEAP32[gb + 121136 >> 2] | 0) + 104 | 0);
   mftCall_viiiii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 324992 >> 2] | 0, i5 | 0, i5 + 240 | 0, i5 + 228 | 0, 0, -1);
   i2 = i5 + 136 | 0;
   i3 = i5;
   i4 = i2 + 68 | 0;
   do {
    HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
    i2 = i2 + 4 | 0;
    i3 = i3 + 4 | 0;
   } while ((i2 | 0) < (i4 | 0));
   if (+HEAPF32[i5 + 136 + 16 >> 2] == 1.0) {
    i4 = HEAP32[gb + 121136 >> 2] | 0;
    HEAPF32[i4 + 204 >> 2] = 2.0e3;
    HEAPF32[i4 + 100 >> 2] = 225.0;
    HEAP32[i4 + 200 >> 2] = HEAP32[i4 + 200 >> 2] | 2;
    HEAP32[i4 + 184 >> 2] = HEAP32[i4 + 184 >> 2] | 2048;
   }
  }
  HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 188 >> 2] = i1;
 } while (0);
 STACKTOP = i5;
 return;
}

function _EV_FireMP5(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 HEAP32[i4 + 108 >> 2] = HEAP32[i2 + 8 >> 2];
 HEAP32[i4 + 108 + 4 >> 2] = HEAP32[i2 + 12 >> 2];
 HEAP32[i4 + 108 + 8 >> 2] = HEAP32[i2 + 16 >> 2];
 HEAP32[i4 + 96 >> 2] = HEAP32[i2 + 20 >> 2];
 HEAP32[i4 + 96 + 4 >> 2] = HEAP32[i2 + 24 >> 2];
 HEAP32[i4 + 96 + 8 >> 2] = HEAP32[i2 + 28 >> 2];
 HEAP32[i4 + 84 >> 2] = HEAP32[i2 + 32 >> 2];
 HEAP32[i4 + 84 + 4 >> 2] = HEAP32[i2 + 36 >> 2];
 HEAP32[i4 + 84 + 8 >> 2] = HEAP32[i2 + 40 >> 2];
 mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i4 + 96 | 0, i4 | 0, i4 + 12 | 0, i4 + 24 | 0);
 i3 = mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 12 >> 2] | 0, gb + 39449 | 0) | 0;
 if (__Z10EV_IsLocali(i1) | 0) {
  __Z14EV_MuzzleFlashv();
  i5 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0;
  mftCall_vii(i5 | 0, (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 2) | 0) + 5 | 0, 2);
  __Z11V_PunchAxisif(0, +mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, -2.0, 2.0));
 }
 __Z22EV_GetDefaultShellInfoP12event_args_sPfS1_S1_S1_S1_S1_S1_fff(i2, i4 + 108 | 0, i4 + 84 | 0, i4 + 72 | 0, i4 + 60 | 0, i4, i4 + 12 | 0, i4 + 24 | 0, 20.0, -12.0, 4.0);
 __Z13EV_EjectBrassPfS_fii(i4 + 60 | 0, i4 + 72 | 0, +HEAPF32[i4 + 96 + 4 >> 2], i3, 1);
 switch (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 1) | 0) {
 case 0:
  {
   i3 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0;
   i5 = (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 15) | 0) + 94 | 0;
   mftCall_viiiiddii(i3 | 0, i1 | 0, i4 + 108 | 0, 1, gb + 38344 | 0, 1.0, .800000011920929, 0, i5 | 0);
   break;
  }
 case 1:
  {
   i3 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0;
   i5 = (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 15) | 0) + 94 | 0;
   mftCall_viiiiddii(i3 | 0, i1 | 0, i4 + 108 | 0, 1, gb + 38361 | 0, 1.0, .800000011920929, 0, i5 | 0);
   break;
  }
 default:
  {}
 }
 __Z17EV_GetGunPositionP12event_args_sPfS1_(i2, i4 + 48 | 0, i4 + 108 | 0);
 HEAP32[i4 + 36 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 + 36 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
 HEAP32[i4 + 36 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
 mftCall_i(HEAP32[gb + 92340 + 144 >> 2] | 0) | 0;
 __Z19EV_HLDM_FireBulletsiPfS_S_iS_S_fiiPiff(i1, i4, i4 + 12 | 0, i4 + 24 | 0, 1, i4 + 48 | 0, i4 + 36 | 0, 8192.0, 2, 2, gb + 56828 + (i1 + -1 << 2) | 0, +HEAPF32[i2 + 48 >> 2], +HEAPF32[i2 + 52 >> 2]);
 STACKTOP = i4;
 return;
}

function __ZN20CStudioModelRenderer18StudioEstimateGaitEP14entity_state_s(i6, i3) {
 i6 = i6 | 0;
 i3 = i3 | 0;
 var d1 = 0.0, d2 = 0.0, d4 = 0.0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, d11 = 0.0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 d1 = +HEAPF64[i6 + 8 >> 3] - +HEAPF64[i6 + 16 >> 3];
 do if (d1 < 0.0) i7 = 5; else {
  if (d1 > 1.0) d1 = 1.0; else if (d1 == 0.0) {
   i7 = 5;
   break;
  }
  i5 = HEAP32[i6 + 56 >> 2] | 0;
  if ((HEAP32[i5 + 376 >> 2] | 0) == (HEAP32[i6 + 32 >> 2] | 0)) i7 = 5; else {
   if (!(HEAP32[i6 + 28 >> 2] | 0)) {
    i9 = HEAP32[i3 + 112 >> 2] | 0;
    HEAP32[i8 >> 2] = i9;
    i10 = HEAP32[i3 + 112 + 4 >> 2] | 0;
    HEAP32[i8 + 4 >> 2] = i10;
    HEAP32[i8 + 8 >> 2] = HEAP32[i3 + 112 + 8 >> 2];
    HEAPF32[i6 + 64 >> 2] = d1 * +_Length(i8);
    d4 = (HEAP32[tempDoublePtr >> 2] = i10, +HEAPF32[tempDoublePtr >> 2]);
    d2 = (HEAP32[tempDoublePtr >> 2] = i9, +HEAPF32[tempDoublePtr >> 2]);
   } else {
    i10 = (HEAP32[i6 + 48 >> 2] | 0) + 2888 | 0;
    d11 = +HEAPF32[i10 >> 2];
    d2 = d11 - +HEAPF32[i5 + 392 >> 2];
    HEAPF32[i8 >> 2] = d2;
    d4 = +HEAPF32[i10 + 4 >> 2] - +HEAPF32[i5 + 392 + 4 >> 2];
    HEAPF32[i8 + 4 >> 2] = d4;
    HEAPF32[i8 + 8 >> 2] = +HEAPF32[i10 + 8 >> 2] - +HEAPF32[i5 + 392 + 8 >> 2];
    HEAPF32[i5 + 392 >> 2] = d11;
    HEAP32[i5 + 392 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
    HEAP32[i5 + 392 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
    d11 = +_Length(i8);
    HEAPF32[i6 + 64 >> 2] = d11;
    if (d1 <= 0.0 | d11 / d1 < 5.0) {
     HEAPF32[i6 + 64 >> 2] = 0.0;
     HEAPF32[i8 >> 2] = 0.0;
     HEAPF32[i8 + 4 >> 2] = 0.0;
     d4 = 0.0;
     d2 = 0.0;
    }
   }
   if (d4 == 0.0 & d2 == 0.0) {
    d4 = +HEAPF32[i5 + 388 >> 2];
    d11 = +HEAPF32[(HEAP32[i6 + 48 >> 2] | 0) + 2900 + 4 >> 2] - d4;
    d11 = d11 - +(~~(d11 * 2.7777778450399637e-03) * 360 | 0) > 180.0 ? d11 - +(~~(d11 * 2.7777778450399637e-03) * 360 | 0) + -360.0 : d11 - +(~~(d11 * 2.7777778450399637e-03) * 360 | 0);
    d11 = d4 + (d1 < .25 ? d1 * 4.0 : d1) * (d11 < -180.0 ? d11 + 360.0 : d11);
    HEAPF32[i5 + 388 >> 2] = d11 - +(~~(d11 * 2.7777778450399637e-03) * 360 | 0);
    HEAPF32[i6 + 64 >> 2] = 0.0;
    break;
   }
   d1 = +Math_atan2(+d4, +d2) * 180.0 * .3183098861837907;
   if (d1 > 180.0) {
    HEAPF32[i5 + 388 >> 2] = 180.0;
    break;
   }
   HEAPF32[i5 + 388 >> 2] = d1;
   if (d1 < -180.0) HEAPF32[i5 + 388 >> 2] = -180.0;
  }
 } while (0);
 if ((i7 | 0) == 5) HEAPF32[i6 + 64 >> 2] = 0.0;
 STACKTOP = i8;
 return;
}

function __ZN5CEgon6AttackEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i1 = HEAP32[i2 + 128 >> 2] | 0;
 do if ((HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 448 >> 2] | 0) == 3) {
  if (!(HEAP32[i2 + 96 >> 2] | 0)) if (!(HEAP32[i2 + 200 >> 2] | 0)) {
   mftCall_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 316 >> 2] | 0, i2 | 0) | 0;
   break;
  }
  __ZN5CEgon9EndAttackEv(i2);
 } else {
  i4 = HEAP32[gb + 57604 >> 2] | 0;
  HEAP32[i3 + 12 >> 2] = HEAP32[i4 + 40 >> 2];
  HEAP32[i3 + 12 + 4 >> 2] = HEAP32[i4 + 44 >> 2];
  HEAP32[i3 + 12 + 8 >> 2] = HEAP32[i4 + 48 >> 2];
  mftCall_vii(HEAP32[(HEAP32[i1 >> 2] | 0) + 476 >> 2] | 0, i3 | 0, i1 | 0);
  L8 : do switch (HEAP32[i2 + 96 >> 2] | 0) {
  case 0:
   {
    i1 = HEAP32[i2 + 128 >> 2] | 0;
    if ((HEAP32[i1 + 68 >> 2] | 0) > 0) {
     HEAP32[i2 + 196 >> 2] = HEAP32[HEAP32[gb + 57604 >> 2] >> 2];
     mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 1, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, HEAP16[i2 + 232 >> 1] | 0, 0.0, gb + 56956 | 0, gb + 56956 | 0, 0.0, 0.0, 0, HEAP32[i2 + 220 >> 2] | 0, 1, 0);
     HEAPF32[i2 + 224 >> 2] = 0.0;
     HEAP32[(HEAP32[i2 + 128 >> 2] | 0) + 692 >> 2] = 450;
     HEAPF32[i2 + 164 >> 2] = .10000000149011612;
     i4 = HEAP32[i2 + 4 >> 2] | 0;
     HEAPF32[i4 + 596 >> 2] = 2.0;
     HEAPF32[i4 + 484 >> 2] = +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2] + .10000000149011612;
     HEAP32[i2 + 96 >> 2] = 1;
     break L8;
    } else {
     HEAPF32[i2 + 160 >> 2] = .25;
     HEAPF32[i2 + 156 >> 2] = .25;
     mftCall_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 316 >> 2] | 0, i2 | 0) | 0;
     break L8;
    }
   }
  case 1:
   {
    __ZN5CEgon4FireERK6VectorS2_(i2, i3, i3 + 12 | 0);
    i1 = HEAP32[i2 + 128 >> 2] | 0;
    HEAP32[i1 + 692 >> 2] = 450;
    if (+HEAPF32[(HEAP32[i2 + 4 >> 2] | 0) + 596 >> 2] <= 0.0) {
     mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 1, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, HEAP16[i2 + 232 >> 1] | 0, 0.0, gb + 56956 | 0, gb + 56956 | 0, 0.0, 0.0, HEAP32[i2 + 96 >> 2] | 0, HEAP32[i2 + 220 >> 2] | 0, 0, 0);
     HEAPF32[(HEAP32[i2 + 4 >> 2] | 0) + 596 >> 2] = 1.0e3;
     i1 = HEAP32[i2 + 128 >> 2] | 0;
    }
    if ((HEAP32[i1 + 68 >> 2] | 0) <= 0) {
     __ZN5CEgon9EndAttackEv(i2);
     HEAPF32[i2 + 160 >> 2] = 1.0;
     HEAPF32[i2 + 156 >> 2] = 1.0;
    }
    break;
   }
  default:
   {}
  } while (0);
 } while (0);
 STACKTOP = i3;
 return;
}

function __ZN12CHandGrenade10WeaponIdleEv(i3) {
 i3 = i3 | 0;
 var d1 = 0.0, i2 = 0, i4 = 0;
 d1 = +HEAPF32[i3 + 84 >> 2];
 if (d1 == 0.0) if (+HEAPF32[i3 + 80 >> 2] != 0.0) {
  i2 = HEAP32[HEAP32[gb + 57604 >> 2] >> 2] | 0;
  HEAP32[i3 + 84 >> 2] = i2;
  d1 = (HEAP32[tempDoublePtr >> 2] = i2, +HEAPF32[tempDoublePtr >> 2]);
 }
 do if (!(+HEAPF32[i3 + 164 >> 2] > 0.0)) {
  if (+HEAPF32[i3 + 80 >> 2] != 0.0) {
   i2 = HEAP32[(HEAP32[i3 + 128 >> 2] | 0) + 4 >> 2] | 0;
   d1 = +HEAPF32[i2 + 116 >> 2] + +HEAPF32[i2 + 104 >> 2];
   d1 = (90.0 - (d1 * (d1 < 0.0 ? .8888888888888888 : 1.1111111111111112) + -10.0)) * 4.0;
   d1 = d1 > 500.0 ? 500.0 : d1;
   do if (d1 < 500.0) mftCall_viiii(HEAP32[(HEAP32[i3 >> 2] | 0) + 324 >> 2] | 0, i3 | 0, 3, 1, 0); else {
    i2 = HEAP32[(HEAP32[i3 >> 2] | 0) + 324 >> 2] | 0;
    if (d1 < 1.0e3) {
     mftCall_viiii(i2 | 0, i3 | 0, 4, 1, 0);
     break;
    } else {
     mftCall_viiii(i2 | 0, i3 | 0, 5, 1, 0);
     break;
    }
   } while (0);
   HEAPF32[i3 + 84 >> 2] = 0.0;
   HEAPF32[i3 + 80 >> 2] = 0.0;
   HEAPF32[i3 + 156 >> 2] = .5;
   HEAPF32[i3 + 164 >> 2] = .5;
   i2 = HEAP32[i3 + 128 >> 2] | 0;
   i4 = i2 + 1236 + (HEAP32[i3 + 168 >> 2] << 2) | 0;
   HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + -1;
   if (HEAP32[i2 + 1236 + (HEAP32[i3 + 168 >> 2] << 2) >> 2] | 0) break;
   HEAPF32[i3 + 156 >> 2] = .5;
   HEAPF32[i3 + 160 >> 2] = .5;
   HEAPF32[i3 + 164 >> 2] = .5;
   break;
  }
  if (d1 > 0.0) {
   HEAPF32[i3 + 80 >> 2] = 0.0;
   if (!(HEAP32[(HEAP32[i3 + 128 >> 2] | 0) + 1236 + (HEAP32[i3 + 168 >> 2] << 2) >> 2] | 0)) {
    mftCall_vi(HEAP32[(HEAP32[i3 >> 2] | 0) + 348 >> 2] | 0, i3 | 0);
    break;
   } else {
    mftCall_viiii(HEAP32[(HEAP32[i3 >> 2] | 0) + 324 >> 2] | 0, i3 | 0, 7, 1, 0);
    HEAPF32[i3 + 164 >> 2] = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i3 + 128 >> 2] | 0) + 680 >> 2] | 0, 10.0, 15.0);
    HEAPF32[i3 + 84 >> 2] = -1.0;
    break;
   }
  }
  i2 = HEAP32[i3 + 128 >> 2] | 0;
  if (HEAP32[i2 + 1236 + (HEAP32[i3 + 168 >> 2] << 2) >> 2] | 0) {
   if (!(+__Z22UTIL_SharedRandomFloatjff(HEAP32[i2 + 680 >> 2] | 0, 0.0, 1.0) <= .75)) {
    i2 = 1;
    d1 = 2.5;
   } else {
    i2 = 0;
    d1 = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i3 + 128 >> 2] | 0) + 680 >> 2] | 0, 10.0, 15.0);
   }
   HEAPF32[i3 + 164 >> 2] = d1;
   mftCall_viiii(HEAP32[(HEAP32[i3 >> 2] | 0) + 324 >> 2] | 0, i3 | 0, i2 | 0, 1, 0);
  }
 } while (0);
 return;
}

function __ZN17CBasePlayerWeapon13ItemPostFrameEv(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 + 188 >> 2] | 0;
 if (!i1) {
  i1 = 0;
  i2 = HEAP32[i4 + 128 >> 2] | 0;
 } else {
  i2 = HEAP32[i4 + 128 >> 2] | 0;
  if (+HEAPF32[i2 + 612 >> 2] <= 0.0) {
   HEAP32[i4 + 176 >> 2] = (HEAP32[i4 + 176 >> 2] | 0) + 10;
   HEAP32[i4 + 188 >> 2] = 0;
   i1 = 0;
  }
 }
 i2 = HEAP32[(HEAP32[i2 + 4 >> 2] | 0) + 384 >> 2] | 0;
 if (!(i2 & 2048)) i3 = 11; else if (!(+HEAPF32[i4 + 160 >> 2] <= 0.0)) i3 = 11; else {
  if (HEAP32[gb + 57608 + ((HEAP32[i4 + 136 >> 2] | 0) * 44 | 0) + 16 >> 2] | 0) {
   i3 = mftCall_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 288 >> 2] | 0, i4 | 0) | 0;
   if (!(HEAP32[(HEAP32[i4 + 128 >> 2] | 0) + 1236 + (i3 << 2) >> 2] | 0)) HEAP32[i4 + 144 >> 2] = 1;
  }
  mftCall_vi(HEAP32[(HEAP32[i4 >> 2] | 0) + 336 >> 2] | 0, i4 | 0);
  i3 = (HEAP32[(HEAP32[i4 + 128 >> 2] | 0) + 4 >> 2] | 0) + 384 | 0;
  HEAP32[i3 >> 2] = HEAP32[i3 >> 2] & -2049;
  i3 = 28;
 }
 do if ((i3 | 0) == 11) {
  if (i2 & 1 | 0) if (+HEAPF32[i4 + 156 >> 2] <= 0.0) {
   i1 = HEAP32[i4 + 136 >> 2] | 0;
   if (!(HEAP32[i4 + 176 >> 2] | 0)) if (!(HEAP32[gb + 57608 + (i1 * 44 | 0) + 8 >> 2] | 0)) i3 = 15; else i3 = 17; else i3 = 15;
   if ((i3 | 0) == 15) if ((HEAP32[gb + 57608 + (i1 * 44 | 0) + 28 >> 2] | 0) == -1) {
    i2 = mftCall_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 284 >> 2] | 0, i4 | 0) | 0;
    if (!(HEAP32[(HEAP32[i4 + 128 >> 2] | 0) + 1236 + (i2 << 2) >> 2] | 0)) i3 = 17;
   }
   if ((i3 | 0) == 17) HEAP32[i4 + 144 >> 2] = 1;
   mftCall_vi(HEAP32[(HEAP32[i4 >> 2] | 0) + 332 >> 2] | 0, i4 | 0);
   i3 = 28;
   break;
  }
  if (i2 & 8192 | 0) if ((i1 | 0) == 0 ? (HEAP32[gb + 57608 + ((HEAP32[i4 + 136 >> 2] | 0) * 44 | 0) + 28 >> 2] | 0) != -1 : 0) {
   mftCall_vi(HEAP32[(HEAP32[i4 >> 2] | 0) + 340 >> 2] | 0, i4 | 0);
   i3 = 28;
   break;
  }
  if (!(i2 & 2049)) {
   HEAP32[i4 + 144 >> 2] = 0;
   if (!(HEAP32[i4 + 176 >> 2] | 0)) if (!(HEAP32[gb + 57608 + ((HEAP32[i4 + 136 >> 2] | 0) * 44 | 0) + 36 >> 2] & 2)) if (+HEAPF32[i4 + 156 >> 2] < 0.0) {
    mftCall_vi(HEAP32[(HEAP32[i4 >> 2] | 0) + 340 >> 2] | 0, i4 | 0);
    break;
   }
   mftCall_vi(HEAP32[(HEAP32[i4 >> 2] | 0) + 344 >> 2] | 0, i4 | 0);
  } else i3 = 28;
 } while (0);
 if ((i3 | 0) == 28) if (mftCall_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 352 >> 2] | 0, i4 | 0) | 0) mftCall_vi(HEAP32[(HEAP32[i4 >> 2] | 0) + 344 >> 2] | 0, i4 | 0);
 return;
}

function __ZN17CHudAmmoSecondary4DrawEf(i13, d1) {
 i13 = i13 | 0;
 d1 = +d1;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(HEAP32[gb + 46040 + 84 >> 2] & 5)) {
  HEAP32[i12 + 8 >> 2] = 255;
  HEAP32[i12 + 4 >> 2] = 160;
  HEAP32[i12 >> 2] = 0;
  d1 = +HEAPF32[i13 + 40 >> 2];
  i11 = d1 < 100.0 ? 100 : ~~d1;
  if (d1 > 0.0) HEAPF32[i13 + 40 >> 2] = d1 - +HEAPF64[gb + 46040 + 48 >> 3] * 20.0;
  __Z11ScaleColorsRiS_S_i(i12 + 8 | 0, i12 + 4 | 0, i12, i11);
  i4 = HEAP32[gb + 46040 + 8652 >> 2] | 0;
  i5 = HEAP32[gb + 46040 + 116 >> 2] | 0;
  i10 = (HEAP32[i5 + (i4 << 4) + 4 >> 2] | 0) - (HEAP32[i5 + (i4 << 4) >> 2] | 0) | 0;
  i6 = (HEAP32[gb + 46040 + 8116 >> 2] | 0) - (HEAP32[gb + 46040 + 108 >> 2] << 2) | 0;
  i3 = (HEAP32[gb + 46040 + 8112 >> 2] | 0) - i10 | 0;
  i2 = HEAP32[i13 + 20 >> 2] | 0;
  if (!i2) {
   i7 = HEAP32[i12 + 8 >> 2] | 0;
   i8 = HEAP32[i12 + 4 >> 2] | 0;
   i9 = HEAP32[i12 >> 2] | 0;
   i2 = i3 - i10 | 0;
   i5 = i6 - (HEAP32[i5 + (i4 << 4) + 8 >> 2] | 0) + (HEAP32[i5 + (i4 << 4) + 12 >> 2] | 0) | 0;
  } else {
   i4 = (HEAP32[i5 + (i2 << 4) >> 2] | 0) - (HEAP32[i5 + (i2 << 4) + 4 >> 2] | 0) + i3 | 0;
   i3 = (HEAP32[i5 + (i2 << 4) + 12 >> 2] | 0) - (HEAP32[i5 + (i2 << 4) + 8 >> 2] | 0) + i6 | 0;
   if ((i2 | 0) < 0) i2 = 0; else i2 = HEAP32[(HEAP32[gb + 46040 + 112 >> 2] | 0) + (i2 << 2) >> 2] | 0;
   i7 = HEAP32[i12 + 8 >> 2] | 0;
   i8 = HEAP32[i12 + 4 >> 2] | 0;
   i9 = HEAP32[i12 >> 2] | 0;
   mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, i2 | 0, i7 | 0, i8 | 0, i9 | 0);
   mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i4 | 0, i3 | 0, (HEAP32[gb + 46040 + 116 >> 2] | 0) + (HEAP32[i13 + 20 >> 2] << 4) | 0);
   i2 = i4;
   i5 = i3;
  }
  i4 = 3;
  while (1) {
   i3 = HEAP32[i13 + 24 + (i4 << 2) >> 2] | 0;
   if ((i3 | 0) >= 0) {
    i2 = i2 - ((i10 | 0) / 2 | 0) - (Math_imul(__ZN4CHud11GetNumWidthEii(0, i3, 1) | 0, i10) | 0) | 0;
    __ZN4CHud13DrawHudNumberEiiiiiii(gb + 46040 | 0, i2, i5, 1, i3, i7, i8, i9) | 0;
    if (!i4) break;
    mftCall_viiiiiiii(HEAP32[gb + 92340 + 44 >> 2] | 0, i2 - ((i10 | 0) / 2 | 0) | 0, i5 | 0, (i10 | 0) / 10 | 0 | 0, HEAP32[gb + 46040 + 108 >> 2] | 0, i7 | 0, i8 | 0, i9 | 0, i11 | 0);
    i2 = i2 - ((i10 | 0) / 2 | 0) | 0;
   }
   if ((i4 | 0) > 0) i4 = i4 + -1 | 0; else break;
  }
 }
 STACKTOP = i12;
 return 1;
}

function __ZN11CHudMessage19MessageScanNextCharEv(i12) {
 i12 = i12 | 0;
 var i1 = 0, i2 = 0, i3 = 0, d4 = 0.0, d5 = 0.0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0;
 i13 = HEAP32[i12 + 148 >> 2] | 0;
 i1 = HEAP32[i13 + 4 >> 2] | 0;
 i11 = HEAP32[i13 >> 2] | 0;
 L1 : do switch (i11 | 0) {
 case 1:
 case 0:
  {
   i2 = HEAP32[i12 + 204 >> 2] | 0;
   i3 = 0;
   i7 = 0;
   i8 = 0;
   i9 = i1 >>> 16 & 255;
   i10 = i1 >>> 8 & 255;
   i1 = i1 & 255;
   break;
  }
 case 2:
  {
   d6 = +HEAPF32[i13 + 20 >> 2] + +HEAPF32[i12 + 208 >> 2];
   HEAPF32[i12 + 208 >> 2] = d6;
   d5 = +HEAPF32[i12 + 152 >> 2];
   if (d6 > d5) {
    i2 = 0;
    i3 = 0;
    i7 = 0;
    i8 = 0;
    i9 = 0;
    i10 = 0;
    i1 = 0;
   } else {
    if (d5 > +HEAPF32[i12 + 212 >> 2]) {
     i2 = HEAP32[i12 + 204 >> 2] | 0;
     i3 = 0;
     i7 = 0;
     i8 = 0;
     i9 = i1 >>> 16 & 255;
     i10 = i1 >>> 8 & 255;
     i1 = i1 & 255;
     break L1;
    }
    d4 = +HEAPF32[i13 + 32 >> 2];
    if (d5 - d6 > d4) {
     i2 = 0;
     i3 = 0;
     i7 = 0;
     i8 = 0;
     i9 = i1 >>> 16 & 255;
     i10 = i1 >>> 8 & 255;
     i1 = i1 & 255;
    } else {
     i8 = HEAP32[i13 + 8 >> 2] | 0;
     i2 = ~~(255.0 - ((d5 - d6) * (1.0 / d4) * 255.0 + .5));
     i3 = i8 >>> 16 & 255;
     i7 = i8 >>> 8 & 255;
     i8 = i8 & 255;
     i9 = i1 >>> 16 & 255;
     i10 = i1 >>> 8 & 255;
     i1 = i1 & 255;
    }
   }
   break;
  }
 default:
  {
   i2 = 0;
   i3 = 0;
   i7 = 0;
   i8 = 0;
   i9 = i1 >>> 16 & 255;
   i10 = i1 >>> 8 & 255;
   i1 = i1 & 255;
  }
 } while (0);
 i2 = (i2 | 0) > 255 ? 255 : (i2 | 0) < 0 ? 0 : i2;
 HEAP32[i12 + 188 >> 2] = (Math_imul(255 - i2 | 0, i1) | 0) + (Math_imul(i2, i8) | 0) >> 8;
 HEAP32[i12 + 192 >> 2] = (Math_imul(255 - i2 | 0, i10) | 0) + (Math_imul(i2, i7) | 0) >> 8;
 HEAP32[i12 + 196 >> 2] = (Math_imul(255 - i2 | 0, i9) | 0) + (Math_imul(i2, i3) | 0) >> 8;
 if ((i11 | 0) == 1) if (+HEAPF32[i12 + 208 >> 2] != 0.0) {
  i2 = HEAP32[i12 + 156 >> 2] | 0;
  if ((i2 | 0) > -1) {
   i3 = HEAP32[i12 + 160 >> 2] | 0;
   if ((i3 | 0) > -1) {
    i1 = HEAP32[i12 + 200 >> 2] | 0;
    if (((HEAP16[gb + 46040 + 8128 + (i1 << 1) >> 1] | 0) + i2 | 0) <= (HEAP32[gb + 46040 + 8112 >> 2] | 0)) {
     i13 = HEAP32[i13 + 8 >> 2] | 0;
     mftCall_iiiiiii(HEAP32[gb + 92340 + 104 >> 2] | 0, i2 | 0, i3 | 0, i1 | 0, i13 & 255 | 0, i13 >>> 8 & 255 | 0, i13 >>> 16 & 255 | 0) | 0;
    }
   }
  }
 }
 return;
}

function __ZN14CHudScoreboard16MsgFunc_TeamInfoEPKciPv(i6, i3, i1, i2) {
 i6 = i6 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0;
 __Z10BEGIN_READPvi(i2, i1);
 i1 = (__Z9READ_BYTEv() | 0) << 16;
 if ((i1 + -1 | 0) >>> 0 < 4259839) {
  i5 = gb + 122336 + ((i1 >> 16) * 24 | 0) + 8 | 0;
  __Z11READ_STRINGv() | 0;
  _strncpy(i5 | 0, gb + 127001 | 0, 16) | 0;
 }
 i1 = HEAP32[i6 + 20 >> 2] | 0;
 if ((i1 | 0) >= 1) {
  i2 = 1;
  while (1) {
   HEAP16[gb + 118504 + (i2 * 40 | 0) + 26 >> 1] = 0;
   if ((i2 | 0) == (i1 | 0)) break; else i2 = i2 + 1 | 0;
  }
 }
 i1 = 1;
 do {
  mftCall_vii(HEAP32[gb + 92340 + 84 >> 2] | 0, i1 | 0, gb + 54736 + (i1 << 5) | 0);
  if (HEAP8[gb + 54736 + (i1 << 5) + 6 >> 0] | 0) HEAP32[i6 + 32 >> 2] = i1;
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != 64);
 HEAP32[i6 + 20 >> 2] = 0;
 i5 = 1;
 do {
  i4 = gb + 122336 + (i5 * 24 | 0) + 8 | 0;
  if (HEAP8[i4 >> 0] | 0) {
   i3 = HEAP32[i6 + 20 >> 2] | 0;
   L18 : do if ((i3 | 0) < 1) i1 = 1; else {
    i2 = 1;
    while (1) {
     i1 = gb + 118504 + (i2 * 40 | 0) | 0;
     if (!(HEAP8[i1 >> 0] | 0)) {
      i1 = i2;
      break L18;
     }
     if (!(_strcasecmp(i4 | 0, i1 | 0) | 0)) {
      i1 = i2;
      break L18;
     }
     i1 = i2 + 1 | 0;
     if ((i2 | 0) < (i3 | 0)) i2 = i1; else break;
    }
   } while (0);
   if ((i1 | 0) > (i3 | 0)) {
    L26 : do if ((i3 | 0) < 1) i1 = 1; else {
     i2 = 1;
     while (1) {
      if (!(HEAP8[gb + 118504 + (i2 * 40 | 0) >> 0] | 0)) {
       i1 = i2;
       break L26;
      }
      i1 = i2 + 1 | 0;
      if ((i2 | 0) < (i3 | 0)) i2 = i1; else break;
     }
    } while (0);
    HEAP32[i6 + 20 >> 2] = (i1 | 0) > (i3 | 0) ? i1 : i3;
    _strncpy(gb + 118504 + (i1 * 40 | 0) | 0, i4 | 0, 16) | 0;
    HEAP16[gb + 118504 + (i1 * 40 | 0) + 26 >> 1] = 0;
    i2 = 0;
   } else i2 = HEAP16[gb + 118504 + (i1 * 40 | 0) + 26 >> 1] | 0;
   HEAP16[gb + 118504 + (i1 * 40 | 0) + 26 >> 1] = i2 + 1 << 16 >> 16;
  }
  i5 = i5 + 1 | 0;
 } while ((i5 | 0) != 64);
 i1 = HEAP32[i6 + 20 >> 2] | 0;
 if ((i1 | 0) >= 1) {
  i3 = 1;
  while (1) {
   if ((HEAP16[gb + 118504 + (i3 * 40 | 0) + 26 >> 1] | 0) < 1) {
    i1 = gb + 118504 + (i3 * 40 | 0) | 0;
    i2 = i1 + 40 | 0;
    do {
     HEAP32[i1 >> 2] = 0;
     i1 = i1 + 4 | 0;
    } while ((i1 | 0) < (i2 | 0));
    i1 = HEAP32[i6 + 20 >> 2] | 0;
   }
   if ((i3 | 0) < (i1 | 0)) i3 = i3 + 1 | 0; else break;
  }
 }
 return 1;
}

function _HUD_ProcessPlayerState(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 HEAP32[i1 + 16 >> 2] = HEAP32[i2 + 16 >> 2];
 HEAP32[i1 + 16 + 4 >> 2] = HEAP32[i2 + 16 + 4 >> 2];
 HEAP32[i1 + 16 + 8 >> 2] = HEAP32[i2 + 16 + 8 >> 2];
 HEAP32[i1 + 28 >> 2] = HEAP32[i2 + 28 >> 2];
 HEAP32[i1 + 28 + 4 >> 2] = HEAP32[i2 + 28 + 4 >> 2];
 HEAP32[i1 + 28 + 8 >> 2] = HEAP32[i2 + 28 + 8 >> 2];
 HEAP32[i1 + 112 >> 2] = HEAP32[i2 + 112 >> 2];
 HEAP32[i1 + 112 + 4 >> 2] = HEAP32[i2 + 112 + 4 >> 2];
 HEAP32[i1 + 112 + 8 >> 2] = HEAP32[i2 + 112 + 8 >> 2];
 HEAP32[i1 + 48 >> 2] = HEAP32[i2 + 48 >> 2];
 HEAP32[i1 + 40 >> 2] = HEAP32[i2 + 40 >> 2];
 i3 = HEAP32[i2 + 56 >> 2] | 0;
 HEAP16[i1 + 56 >> 1] = i3;
 HEAP32[i1 + 60 >> 2] = HEAP32[i2 + 60 >> 2];
 HEAP32[i1 + 180 >> 2] = HEAP32[i2 + 180 >> 2];
 HEAP32[i1 + 88 >> 2] = HEAP32[i2 + 88 >> 2];
 HEAP32[i1 + 44 >> 2] = HEAP32[i2 + 44 >> 2];
 HEAP32[i1 + 92 >> 2] = HEAP32[i2 + 92 >> 2];
 HEAP16[i1 + 58 >> 1] = i3 >>> 16;
 HEAP32[i1 + 72 >> 2] = HEAP32[i2 + 72 >> 2];
 HEAP32[i1 + 76 >> 2] = HEAP32[i2 + 76 >> 2];
 i3 = HEAP32[i2 + 80 >> 2] | 0;
 HEAP8[i1 + 80 >> 0] = i3;
 HEAP8[i1 + 81 >> 0] = (i3 & 65535) >>> 8;
 HEAP8[i1 + 82 >> 0] = i3 >>> 16;
 HEAP32[i1 + 84 >> 2] = HEAP32[i2 + 84 >> 2];
 HEAP32[i1 + 96 >> 2] = HEAP32[i2 + 96 >> 2];
 HEAP32[i1 + 100 >> 2] = HEAP32[i2 + 100 >> 2];
 HEAP32[i1 + 104 >> 2] = HEAP32[i2 + 104 >> 2];
 HEAP16[i1 + 108 >> 1] = HEAP16[i2 + 108 >> 1] | 0;
 HEAP32[i1 + 188 >> 2] = HEAP32[i2 + 188 >> 2];
 HEAP32[i1 + 188 + 4 >> 2] = HEAP32[i2 + 188 + 4 >> 2];
 HEAP32[i1 + 188 + 8 >> 2] = HEAP32[i2 + 188 + 8 >> 2];
 HEAP32[i1 + 156 >> 2] = HEAP32[i2 + 156 >> 2];
 HEAP32[i1 + 160 >> 2] = HEAP32[i2 + 160 >> 2];
 HEAP32[i1 + 184 >> 2] = HEAP32[i2 + 184 >> 2];
 HEAP32[i1 + 176 >> 2] = HEAP32[i2 + 176 >> 2];
 HEAP32[i1 + 200 >> 2] = HEAP32[i2 + 200 >> 2];
 HEAP32[i1 + 168 >> 2] = HEAP32[i2 + 168 >> 2];
 HEAP32[i1 + 164 >> 2] = HEAP32[i2 + 164 >> 2];
 HEAP32[i1 + 52 >> 2] = HEAP32[i2 + 52 >> 2];
 i3 = mftCall_i(HEAP32[gb + 92340 + 204 >> 2] | 0) | 0;
 if ((HEAP32[i1 + 4 >> 2] | 0) == (HEAP32[i3 >> 2] | 0)) {
  HEAP32[gb + 121120 >> 2] = HEAP32[i1 + 168 >> 2];
  HEAP32[gb + 121116 >> 2] = HEAP32[i1 + 164 >> 2];
  HEAP32[gb + 121104 >> 2] = HEAP32[i2 + 260 >> 2];
  HEAP32[gb + 121108 >> 2] = HEAP32[i2 + 264 >> 2];
  HEAP32[gb + 121112 >> 2] = HEAP32[i2 + 268 >> 2];
 }
 return;
}

function __ZN10CHudHealth19CalcDamageDirectionE6Vector(i10, i8) {
 i10 = i10 | 0;
 i8 = i8 | 0;
 var d1 = 0.0, d2 = 0.0, d3 = 0.0, d4 = 0.0, d5 = 0.0, d6 = 0.0, d7 = 0.0, d9 = 0.0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 d6 = +HEAPF32[i8 >> 2];
 d3 = +HEAPF32[i8 + 4 >> 2];
 d1 = +HEAPF32[i8 + 8 >> 2];
 do if (d6 != 0.0 | d3 != 0.0 | d1 != 0.0) {
  d7 = +HEAPF32[gb + 46040 + 56 >> 2];
  d5 = +HEAPF32[gb + 46040 + 60 >> 2];
  d2 = +HEAPF32[gb + 46040 + 64 >> 2];
  HEAP32[i11 >> 2] = HEAP32[gb + 46040 + 68 >> 2];
  HEAP32[i11 + 4 >> 2] = HEAP32[gb + 46040 + 68 + 4 >> 2];
  HEAP32[i11 + 8 >> 2] = HEAP32[gb + 46040 + 68 + 8 >> 2];
  HEAPF32[i8 >> 2] = d6 - d7;
  HEAPF32[i8 + 4 >> 2] = d3 - d5;
  HEAPF32[i8 + 8 >> 2] = d1 - d2;
  d9 = +Math_sqrt(+((d6 - d7) * (d6 - d7) + (d3 - d5) * (d3 - d5) + (d1 - d2) * (d1 - d2)));
  if (d9 == 0.0) {
   d4 = 1.0;
   d2 = 0.0;
   d1 = 0.0;
  } else {
   d4 = (d1 - d2) * (1.0 / d9);
   d2 = (d3 - d5) * (1.0 / d9);
   d1 = (d6 - d7) * (1.0 / d9);
  }
  HEAPF32[i8 >> 2] = d1;
  HEAPF32[i8 + 4 >> 2] = d2;
  HEAPF32[i8 + 8 >> 2] = d4;
  mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i11 | 0, i11 + 36 | 0, i11 + 24 | 0, i11 + 12 | 0);
  d6 = +HEAPF32[i8 >> 2];
  d7 = +HEAPF32[i8 + 4 >> 2];
  d2 = +HEAPF32[i8 + 8 >> 2];
  d1 = d6 * +HEAPF32[i11 + 24 >> 2] + d7 * +HEAPF32[i11 + 24 + 4 >> 2] + d2 * +HEAPF32[i11 + 24 + 8 >> 2];
  d2 = d6 * +HEAPF32[i11 + 36 >> 2] + d7 * +HEAPF32[i11 + 36 + 4 >> 2] + d2 * +HEAPF32[i11 + 36 + 8 >> 2];
  if (d9 <= 50.0) {
   HEAPF32[i10 + 40 >> 2] = 1.0;
   HEAPF32[i10 + 44 >> 2] = 1.0;
   HEAPF32[i10 + 36 >> 2] = 1.0;
   HEAPF32[i10 + 32 >> 2] = 1.0;
   break;
  }
  if (d2 > 0.0) {
   if (d2 > .3) {
    d9 = +HEAPF32[i10 + 32 >> 2];
    HEAPF32[i10 + 32 >> 2] = d9 > d2 ? d9 : d2;
   }
  } else if (-d2 > .3) {
   d9 = +HEAPF32[i10 + 36 >> 2];
   HEAPF32[i10 + 36 >> 2] = d9 > -d2 ? d9 : -d2;
  }
  if (d1 > 0.0) {
   if (!(d1 > .3)) break;
   d9 = +HEAPF32[i10 + 44 >> 2];
   HEAPF32[i10 + 44 >> 2] = d9 > d1 ? d9 : d1;
   break;
  } else {
   if (!(-d1 > .3)) break;
   d9 = +HEAPF32[i10 + 40 >> 2];
   HEAPF32[i10 + 40 >> 2] = d9 > -d1 ? d9 : -d1;
   break;
  }
 } else {
  HEAP32[i10 + 32 >> 2] = 0;
  HEAP32[i10 + 32 + 4 >> 2] = 0;
  HEAP32[i10 + 32 + 8 >> 2] = 0;
  HEAP32[i10 + 32 + 12 >> 2] = 0;
 } while (0);
 STACKTOP = i11;
 return;
}

function __ZN8CShotgun13PrimaryAttackEv(i6) {
 i6 = i6 | 0;
 var i1 = 0, d2 = 0.0, d3 = 0.0, i4 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i1 = HEAP32[i6 + 128 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 do if ((HEAP32[i4 + 448 >> 2] | 0) == 3) {
  mftCall_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 316 >> 2] | 0, i6 | 0) | 0;
  HEAPF32[i6 + 156 >> 2] = .15000000596046448;
 } else {
  i5 = HEAP32[i6 + 176 >> 2] | 0;
  if ((i5 | 0) < 1) {
   mftCall_vi(HEAP32[(HEAP32[i6 >> 2] | 0) + 340 >> 2] | 0, i6 | 0);
   if (HEAP32[i6 + 176 >> 2] | 0) break;
   mftCall_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 316 >> 2] | 0, i6 | 0) | 0;
   break;
  }
  HEAP32[i1 + 692 >> 2] = 1e3;
  HEAP32[i1 + 700 >> 2] = 256;
  HEAP32[i6 + 176 >> 2] = i5 + -1;
  HEAP32[i4 + 280 >> 2] = HEAP32[i4 + 280 >> 2] | 2;
  mftCall_vii(HEAP32[(HEAP32[i1 >> 2] | 0) + 476 >> 2] | 0, i7 + 48 | 0, i1 | 0);
  __ZN11CBasePlayer16GetAutoaimVectorEf(i7 + 36 | 0, 0, 0.0);
  if (__Z14bIsMultiplayerv() | 0) {
   i5 = HEAP32[i6 + 128 >> 2] | 0;
   HEAPF32[i7 + 12 >> 2] = .08715999871492386;
   HEAPF32[i7 + 12 + 4 >> 2] = .04362000152468681;
   HEAPF32[i7 + 12 + 8 >> 2] = 0.0;
   __ZN11CBaseEntity17FireBulletsPlayerEm6VectorS0_S0_fiiiP9entvars_si(i7 + 24 | 0, 0, 4, 0, 0, i7 + 12 | 0, 0.0, 0, 0, 0, HEAP32[i5 + 4 >> 2] | 0, HEAP32[i5 + 680 >> 2] | 0);
   d2 = +HEAPF32[i7 + 24 >> 2];
   d3 = +HEAPF32[i7 + 24 + 4 >> 2];
  } else {
   i5 = HEAP32[i6 + 128 >> 2] | 0;
   HEAPF32[i7 >> 2] = .08715999871492386;
   HEAPF32[i7 + 4 >> 2] = .08715999871492386;
   HEAPF32[i7 + 8 >> 2] = .08715999871492386;
   __ZN11CBaseEntity17FireBulletsPlayerEm6VectorS0_S0_fiiiP9entvars_si(i7 + 24 | 0, 0, 6, 0, 0, i7, 0.0, 0, 0, 0, HEAP32[i5 + 4 >> 2] | 0, HEAP32[i5 + 680 >> 2] | 0);
   d2 = +HEAPF32[i7 + 24 >> 2];
   d3 = +HEAPF32[i7 + 24 + 4 >> 2];
  }
  mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 1, HEAP32[(HEAP32[(HEAP32[i6 + 128 >> 2] | 0) + 4 >> 2] | 0) + 520 >> 2] | 0, HEAP16[i6 + 210 >> 1] | 0, 0.0, gb + 56956 | 0, gb + 56956 | 0, +d2, +d3, 0, 0, 0, 0);
  i1 = (HEAP32[i6 + 176 >> 2] | 0) == 0;
  if (!i1) HEAPF32[i6 + 148 >> 2] = +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2] + .5;
  HEAPF32[i6 + 156 >> 2] = .75;
  HEAPF32[i6 + 160 >> 2] = .75;
  HEAPF32[i6 + 164 >> 2] = i1 ? .75 : 5.0;
  HEAP32[i6 + 152 >> 2] = 0;
 } while (0);
 STACKTOP = i7;
 return;
}

function _EV_FireShotGunDouble(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, d6 = 0.0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 HEAP32[i5 + 108 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i5 + 108 + 4 >> 2] = HEAP32[i1 + 12 >> 2];
 HEAP32[i5 + 108 + 8 >> 2] = HEAP32[i1 + 16 >> 2];
 HEAP32[i5 + 96 >> 2] = HEAP32[i1 + 20 >> 2];
 HEAP32[i5 + 96 + 4 >> 2] = HEAP32[i1 + 24 >> 2];
 HEAP32[i5 + 96 + 8 >> 2] = HEAP32[i1 + 28 >> 2];
 HEAP32[i5 + 84 >> 2] = HEAP32[i1 + 32 >> 2];
 HEAP32[i5 + 84 + 4 >> 2] = HEAP32[i1 + 36 >> 2];
 HEAP32[i5 + 84 + 8 >> 2] = HEAP32[i1 + 40 >> 2];
 mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i5 + 96 | 0, i5 | 0, i5 + 12 | 0, i5 + 24 | 0);
 i2 = mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 12 >> 2] | 0, gb + 39110 | 0) | 0;
 if (__Z10EV_IsLocali(i4) | 0) {
  __Z14EV_MuzzleFlashv();
  mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0, 2, 2);
  __Z11V_PunchAxisif(0, -10.0);
 }
 i3 = 0;
 do {
  __Z22EV_GetDefaultShellInfoP12event_args_sPfS1_S1_S1_S1_S1_S1_fff(i1, i5 + 108 | 0, i5 + 84 | 0, i5 + 72 | 0, i5 + 60 | 0, i5, i5 + 12 | 0, i5 + 24 | 0, 32.0, -12.0, 6.0);
  __Z13EV_EjectBrassPfS_fii(i5 + 60 | 0, i5 + 72 | 0, +HEAPF32[i5 + 96 + 4 >> 2], i2, 2);
  i3 = i3 + 1 | 0;
 } while ((i3 | 0) != 2);
 i2 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0;
 d6 = +mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, .9800000190734863, 1.0);
 i3 = (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 31) | 0) + 85 | 0;
 mftCall_viiiiddii(i2 | 0, i4 | 0, i5 + 108 | 0, 1, gb + 39134 | 0, +d6, .800000011920929, 0, i3 | 0);
 __Z17EV_GetGunPositionP12event_args_sPfS1_(i1, i5 + 48 | 0, i5 + 108 | 0);
 HEAP32[i5 + 36 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 + 36 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
 HEAP32[i5 + 36 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
 i3 = (mftCall_i(HEAP32[gb + 92340 + 144 >> 2] | 0) | 0) > 1;
 i1 = gb + 56828 + (i4 + -1 << 2) | 0;
 if (i3) __Z19EV_HLDM_FireBulletsiPfS_S_iS_S_fiiPiff(i4, i5, i5 + 12 | 0, i5 + 24 | 0, 8, i5 + 48 | 0, i5 + 36 | 0, 2048.0, 4, 0, i1, .17364999651908875, .04362000152468681); else __Z19EV_HLDM_FireBulletsiPfS_S_iS_S_fiiPiff(i4, i5, i5 + 12 | 0, i5 + 24 | 0, 12, i5 + 48 | 0, i5 + 36 | 0, 2048.0, 4, 0, i1, .08715999871492386, .08715999871492386);
 STACKTOP = i5;
 return;
}
function __ZN20CStudioModelRenderer22StudioCalcBonePositionEifP13mstudiobone_tP13mstudioanim_tPfS4_(i1, i12, d16, i14, i13, i11, i15) {
 i1 = i1 | 0;
 i12 = i12 | 0;
 d16 = +d16;
 i14 = i14 | 0;
 i13 = i13 | 0;
 i11 = i11 | 0;
 i15 = i15 | 0;
 var d2 = 0.0, i3 = 0, d4 = 0.0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i10 = 0;
 do {
  i8 = HEAP32[i14 + 64 + (i10 << 2) >> 2] | 0;
  i9 = i15 + (i10 << 2) | 0;
  HEAP32[i9 >> 2] = i8;
  i6 = HEAP16[i13 + (i10 << 1) >> 1] | 0;
  d2 = (HEAP32[tempDoublePtr >> 2] = i8, +HEAPF32[tempDoublePtr >> 2]);
  do if (i6 << 16 >> 16) {
   i3 = HEAP8[i13 + (i6 & 65535) + 1 >> 0] | 0;
   i1 = HEAP8[i13 + (i6 & 65535) >> 0] | 0;
   i5 = (i3 & 255) < (i1 & 255) ? 0 : i12;
   if ((i5 | 0) < (i3 & 255 | 0)) {
    i8 = i3 & 255;
    i3 = i13 + (i6 & 65535) | 0;
   } else {
    i7 = i3 & 255;
    i3 = i13 + (i6 & 65535) | 0;
    while (1) {
     i3 = i3 + ((i1 & 255) + 1 << 1) | 0;
     i6 = HEAP16[i3 >> 1] | 0;
     i5 = (HEAPU8[i3 + 1 >> 0] | 0) < (i6 & 255) ? 0 : i5 - i7 | 0;
     if ((i5 | 0) < ((i6 & 65535) >>> 8 & 65535 | 0)) {
      i1 = i6 & 255;
      i8 = (i6 & 65535) >>> 8 & 65535;
      break;
     } else {
      i1 = i6 & 255;
      i7 = (i6 & 65535) >>> 8 & 65535;
     }
    }
   }
   i7 = i1 & 255;
   i6 = i5 + 1 | 0;
   if ((i7 | 0) > (i5 | 0)) {
    i1 = HEAP16[i3 + (i6 << 1) >> 1] | 0;
    d4 = +HEAPF32[i14 + 88 + (i10 << 2) >> 2];
    if ((i7 | 0) > (i6 | 0)) {
     d2 = d2 + d4 * ((1.0 - d16) * +(i1 << 16 >> 16) + +(HEAP16[i3 + (i5 + 2 << 1) >> 1] | 0) * d16);
     HEAPF32[i9 >> 2] = d2;
     break;
    } else {
     HEAPF32[i9 >> 2] = d2 + +(i1 << 16 >> 16) * d4;
     d2 = d2 + +(i1 << 16 >> 16) * d4;
     break;
    }
   } else {
    i1 = HEAP16[i3 + (i7 << 1) >> 1] | 0;
    d4 = +HEAPF32[i14 + 88 + (i10 << 2) >> 2];
    if ((i8 | 0) > (i6 | 0)) {
     HEAPF32[i9 >> 2] = d2 + +(i1 << 16 >> 16) * d4;
     d2 = d2 + +(i1 << 16 >> 16) * d4;
     break;
    } else {
     d2 = d2 + d4 * ((1.0 - d16) * +(i1 << 16 >> 16) + +(HEAP16[i3 + (i7 + 2 << 1) >> 1] | 0) * d16);
     HEAPF32[i9 >> 2] = d2;
     break;
    }
   }
  } while (0);
  i1 = HEAP32[i14 + 40 + (i10 << 2) >> 2] | 0;
  if ((i11 | 0) != 0 & (i1 | 0) != -1) HEAPF32[i9 >> 2] = d2 + +HEAPF32[i11 + (i1 << 2) >> 2];
  i10 = i10 + 1 | 0;
 } while ((i10 | 0) != 3);
 return;
}

function __ZN4CHud13DrawHudNumberEiiiiiii(i9, i1, i10, i3, i4, i7, i6, i5) {
 i9 = i9 | 0;
 i1 = i1 | 0;
 i10 = i10 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i2 = 0, i8 = 0;
 i2 = HEAP32[i9 + 8652 >> 2] | 0;
 i8 = HEAP32[i9 + 116 >> 2] | 0;
 i8 = (HEAP32[i8 + (i2 << 4) + 4 >> 2] | 0) - (HEAP32[i8 + (i2 << 4) >> 2] | 0) | 0;
 if ((i4 | 0) > 0) {
  if ((i4 | 0) > 99) {
   if ((i2 + ((i4 >>> 0) / 100 | 0) | 0) < 0) i2 = 0; else i2 = HEAP32[(HEAP32[i9 + 112 >> 2] | 0) + (i2 + ((i4 >>> 0) / 100 | 0) << 2) >> 2] | 0;
   mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, i2 | 0, i7 | 0, i6 | 0, i5 | 0);
   mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i1 | 0, i10 | 0, (HEAP32[i9 + 116 >> 2] | 0) + ((HEAP32[i9 + 8652 >> 2] | 0) + ((i4 >>> 0) / 100 | 0) << 4) | 0);
   i2 = i8;
  } else i2 = (i3 & 4 | 0) == 0 ? 0 : i8;
  i2 = i2 + i1 | 0;
  if ((i4 | 0) > 9) {
   i1 = (HEAP32[i9 + 8652 >> 2] | 0) + ((((i4 >>> 0) % 100 | 0) >>> 0) / 10 | 0) | 0;
   if ((i1 | 0) < 0) i1 = 0; else i1 = HEAP32[(HEAP32[i9 + 112 >> 2] | 0) + (i1 << 2) >> 2] | 0;
   mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, i1 | 0, i7 | 0, i6 | 0, i5 | 0);
   mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i2 | 0, i10 | 0, (HEAP32[i9 + 116 >> 2] | 0) + ((HEAP32[i9 + 8652 >> 2] | 0) + ((((i4 >>> 0) % 100 | 0) >>> 0) / 10 | 0) << 4) | 0);
   i1 = i8;
  } else i1 = (i3 & 6 | 0) == 0 ? 0 : i8;
  i2 = i1 + i2 | 0;
  i1 = (HEAP32[i9 + 8652 >> 2] | 0) + ((i4 | 0) % 10 | 0) | 0;
  if ((i1 | 0) < 0) i1 = 0; else i1 = HEAP32[(HEAP32[i9 + 112 >> 2] | 0) + (i1 << 2) >> 2] | 0;
  mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, i1 | 0, i7 | 0, i6 | 0, i5 | 0);
  mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i2 | 0, i10 | 0, (HEAP32[i9 + 116 >> 2] | 0) + ((HEAP32[i9 + 8652 >> 2] | 0) + ((i4 | 0) % 10 | 0) << 4) | 0);
  i1 = i2 + i8 | 0;
 } else if (i3 & 1) {
  if ((i2 | 0) < 0) i2 = 0; else i2 = HEAP32[(HEAP32[i9 + 112 >> 2] | 0) + (i2 << 2) >> 2] | 0;
  mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, i2 | 0, i7 | 0, i6 | 0, i5 | 0);
  i1 = ((i3 & 4 | 0) == 0 ? 0 : i8) + i1 + ((i3 & 6 | 0) == 0 ? 0 : i8) | 0;
  mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, i1 | 0, i10 | 0, (HEAP32[i9 + 116 >> 2] | 0) + (HEAP32[i9 + 8652 >> 2] << 4) | 0);
  i1 = i1 + i8 | 0;
 }
 return i1 | 0;
}

function __ZN8CShotgun15SecondaryAttackEv(i6) {
 i6 = i6 | 0;
 var i1 = 0, d2 = 0.0, d3 = 0.0, i4 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i1 = HEAP32[i6 + 128 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 do if ((HEAP32[i4 + 448 >> 2] | 0) == 3) {
  mftCall_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 316 >> 2] | 0, i6 | 0) | 0;
  HEAPF32[i6 + 156 >> 2] = .15000000596046448;
 } else {
  i5 = HEAP32[i6 + 176 >> 2] | 0;
  if ((i5 | 0) < 2) {
   mftCall_vi(HEAP32[(HEAP32[i6 >> 2] | 0) + 340 >> 2] | 0, i6 | 0);
   mftCall_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 316 >> 2] | 0, i6 | 0) | 0;
   break;
  }
  HEAP32[i1 + 692 >> 2] = 1e3;
  HEAP32[i1 + 700 >> 2] = 256;
  HEAP32[i6 + 176 >> 2] = i5 + -2;
  HEAP32[i4 + 280 >> 2] = HEAP32[i4 + 280 >> 2] | 2;
  mftCall_vii(HEAP32[(HEAP32[i1 >> 2] | 0) + 476 >> 2] | 0, i7 + 48 | 0, i1 | 0);
  __ZN11CBasePlayer16GetAutoaimVectorEf(i7 + 36 | 0, 0, 0.0);
  if (__Z14bIsMultiplayerv() | 0) {
   i5 = HEAP32[i6 + 128 >> 2] | 0;
   HEAPF32[i7 + 12 >> 2] = .17364999651908875;
   HEAPF32[i7 + 12 + 4 >> 2] = .04362000152468681;
   HEAPF32[i7 + 12 + 8 >> 2] = 0.0;
   __ZN11CBaseEntity17FireBulletsPlayerEm6VectorS0_S0_fiiiP9entvars_si(i7 + 24 | 0, 0, 8, 0, 0, i7 + 12 | 0, 0.0, 0, 0, 0, HEAP32[i5 + 4 >> 2] | 0, HEAP32[i5 + 680 >> 2] | 0);
   d2 = +HEAPF32[i7 + 24 >> 2];
   d3 = +HEAPF32[i7 + 24 + 4 >> 2];
  } else {
   i5 = HEAP32[i6 + 128 >> 2] | 0;
   HEAPF32[i7 >> 2] = .08715999871492386;
   HEAPF32[i7 + 4 >> 2] = .08715999871492386;
   HEAPF32[i7 + 8 >> 2] = .08715999871492386;
   __ZN11CBaseEntity17FireBulletsPlayerEm6VectorS0_S0_fiiiP9entvars_si(i7 + 24 | 0, 0, 12, 0, 0, i7, 0.0, 0, 0, 0, HEAP32[i5 + 4 >> 2] | 0, HEAP32[i5 + 680 >> 2] | 0);
   d2 = +HEAPF32[i7 + 24 >> 2];
   d3 = +HEAPF32[i7 + 24 + 4 >> 2];
  }
  mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 1, HEAP32[(HEAP32[(HEAP32[i6 + 128 >> 2] | 0) + 4 >> 2] | 0) + 520 >> 2] | 0, HEAP16[i6 + 208 >> 1] | 0, 0.0, gb + 56956 | 0, gb + 56956 | 0, +d2, +d3, 0, 0, 0, 0);
  i1 = (HEAP32[i6 + 176 >> 2] | 0) == 0;
  if (!i1) HEAPF32[i6 + 148 >> 2] = +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2] + .95;
  HEAPF32[i6 + 156 >> 2] = 1.5;
  HEAPF32[i6 + 160 >> 2] = 1.5;
  HEAPF32[i6 + 164 >> 2] = i1 ? 1.5 : 6.0;
  HEAP32[i6 + 152 >> 2] = 0;
 } while (0);
 STACKTOP = i7;
 return;
}

function __ZN13CHudStatusBar4DrawEf(i11, d1) {
 i11 = i11 | 0;
 d1 = +d1;
 var i2 = 0, i3 = 0, d4 = 0.0, d5 = 0.0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (HEAP32[i11 + 564 >> 2] | 0) {
  i2 = 0;
  do {
   HEAP32[i11 + 568 + (i2 << 2) >> 2] = gb + 34976;
   __ZN13CHudStatusBar17ParseStatusStringEi(i11, i2);
   i2 = i2 + 1 | 0;
  } while ((i2 | 0) != 2);
  HEAP32[i11 + 564 >> 2] = 0;
 }
 i7 = HEAP32[gb + 46040 + 8116 >> 2] | 0;
 i9 = 0;
 do {
  i8 = i11 + 276 + (i9 << 7) | 0;
  if (+HEAPF32[(HEAP32[gb + 93740 >> 2] | 0) + 12 >> 2] == 1.0) {
   HEAP32[i10 + 4 >> 2] = 13;
   HEAP32[i10 >> 2] = __ZN4CHud16DrawHudStringLenEPc(0, i8) | 0;
   i2 = 13;
  } else {
   mftCall_viii(HEAP32[gb + 92340 + 116 >> 2] | 0, i8 | 0, i10 | 0, i10 + 4 | 0);
   i2 = HEAP32[i10 + 4 >> 2] | 0;
  }
  i2 = i7 + -4 - ~~(+(i7 | 0) * 2.0833334419876337e-03 * 36.0 + .5) - (Math_imul(i2, i9) | 0) | 0;
  if ((i9 | 0) == 1) if (+mftCall_di(HEAP32[gb + 92340 + 60 >> 2] | 0, gb + 43513 | 0) != 0.0) {
   i6 = (HEAP32[gb + 46040 + 8112 >> 2] | 0) - (HEAP32[i10 >> 2] | 0) | 0;
   i6 = (i6 | 0) < 2 ? 2 : i6;
   d4 = +((HEAP32[gb + 46040 + 8116 >> 2] | 0) / 2 | 0 | 0);
   d5 = +(HEAP32[i10 + 4 >> 2] | 0);
   i6 = (i6 | 0) < -1 ? 0 : (i6 | 0) / 2 | 0;
   i2 = ~~(d4 + d5 * +mftCall_di(HEAP32[gb + 92340 + 60 >> 2] | 0, gb + 43513 | 0));
  } else i6 = 4; else i6 = 4;
  i3 = HEAP32[i11 + 568 + (i9 << 2) >> 2] | 0;
  do if (i3 | 0) {
   d4 = +HEAPF32[i3 >> 2];
   d5 = +HEAPF32[i3 + 4 >> 2];
   d1 = +HEAPF32[i3 + 8 >> 2];
   if (+HEAPF32[(HEAP32[gb + 93740 >> 2] | 0) + 12 >> 2] == 1.0) {
    HEAPF32[gb + 93744 >> 2] = d4;
    HEAPF32[gb + 93744 + 4 >> 2] = d5;
    HEAPF32[gb + 93744 + 8 >> 2] = d1;
    break;
   } else {
    mftCall_vddd(HEAP32[gb + 92340 + 112 >> 2] | 0, +d4, +d5, +d1);
    break;
   }
  } while (0);
  if (+HEAPF32[(HEAP32[gb + 93740 >> 2] | 0) + 12 >> 2] == 1.0) __ZN4CHud13DrawHudStringEiiiPciii(0, i6, i2, 9999, i8, ~~(+HEAPF32[gb + 93744 >> 2] * 255.0), ~~(+HEAPF32[gb + 93744 + 4 >> 2] * 255.0), ~~(+HEAPF32[gb + 93744 + 8 >> 2] * 255.0)) | 0; else mftCall_iiii(HEAP32[gb + 92340 + 108 >> 2] | 0, i6 | 0, i2 | 0, i8 | 0) | 0;
  i9 = i9 + 1 | 0;
 } while ((i9 | 0) != 2);
 STACKTOP = i10;
 return 1;
}

function _EV_FireShotGunSingle(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, d5 = 0.0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i3 = HEAP32[i1 + 4 >> 2] | 0;
 HEAP32[i4 + 108 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i4 + 108 + 4 >> 2] = HEAP32[i1 + 12 >> 2];
 HEAP32[i4 + 108 + 8 >> 2] = HEAP32[i1 + 16 >> 2];
 HEAP32[i4 + 96 >> 2] = HEAP32[i1 + 20 >> 2];
 HEAP32[i4 + 96 + 4 >> 2] = HEAP32[i1 + 24 >> 2];
 HEAP32[i4 + 96 + 8 >> 2] = HEAP32[i1 + 28 >> 2];
 HEAP32[i4 + 84 >> 2] = HEAP32[i1 + 32 >> 2];
 HEAP32[i4 + 84 + 4 >> 2] = HEAP32[i1 + 36 >> 2];
 HEAP32[i4 + 84 + 8 >> 2] = HEAP32[i1 + 40 >> 2];
 mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i4 + 96 | 0, i4 | 0, i4 + 12 | 0, i4 + 24 | 0);
 i2 = mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 12 >> 2] | 0, gb + 39110 | 0) | 0;
 if (__Z10EV_IsLocali(i3) | 0) {
  __Z14EV_MuzzleFlashv();
  mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0, 1, 2);
  __Z11V_PunchAxisif(0, -5.0);
 }
 __Z22EV_GetDefaultShellInfoP12event_args_sPfS1_S1_S1_S1_S1_S1_fff(i1, i4 + 108 | 0, i4 + 84 | 0, i4 + 72 | 0, i4 + 60 | 0, i4, i4 + 12 | 0, i4 + 24 | 0, 32.0, -12.0, 6.0);
 __Z13EV_EjectBrassPfS_fii(i4 + 60 | 0, i4 + 72 | 0, +HEAPF32[i4 + 96 + 4 >> 2], i2, 2);
 i6 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0;
 d5 = +mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, .949999988079071, 1.0);
 i2 = (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 31) | 0) + 93 | 0;
 mftCall_viiiiddii(i6 | 0, i3 | 0, i4 + 108 | 0, 1, gb + 39155 | 0, +d5, .800000011920929, 0, i2 | 0);
 __Z17EV_GetGunPositionP12event_args_sPfS1_(i1, i4 + 48 | 0, i4 + 108 | 0);
 HEAP32[i4 + 36 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 + 36 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
 HEAP32[i4 + 36 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
 i2 = (mftCall_i(HEAP32[gb + 92340 + 144 >> 2] | 0) | 0) > 1;
 i1 = gb + 56828 + (i3 + -1 << 2) | 0;
 if (i2) __Z19EV_HLDM_FireBulletsiPfS_S_iS_S_fiiPiff(i3, i4, i4 + 12 | 0, i4 + 24 | 0, 4, i4 + 48 | 0, i4 + 36 | 0, 2048.0, 4, 0, i1, .08715999871492386, .04362000152468681); else __Z19EV_HLDM_FireBulletsiPfS_S_iS_S_fiiPiff(i3, i4, i4 + 12 | 0, i4 + 24 | 0, 6, i4 + 48 | 0, i4 + 36 | 0, 2048.0, 4, 0, i1, .08715999871492386, .08715999871492386);
 STACKTOP = i4;
 return;
}

function __ZN8CHudMOTD4DrawEf(i10, d2) {
 i10 = i10 | 0;
 d2 = +d2;
 var i1 = 0, i3 = 0, d4 = 0.0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0;
 i1 = HEAP32[gb + 46040 + 8656 >> 2] | 0;
 HEAP32[gb + 46040 + 8656 >> 2] = i1 & -3;
 L1 : do if (HEAP8[i10 + 24 >> 0] | 0) {
  HEAP32[gb + 46040 + 8656 >> 2] = i1 | 2;
  i1 = HEAP32[gb + 46040 + 8116 >> 2] | 0;
  i3 = (HEAP32[i10 + 1564 >> 2] | 0) * 13 | 0;
  i5 = HEAP32[gb + 46040 + 8112 >> 2] | 0;
  i8 = Math_imul(HEAP16[gb + 46040 + 8282 >> 1] | 0, HEAP32[i10 + 1568 >> 2] | 0) | 0;
  i11 = ((i5 - i8 | 0) / 2 | 0 | 0) < 30 ? 30 : (i5 - i8 | 0) / 2 | 0;
  if ((i3 | 0) > (i1 + -100 | 0)) {
   d4 = +HEAPF32[i10 + 20 >> 2];
   if ((~~(d4 + 37.0) | 0) > 34) {
    HEAPF32[i10 + 20 >> 2] = d4 - +(~~(d4 + 37.0) + -34 | 0) * .3333333333333333;
    d2 = d4 - +(~~(d4 + 37.0) + -34 | 0) * .3333333333333333;
   } else d2 = d4;
   if ((i1 + -100 | 0) > (~~(d4 + 37.0) + i3 | 0)) {
    HEAPF32[i10 + 20 >> 2] = +(i1 + -100 - (~~(d4 + 37.0) + i3) | 0) * .3333333333333333 + d2;
    i7 = i1 + -100 | 0;
    i6 = ~~(d4 + 37.0);
    i1 = 30;
   } else {
    i7 = i1 + -100 | 0;
    i6 = ~~(d4 + 37.0);
    i1 = 30;
   }
  } else {
   i7 = i3;
   i6 = (i1 - i3 | 0) / 2 | 0;
   i1 = (i1 - i3 | 0) / 2 | 0;
  }
  i9 = (i11 + i8 | 0) > (i5 + -30 | 0) ? i5 + -30 | 0 : i11 + i8 | 0;
  __ZN4CHud17DrawDarkRectangleEiiii(0, i11 + -5 | 0, i1 + -5 | 0, 10 - i11 + i9 | 0, i7 + 10 | 0);
  i8 = i1 + i7 | 0;
  i7 = i10 + 25 | 0;
  while (1) {
   i1 = HEAP8[i7 >> 0] | 0;
   if (!(i1 << 24 >> 24)) break L1; else i5 = i7;
   L12 : while (1) {
    switch (i1 << 24 >> 24) {
    case 10:
     {
      i12 = 11;
      break L12;
     }
    case 0:
     {
      i1 = 0;
      break L12;
     }
    default:
     {}
    }
    i10 = i5 + 1 | 0;
    i1 = HEAP8[i10 >> 0] | 0;
    i5 = i10;
   }
   if ((i12 | 0) == 11) {
    i12 = 0;
    HEAP8[i5 >> 0] = 0;
    i1 = i5;
   }
   i3 = i6;
   i6 = i6 + 13 | 0;
   if (!((i3 | 0) < 31 | (i6 | 0) > (i8 | 0))) __Z13DrawUtfStringiiiPciii(i11, i3, i9, i7, 255, 180, 0) | 0;
   if (i1 | 0) HEAP8[i1 >> 0] = 10;
   if ((i6 | 0) > ((HEAP32[gb + 46040 + 8116 >> 2] | 0) + -20 | 0)) break; else i7 = (HEAP8[i5 >> 0] | 0) == 10 ? i5 + 1 | 0 : i5;
  }
 } while (0);
 return 1;
}

function __ZN10CHudHealth4DrawEf(i8, d7) {
 i8 = i8 | 0;
 d7 = +d7;
 var d1 = 0.0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(HEAP32[gb + 46040 + 84 >> 2] & 8)) if (!(mftCall_i(HEAP32[gb + 92340 + 352 >> 2] | 0) | 0)) {
  if (!(HEAP32[i8 + 52 >> 2] | 0)) HEAP32[i8 + 52 >> 2] = __Z10LoadSpritePKc(gb + 40544 | 0) | 0;
  d1 = +HEAPF32[i8 + 48 >> 2];
  if (d1 != 0.0) {
   d1 = d1 - +HEAPF64[gb + 46040 + 48 >> 3] * 20.0;
   d1 = d1 <= 0.0 ? 0.0 : d1;
   HEAPF32[i8 + 48 >> 2] = d1;
   i2 = ~~(d1 * .009999999776482582 * 128.0 + 100.0);
  } else i2 = 100;
  i6 = HEAP32[i8 + 20 >> 2] | 0;
  i3 = (i6 | 0) < 16 ? 255 : i2;
  HEAP32[i9 + 8 >> 2] = (i6 | 0) > 25 ? 255 : 250;
  HEAP32[i9 + 4 >> 2] = (i6 | 0) > 25 ? 160 : 0;
  HEAP32[i9 >> 2] = 0;
  __Z11ScaleColorsRiS_S_i(i9 + 8 | 0, i9 + 4 | 0, i9, i3);
  if ((HEAP32[gb + 46040 + 8640 >> 2] | 0) < 0) {
   i4 = HEAP32[gb + 46040 + 8652 >> 2] | 0;
   i5 = HEAP32[gb + 46040 + 116 >> 2] | 0;
   i4 = (HEAP32[i5 + (i4 << 4) + 4 >> 2] | 0) - (HEAP32[i5 + (i4 << 4) >> 2] | 0) | 0;
   i2 = HEAP32[i8 + 28 >> 2] | 0;
   i5 = (HEAP32[i5 + (i2 << 4) + 4 >> 2] | 0) - (HEAP32[i5 + (i2 << 4) >> 2] | 0) | 0;
   i6 = HEAP32[gb + 46040 + 108 >> 2] | 0;
   i6 = (HEAP32[gb + 46040 + 8116 >> 2] | 0) - i6 + ((i6 | 0) / -2 | 0) | 0;
   if ((i2 | 0) < 0) i2 = 0; else i2 = HEAP32[(HEAP32[gb + 46040 + 112 >> 2] | 0) + (i2 << 2) >> 2] | 0;
   i12 = HEAP32[i9 + 8 >> 2] | 0;
   i11 = HEAP32[i9 + 4 >> 2] | 0;
   i10 = HEAP32[i9 >> 2] | 0;
   mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, i2 | 0, i12 | 0, i11 | 0, i10 | 0);
   mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, (i5 | 0) / 2 | 0 | 0, i6 | 0, (HEAP32[gb + 46040 + 116 >> 2] | 0) + (HEAP32[i8 + 28 >> 2] << 4) | 0);
   i5 = (__ZN4CHud13DrawHudNumberEiiiiiii(gb + 46040 | 0, i5 + ((i4 | 0) / 2 | 0) | 0, i6, 5, HEAP32[i8 + 20 >> 2] | 0, i12, i11, i10) | 0) + ((i4 | 0) / 2 | 0) | 0;
   mftCall_viiiiiiii(HEAP32[gb + 92340 + 44 >> 2] | 0, i5 | 0, i6 | 0, (i4 | 0) / 10 | 0 | 0, HEAP32[gb + 46040 + 108 >> 2] | 0, 255, 160, 0, i3 | 0);
  }
  __ZN10CHudHealth10DrawDamageEf(i8, d7) | 0;
  __ZN10CHudHealth8DrawPainEf(i8, 0.0) | 0;
 }
 STACKTOP = i9;
 return 1;
}

function _PM_InitTextureTypes() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 528 | 0;
 if (!(HEAP32[gb + 121152 >> 2] | 0)) {
  _memset(gb + 132825 | 0, 0, 6656) | 0;
  _memset(gb + 139481 | 0, 0, 512) | 0;
  HEAP32[gb + 121148 >> 2] = 0;
  i6 = mftCall_ii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325024 >> 2] | 0, gb + 44892 | 0) | 0;
  i7 = mftCall_iiii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325028 >> 2] | 0, gb + 44892 | 0, 5, 0) | 0;
  if (i7 | 0) {
   _memset(i8 + 8 | 0, 0, 512) | 0;
   HEAP32[i8 >> 2] = 0;
   i5 = (mftCall_iiiiii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325036 >> 2] | 0, i7 | 0, i6 | 0, i8 | 0, i8 + 8 | 0, 511) | 0) != 0;
   i1 = HEAP32[gb + 121148 >> 2] | 0;
   if (i5 & (i1 | 0) < 512) do {
    i2 = HEAP8[i8 + 8 >> 0] | 0;
    L7 : do if (i2 << 24 >> 24) {
     i4 = 0;
     while (1) {
      i3 = i2 << 24 >> 24;
      if (!(_isspace(i3 | 0) | 0)) break;
      i4 = i4 + 1 | 0;
      i2 = HEAP8[i8 + 8 + i4 >> 0] | 0;
      if (!(i2 << 24 >> 24)) break L7;
     }
     if (i2 << 24 >> 24 != 47) if (_isalpha(i3 | 0) | 0) {
      i5 = (_toupper(i3 | 0) | 0) & 255;
      HEAP8[gb + 139481 + i1 >> 0] = i5;
      while (1) {
       i5 = i4 + 1 | 0;
       i2 = HEAP8[i8 + 8 + i5 >> 0] | 0;
       if (!(i2 << 24 >> 24)) break L7;
       if (!(_isspace(i2 << 24 >> 24 | 0) | 0)) {
        i3 = i5;
        break;
       } else i4 = i5;
      }
      while (1) {
       if (_isspace(i2 << 24 >> 24 | 0) | 0) break;
       i3 = i3 + 1 | 0;
       i2 = HEAP8[i8 + 8 + i3 >> 0] | 0;
       if (!(i2 << 24 >> 24)) break L7;
      }
      i4 = i4 + 13 | 0;
      HEAP8[i8 + 8 + ((i3 | 0) < (i4 | 0) ? i3 : i4) >> 0] = 0;
      HEAP32[gb + 121148 >> 2] = i1 + 1;
      _strcpy(gb + 132825 + (i1 * 13 | 0) | 0, i8 + 8 + i5 | 0) | 0;
     }
    } while (0);
    i5 = (mftCall_iiiiii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325036 >> 2] | 0, i7 | 0, i6 | 0, i8 | 0, i8 + 8 | 0, 511) | 0) != 0;
    i1 = HEAP32[gb + 121148 >> 2] | 0;
   } while (i5 & (i1 | 0) < 512);
   mftCall_vi(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325032 >> 2] | 0, i7 | 0);
   _PM_SortTextures();
   HEAP32[gb + 121152 >> 2] = 1;
  }
 }
 STACKTOP = i8;
 return;
}

function __Z16ConcatTransformsPA4_fS0_S0_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 HEAPF32[i3 >> 2] = +HEAPF32[i1 >> 2] * +HEAPF32[i2 >> 2] + +HEAPF32[i1 + 4 >> 2] * +HEAPF32[i2 + 16 >> 2] + +HEAPF32[i1 + 8 >> 2] * +HEAPF32[i2 + 32 >> 2];
 HEAPF32[i3 + 4 >> 2] = +HEAPF32[i1 >> 2] * +HEAPF32[i2 + 4 >> 2] + +HEAPF32[i1 + 4 >> 2] * +HEAPF32[i2 + 20 >> 2] + +HEAPF32[i1 + 8 >> 2] * +HEAPF32[i2 + 36 >> 2];
 HEAPF32[i3 + 8 >> 2] = +HEAPF32[i1 >> 2] * +HEAPF32[i2 + 8 >> 2] + +HEAPF32[i1 + 4 >> 2] * +HEAPF32[i2 + 24 >> 2] + +HEAPF32[i1 + 8 >> 2] * +HEAPF32[i2 + 40 >> 2];
 HEAPF32[i3 + 12 >> 2] = +HEAPF32[i1 + 12 >> 2] + (+HEAPF32[i1 >> 2] * +HEAPF32[i2 + 12 >> 2] + +HEAPF32[i1 + 4 >> 2] * +HEAPF32[i2 + 28 >> 2] + +HEAPF32[i1 + 8 >> 2] * +HEAPF32[i2 + 44 >> 2]);
 HEAPF32[i3 + 16 >> 2] = +HEAPF32[i1 + 16 >> 2] * +HEAPF32[i2 >> 2] + +HEAPF32[i1 + 20 >> 2] * +HEAPF32[i2 + 16 >> 2] + +HEAPF32[i1 + 24 >> 2] * +HEAPF32[i2 + 32 >> 2];
 HEAPF32[i3 + 20 >> 2] = +HEAPF32[i1 + 16 >> 2] * +HEAPF32[i2 + 4 >> 2] + +HEAPF32[i1 + 20 >> 2] * +HEAPF32[i2 + 20 >> 2] + +HEAPF32[i1 + 24 >> 2] * +HEAPF32[i2 + 36 >> 2];
 HEAPF32[i3 + 24 >> 2] = +HEAPF32[i1 + 16 >> 2] * +HEAPF32[i2 + 8 >> 2] + +HEAPF32[i1 + 20 >> 2] * +HEAPF32[i2 + 24 >> 2] + +HEAPF32[i1 + 24 >> 2] * +HEAPF32[i2 + 40 >> 2];
 HEAPF32[i3 + 28 >> 2] = +HEAPF32[i1 + 28 >> 2] + (+HEAPF32[i1 + 16 >> 2] * +HEAPF32[i2 + 12 >> 2] + +HEAPF32[i1 + 20 >> 2] * +HEAPF32[i2 + 28 >> 2] + +HEAPF32[i1 + 24 >> 2] * +HEAPF32[i2 + 44 >> 2]);
 HEAPF32[i3 + 32 >> 2] = +HEAPF32[i1 + 32 >> 2] * +HEAPF32[i2 >> 2] + +HEAPF32[i1 + 36 >> 2] * +HEAPF32[i2 + 16 >> 2] + +HEAPF32[i1 + 40 >> 2] * +HEAPF32[i2 + 32 >> 2];
 HEAPF32[i3 + 36 >> 2] = +HEAPF32[i1 + 32 >> 2] * +HEAPF32[i2 + 4 >> 2] + +HEAPF32[i1 + 36 >> 2] * +HEAPF32[i2 + 20 >> 2] + +HEAPF32[i1 + 40 >> 2] * +HEAPF32[i2 + 36 >> 2];
 HEAPF32[i3 + 40 >> 2] = +HEAPF32[i1 + 32 >> 2] * +HEAPF32[i2 + 8 >> 2] + +HEAPF32[i1 + 36 >> 2] * +HEAPF32[i2 + 24 >> 2] + +HEAPF32[i1 + 40 >> 2] * +HEAPF32[i2 + 40 >> 2];
 HEAPF32[i3 + 44 >> 2] = +HEAPF32[i1 + 44 >> 2] + (+HEAPF32[i1 + 32 >> 2] * +HEAPF32[i2 + 12 >> 2] + +HEAPF32[i1 + 36 >> 2] * +HEAPF32[i2 + 28 >> 2] + +HEAPF32[i1 + 40 >> 2] * +HEAPF32[i2 + 44 >> 2]);
 return;
}

function __Z13CL_ButtonBitsi(i15) {
 i15 = i15 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 if (!(HEAP32[gb + 94188 + 8 >> 2] & 3)) i1 = 0; else if (!(HEAP8[gb + 46040 + 6560 >> 0] | 0)) i1 = 1; else {
  __ZN8CHudMOTD5ResetEv(gb + 46040 + 6536 | 0);
  i1 = 0;
 }
 i14 = HEAP32[gb + 94236 + 8 >> 2] | 0;
 i13 = (i14 & 3 | 0) == 0 ? i1 : i1 | 4;
 i7 = HEAP32[gb + 94176 + 8 >> 2] | 0;
 i13 = (i7 & 3 | 0) == 0 ? i13 : i13 | 2;
 i8 = HEAP32[gb + 94068 + 8 >> 2] | 0;
 i13 = (i8 & 3 | 0) == 0 ? i13 : i13 | 8;
 i9 = HEAP32[gb + 94080 + 8 >> 2] | 0;
 i13 = (i9 & 3 | 0) == 0 ? i13 : i13 | 16;
 i10 = HEAP32[gb + 94164 + 8 >> 2] | 0;
 i13 = (i10 & 3 | 0) == 0 ? i13 : i13 | 32;
 i13 = (HEAP32[gb + 93936 >> 2] | 0) == 0 ? i13 : i13 | 64;
 i11 = HEAP32[gb + 94044 + 8 >> 2] | 0;
 i13 = (i11 & 3 | 0) == 0 ? i13 : i13 | 128;
 i12 = HEAP32[gb + 94056 + 8 >> 2] | 0;
 i13 = (i12 & 3 | 0) == 0 ? i13 : i13 | 256;
 i1 = HEAP32[gb + 94116 + 8 >> 2] | 0;
 i13 = (i1 & 3 | 0) == 0 ? i13 : i13 | 512;
 i2 = HEAP32[gb + 94128 + 8 >> 2] | 0;
 i13 = (i2 & 3 | 0) == 0 ? i13 : i13 | 1024;
 i3 = HEAP32[gb + 94200 + 8 >> 2] | 0;
 i13 = (i3 & 3 | 0) == 0 ? i13 : i13 | 2048;
 i4 = HEAP32[gb + 94248 + 8 >> 2] | 0;
 i13 = (i4 & 3 | 0) == 0 ? i13 : i13 | 8192;
 i5 = HEAP32[gb + 94260 + 8 >> 2] | 0;
 i13 = (i5 & 3 | 0) == 0 ? i13 : i13 | 16384;
 i6 = HEAP32[gb + 94272 + 8 >> 2] | 0;
 i13 = (HEAP32[gb + 46040 + 8648 >> 2] | i6 & 3 | (HEAP32[gb + 46040 + 188 >> 2] | 0) < 1 | 0) == 0 ? i13 : i13 | 32768;
 if (i15 | 0) {
  HEAP32[gb + 94188 + 8 >> 2] = HEAP32[gb + 94188 + 8 >> 2] & -3;
  HEAP32[gb + 94236 + 8 >> 2] = i14 & -3;
  HEAP32[gb + 94176 + 8 >> 2] = i7 & -3;
  HEAP32[gb + 94068 + 8 >> 2] = i8 & -3;
  HEAP32[gb + 94080 + 8 >> 2] = i9 & -3;
  HEAP32[gb + 94164 + 8 >> 2] = i10 & -3;
  HEAP32[gb + 94044 + 8 >> 2] = i11 & -3;
  HEAP32[gb + 94056 + 8 >> 2] = i12 & -3;
  HEAP32[gb + 94116 + 8 >> 2] = i1 & -3;
  HEAP32[gb + 94128 + 8 >> 2] = i2 & -3;
  HEAP32[gb + 94200 + 8 >> 2] = i3 & -3;
  HEAP32[gb + 94248 + 8 >> 2] = i4 & -3;
  HEAP32[gb + 94260 + 8 >> 2] = i5 & -3;
  HEAP32[gb + 94272 + 8 >> 2] = i6 & -3;
 }
 return i13 | 0;
}

function __ZN4CMP513PrimaryAttackEv(i6) {
 i6 = i6 | 0;
 var d1 = 0.0, d2 = 0.0, i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i3 = HEAP32[i6 + 128 >> 2] | 0;
 i4 = HEAP32[i3 + 4 >> 2] | 0;
 do if ((HEAP32[i4 + 448 >> 2] | 0) == 3) {
  mftCall_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 316 >> 2] | 0, i6 | 0) | 0;
  HEAPF32[i6 + 156 >> 2] = .15000000596046448;
 } else {
  i5 = HEAP32[i6 + 176 >> 2] | 0;
  if ((i5 | 0) < 1) {
   mftCall_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 316 >> 2] | 0, i6 | 0) | 0;
   HEAPF32[i6 + 156 >> 2] = .15000000596046448;
   break;
  }
  HEAP32[i3 + 692 >> 2] = 600;
  HEAP32[i3 + 700 >> 2] = 256;
  HEAP32[i6 + 176 >> 2] = i5 + -1;
  HEAP32[i4 + 280 >> 2] = HEAP32[i4 + 280 >> 2] | 2;
  mftCall_vii(HEAP32[(HEAP32[i3 >> 2] | 0) + 476 >> 2] | 0, i7 + 48 | 0, i3 | 0);
  __ZN11CBasePlayer16GetAutoaimVectorEf(i7 + 36 | 0, 0, 0.0);
  if (__Z14bIsMultiplayerv() | 0) {
   i5 = HEAP32[i6 + 128 >> 2] | 0;
   HEAPF32[i7 >> 2] = .026179999113082886;
   HEAPF32[i7 + 4 >> 2] = .026179999113082886;
   HEAPF32[i7 + 8 >> 2] = .026179999113082886;
   __ZN11CBaseEntity17FireBulletsPlayerEm6VectorS0_S0_fiiiP9entvars_si(i7 + 24 | 0, 0, 1, 0, 0, i7, 0.0, 0, 0, 0, HEAP32[i5 + 4 >> 2] | 0, HEAP32[i5 + 680 >> 2] | 0);
   d1 = +HEAPF32[i7 + 24 >> 2];
   d2 = +HEAPF32[i7 + 24 + 4 >> 2];
  } else {
   i5 = HEAP32[i6 + 128 >> 2] | 0;
   HEAPF32[i7 + 12 >> 2] = .05234000086784363;
   HEAPF32[i7 + 12 + 4 >> 2] = .05234000086784363;
   HEAPF32[i7 + 12 + 8 >> 2] = .05234000086784363;
   __ZN11CBaseEntity17FireBulletsPlayerEm6VectorS0_S0_fiiiP9entvars_si(i7 + 24 | 0, 0, 1, 0, 0, i7 + 12 | 0, 0.0, 0, 0, 0, HEAP32[i5 + 4 >> 2] | 0, HEAP32[i5 + 680 >> 2] | 0);
   d1 = +HEAPF32[i7 + 24 >> 2];
   d2 = +HEAPF32[i7 + 24 + 4 >> 2];
  }
  mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 1, HEAP32[(HEAP32[(HEAP32[i6 + 128 >> 2] | 0) + 4 >> 2] | 0) + 520 >> 2] | 0, HEAP16[i6 + 204 >> 1] | 0, 0.0, gb + 56956 | 0, gb + 56956 | 0, +d1, +d2, 0, 0, 0, 0);
  HEAPF32[i6 + 156 >> 2] = .10000000149011612;
  HEAPF32[i6 + 164 >> 2] = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i6 + 128 >> 2] | 0) + 680 >> 2] | 0, 10.0, 15.0);
 } while (0);
 STACKTOP = i7;
 return;
}

function _EV_TrainPitchAdjust(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i7 + 4 >> 2] = HEAP32[i1 + 12 >> 2];
 HEAP32[i7 + 8 >> 2] = HEAP32[i1 + 16 >> 2];
 i6 = HEAP32[i1 + 56 >> 2] | 0;
 i4 = HEAP32[i1 + 64 >> 2] | 0;
 switch (i6 >>> 12 & 7) {
 case 1:
  {
   i1 = i7 + 16 | 0;
   i2 = gb + 37473 | 0;
   i3 = i1 + 18 | 0;
   do {
    HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
    i1 = i1 + 1 | 0;
    i2 = i2 + 1 | 0;
   } while ((i1 | 0) < (i3 | 0));
   i2 = 9;
   break;
  }
 case 2:
  {
   i1 = i7 + 16 | 0;
   i2 = gb + 37491 | 0;
   i3 = i1 + 18 | 0;
   do {
    HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
    i1 = i1 + 1 | 0;
    i2 = i2 + 1 | 0;
   } while ((i1 | 0) < (i3 | 0));
   i2 = 9;
   break;
  }
 case 3:
  {
   i1 = i7 + 16 | 0;
   i2 = gb + 37509 | 0;
   i3 = i1 + 18 | 0;
   do {
    HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
    i1 = i1 + 1 | 0;
    i2 = i2 + 1 | 0;
   } while ((i1 | 0) < (i3 | 0));
   i2 = 9;
   break;
  }
 case 4:
  {
   i1 = i7 + 16 | 0;
   i2 = gb + 37527 | 0;
   i3 = i1 + 18 | 0;
   do {
    HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
    i1 = i1 + 1 | 0;
    i2 = i2 + 1 | 0;
   } while ((i1 | 0) < (i3 | 0));
   i2 = 9;
   break;
  }
 case 5:
  {
   i1 = i7 + 16 | 0;
   i2 = gb + 37545 | 0;
   i3 = i1 + 18 | 0;
   do {
    HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
    i1 = i1 + 1 | 0;
    i2 = i2 + 1 | 0;
   } while ((i1 | 0) < (i3 | 0));
   i2 = 9;
   break;
  }
 case 6:
  {
   i1 = i7 + 16 | 0;
   i2 = gb + 37563 | 0;
   i3 = i1 + 18 | 0;
   do {
    HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
    i1 = i1 + 1 | 0;
    i2 = i2 + 1 | 0;
   } while ((i1 | 0) < (i3 | 0));
   i2 = 9;
   break;
  }
 default:
  HEAP8[i7 + 16 >> 0] = 0;
 }
 do if ((i2 | 0) == 9) {
  i1 = HEAP32[gb + 92340 + 336 >> 2] | 0;
  if (!i4) {
   mftCall_viiiiddii(HEAP32[i1 + 4 >> 2] | 0, i5 | 0, i7 | 0, 6, i7 + 16 | 0, +(+(i6 & 63 | 0) * .025), .800000011920929, 128, ~~(+(i6 >>> 6 & 63 | 0) * 10.0) | 0);
   break;
  } else {
   mftCall_viii(HEAP32[i1 + 8 >> 2] | 0, i5 | 0, 6, i7 + 16 | 0);
   break;
  }
 } while (0);
 STACKTOP = i7;
 return;
}

function __ZN20CStudioModelRenderer19StudioCalcRotationsEPA3_fPA4_fP16mstudioseqdesc_tP13mstudioanim_tf(i8, i9, i7, i10, i4, d1) {
 i8 = i8 | 0;
 i9 = i9 | 0;
 i7 = i7 | 0;
 i10 = i10 | 0;
 i4 = i4 | 0;
 d1 = +d1;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i11 = 0, d12 = 0.0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if (+((HEAP32[i10 + 56 >> 2] | 0) + -1 | 0) < d1) d1 = 0.0; else if (d1 < -.01) d1 = -.009999999776482582;
 i6 = ~~d1;
 d12 = +mftCall_di(HEAP32[(HEAP32[i8 >> 2] | 0) + 44 >> 2] | 0, i8 | 0);
 d1 = d1 - +(i6 | 0);
 i2 = HEAP32[i8 + 68 >> 2] | 0;
 i3 = HEAP32[i2 + 144 >> 2] | 0;
 i5 = HEAP32[i8 + 48 >> 2] | 0;
 mftCall_vidiiii(HEAP32[(HEAP32[i8 >> 2] | 0) + 60 >> 2] | 0, i8 | 0, +d12, i11 | 0, i5 + 792 | 0, i5 + 2876 | 0, HEAP8[i5 + 2824 >> 0] | 0);
 if ((HEAP32[(HEAP32[i8 + 68 >> 2] | 0) + 140 >> 2] | 0) > 0) {
  i5 = 0;
  i2 = i2 + i3 | 0;
  while (1) {
   mftCall_viidiiii(HEAP32[(HEAP32[i8 >> 2] | 0) + 64 >> 2] | 0, i8 | 0, i6 | 0, +d1, i2 | 0, i4 | 0, i11 | 0, i7 + (i5 << 4) | 0);
   mftCall_viidiiii(HEAP32[(HEAP32[i8 >> 2] | 0) + 68 >> 2] | 0, i8 | 0, i6 | 0, +d1, i2 | 0, i4 | 0, i11 | 0, i9 + (i5 * 12 | 0) | 0);
   i5 = i5 + 1 | 0;
   if ((i5 | 0) >= (HEAP32[(HEAP32[i8 + 68 >> 2] | 0) + 140 >> 2] | 0)) break; else {
    i4 = i4 + 12 | 0;
    i2 = i2 + 112 | 0;
   }
  }
 }
 i2 = HEAP32[i10 + 68 >> 2] | 0;
 if (i2 & 1 | 0) HEAPF32[i9 + ((HEAP32[i10 + 72 >> 2] | 0) * 12 | 0) >> 2] = 0.0;
 if (i2 & 2 | 0) HEAPF32[i9 + ((HEAP32[i10 + 72 >> 2] | 0) * 12 | 0) + 4 >> 2] = 0.0;
 if (i2 & 4 | 0) HEAPF32[i9 + ((HEAP32[i10 + 72 >> 2] | 0) * 12 | 0) + 8 >> 2] = 0.0;
 d1 = (1.0 - d1) / +(HEAP32[i10 + 56 >> 2] | 0) * 0.0 * +HEAPF32[(HEAP32[i8 + 48 >> 2] | 0) + 784 >> 2];
 if (i2 & 64 | 0) {
  i8 = i9 + ((HEAP32[i10 + 72 >> 2] | 0) * 12 | 0) | 0;
  HEAPF32[i8 >> 2] = d1 * +HEAPF32[i10 + 76 >> 2] + +HEAPF32[i8 >> 2];
 }
 if (i2 & 128 | 0) {
  i8 = i9 + ((HEAP32[i10 + 72 >> 2] | 0) * 12 | 0) + 4 | 0;
  HEAPF32[i8 >> 2] = d1 * +HEAPF32[i10 + 76 + 4 >> 2] + +HEAPF32[i8 >> 2];
 }
 if (i2 & 256 | 0) {
  i9 = i9 + ((HEAP32[i10 + 72 >> 2] | 0) * 12 | 0) + 8 | 0;
  HEAPF32[i9 >> 2] = d1 * +HEAPF32[i10 + 76 + 8 >> 2] + +HEAPF32[i9 >> 2];
 }
 STACKTOP = i11;
 return;
}

function _HUD_TxferPredictionData(i4, i3, i1, i2, i6, i5) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 HEAP32[i4 + 204 >> 2] = HEAP32[i3 + 204 >> 2];
 HEAP32[i4 + 216 >> 2] = HEAP32[i3 + 216 >> 2];
 HEAP32[i4 + 212 >> 2] = HEAP32[i3 + 212 >> 2];
 HEAP32[i4 + 168 >> 2] = HEAP32[i3 + 168 >> 2];
 HEAP32[i1 + 24 >> 2] = HEAP32[i2 + 24 >> 2];
 HEAP32[i1 + 104 >> 2] = HEAP32[i2 + 104 >> 2];
 HEAP32[i1 + 108 >> 2] = HEAP32[i2 + 108 >> 2];
 HEAP32[i1 + 112 >> 2] = HEAP32[i2 + 112 >> 2];
 HEAP32[i1 + 116 >> 2] = HEAP32[i2 + 116 >> 2];
 HEAP32[i1 + 120 >> 2] = HEAP32[i2 + 120 >> 2];
 HEAP32[i1 + 124 >> 2] = HEAP32[i2 + 124 >> 2];
 HEAP32[i1 + 96 >> 2] = HEAP32[i2 + 96 >> 2];
 HEAP32[i1 + 100 >> 2] = HEAP32[i2 + 100 >> 2];
 HEAP32[i1 + 128 >> 2] = HEAP32[i2 + 128 >> 2];
 HEAP32[i1 + 92 >> 2] = HEAP32[i2 + 92 >> 2];
 i3 = HEAP32[i2 + 136 >> 2] | 0;
 HEAP32[i1 + 136 >> 2] = i3;
 i4 = HEAP32[i2 + 396 >> 2] | 0;
 HEAP32[gb + 35044 >> 2] = ((i3 | 0) == 0 | (i4 | 0) != 0) & 1;
 HEAP32[i1 + 396 >> 2] = i4;
 HEAP32[i1 + 400 >> 2] = HEAP32[i2 + 400 >> 2];
 HEAP32[i1 + 404 >> 2] = HEAP32[i2 + 404 >> 2];
 if (mftCall_i(HEAP32[gb + 92340 + 352 >> 2] | 0) | 0) {
  HEAP32[i1 + 396 >> 2] = HEAP32[gb + 121104 >> 2];
  HEAP32[i1 + 400 >> 2] = HEAP32[gb + 121108 >> 2];
  HEAP32[i1 + 404 >> 2] = HEAP32[gb + 121112 >> 2];
 }
 HEAP32[i1 + 408 >> 2] = HEAP32[i2 + 408 >> 2];
 HEAP32[i1 + 416 >> 2] = HEAP32[i2 + 416 >> 2];
 HEAP32[i1 + 420 >> 2] = HEAP32[i2 + 420 >> 2];
 HEAP32[i1 + 428 >> 2] = HEAP32[i2 + 428 >> 2];
 HEAP32[i1 + 428 + 4 >> 2] = HEAP32[i2 + 428 + 4 >> 2];
 HEAP32[i1 + 428 + 8 >> 2] = HEAP32[i2 + 428 + 8 >> 2];
 HEAP32[i1 + 440 >> 2] = HEAP32[i2 + 440 >> 2];
 HEAP32[i1 + 440 + 4 >> 2] = HEAP32[i2 + 440 + 4 >> 2];
 HEAP32[i1 + 440 + 8 >> 2] = HEAP32[i2 + 440 + 8 >> 2];
 HEAP32[i1 + 452 >> 2] = HEAP32[i2 + 452 >> 2];
 HEAP32[i1 + 452 + 4 >> 2] = HEAP32[i2 + 452 + 4 >> 2];
 HEAP32[i1 + 452 + 8 >> 2] = HEAP32[i2 + 452 + 8 >> 2];
 HEAP32[i1 + 464 >> 2] = HEAP32[i2 + 464 >> 2];
 HEAP32[i1 + 464 + 4 >> 2] = HEAP32[i2 + 464 + 4 >> 2];
 HEAP32[i1 + 464 + 8 >> 2] = HEAP32[i2 + 464 + 8 >> 2];
 _memcpy(i6 | 0, i5 | 0, 2816) | 0;
 return;
}

function __ZN8CSatchel10WeaponIdleEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 L1 : do if (!(+HEAPF32[i2 + 164 >> 2] > 0.0)) {
  L3 : do switch (HEAP32[i2 + 88 >> 2] | 0) {
  case 0:
   {
    mftCall_viiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 324 >> 2] | 0, i2 | 0, 1, 1, 0);
    i1 = (HEAP32[i2 + 128 >> 2] | 0) + 1548 | 0;
    HEAP8[i1 >> 0] = HEAP8[gb + 38970 >> 0] | 0;
    HEAP8[i1 + 1 >> 0] = HEAP8[gb + 38970 + 1 >> 0] | 0;
    HEAP8[i1 + 2 >> 0] = HEAP8[gb + 38970 + 2 >> 0] | 0;
    HEAP8[i1 + 3 >> 0] = HEAP8[gb + 38970 + 3 >> 0] | 0;
    HEAP8[i1 + 4 >> 0] = HEAP8[gb + 38970 + 4 >> 0] | 0;
    i1 = i2 + 128 | 0;
    break;
   }
  case 1:
   {
    mftCall_viiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 324 >> 2] | 0, i2 | 0, 1, 1, 0);
    i1 = (HEAP32[i2 + 128 >> 2] | 0) + 1548 | 0;
    HEAP8[i1 >> 0] = HEAP8[gb + 38975 >> 0] | 0;
    HEAP8[i1 + 1 >> 0] = HEAP8[gb + 38975 + 1 >> 0] | 0;
    HEAP8[i1 + 2 >> 0] = HEAP8[gb + 38975 + 2 >> 0] | 0;
    HEAP8[i1 + 3 >> 0] = HEAP8[gb + 38975 + 3 >> 0] | 0;
    HEAP8[i1 + 4 >> 0] = HEAP8[gb + 38975 + 4 >> 0] | 0;
    i1 = i2 + 128 | 0;
    break;
   }
  case 2:
   {
    i1 = HEAP32[i2 + 128 >> 2] | 0;
    if (!(HEAP32[i1 + 1236 + (HEAP32[i2 + 168 >> 2] << 2) >> 2] | 0)) {
     HEAP32[i2 + 88 >> 2] = 0;
     mftCall_vi(HEAP32[(HEAP32[i2 >> 2] | 0) + 348 >> 2] | 0, i2 | 0);
     break L1;
    } else {
     __Z10LoadVModelPcP11CBasePlayer(gb + 44536 | 0, i1);
     mftCall_viiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 324 >> 2] | 0, i2 | 0, 2, 1, 0);
     i1 = (HEAP32[i2 + 128 >> 2] | 0) + 1548 | 0;
     HEAP8[i1 >> 0] = HEAP8[gb + 38970 >> 0] | 0;
     HEAP8[i1 + 1 >> 0] = HEAP8[gb + 38970 + 1 >> 0] | 0;
     HEAP8[i1 + 2 >> 0] = HEAP8[gb + 38970 + 2 >> 0] | 0;
     HEAP8[i1 + 3 >> 0] = HEAP8[gb + 38970 + 3 >> 0] | 0;
     HEAP8[i1 + 4 >> 0] = HEAP8[gb + 38970 + 4 >> 0] | 0;
     HEAPF32[i2 + 156 >> 2] = .5;
     HEAPF32[i2 + 160 >> 2] = .5;
     HEAP32[i2 + 88 >> 2] = 0;
     i1 = i2 + 128 | 0;
     break L3;
    }
   }
  default:
   i1 = i2 + 128 | 0;
  } while (0);
  HEAPF32[i2 + 164 >> 2] = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i1 >> 2] | 0) + 680 >> 2] | 0, 10.0, 15.0);
 } while (0);
 return;
}

function __ZN13CHudSpectator13CheckSettingsEv(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i2 = (HEAP32[i3 + 3856 >> 2] | 0) + 12 | 0;
 i1 = ~~+HEAPF32[i2 >> 2];
 HEAPF32[i2 >> 2] = +(i1 | 0);
 if ((HEAP32[gb + 121104 >> 2] | 0) < 5) {
  if ((i1 + -1 | 0) >>> 0 < 2) HEAPF32[i2 >> 2] = 3.0;
 } else if ((i1 | 0) >= 3) HEAPF32[i2 >> 2] = 1.0;
 if (HEAP32[gb + 46040 + 8648 >> 2] | 0) HEAPF32[i2 >> 2] = 0.0;
 i1 = +HEAPF32[(HEAP32[gb + 46040 + 6176 >> 2] | 0) + 12 >> 2] != 0.0 & 1;
 if ((HEAP32[i3 + 3860 >> 2] | 0) != (i1 | 0)) {
  HEAP32[i3 + 3860 >> 2] = i1;
  if (mftCall_i(HEAP32[gb + 92340 + 352 >> 2] | 0) | 0) {
   HEAP32[i4 >> 2] = (HEAP32[i3 + 3860 >> 2] | 0) == 0 & 1;
   _sprintf(i4 + 24 | 0, gb + 42150 | 0, i4 | 0) | 0;
   mftCall_ii(HEAP32[gb + 92340 + 76 >> 2] | 0, i4 + 24 | 0) | 0;
  }
 }
 if (((HEAP32[gb + 121104 >> 2] | 0) + -3 | 0) >>> 0 < 2) {
  HEAP32[i3 + 4692 >> 2] = 24;
  HEAP32[i3 + 4700 >> 2] = 0;
  HEAP32[i3 + 4696 >> 2] = 48;
  HEAP32[i3 + 4704 >> 2] = 24;
  i1 = HEAP32[gb + 92340 + 52 >> 2] | 0;
  i2 = HEAP32[i3 + 4688 >> 2] | 0;
  HEAP32[i4 + 24 >> 2] = HEAP32[i3 + 4692 >> 2];
  HEAP32[i4 + 24 + 4 >> 2] = HEAP32[i3 + 4692 + 4 >> 2];
  HEAP32[i4 + 24 + 8 >> 2] = HEAP32[i3 + 4692 + 8 >> 2];
  HEAP32[i4 + 24 + 12 >> 2] = HEAP32[i3 + 4692 + 12 >> 2];
  mftCall_viiiii(i1 | 0, i2 | 0, i4 + 24 | 0, 255, 255, 255);
 } else {
  HEAP32[i3 + 4692 >> 2] = 0;
  HEAP32[i3 + 4692 + 4 >> 2] = 0;
  HEAP32[i3 + 4692 + 8 >> 2] = 0;
  HEAP32[i3 + 4692 + 12 >> 2] = 0;
  i2 = HEAP32[gb + 92340 + 52 >> 2] | 0;
  HEAP32[i4 + 8 >> 2] = 0;
  HEAP32[i4 + 8 + 4 >> 2] = 0;
  HEAP32[i4 + 8 + 8 >> 2] = 0;
  HEAP32[i4 + 8 + 12 >> 2] = 0;
  HEAP32[i4 + 24 >> 2] = HEAP32[i4 + 8 >> 2];
  HEAP32[i4 + 24 + 4 >> 2] = HEAP32[i4 + 8 + 4 >> 2];
  HEAP32[i4 + 24 + 8 >> 2] = HEAP32[i4 + 8 + 8 >> 2];
  HEAP32[i4 + 24 + 12 >> 2] = HEAP32[i4 + 8 + 12 >> 2];
  mftCall_viiiii(i2 | 0, 0, i4 + 24 | 0, 0, 0, 0);
 }
 if ((HEAP32[gb + 121104 >> 2] | 0) == 4 ? ((HEAP32[gb + 121116 >> 2] | 0) + -1 | 0) >>> 0 < 2 : 0) HEAPF32[(HEAP32[i3 + 3856 >> 2] | 0) + 12 >> 2] = 0.0;
 STACKTOP = i4;
 return;
}

function __ZN8CHudAmmo4InitEv(i1) {
 i1 = i1 | 0;
 __ZN4CHud10AddHudElemEP8CHudBase(gb + 46040 | 0, i1);
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 39771 | 0, fb + 4 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 39781 | 0, fb + 5 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 39792 | 0, fb + 6 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 39803 | 0, fb + 7 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 39814 | 0, fb + 8 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 39825 | 0, fb + 9 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 39836 | 0, fb + 10 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 39842 | 0, fb + 1 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 39848 | 0, fb + 2 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 39854 | 0, fb + 3 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 39860 | 0, fb + 4 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 39866 | 0, fb + 5 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 39872 | 0, fb + 6 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 39878 | 0, fb + 7 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 39884 | 0, fb + 8 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 39890 | 0, fb + 9 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 39896 | 0, fb + 10 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 39903 | 0, fb + 11 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 39916 | 0, fb + 12 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 39924 | 0, fb + 13 | 0) | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] | 0, i1 | 0);
 mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 40086 | 0, gb + 43428 | 0, 0) | 0;
 mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 39932 | 0, gb + 44858 | 0, 1) | 0;
 HEAP32[i1 + 16 >> 2] = HEAP32[i1 + 16 >> 2] | 1;
 _memset(gb + 81328 | 0, 0, 10772) | 0;
 _memset(gb + 92140 | 0, 0, 192) | 0;
 return 1;
}

function _EV_FireGlock1(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, d6 = 0.0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 HEAP32[i5 + 108 >> 2] = HEAP32[i3 + 8 >> 2];
 HEAP32[i5 + 108 + 4 >> 2] = HEAP32[i3 + 12 >> 2];
 HEAP32[i5 + 108 + 8 >> 2] = HEAP32[i3 + 16 >> 2];
 HEAP32[i5 + 96 >> 2] = HEAP32[i3 + 20 >> 2];
 HEAP32[i5 + 96 + 4 >> 2] = HEAP32[i3 + 24 >> 2];
 HEAP32[i5 + 96 + 8 >> 2] = HEAP32[i3 + 28 >> 2];
 HEAP32[i5 + 84 >> 2] = HEAP32[i3 + 32 >> 2];
 HEAP32[i5 + 84 + 4 >> 2] = HEAP32[i3 + 36 >> 2];
 HEAP32[i5 + 84 + 8 >> 2] = HEAP32[i3 + 40 >> 2];
 i2 = HEAP32[i3 + 64 >> 2] | 0;
 mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i5 + 96 | 0, i5 | 0, i5 + 12 | 0, i5 + 24 | 0);
 i4 = mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 12 >> 2] | 0, gb + 39449 | 0) | 0;
 if (__Z10EV_IsLocali(i1) | 0) {
  __Z14EV_MuzzleFlashv();
  mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0, (i2 | 0 ? 4 : 3) | 0, 2);
  __Z11V_PunchAxisif(0, -2.0);
 }
 __Z22EV_GetDefaultShellInfoP12event_args_sPfS1_S1_S1_S1_S1_S1_fff(i3, i5 + 108 | 0, i5 + 84 | 0, i5 + 72 | 0, i5 + 60 | 0, i5, i5 + 12 | 0, i5 + 24 | 0, 20.0, -12.0, 4.0);
 __Z13EV_EjectBrassPfS_fii(i5 + 60 | 0, i5 + 72 | 0, +HEAPF32[i5 + 96 + 4 >> 2], i4, 1);
 i2 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0;
 d6 = +mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, .9200000166893005, 1.0);
 i4 = (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 3) | 0) + 98 | 0;
 mftCall_viiiiddii(i2 | 0, i1 | 0, i5 + 108 | 0, 1, gb + 39544 | 0, +d6, .800000011920929, 0, i4 | 0);
 __Z17EV_GetGunPositionP12event_args_sPfS1_(i3, i5 + 48 | 0, i5 + 108 | 0);
 HEAP32[i5 + 36 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 + 36 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
 HEAP32[i5 + 36 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
 __Z19EV_HLDM_FireBulletsiPfS_S_iS_S_fiiPiff(i1, i5, i5 + 12 | 0, i5 + 24 | 0, 1, i5 + 48 | 0, i5 + 36 | 0, 8192.0, 1, 0, 0, +HEAPF32[i3 + 48 >> 2], +HEAPF32[i3 + 52 >> 2]);
 STACKTOP = i5;
 return;
}

function _PM_CheckParamters() {
 var i1 = 0, d2 = 0.0, d3 = 0.0, d4 = 0.0, d5 = 0.0, d6 = 0.0, i7 = 0, i8 = 0, d9 = 0.0, i10 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 d3 = +HEAPF32[i1 + 283752 >> 2];
 d4 = +HEAPF32[i1 + 283756 >> 2];
 d5 = +HEAPF32[i1 + 283760 >> 2];
 d6 = +Math_sqrt(+(d3 * d3 + d4 * d4 + d5 * d5));
 d2 = +HEAPF32[i1 + 504 >> 2];
 if (d2 != 0.0) {
  d9 = +HEAPF32[i1 + 500 >> 2];
  HEAPF32[i1 + 500 >> 2] = d2 < d9 ? d2 : d9;
 }
 if (d6 != 0.0) {
  d2 = +HEAPF32[i1 + 500 >> 2];
  if (d6 > d2) {
   HEAPF32[i1 + 283752 >> 2] = d3 * (d2 / d6);
   HEAPF32[i1 + 283756 >> 2] = d4 * (d2 / d6);
   HEAPF32[i1 + 283760 >> 2] = d5 * (d2 / d6);
  }
 }
 if (!(HEAP32[i1 + 184 >> 2] & 16781312)) {
  if (HEAP32[i1 + 208 >> 2] | 0) i7 = 8;
 } else i7 = 8;
 if ((i7 | 0) == 8) {
  HEAPF32[i1 + 283752 >> 2] = 0.0;
  HEAPF32[i1 + 283756 >> 2] = 0.0;
  HEAPF32[i1 + 283760 >> 2] = 0.0;
 }
 _PM_DropPunchAngle(i1 + 160 | 0);
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 if (!(HEAP32[i1 + 208 >> 2] | 0)) {
  d2 = +HEAPF32[i1 + 283744 >> 2];
  d6 = +HEAPF32[i1 + 283748 >> 2];
  d9 = +HEAPF32[i1 + 283740 >> 2] + +HEAPF32[i1 + 160 >> 2];
  HEAPF32[i8 >> 2] = d9;
  d2 = d2 + +HEAPF32[i1 + 164 >> 2];
  HEAPF32[i8 + 4 >> 2] = d2;
  HEAPF32[i8 + 8 >> 2] = d6 + +HEAPF32[i1 + 168 >> 2];
  i10 = HEAP32[i1 + 324848 >> 2] | 0;
  d6 = +_PM_CalcRoll(i8, i1 + 92 | 0, +HEAPF32[i10 + 100 >> 2], +HEAPF32[i10 + 104 >> 2]) * 4.0;
  i1 = HEAP32[gb + 121136 >> 2] | 0;
  HEAPF32[i1 + 76 >> 2] = d6;
  HEAPF32[i1 + 68 >> 2] = d9;
  HEAPF32[i1 + 72 >> 2] = d2;
  if (HEAP32[i1 + 208 >> 2] | 0) i7 = 12;
 } else {
  HEAP32[i1 + 68 >> 2] = HEAP32[i1 + 80 >> 2];
  i7 = HEAP32[i1 + 84 >> 2] | 0;
  HEAP32[i1 + 72 >> 2] = i7;
  HEAP32[i1 + 76 >> 2] = HEAP32[i1 + 88 >> 2];
  d2 = (HEAP32[tempDoublePtr >> 2] = i7, +HEAPF32[tempDoublePtr >> 2]);
  i7 = 12;
 }
 if ((i7 | 0) == 12) HEAPF32[i1 + 136 >> 2] = -8.0;
 if (d2 > 180.0) HEAPF32[i1 + 72 >> 2] = d2 + -360.0;
 STACKTOP = i8;
 return;
}

function _EV_FireGlock2(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, d5 = 0.0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 HEAP32[i4 + 108 >> 2] = HEAP32[i2 + 8 >> 2];
 HEAP32[i4 + 108 + 4 >> 2] = HEAP32[i2 + 12 >> 2];
 HEAP32[i4 + 108 + 8 >> 2] = HEAP32[i2 + 16 >> 2];
 HEAP32[i4 + 96 >> 2] = HEAP32[i2 + 20 >> 2];
 HEAP32[i4 + 96 + 4 >> 2] = HEAP32[i2 + 24 >> 2];
 HEAP32[i4 + 96 + 8 >> 2] = HEAP32[i2 + 28 >> 2];
 HEAP32[i4 + 84 >> 2] = HEAP32[i2 + 32 >> 2];
 HEAP32[i4 + 84 + 4 >> 2] = HEAP32[i2 + 36 >> 2];
 HEAP32[i4 + 84 + 8 >> 2] = HEAP32[i2 + 40 >> 2];
 mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i4 + 96 | 0, i4 | 0, i4 + 12 | 0, i4 + 24 | 0);
 i3 = mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 12 >> 2] | 0, gb + 39449 | 0) | 0;
 if (__Z10EV_IsLocali(i1) | 0) {
  __Z14EV_MuzzleFlashv();
  mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0, 3, 2);
  __Z11V_PunchAxisif(0, -2.0);
 }
 __Z22EV_GetDefaultShellInfoP12event_args_sPfS1_S1_S1_S1_S1_S1_fff(i2, i4 + 108 | 0, i4 + 84 | 0, i4 + 72 | 0, i4 + 60 | 0, i4, i4 + 12 | 0, i4 + 24 | 0, 20.0, -12.0, 4.0);
 __Z13EV_EjectBrassPfS_fii(i4 + 60 | 0, i4 + 72 | 0, +HEAPF32[i4 + 96 + 4 >> 2], i3, 1);
 i6 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0;
 d5 = +mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, .9200000166893005, 1.0);
 i3 = (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 3) | 0) + 98 | 0;
 mftCall_viiiiddii(i6 | 0, i1 | 0, i4 + 108 | 0, 1, gb + 39544 | 0, +d5, .800000011920929, 0, i3 | 0);
 __Z17EV_GetGunPositionP12event_args_sPfS1_(i2, i4 + 48 | 0, i4 + 108 | 0);
 HEAP32[i4 + 36 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 + 36 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
 HEAP32[i4 + 36 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
 __Z19EV_HLDM_FireBulletsiPfS_S_iS_S_fiiPiff(i1, i4, i4 + 12 | 0, i4 + 24 | 0, 1, i4 + 48 | 0, i4 + 36 | 0, 8192.0, 1, 0, gb + 56828 + (i1 + -1 << 2) | 0, +HEAPF32[i2 + 48 >> 2], +HEAPF32[i2 + 52 >> 2]);
 STACKTOP = i4;
 return;
}

function __Z16IN_ToggleButtonsff(d3, d4) {
 d3 = +d3;
 d4 = +d4;
 var i1 = 0, i2 = 0;
 i1 = HEAP32[gb + 36336 >> 2] | 0;
 if (d3 != 0.0) {
  HEAP32[gb + 36336 >> 2] = i1 & -32;
  i1 = i1 & -32;
 } else if (!(i1 & 16)) {
  HEAP32[gb + 94068 + 8 >> 2] = HEAP32[gb + 94068 + 8 >> 2] & -2;
  HEAP32[gb + 94080 + 8 >> 2] = HEAP32[gb + 94080 + 8 >> 2] & -2;
  HEAP32[gb + 36336 >> 2] = i1 | 16;
  i1 = i1 | 16;
 }
 if (d4 != 0.0) {
  i1 = i1 & -64;
  HEAP32[gb + 36336 >> 2] = i1;
 } else if (!(i1 & 32)) {
  HEAP32[gb + 94116 + 8 >> 2] = HEAP32[gb + 94116 + 8 >> 2] & -2;
  HEAP32[gb + 94128 + 8 >> 2] = HEAP32[gb + 94128 + 8 >> 2] & -2;
  i1 = i1 | 32;
  HEAP32[gb + 36336 >> 2] = i1;
 }
 i2 = i1 | 1;
 if (d3 > .7 & (i1 & 1 | 0) == 0) {
  HEAP32[gb + 36336 >> 2] = i2;
  HEAP32[gb + 94068 + 8 >> 2] = HEAP32[gb + 94068 + 8 >> 2] | 1;
  i1 = i2;
 }
 i2 = i1 & -2;
 if (!(!(d3 < .7) | (i1 & 1 | 0) == 0)) {
  HEAP32[gb + 36336 >> 2] = i2;
  HEAP32[gb + 94068 + 8 >> 2] = HEAP32[gb + 94068 + 8 >> 2] & -2;
  i1 = i2;
 }
 i2 = i1 | 2;
 if (d3 < -.7 & (i1 & 2 | 0) == 0) {
  HEAP32[gb + 36336 >> 2] = i2;
  HEAP32[gb + 94080 + 8 >> 2] = HEAP32[gb + 94080 + 8 >> 2] | 1;
  i1 = i2;
 }
 i2 = i1 & -4;
 if (!(!(d3 > -.7) | (i1 & 2 | 0) == 0)) {
  HEAP32[gb + 36336 >> 2] = i2;
  HEAP32[gb + 94080 + 8 >> 2] = HEAP32[gb + 94080 + 8 >> 2] & -2;
  i1 = i2;
 }
 i2 = i1 | 8;
 if (d4 > .9 & (i1 & 8 | 0) == 0) {
  HEAP32[gb + 36336 >> 2] = i2;
  HEAP32[gb + 94128 + 8 >> 2] = HEAP32[gb + 94128 + 8 >> 2] | 1;
  i1 = i2;
 }
 i2 = i1 & -16;
 if (!(!(d4 < .9) | (i1 & 8 | 0) == 0)) {
  HEAP32[gb + 36336 >> 2] = i2;
  HEAP32[gb + 94128 + 8 >> 2] = HEAP32[gb + 94128 + 8 >> 2] & -2;
  i1 = i2;
 }
 i2 = i1 | 4;
 if (d4 < -.9 & (i1 & 4 | 0) == 0) {
  HEAP32[gb + 36336 >> 2] = i2;
  HEAP32[gb + 94116 + 8 >> 2] = HEAP32[gb + 94116 + 8 >> 2] | 1;
  i1 = i2;
 }
 if (!(!(d4 > -.9) | (i1 & 4 | 0) == 0)) {
  HEAP32[gb + 36336 >> 2] = i1 & -8;
  HEAP32[gb + 94116 + 8 >> 2] = HEAP32[gb + 94116 + 8 >> 2] & -2;
 }
 return;
}

function __ZN13CHudSpectator17HandleButtonsDownEi(i5, i3) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, d4 = 0.0;
 d4 = +mftCall_d(HEAP32[gb + 92340 + 216 >> 2] | 0);
 i2 = HEAP32[gb + 121104 >> 2] | 0;
 i1 = ~~+HEAPF32[(HEAP32[i5 + 3856 >> 2] | 0) + 12 >> 2];
 do if (!((i2 | 0) == 0 ? 1 : (HEAP32[gb + 46040 + 8648 >> 2] | 0) != 0)) {
  if (mftCall_i(HEAP32[(HEAP32[gb + 92340 + 340 >> 2] | 0) + 4 >> 2] | 0) | 0) if (!(mftCall_i(HEAP32[gb + 92340 + 352 >> 2] | 0) | 0)) break;
  if (!(+HEAPF32[i5 + 4712 >> 2] > d4)) {
   do if (i3 & 32) {
    i1 = ~~+HEAPF32[(HEAP32[i5 + 3856 >> 2] | 0) + 12 >> 2];
    if ((HEAP32[gb + 121104 >> 2] | 0) < 5) {
     i1 = (i1 | 0) > 3 ? 0 : i1 + 1 | 0;
     i1 = (i1 | 0) == 1 ? 3 : i1;
     break;
    } else {
     i1 = (i1 | 0) > 1 ? 0 : i1 + 1 | 0;
     break;
    }
   } while (0);
   if (mftCall_i(HEAP32[gb + 92340 + 352 >> 2] | 0) | 0) {
    L15 : do if (i3 & 2) switch (HEAP32[gb + 121104 >> 2] | 0) {
    case 5:
     {
      i2 = 6;
      break L15;
     }
    case 2:
     {
      i2 = 4;
      break L15;
     }
    case 4:
     {
      i2 = 3;
      break L15;
     }
    case 3:
     {
      i2 = 5;
      break L15;
     }
    default:
     {
      i2 = 2;
      break L15;
     }
    } while (0);
    if (i3 & 2049) {
     __ZN13CHudSpectator14FindNextPlayerEb(i5, (i3 & 2048 | 0) != 0);
     if ((HEAP32[gb + 121104 >> 2] | 0) == 3) {
      mftCall_vi(HEAP32[gb + 92340 + 140 >> 2] | 0, gb + 116224 | 0);
      HEAP32[gb + 121144 >> 2] = 1;
     }
     HEAPF32[(HEAP32[i5 + 3852 >> 2] | 0) + 12 >> 2] = 0.0;
    }
   }
   __ZN13CHudSpectator8SetModesEii(i5, i2, i1);
   if ((HEAP32[gb + 121104 >> 2] | 0) == 5) {
    if (i3 & 8 | 0) HEAPF32[i5 + 4716 >> 2] = .009999999776482582;
    if (i3 & 16 | 0) HEAPF32[i5 + 4716 >> 2] = -.009999999776482582;
    if (i3 & 512 | 0) HEAPF32[i5 + 4720 >> 2] = -12.0;
    if (i3 & 1024 | 0) HEAPF32[i5 + 4720 >> 2] = 12.0;
   }
   HEAPF32[i5 + 4712 >> 2] = d4 + .2;
  }
 } while (0);
 return;
}

function _EV_TripmineFire(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, d7 = 0.0, d8 = 0.0, d9 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i1 = HEAP32[i5 + 4 >> 2] | 0;
 i2 = HEAP32[i5 + 8 >> 2] | 0;
 HEAP32[i6 + 116 >> 2] = i2;
 i3 = HEAP32[i5 + 12 >> 2] | 0;
 HEAP32[i6 + 116 + 4 >> 2] = i3;
 i4 = HEAP32[i5 + 16 >> 2] | 0;
 HEAP32[i6 + 116 + 8 >> 2] = i4;
 HEAP32[i6 + 104 >> 2] = HEAP32[i5 + 20 >> 2];
 HEAP32[i6 + 104 + 4 >> 2] = HEAP32[i5 + 24 >> 2];
 HEAP32[i6 + 104 + 8 >> 2] = HEAP32[i5 + 28 >> 2];
 mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i6 + 104 | 0, i6 + 80 | 0, 0, 0);
 if (__Z10EV_IsLocali(i1) | 0) {
  d7 = (HEAP32[tempDoublePtr >> 2] = i4, +HEAPF32[tempDoublePtr >> 2]);
  d8 = (HEAP32[tempDoublePtr >> 2] = i3, +HEAPF32[tempDoublePtr >> 2]);
  d9 = (HEAP32[tempDoublePtr >> 2] = i2, +HEAPF32[tempDoublePtr >> 2]);
  mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 24 >> 2] | 0, i6 + 92 | 0);
  d9 = d9 + +HEAPF32[i6 + 92 >> 2];
  d8 = d8 + +HEAPF32[i6 + 92 + 4 >> 2];
  d7 = d7 + +HEAPF32[i6 + 92 + 8 >> 2];
  HEAPF32[i6 + 116 >> 2] = d9;
  HEAPF32[i6 + 116 + 4 >> 2] = d8;
  HEAPF32[i6 + 116 + 8 >> 2] = d7;
  mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 44 >> 2] | 0);
  mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 52 >> 2] | 0, i1 + -1 | 0);
  mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 56 >> 2] | 0, 2);
  i5 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 60 >> 2] | 0;
  d8 = d8 + +HEAPF32[i6 + 80 + 4 >> 2] * 128.0;
  d7 = d7 + +HEAPF32[i6 + 80 + 8 >> 2] * 128.0;
  HEAPF32[i6 >> 2] = d9 + +HEAPF32[i6 + 80 >> 2] * 128.0;
  HEAPF32[i6 + 4 >> 2] = d8;
  HEAPF32[i6 + 8 >> 2] = d7;
  mftCall_viiiii(i5 | 0, i6 + 116 | 0, i6 | 0, 0, -1, i6 + 12 | 0);
  if (+HEAPF32[i6 + 12 + 16 >> 2] < 1.0) mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0, 6, 0);
  mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 48 >> 2] | 0);
 }
 STACKTOP = i6;
 return;
}

function __ZN20CStudioModelRenderer17StudioCalcBoneAdjEfPfPKhS2_h(i1, d10, i9, i11, i12, i2) {
 i1 = i1 | 0;
 d10 = +d10;
 i9 = i9 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i2 = i2 | 0;
 var d3 = 0.0, i4 = 0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0;
 i7 = HEAP32[i1 + 68 >> 2] | 0;
 i8 = i7 + (HEAP32[i7 + 152 >> 2] | 0) | 0;
 i7 = HEAP32[i7 + 148 >> 2] | 0;
 L1 : do if ((i7 | 0) > 0) {
  d6 = +(i2 & 255) * .015625 > 1.0 ? 1.0 : +(i2 & 255) * .015625;
  i5 = 0;
  while (1) {
   i1 = HEAP32[i8 + (i5 * 24 | 0) + 20 >> 2] | 0;
   do if ((i1 | 0) < 4) {
    i2 = HEAP32[i8 + (i5 * 24 | 0) + 4 >> 2] | 0;
    i4 = HEAP8[i11 + i1 >> 0] | 0;
    if (!(i2 & 32768)) {
     d3 = (+(i4 & 255) * d10 + (1.0 - d10) * +(HEAPU8[i12 + i1 >> 0] | 0)) * .00392156862745098;
     d3 = d3 < 0.0 ? 0.0 : d3;
     d3 = d3 > 1.0 ? 1.0 : d3;
     d3 = +HEAPF32[i8 + (i5 * 24 | 0) + 12 >> 2] * d3 + +HEAPF32[i8 + (i5 * 24 | 0) + 8 >> 2] * (1.0 - d3);
     break;
    }
    i1 = HEAP8[i12 + i1 >> 0] | 0;
    d3 = +HEAPF32[i8 + (i5 * 24 | 0) + 8 >> 2];
    if (((((i4 & 255) - (i1 & 255) | 0) > -1 ? (i4 & 255) - (i1 & 255) | 0 : 0 - ((i4 & 255) - (i1 & 255)) | 0) | 0) > 128) {
     d3 = d3 + (+((HEAPU8[i11 + i5 >> 0] | 0) + 128 & 255 | 0) * d10 + (1.0 - d10) * +((HEAPU8[i12 + i5 >> 0] | 0) + 128 & 255 | 0) + -128.0) * 1.40625;
     break;
    } else {
     d3 = d3 + (+(i4 & 255) * d10 + (1.0 - d10) * +(i1 & 255)) * 1.40625;
     break;
    }
   } else {
    i2 = HEAP32[i8 + (i5 * 24 | 0) + 4 >> 2] | 0;
    d3 = (1.0 - d6) * +HEAPF32[i8 + (i5 * 24 | 0) + 8 >> 2] + d6 * +HEAPF32[i8 + (i5 * 24 | 0) + 12 >> 2];
   } while (0);
   switch (i2 & 32767) {
   case 32:
   case 16:
   case 8:
    {
     HEAPF32[i9 + (i5 << 2) >> 2] = d3 * .017453292519943295;
     break;
    }
   case 4:
   case 2:
   case 1:
    {
     HEAPF32[i9 + (i5 << 2) >> 2] = d3;
     break;
    }
   default:
    {}
   }
   i5 = i5 + 1 | 0;
   if ((i5 | 0) == (i7 | 0)) break L1;
  }
 } while (0);
 return;
}

function __Z25EV_HLDM_GunshotDecalTraceP9pmtrace_sPc(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0, i4 = 0, i5 = 0;
 mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 32 >> 2] | 0, i3 + 20 | 0);
 i1 = mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 32767) | 0;
 L1 : do if ((i1 | 0) < 16383) switch ((i1 | 0) % 5 | 0 | 0) {
 case 0:
  {
   mftCall_viiiiddii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0, -1, i3 + 20 | 0, 0, gb + 37063 | 0, 1.0, .800000011920929, 0, 100);
   break L1;
  }
 case 1:
  {
   mftCall_viiiiddii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0, -1, i3 + 20 | 0, 0, gb + 37080 | 0, 1.0, .800000011920929, 0, 100);
   break L1;
  }
 case 2:
  {
   mftCall_viiiiddii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0, -1, i3 + 20 | 0, 0, gb + 37097 | 0, 1.0, .800000011920929, 0, 100);
   break L1;
  }
 case 3:
  {
   mftCall_viiiiddii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0, -1, i3 + 20 | 0, 0, gb + 37114 | 0, 1.0, .800000011920929, 0, 100);
   break L1;
  }
 case 4:
  {
   mftCall_viiiiddii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0, -1, i3 + 20 | 0, 0, gb + 37131 | 0, 1.0, .800000011920929, 0, 100);
   break L1;
  }
 default:
  break L1;
 } while (0);
 i1 = mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 36 >> 2] | 0, HEAP32[i3 + 48 >> 2] | 0) | 0;
 do if (i2 | 0) if ((i1 | 0) != 0 & (HEAP8[i2 >> 0] | 0) != 0) {
  if ((HEAP32[i1 + 96 >> 2] | 0) != 4) if ((HEAP32[i1 + 124 >> 2] | 0) != 13) break;
  if (+mftCall_di(HEAP32[gb + 92340 + 60 >> 2] | 0, gb + 37148 | 0) != 0.0) {
   i4 = HEAP32[gb + 92340 + 332 >> 2] | 0;
   i1 = HEAP32[i4 + 212 >> 2] | 0;
   i5 = HEAP32[i4 + 204 >> 2] | 0;
   i2 = mftCall_ii(i5 | 0, mftCall_ii(HEAP32[i4 + 208 >> 2] | 0, i2 | 0) | 0) | 0;
   mftCall_viiiii(i1 | 0, i2 | 0, mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 32 >> 2] | 0, i3 | 0) | 0, 0, i3 + 20 | 0, 0);
  }
 } while (0);
 return;
}

function __ZN10CHudHealth10DrawDamageEf(i13, d11) {
 i13 = i13 | 0;
 d11 = +d11;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i14 = 0, d15 = 0.0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (HEAP32[i13 + 252 >> 2] | 0) {
  HEAP32[i14 + 8 >> 2] = 255;
  HEAP32[i14 + 4 >> 2] = 160;
  HEAP32[i14 >> 2] = 0;
  d15 = +Math_sin(+(d11 * 2.0));
  i10 = ~~((d15 > 0.0 ? d15 : -d15) * 256.0);
  __Z11ScaleColorsRiS_S_i(i14 + 8 | 0, i14 + 4 | 0, i14, i10);
  i6 = HEAP32[i14 + 8 >> 2] | 0;
  i7 = HEAP32[i14 + 4 >> 2] | 0;
  i8 = HEAP32[i14 >> 2] | 0;
  i12 = 0;
  do {
   i9 = gb + 35252 + (i12 << 2) | 0;
   if (HEAP32[i9 >> 2] & HEAP32[i13 + 252 >> 2] | 0) {
    i1 = (HEAP32[i13 + 24 >> 2] | 0) + i12 | 0;
    if ((i1 | 0) < 0) i1 = 0; else i1 = HEAP32[(HEAP32[gb + 46040 + 112 >> 2] | 0) + (i1 << 2) >> 2] | 0;
    mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, i1 | 0, i6 | 0, i7 | 0, i8 | 0);
    i2 = i13 + 60 + (i12 << 4) + 8 | 0;
    i3 = i13 + 60 + (i12 << 4) + 12 | 0;
    mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, HEAP32[i2 >> 2] | 0, HEAP32[i3 >> 2] | 0, (HEAP32[gb + 46040 + 116 >> 2] | 0) + ((HEAP32[i13 + 24 >> 2] | 0) + i12 << 4) | 0);
    i1 = i13 + 60 + (i12 << 4) | 0;
    d15 = +HEAPF32[i1 >> 2];
    d15 = d11 + 2.0 < d15 ? d11 + 2.0 : d15;
    HEAPF32[i1 >> 2] = d15;
    if ((i10 | 0) < 40 & d15 <= d11) {
     HEAPF32[i1 >> 2] = 0.0;
     i5 = HEAP32[i3 >> 2] | 0;
     HEAP32[i3 >> 2] = 0;
     HEAP32[i2 >> 2] = 0;
     i1 = HEAP32[gb + 93732 >> 2] | 0;
     i3 = 0;
     do {
      i4 = i13 + 60 + (i3 << 4) + 12 | 0;
      i2 = HEAP32[i4 >> 2] | 0;
      if ((i2 | 0) != 0 & (i2 | 0) < (i5 | 0)) HEAP32[i4 >> 2] = i2 + i1;
      i3 = i3 + 1 | 0;
     } while ((i3 | 0) != 12);
     HEAP32[i13 + 252 >> 2] = HEAP32[i13 + 252 >> 2] & ~HEAP32[i9 >> 2];
    }
   }
   i12 = i12 + 1 | 0;
  } while ((i12 | 0) != 12);
 }
 STACKTOP = i14;
 return 1;
}

function _PM_Duck() {
 var i1 = 0, i2 = 0, d3 = 0.0, d4 = 0.0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i7 = HEAP32[gb + 121136 >> 2] | 0;
 i1 = HEAP32[i7 + 200 >> 2] | 0;
 i2 = HEAP16[i7 + 283766 >> 1] | 0;
 HEAP32[i7 + 200 >> 2] = (i2 & 4 | 0) == 0 ? i1 & -5 : i1 | 4;
 do if (!(HEAP32[i7 + 516 >> 2] | 0)) if (!(HEAP32[i7 + 208 >> 2] | 0)) {
  i6 = HEAP32[i7 + 184 >> 2] | 0;
  if (i6 & 16384 | 0) {
   HEAPF32[i7 + 283752 >> 2] = +HEAPF32[i7 + 283752 >> 2] * .333;
   HEAPF32[i7 + 283756 >> 2] = +HEAPF32[i7 + 283756 >> 2] * .333;
   HEAPF32[i7 + 283760 >> 2] = +HEAPF32[i7 + 283760 >> 2] * .333;
  }
  if (!(i2 & 4)) {
   if (!((HEAP32[i7 + 144 >> 2] | 0) != 0 | (i6 & 16384 | 0) == 0 ^ 1)) break;
   _PM_UnDuck();
   break;
  }
  if (((i1 & 4 ^ 4) & (i2 & 65535) | 0) == 0 | (i6 & 16384 | 0) == 0 ^ 1) {
   d3 = +HEAPF32[i7 + 140 >> 2] * .001;
   if (!(HEAP32[i7 + 144 >> 2] | 0)) break; else {
    d4 = d3;
    d3 = 1.0 - d3 <= 0.0 ? 0.0 : 1.0 - d3;
    i2 = i7 + 144 | 0;
   }
  } else {
   HEAPF32[i7 + 140 >> 2] = 1.0e3;
   HEAP32[i7 + 144 >> 2] = 1;
   d4 = 1.0;
   d3 = 0.0;
   i2 = i7 + 144 | 0;
  }
  i5 = (HEAP32[i7 + 224 >> 2] | 0) == -1;
  i1 = d4 <= .6;
  if (!(i1 | i5)) {
   d4 = d3 * 2.5;
   HEAPF32[i7 + 136 >> 2] = (1.0 - (d4 * d4 * 3.0 - d4 * d4 * d4 * 2.0)) * 28.0 - (d4 * d4 * 3.0 - d4 * d4 * d4 * 2.0) * 6.0;
   break;
  }
  HEAP32[i7 + 188 >> 2] = 1;
  HEAPF32[i7 + 136 >> 2] = 12.0;
  HEAP32[i7 + 184 >> 2] = i6 | 16384;
  HEAP32[i2 >> 2] = 0;
  if (!(i5 | i1 ^ 1)) {
   i1 = 0;
   do {
    i6 = i7 + 56 + (i1 << 2) | 0;
    HEAPF32[i6 >> 2] = +HEAPF32[i6 >> 2] - (+HEAPF32[i7 + 324864 + (i1 << 2) >> 2] - +HEAPF32[i7 + 324852 + (i1 << 2) >> 2]);
    i1 = i1 + 1 | 0;
   } while ((i1 | 0) != 3);
   _PM_FixPlayerCrouchStuck(1);
   _PM_CatagorizePosition();
  }
 } else i8 = 3; else i8 = 3; while (0);
 if ((i8 | 0) == 3) if (HEAP32[i7 + 184 >> 2] & 16384 | 0) _PM_UnDuck();
 return;
}

function __ZN13CHudSpectator4InitEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 __ZN4CHud10AddHudElemEP8CHudBase(gb + 46040 | 0, i2);
 HEAP32[i2 + 16 >> 2] = HEAP32[i2 + 16 >> 2] | 1;
 HEAPF32[i2 + 4712 >> 2] = 0.0;
 HEAPF32[i2 + 4716 >> 2] = 0.0;
 HEAPF32[i2 + 4720 >> 2] = 0.0;
 HEAP32[i2 + 3860 >> 2] = +HEAPF32[(HEAP32[gb + 46040 + 6176 >> 2] | 0) + 12 >> 2] != 0.0 & 1;
 HEAP32[gb + 121144 >> 2] = 0;
 HEAP32[i2 + 4728 >> 2] = 0;
 HEAP32[i2 + 4724 >> 2] = 0;
 _memset(i2 + 1404 | 0, 0, 2412) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 41774 | 0, fb + 19 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 41784 | 0, fb + 20 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 41795 | 0, fb + 21 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 41805 | 0, fb + 22 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 41815 | 0, fb + 23 | 0) | 0;
 HEAP32[i2 + 3840 >> 2] = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 41828 | 0, gb + 43877 | 0, 0) | 0;
 HEAP32[i2 + 3844 >> 2] = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 41843 | 0, gb + 43877 | 0, 0) | 0;
 HEAP32[i2 + 3848 >> 2] = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 41857 | 0, gb + 43877 | 0, 0) | 0;
 HEAP32[i2 + 3852 >> 2] = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 41873 | 0, gb + 43877 | 0, 0) | 0;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 41891 | 0, gb + 43877 | 0, 0) | 0;
 HEAP32[i2 + 3856 >> 2] = i1;
 if (!(HEAP32[i2 + 3840 >> 2] | 0)) i3 = 5; else if (!(HEAP32[i2 + 3844 >> 2] | 0)) i3 = 5; else if (!(HEAP32[i2 + 3848 >> 2] | 0)) i3 = 5; else if ((i1 | 0) == 0 | (HEAP32[i2 + 3852 >> 2] | 0) == 0) i3 = 5; else i1 = 1;
 if ((i3 | 0) == 5) {
  mftCall_vii(HEAP32[gb + 92340 + 160 >> 2] | 0, gb + 41900 | 0, i4 | 0);
  i1 = 0;
 }
 STACKTOP = i4;
 return i1 | 0;
}

function __Z15QuaternionSlerpPfS_fS_(i9, i8, d7, i10) {
 i9 = i9 | 0;
 i8 = i8 | 0;
 d7 = +d7;
 i10 = i10 | 0;
 var i1 = 0, d2 = 0.0, d3 = 0.0, d4 = 0.0, d5 = 0.0, d6 = 0.0, i11 = 0;
 d2 = 0.0;
 d3 = 0.0;
 i1 = 0;
 do {
  d5 = +HEAPF32[i9 + (i1 << 2) >> 2];
  d6 = +HEAPF32[i8 + (i1 << 2) >> 2];
  d2 = d2 + (d5 - d6) * (d5 - d6);
  d3 = d3 + (d5 + d6) * (d5 + d6);
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != 4);
 if (d2 > d3) {
  i1 = 0;
  do {
   i11 = i8 + (i1 << 2) | 0;
   HEAPF32[i11 >> 2] = -+HEAPF32[i11 >> 2];
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) != 4);
 }
 d4 = +HEAPF32[i9 >> 2];
 d5 = +HEAPF32[i8 >> 2];
 d6 = +HEAPF32[i8 + 4 >> 2];
 d2 = d4 * d5 + +HEAPF32[i9 + 4 >> 2] * d6 + +HEAPF32[i9 + 8 >> 2] * +HEAPF32[i8 + 8 >> 2] + +HEAPF32[i9 + 12 >> 2] * +HEAPF32[i8 + 12 >> 2];
 if (d2 + 1.0 > 1.0e-06) {
  if (1.0 - d2 > 1.0e-06) {
   d6 = +Math_acos(+d2);
   d2 = +Math_sin(+d6);
   d3 = +Math_sin(+((1.0 - d7) * d6)) / d2;
   d2 = +Math_sin(+(d6 * d7)) / d2;
  } else {
   d3 = 1.0 - d7;
   d2 = d7;
  }
  HEAPF32[i10 >> 2] = d4 * d3 + d5 * d2;
  i1 = 1;
  do {
   HEAPF32[i10 + (i1 << 2) >> 2] = d3 * +HEAPF32[i9 + (i1 << 2) >> 2] + d2 * +HEAPF32[i8 + (i1 << 2) >> 2];
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) != 4);
 } else {
  HEAPF32[i10 >> 2] = -d6;
  i1 = HEAP32[i8 >> 2] | 0;
  HEAP32[i10 + 4 >> 2] = i1;
  HEAPF32[i10 + 8 >> 2] = -+HEAPF32[i8 + 12 >> 2];
  HEAP32[i10 + 12 >> 2] = HEAP32[i8 + 8 >> 2];
  d3 = +Math_sin(+((1.0 - d7) * 1.5707963267948966));
  d2 = +Math_sin(+(d7 * 1.5707963267948966));
  HEAPF32[i10 >> 2] = d3 * +HEAPF32[i9 >> 2] + d2 * -d6;
  HEAPF32[i10 + 4 >> 2] = d2 * (HEAP32[tempDoublePtr >> 2] = i1, +HEAPF32[tempDoublePtr >> 2]) + d3 * +HEAPF32[i9 + 4 >> 2];
  i1 = 2;
  do {
   HEAPF32[i10 + (i1 << 2) >> 2] = d2 * +HEAPF32[i10 + (i1 << 2) >> 2] + d3 * +HEAPF32[i9 + (i1 << 2) >> 2];
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) != 3);
 }
 return;
}

function __ZN13CHudSpectator14FindNextPlayerEb(i5, i1) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if (!(mftCall_i(HEAP32[gb + 92340 + 352 >> 2] | 0) | 0)) {
  HEAP32[i6 >> 2] = i1 & 1;
  _sprintf(i6 + 16 | 0, gb + 41076 | 0, i6 | 0) | 0;
  mftCall_ii(HEAP32[gb + 92340 + 76 >> 2] | 0, i6 + 16 | 0) | 0;
 } else {
  i3 = HEAP32[gb + 121108 >> 2] | 0;
  i3 = (i3 | 0) == 0 ? 1 : i3;
  HEAP32[gb + 121108 >> 2] = 0;
  i2 = i1 ? -1 : 1;
  __ZN14CHudScoreboard17GetAllPlayersInfoEv(gb + 46040 + 6496 | 0);
  i1 = i3;
  while (1) {
   i4 = i1 + i2 | 0;
   i4 = (i4 | 0) > 64 ? 1 : i4;
   i1 = (i4 | 0) < 1 ? 64 : i4;
   i4 = mftCall_ii(HEAP32[gb + 92340 + 212 >> 2] | 0, i1 | 0) | 0;
   if (i4 | 0) if (HEAP32[i4 + 4 >> 2] | 0) if (HEAP16[i4 + 746 >> 1] | 0) if ((mftCall_i(HEAP32[gb + 92340 + 204 >> 2] | 0) | 0) != (i4 | 0)) if (HEAP32[gb + 54736 + (HEAP32[i4 >> 2] << 5) >> 2] | 0) {
    i2 = 9;
    break;
   }
   if ((i1 | 0) == (i3 | 0)) {
    i2 = 11;
    break;
   }
  }
  if ((i2 | 0) == 9) HEAP32[gb + 121108 >> 2] = i1; else if ((i2 | 0) == 11) i1 = HEAP32[gb + 121108 >> 2] | 0;
  if (!i1) {
   mftCall_vii(HEAP32[gb + 92340 + 164 >> 2] | 0, gb + 41090 | 0, i6 + 8 | 0);
   HEAP32[gb + 116212 >> 2] = HEAP32[i5 + 3864 >> 2];
   HEAP32[gb + 116212 + 4 >> 2] = HEAP32[i5 + 3864 + 4 >> 2];
   HEAP32[gb + 116212 + 8 >> 2] = HEAP32[i5 + 3864 + 8 >> 2];
   i1 = i5 + 3876 | 0;
  } else {
   HEAP32[gb + 116212 >> 2] = HEAP32[i4 + 2888 >> 2];
   HEAP32[gb + 116212 + 4 >> 2] = HEAP32[i4 + 2888 + 4 >> 2];
   HEAP32[gb + 116212 + 8 >> 2] = HEAP32[i4 + 2888 + 8 >> 2];
   i1 = i4 + 2900 | 0;
  }
  HEAP32[gb + 116224 >> 2] = HEAP32[i1 >> 2];
  HEAP32[gb + 116224 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
  HEAP32[gb + 116224 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
  HEAP32[gb + 121144 >> 2] = 1;
 }
 STACKTOP = i6;
 return;
}

function _EV_FirePython(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, d5 = 0.0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 HEAP32[i3 + 72 >> 2] = HEAP32[i2 + 8 >> 2];
 HEAP32[i3 + 72 + 4 >> 2] = HEAP32[i2 + 12 >> 2];
 HEAP32[i3 + 72 + 8 >> 2] = HEAP32[i2 + 16 >> 2];
 HEAP32[i3 + 60 >> 2] = HEAP32[i2 + 20 >> 2];
 HEAP32[i3 + 60 + 4 >> 2] = HEAP32[i2 + 24 >> 2];
 HEAP32[i3 + 60 + 8 >> 2] = HEAP32[i2 + 28 >> 2];
 mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i3 + 60 | 0, i3 | 0, i3 + 12 | 0, i3 + 24 | 0);
 if (__Z10EV_IsLocali(i1) | 0) {
  i4 = (mftCall_i(HEAP32[gb + 92340 + 144 >> 2] | 0) | 0) != 1;
  __Z14EV_MuzzleFlashv();
  mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0, 2, i4 & 1 | 0);
  __Z11V_PunchAxisif(0, -10.0);
 }
 switch (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 1) | 0) {
 case 0:
  {
   i4 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0;
   d5 = +mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, .800000011920929, .8999999761581421);
   mftCall_viiiiddii(i4 | 0, i1 | 0, i3 + 72 | 0, 1, gb + 38630 | 0, +d5, .800000011920929, 0, 100);
   break;
  }
 case 1:
  {
   i4 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0;
   d5 = +mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, .800000011920929, .8999999761581421);
   mftCall_viiiiddii(i4 | 0, i1 | 0, i3 + 72 | 0, 1, gb + 38652 | 0, +d5, .800000011920929, 0, 100);
   break;
  }
 default:
  {}
 }
 __Z17EV_GetGunPositionP12event_args_sPfS1_(i2, i3 + 48 | 0, i3 + 72 | 0);
 HEAP32[i3 + 36 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 + 36 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
 HEAP32[i3 + 36 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
 __Z19EV_HLDM_FireBulletsiPfS_S_iS_S_fiiPiff(i1, i3, i3 + 12 | 0, i3 + 24 | 0, 1, i3 + 48 | 0, i3 + 36 | 0, 8192.0, 3, 0, 0, +HEAPF32[i2 + 48 >> 2], +HEAPF32[i2 + 52 >> 2]);
 STACKTOP = i3;
 return;
}

function _EV_SnarkFire(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, d4 = 0.0, d5 = 0.0, i6 = 0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i3 = HEAP32[i2 + 4 >> 2] | 0;
 d4 = +HEAPF32[i2 + 8 >> 2];
 d5 = +HEAPF32[i2 + 12 >> 2];
 i1 = HEAP32[i2 + 16 >> 2] | 0;
 HEAP32[i6 + 104 >> 2] = HEAP32[i2 + 20 >> 2];
 HEAP32[i6 + 104 + 4 >> 2] = HEAP32[i2 + 24 >> 2];
 HEAP32[i6 + 104 + 8 >> 2] = HEAP32[i2 + 28 >> 2];
 mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i6 + 104 | 0, i6 + 92 | 0, 0, 0);
 if (__Z10EV_IsLocali(i3) | 0) {
  if (HEAP32[i2 + 44 >> 2] | 0) i1 = (HEAPF32[tempDoublePtr >> 2] = (HEAP32[tempDoublePtr >> 2] = i1, +HEAPF32[tempDoublePtr >> 2]) + 18.0, HEAP32[tempDoublePtr >> 2] | 0);
  mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 44 >> 2] | 0);
  mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 52 >> 2] | 0, i3 + -1 | 0);
  mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 56 >> 2] | 0, 2);
  i3 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 60 >> 2] | 0;
  d10 = +HEAPF32[i6 + 92 >> 2];
  d9 = +HEAPF32[i6 + 92 + 4 >> 2];
  d7 = +HEAPF32[i6 + 92 + 8 >> 2];
  d8 = (HEAP32[tempDoublePtr >> 2] = i1, +HEAPF32[tempDoublePtr >> 2]);
  HEAPF32[i6 + 12 >> 2] = d4 + d10 * 20.0;
  HEAPF32[i6 + 12 + 4 >> 2] = d5 + d9 * 20.0;
  HEAPF32[i6 + 12 + 8 >> 2] = d8 + d7 * 20.0;
  HEAPF32[i6 >> 2] = d4 + d10 * 64.0;
  HEAPF32[i6 + 4 >> 2] = d5 + d9 * 64.0;
  HEAPF32[i6 + 8 >> 2] = d8 + d7 * 64.0;
  mftCall_viiiii(i3 | 0, i6 + 12 | 0, i6 | 0, 0, -1, i6 + 24 | 0);
  if (!(HEAP32[i6 + 24 >> 2] | 0)) if (!(HEAP32[i6 + 24 + 4 >> 2] | 0)) if (+HEAPF32[i6 + 24 + 16 >> 2] > .25) mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0, 5, 0);
  mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 48 >> 2] | 0);
 }
 STACKTOP = i6;
 return;
}

function __ZN11CHudMessage10MessageAddEPKcf(i10, i3, d11) {
 i10 = i10 | 0;
 i3 = i3 | 0;
 d11 = +d11;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, d12 = 0.0;
 i1 = 0;
 do {
  i9 = i10 + 20 + (i1 << 2) | 0;
  if (!(HEAP32[i9 >> 2] | 0)) {
   i2 = 3;
   break;
  }
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) < 16);
 L4 : do if ((i2 | 0) == 3) {
  if ((HEAP8[i3 >> 0] | 0) == 35) i2 = mftCall_ii(HEAP32[gb + 92340 + 100 >> 2] | 0, i3 + 1 | 0) | 0; else i2 = mftCall_ii(HEAP32[gb + 92340 + 100 >> 2] | 0, i3 | 0) | 0;
  if (!i2) {
   HEAP32[gb + 94324 >> 2] = 2;
   HEAP32[gb + 94324 + 4 >> 2] = 1684300900;
   HEAP8[gb + 94324 + 8 >> 0] = -16;
   HEAP8[gb + 94324 + 9 >> 0] = 110;
   HEAP8[gb + 94324 + 10 >> 0] = 0;
   HEAP8[gb + 94324 + 11 >> 0] = 0;
   HEAPF32[gb + 94324 + 12 >> 2] = -1.0;
   HEAPF32[gb + 94324 + 16 >> 2] = .699999988079071;
   HEAPF32[gb + 94324 + 20 >> 2] = .009999999776482582;
   HEAPF32[gb + 94324 + 24 >> 2] = 1.5;
   HEAPF32[gb + 94324 + 32 >> 2] = .25;
   HEAPF32[gb + 94324 + 28 >> 2] = 5.0;
   HEAP32[gb + 94324 + 36 >> 2] = HEAP32[gb + 35644 >> 2];
   _strcpy(gb + 125977 | 0, i3 | 0) | 0;
   HEAP32[gb + 94324 + 40 >> 2] = gb + 125977;
   i2 = gb + 94324 | 0;
  }
  i6 = i2 + 40 | 0;
  i8 = i2 + 16 | 0;
  i7 = i2 + 12 | 0;
  i5 = 0;
  do {
   i4 = i10 + 20 + (i5 << 2) | 0;
   i3 = HEAP32[i4 >> 2] | 0;
   if (i3 | 0) {
    if (!(_strcmp(HEAP32[i6 >> 2] | 0, HEAP32[i3 + 40 >> 2] | 0) | 0)) break L4;
    d12 = +HEAPF32[i8 >> 2] - +HEAPF32[i3 + 16 >> 2];
    if ((d12 > 0.0 ? d12 : -d12) < .0001) {
     d12 = +HEAPF32[i7 >> 2] - +HEAPF32[i3 + 12 >> 2];
     if ((d12 > 0.0 ? d12 : -d12) < .0001) HEAP32[i4 >> 2] = 0;
    }
   }
   i5 = i5 + 1 | 0;
  } while ((i5 | 0) < 16);
  HEAP32[i9 >> 2] = i2;
  HEAPF32[i10 + 84 + (i1 << 2) >> 2] = d11;
 } while (0);
 return;
}

function __ZN8CShotgun10WeaponIdleEv(i5) {
 i5 = i5 | 0;
 var i1 = 0, d2 = 0.0, i3 = 0, i4 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 mftCall_vi(HEAP32[(HEAP32[i5 >> 2] | 0) + 320 >> 2] | 0, i5 | 0);
 __ZN11CBasePlayer16GetAutoaimVectorEf(i6, 0, 0.0);
 d2 = +HEAPF32[i5 + 148 >> 2];
 if (d2 != 0.0) if (d2 < +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2]) {
  mftCall_iii(HEAP32[gb + 56972 + 360 >> 2] | 0, 0, 31) | 0;
  HEAPF32[i5 + 148 >> 2] = 0.0;
 }
 L5 : do if (+HEAPF32[i5 + 164 >> 2] < 0.0) {
  i1 = HEAP32[i5 + 176 >> 2] | 0;
  i3 = (HEAP32[i5 + 152 >> 2] | 0) == 0;
  do if (!i1) if (i3) {
   i1 = HEAP32[i5 + 128 >> 2] | 0;
   if (!(HEAP32[i1 + 1236 + (HEAP32[i5 + 168 >> 2] << 2) >> 2] | 0)) i4 = 15; else {
    mftCall_vi(HEAP32[(HEAP32[i5 >> 2] | 0) + 340 >> 2] | 0, i5 | 0);
    break L5;
   }
  } else i4 = 12; else if (i3) {
   i1 = HEAP32[i5 + 128 >> 2] | 0;
   i4 = 15;
   break;
  } else if ((i1 | 0) == 8) break; else {
   i4 = 12;
   break;
  } while (0);
  if ((i4 | 0) == 12) {
   if (HEAP32[(HEAP32[i5 + 128 >> 2] | 0) + 1236 + (HEAP32[i5 + 168 >> 2] << 2) >> 2] | 0) {
    mftCall_vi(HEAP32[(HEAP32[i5 >> 2] | 0) + 340 >> 2] | 0, i5 | 0);
    break;
   }
  } else if ((i4 | 0) == 15) {
   d2 = +__Z22UTIL_SharedRandomFloatjff(HEAP32[i1 + 680 >> 2] | 0, 0.0, 1.0);
   if (!(d2 <= .8)) {
    HEAPF32[i5 + 164 >> 2] = 2.222222328186035;
    i1 = !(d2 <= .95) ? 8 : 0;
   } else {
    HEAPF32[i5 + 164 >> 2] = 5.0;
    i1 = 9;
   }
   mftCall_viiii(HEAP32[(HEAP32[i5 >> 2] | 0) + 324 >> 2] | 0, i5 | 0, i1 | 0, 1, 0);
   break;
  }
  mftCall_viiii(HEAP32[(HEAP32[i5 >> 2] | 0) + 324 >> 2] | 0, i5 | 0, 4, 1, 0);
  mftCall_iii(HEAP32[gb + 56972 + 360 >> 2] | 0, 0, 31) | 0;
  HEAP32[i5 + 152 >> 2] = 0;
  HEAPF32[i5 + 164 >> 2] = 1.5;
 } while (0);
 STACKTOP = i6;
 return;
}

function __Z11UpdateBeamsv() {
 var i1 = 0, i2 = 0, d3 = 0.0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 i1 = HEAP32[(mftCall_i(HEAP32[gb + 92340 + 204 >> 2] | 0) | 0) >> 2] | 0;
 mftCall_vi(HEAP32[gb + 92340 + 136 >> 2] | 0, i2 + 92 | 0);
 __Z14HUD_GetLastOrgPf(i2 + 104 | 0);
 mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i2 + 92 | 0, i2 + 140 | 0, i2 + 80 | 0, i2 + 68 | 0);
 HEAP32[i2 + 128 >> 2] = HEAP32[i2 + 104 >> 2];
 HEAP32[i2 + 128 + 4 >> 2] = HEAP32[i2 + 104 + 4 >> 2];
 HEAP32[i2 + 128 + 8 >> 2] = HEAP32[i2 + 104 + 8 >> 2];
 _VectorMA(i2 + 128 | 0, 2048.0, i2 + 140 | 0, i2 + 116 | 0);
 mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 40 >> 2] | 0, 0, 1);
 mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 44 >> 2] | 0);
 mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 52 >> 2] | 0, i1 + -1 | 0);
 mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 56 >> 2] | 0, 2);
 mftCall_viiiii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 60 >> 2] | 0, i2 + 128 | 0, i2 + 116 | 0, 2, -1, i2 | 0);
 mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 48 >> 2] | 0);
 i1 = HEAP32[gb + 56820 >> 2] | 0;
 if (i1 | 0) {
  HEAP32[i1 + 24 >> 2] = HEAP32[i2 + 20 >> 2];
  HEAP32[i1 + 24 + 4 >> 2] = HEAP32[i2 + 20 + 4 >> 2];
  HEAP32[i1 + 24 + 8 >> 2] = HEAP32[i2 + 20 + 8 >> 2];
  d3 = +mftCall_d(HEAP32[gb + 92340 + 216 >> 2] | 0) + .1;
  HEAPF32[(HEAP32[gb + 56820 >> 2] | 0) + 56 >> 2] = d3;
 }
 i1 = HEAP32[gb + 56824 >> 2] | 0;
 if (i1 | 0) {
  HEAP32[i1 + 24 >> 2] = HEAP32[i2 + 20 >> 2];
  HEAP32[i1 + 24 + 4 >> 2] = HEAP32[i2 + 20 + 4 >> 2];
  HEAP32[i1 + 24 + 8 >> 2] = HEAP32[i2 + 20 + 8 >> 2];
  d3 = +mftCall_d(HEAP32[gb + 92340 + 216 >> 2] | 0) + .1;
  HEAPF32[(HEAP32[gb + 56824 >> 2] | 0) + 56 >> 2] = d3;
 }
 STACKTOP = i2;
 return;
}

function _PM_CheckWater() {
 var i1 = 0, i2 = 0, i3 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 i3 = HEAP32[i1 + 188 >> 2] | 0;
 HEAPF32[i2 + 4 >> 2] = +HEAPF32[i1 + 56 >> 2] + (+HEAPF32[i1 + 324852 + (i3 * 12 | 0) >> 2] + +HEAPF32[i1 + 324900 + (i3 * 12 | 0) >> 2]) * .5;
 HEAPF32[i2 + 4 + 4 >> 2] = +HEAPF32[i1 + 60 >> 2] + (+HEAPF32[i1 + 324852 + (i3 * 12 | 0) + 4 >> 2] + +HEAPF32[i1 + 324900 + (i3 * 12 | 0) + 4 >> 2]) * .5;
 HEAPF32[i2 + 4 + 8 >> 2] = +HEAPF32[i1 + 64 >> 2] + +HEAPF32[i1 + 324852 + (i3 * 12 | 0) + 8 >> 2] + 1.0;
 HEAP32[i1 + 228 >> 2] = 0;
 HEAP32[i1 + 232 >> 2] = -1;
 i1 = mftCall_iii(HEAP32[i1 + 324980 >> 2] | 0, i2 + 4 | 0, i2 | 0) | 0;
 if ((i1 + 14 | 0) >>> 0 < 12) {
  i3 = HEAP32[gb + 121136 >> 2] | 0;
  HEAP32[i3 + 232 >> 2] = i1;
  HEAP32[i3 + 228 >> 2] = 1;
  i1 = HEAP32[i3 + 188 >> 2] | 0;
  HEAPF32[i2 + 4 + 8 >> 2] = +HEAPF32[i3 + 64 >> 2] + (+HEAPF32[i3 + 324852 + (i1 * 12 | 0) + 8 >> 2] + +HEAPF32[i3 + 324900 + (i1 * 12 | 0) + 8 >> 2]) * .5;
  if (((mftCall_iii(HEAP32[i3 + 324980 >> 2] | 0, i2 + 4 | 0, 0) | 0) + 14 | 0) >>> 0 < 12) {
   i3 = HEAP32[gb + 121136 >> 2] | 0;
   HEAP32[i3 + 228 >> 2] = 2;
   HEAPF32[i2 + 4 + 8 >> 2] = +HEAPF32[i3 + 64 >> 2] + +HEAPF32[i3 + 136 >> 2];
   if (((mftCall_iii(HEAP32[i3 + 324980 >> 2] | 0, i2 + 4 | 0, 0) | 0) + 14 | 0) >>> 0 < 12) HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 228 >> 2] = 3;
  }
  i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 + 14 | 0) >>> 0 < 6) {
   i3 = HEAP32[gb + 121136 >> 2] | 0;
   _VectorMA(i3 + 116 | 0, +(HEAP32[i3 + 228 >> 2] | 0) * 50.0, gb + 36524 + ((-9 - i1 | 0) * 12 | 0) | 0, i3 + 116 | 0);
  }
 }
 i3 = (HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 228 >> 2] | 0) > 1 & 1;
 STACKTOP = i2;
 return i3 | 0;
}

function __ZN7CPython13PrimaryAttackEv(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i1 = HEAP32[i4 + 128 >> 2] | 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 do if ((HEAP32[i2 + 448 >> 2] | 0) == 3) {
  mftCall_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 316 >> 2] | 0, i4 | 0) | 0;
  HEAPF32[i4 + 156 >> 2] = .15000000596046448;
 } else {
  i3 = HEAP32[i4 + 176 >> 2] | 0;
  if ((i3 | 0) >= 1) {
   HEAP32[i1 + 692 >> 2] = 1e3;
   HEAP32[i1 + 700 >> 2] = 512;
   HEAP32[i4 + 176 >> 2] = i3 + -1;
   HEAP32[i2 + 280 >> 2] = HEAP32[i2 + 280 >> 2] | 2;
   mftCall_vii(HEAP32[(HEAP32[i1 >> 2] | 0) + 476 >> 2] | 0, i5 + 36 | 0, i1 | 0);
   __ZN11CBasePlayer16GetAutoaimVectorEf(i5 + 24 | 0, 0, 0.0);
   i3 = HEAP32[i4 + 128 >> 2] | 0;
   HEAPF32[i5 >> 2] = .008729999884963036;
   HEAPF32[i5 + 4 >> 2] = .008729999884963036;
   HEAPF32[i5 + 8 >> 2] = .008729999884963036;
   __ZN11CBaseEntity17FireBulletsPlayerEm6VectorS0_S0_fiiiP9entvars_si(i5 + 12 | 0, 0, 1, 0, 0, i5, 0.0, 0, 0, 0, HEAP32[i3 + 4 >> 2] | 0, HEAP32[i3 + 680 >> 2] | 0);
   mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 1, HEAP32[(HEAP32[(HEAP32[i4 + 128 >> 2] | 0) + 4 >> 2] | 0) + 520 >> 2] | 0, HEAP16[i4 + 204 >> 1] | 0, 0.0, gb + 56956 | 0, gb + 56956 | 0, +(+HEAPF32[i5 + 12 >> 2]), +(+HEAPF32[i5 + 12 + 4 >> 2]), 0, 0, 0, 0);
   HEAPF32[i4 + 156 >> 2] = .75;
   HEAPF32[i4 + 164 >> 2] = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i4 + 128 >> 2] | 0) + 680 >> 2] | 0, 10.0, 15.0);
   break;
  }
  if (!(HEAP32[i4 + 144 >> 2] | 0)) {
   mftCall_vi(HEAP32[(HEAP32[i4 >> 2] | 0) + 340 >> 2] | 0, i4 | 0);
   break;
  } else {
   HEAPF32[i4 + 156 >> 2] = .15000000596046448;
   break;
  }
 } while (0);
 STACKTOP = i5;
 return;
}

function __ZN15WeaponsResource10SelectSlotEiii(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i5 = 0;
 do if ((i2 | 0) == 1 & ((i1 | 0) == 0 ? (HEAP32[gb + 46040 + 6204 >> 2] | 0) != 0 : 0)) __ZN8CHudMenu14SelectMenuItemEi(gb + 46040 + 6184 | 0, i3 + 1 | 0); else if (!((i3 | 0) > 5 ? 1 : (HEAP32[gb + 46040 + 8644 >> 2] | 0) != 0)) if (!(HEAP32[gb + 46040 + 84 >> 2] & 5)) {
  i2 = HEAP32[gb + 46040 + 8640 >> 2] | 0;
  if (!((i2 | 0) > -1 | (i2 & 2147483647 | 0) == 0)) {
   i2 = +mftCall_di(HEAP32[gb + 92340 + 60 >> 2] | 0, gb + 39932 | 0) != 0.0;
   i1 = HEAP32[gb + 81320 >> 2] | 0;
   do if (i1 >>> 0 < 2 >>> 0) i5 = 8; else if ((HEAP32[i1 + 144 >> 2] | 0) == (i3 | 0)) {
    mftCall_vid(HEAP32[gb + 92340 + 88 >> 2] | 0, gb + 39997 | 0, 1.0);
    i1 = HEAP32[gb + 81320 >> 2] | 0;
    if (i1 | 0) {
     i1 = __ZN15WeaponsResource16GetNextActivePosEii(0, HEAP32[i1 + 144 >> 2] | 0, HEAP32[i1 + 148 >> 2] | 0) | 0;
     if (i1 | 0) break;
    }
    i1 = __ZN15WeaponsResource11GetFirstPosEi(i4, i3) | 0;
    i5 = 14;
   } else i5 = 8; while (0);
   if ((i5 | 0) == 8) {
    mftCall_vid(HEAP32[gb + 92340 + 88 >> 2] | 0, gb + 39976 | 0, 1.0);
    i1 = __ZN15WeaponsResource11GetFirstPosEi(i4, i3) | 0;
    if ((i1 | 0) == 0 | i2 ^ 1) i5 = 14; else if (!(__ZN15WeaponsResource16GetNextActivePosEii(0, HEAP32[i1 + 144 >> 2] | 0, HEAP32[i1 + 148 >> 2] | 0) | 0)) {
     mftCall_ii(HEAP32[gb + 92340 + 76 >> 2] | 0, i1 | 0) | 0;
     HEAP32[gb + 92100 >> 2] = HEAP32[i1 + 156 >> 2];
     break;
    }
   }
   if ((i5 | 0) == 14) if (!i1) if (i2) {
    HEAP32[gb + 81320 >> 2] = 0;
    break;
   } else {
    HEAP32[gb + 81320 >> 2] = 1;
    break;
   }
   HEAP32[gb + 81320 >> 2] = i1;
  }
 } while (0);
 return;
}

function __Z13V_GetChasePosiPfS_S_(i1, i3, i5, i4) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i6 = 0;
 if (!i1) i6 = 3; else {
  i2 = mftCall_ii(HEAP32[gb + 92340 + 212 >> 2] | 0, i1 | 0) | 0;
  if (!i2) i6 = 3; else {
   do if (+HEAPF32[(HEAP32[gb + 46040 + 4276 >> 2] | 0) + 12 >> 2] != 0.0) {
    i1 = HEAP32[gb + 121112 >> 2] | 0;
    if (!i1) {
     __Z26V_GetDirectedChasePositionP11cl_entity_sS0_PfS1_(i2, -1, i4, i5);
     break;
    } else {
     __Z26V_GetDirectedChasePositionP11cl_entity_sS0_PfS1_(i2, mftCall_ii(HEAP32[gb + 92340 + 212 >> 2] | 0, i1 | 0) | 0, i4, i5);
     break;
    }
   } else {
    if (!i3) {
     i3 = HEAP32[i2 + 2900 >> 2] | 0;
     HEAP32[i4 >> 2] = i3;
     HEAP32[i4 + 4 >> 2] = HEAP32[i2 + 2900 + 4 >> 2];
     HEAP32[i4 + 8 >> 2] = HEAP32[i2 + 2900 + 8 >> 2];
     HEAPF32[i4 >> 2] = -(HEAP32[tempDoublePtr >> 2] = i3, +HEAPF32[tempDoublePtr >> 2]);
    } else {
     HEAP32[i4 >> 2] = HEAP32[i3 >> 2];
     HEAP32[i4 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
     HEAP32[i4 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
    }
    HEAP32[i5 >> 2] = HEAP32[i2 + 2888 >> 2];
    HEAP32[i5 + 4 >> 2] = HEAP32[i2 + 2888 + 4 >> 2];
    HEAPF32[i5 + 8 >> 2] = +HEAPF32[i2 + 2888 + 8 >> 2] + 28.0;
    __Z16V_GetChaseOriginPfS_fS_(i4, i5, +HEAPF32[(HEAP32[gb + 116352 >> 2] | 0) + 12 >> 2], i5);
   } while (0);
   HEAP32[gb + 36084 >> 2] = 0;
  }
 }
 if ((i6 | 0) == 3) {
  HEAP32[i4 >> 2] = HEAP32[gb + 116224 >> 2];
  HEAP32[i4 + 4 >> 2] = HEAP32[gb + 116224 + 4 >> 2];
  HEAP32[i4 + 8 >> 2] = HEAP32[gb + 116224 + 8 >> 2];
  HEAP32[i5 >> 2] = HEAP32[gb + 116212 >> 2];
  HEAP32[i5 + 4 >> 2] = HEAP32[gb + 116212 + 4 >> 2];
  HEAP32[i5 + 8 >> 2] = HEAP32[gb + 116212 + 8 >> 2];
 }
 return;
}

function _PM_UnDuck() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, d5 = 0.0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 i3 = HEAP32[gb + 121136 >> 2] | 0;
 i1 = HEAP32[i3 + 56 >> 2] | 0;
 HEAP32[i4 + 136 >> 2] = i1;
 i2 = HEAP32[i3 + 60 >> 2] | 0;
 HEAP32[i4 + 136 + 4 >> 2] = i2;
 HEAP32[i4 + 136 + 8 >> 2] = HEAP32[i3 + 64 >> 2];
 if ((HEAP32[i3 + 224 >> 2] | 0) != -1) {
  d5 = (HEAP32[tempDoublePtr >> 2] = i2, +HEAPF32[tempDoublePtr >> 2]);
  HEAPF32[i4 + 136 >> 2] = (HEAP32[tempDoublePtr >> 2] = i1, +HEAPF32[tempDoublePtr >> 2]) + (+HEAPF32[i3 + 324864 >> 2] - +HEAPF32[i3 + 324852 >> 2]);
  HEAPF32[i4 + 136 + 4 >> 2] = d5 + (+HEAPF32[i3 + 324868 >> 2] - +HEAPF32[i3 + 324856 >> 2]);
  i1 = 2;
  do {
   HEAPF32[i4 + 136 + (i1 << 2) >> 2] = +HEAPF32[i4 + 136 + (i1 << 2) >> 2] + (+HEAPF32[i3 + 324864 + (i1 << 2) >> 2] - +HEAPF32[i3 + 324852 + (i1 << 2) >> 2]);
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) != 3);
 }
 mftCall_viiiii(HEAP32[i3 + 324992 >> 2] | 0, i4 + 68 | 0, i4 + 136 | 0, i4 + 136 | 0, 0, -1);
 do if (!(HEAP32[i4 + 68 + 4 >> 2] | 0)) {
  i1 = HEAP32[gb + 121136 >> 2] | 0;
  HEAP32[i1 + 188 >> 2] = 0;
  mftCall_viiiii(HEAP32[i1 + 324992 >> 2] | 0, i4 | 0, i4 + 136 | 0, i4 + 136 | 0, 0, -1);
  i1 = HEAP32[gb + 121136 >> 2] | 0;
  if (!(HEAP32[i4 + 4 >> 2] | 0)) {
   HEAP32[i1 + 184 >> 2] = HEAP32[i1 + 184 >> 2] & -16385;
   HEAP32[i1 + 144 >> 2] = 0;
   HEAPF32[i1 + 136 >> 2] = 28.0;
   HEAPF32[i1 + 140 >> 2] = 0.0;
   HEAP32[i1 + 56 >> 2] = HEAP32[i4 + 136 >> 2];
   HEAP32[i1 + 60 >> 2] = HEAP32[i4 + 136 + 4 >> 2];
   HEAP32[i1 + 64 >> 2] = HEAP32[i4 + 136 + 8 >> 2];
   _PM_CatagorizePosition();
   break;
  } else {
   HEAP32[i1 + 188 >> 2] = 1;
   break;
  }
 } while (0);
 STACKTOP = i4;
 return;
}

function __ZN6CGlock9GlockFireEffi(i5, d4, d3, i2) {
 i5 = i5 | 0;
 d4 = +d4;
 d3 = +d3;
 i2 = i2 | 0;
 var i1 = 0, i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i1 = HEAP32[i5 + 176 >> 2] | 0;
 if ((i1 | 0) < 1) {
  if (HEAP32[i5 + 144 >> 2] | 0) {
   mftCall_ii(HEAP32[(HEAP32[i5 >> 2] | 0) + 316 >> 2] | 0, i5 | 0) | 0;
   HEAPF32[i5 + 156 >> 2] = .20000000298023224;
  }
 } else {
  HEAP32[i5 + 176 >> 2] = i1 + -1;
  i1 = HEAP32[i5 + 128 >> 2] | 0;
  i7 = (HEAP32[i1 + 4 >> 2] | 0) + 280 | 0;
  HEAP32[i7 >> 2] = HEAP32[i7 >> 2] | 2;
  i7 = (HEAP32[(HEAP32[i5 + 4 >> 2] | 0) + 276 >> 2] | 0) == 1;
  HEAP32[i1 + 692 >> 2] = i7 ? 200 : 600;
  HEAP32[i1 + 700 >> 2] = i7 ? 128 : 256;
  mftCall_vii(HEAP32[(HEAP32[i1 >> 2] | 0) + 476 >> 2] | 0, i6 + 24 | 0, i1 | 0);
  if (i2 | 0) __ZN11CBasePlayer16GetAutoaimVectorEf(i6 + 12 | 0, 0, 0.0);
  i7 = HEAP32[i5 + 128 >> 2] | 0;
  HEAPF32[i6 >> 2] = d4;
  HEAPF32[i6 + 4 >> 2] = d4;
  HEAPF32[i6 + 8 >> 2] = d4;
  __ZN11CBaseEntity17FireBulletsPlayerEm6VectorS0_S0_fiiiP9entvars_si(i6 + 12 | 0, 0, 1, 0, 0, i6, 0.0, 0, 0, 0, HEAP32[i7 + 4 >> 2] | 0, HEAP32[i7 + 680 >> 2] | 0);
  mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 1, HEAP32[(HEAP32[(HEAP32[i5 + 128 >> 2] | 0) + 4 >> 2] | 0) + 520 >> 2] | 0, HEAP16[(i2 | 0 ? i5 + 200 | 0 : i5 + 202 | 0) >> 1] | 0, 0.0, gb + 56956 | 0, gb + 56956 | 0, +(+HEAPF32[i6 + 12 >> 2]), +(+HEAPF32[i6 + 12 + 4 >> 2]), 0, 0, (HEAP32[i5 + 176 >> 2] | 0) == 0 | 0, 0);
  HEAPF32[i5 + 160 >> 2] = d3;
  HEAPF32[i5 + 156 >> 2] = d3;
  HEAPF32[i5 + 164 >> 2] = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i5 + 128 >> 2] | 0) + 680 >> 2] | 0, 10.0, 15.0);
 }
 STACKTOP = i6;
 return;
}

function __Z20V_GetSingleTargetCamP11cl_entity_sPfS1_(i4, i7, i10) {
 i4 = i4 | 0;
 i7 = i7 | 0;
 i10 = i10 | 0;
 var d1 = 0.0, d2 = 0.0, i3 = 0, i5 = 0, i6 = 0, d8 = 0.0, d9 = 0.0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i6 = HEAP32[gb + 46040 + 4240 >> 2] | 0;
 i5 = (HEAP32[i4 + 4 >> 2] | 0) == 0;
 if (i5) i3 = 0; else i3 = (HEAP16[i4 + 746 >> 1] | 0) == 0;
 d8 = i6 & 32 | 0 ? -1.0 : 1.0;
 d9 = i6 & 512 | 0 ? (d8 * 16.0 + 112.0) * 2.0 : i3 ? (d8 * 16.0 + 112.0) * 1.5 : d8 * 16.0 + 112.0;
 d1 = +HEAPF32[gb + 116300 >> 2] + +HEAPF32[gb + 116296 >> 2] * 32.0;
 HEAPF32[gb + 116300 >> 2] = d1;
 d9 = d9 > d1 ? d1 : d9;
 HEAP32[i11 >> 2] = HEAP32[i4 + 2888 >> 2];
 HEAP32[i11 + 4 >> 2] = HEAP32[i4 + 2888 + 4 >> 2];
 d1 = +HEAPF32[i4 + 2888 + 8 >> 2];
 HEAPF32[i11 + 8 >> 2] = d1;
 do if (i5) HEAPF32[i11 + 8 >> 2] = d1 + 8.0; else if (i3) {
  HEAPF32[i11 + 8 >> 2] = d1 + 2.0;
  break;
 } else {
  HEAPF32[i11 + 8 >> 2] = d1 + 17.0;
  break;
 } while (0);
 i5 = HEAP32[i4 + 2900 >> 2] | 0;
 HEAP32[i11 + 12 >> 2] = i5;
 i3 = HEAP32[i4 + 2900 + 4 >> 2] | 0;
 HEAP32[i11 + 12 + 4 >> 2] = i3;
 HEAP32[i11 + 12 + 8 >> 2] = HEAP32[i4 + 2900 + 8 >> 2];
 d1 = (HEAP32[tempDoublePtr >> 2] = i3, +HEAPF32[tempDoublePtr >> 2]);
 d2 = (HEAP32[tempDoublePtr >> 2] = i5, +HEAPF32[tempDoublePtr >> 2]);
 if (i6 & 128) {
  HEAPF32[i11 + 12 + 4 >> 2] = d1 + 180.0;
  d1 = d1 + 180.0;
 }
 HEAPF32[i11 + 12 >> 2] = i6 & 512 | 0 ? 22.5 : d8 * 12.5 + d2;
 HEAPF32[i11 + 12 + 4 >> 2] = ((i6 & 16 | 0) == 0 ? -22.5 : 22.5) + d1;
 __Z25V_SmoothInterpolateAnglesPfS_S_f(gb + 116284 | 0, i11 + 12 | 0, i7, 120.0);
 __Z16V_GetChaseOriginPfS_fS_(i7, i11, d9, i10);
 STACKTOP = i11;
 return;
}

function __ZN4CHud13DrawHudStringEiiiPciii(i3, i1, i11, i10, i6, i5, i4, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i11 = i11 | 0;
 i10 = i10 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 L1 : do if (+HEAPF32[(HEAP32[gb + 93740 >> 2] | 0) + 12 >> 2] == 2.0) {
  mftCall_vddd(HEAP32[gb + 92340 + 112 >> 2] | 0, +(+(i5 | 0) * .00392156862745098), +(+(i4 | 0) * .00392156862745098), +(+(i2 | 0) * .00392156862745098));
  i1 = mftCall_iiii(HEAP32[gb + 92340 + 108 >> 2] | 0, i1 | 0, i11 | 0, i6 | 0) | 0;
 } else {
  mftCall_iiiiiii(HEAP32[gb + 92340 + 104 >> 2] | 0, 0, 0, 0, 0, 0, 0) | 0;
  i9 = i2;
  i3 = i6;
  while (1) {
   i2 = HEAP8[i3 >> 0] | 0;
   switch (i2 << 24 >> 24) {
   case 10:
   case 0:
    break L1;
   default:
    {}
   }
   if (((HEAP16[gb + 46040 + 8282 >> 1] | 0) + i1 | 0) > (i10 | 0)) break L1;
   if (i2 << 24 >> 24 == 94) {
    i6 = HEAP8[i3 + 1 >> 0] | 0;
    if ((i6 & -8) << 24 >> 24 == 48) {
     i3 = i3 + 2 | 0;
     i2 = HEAP8[i3 >> 0] | 0;
     if (!(i2 << 24 >> 24)) break L1; else {
      i7 = HEAPU8[gb + 40997 + (((i6 << 24 >> 24) + -48 | 0) * 3 | 0) + 2 >> 0] | 0;
      i8 = HEAPU8[gb + 40997 + (((i6 << 24 >> 24) + -48 | 0) * 3 | 0) + 1 >> 0] | 0;
      i6 = HEAPU8[gb + 40997 + (((i6 << 24 >> 24) + -48 | 0) * 3 | 0) >> 0] | 0;
     }
    } else {
     i2 = 94;
     i7 = i9;
     i8 = i4;
     i6 = i5;
    }
   } else {
    i7 = i9;
    i8 = i4;
    i6 = i5;
   }
   i9 = i7;
   i4 = i8;
   i5 = i6;
   i3 = i3 + 1 | 0;
   i1 = (mftCall_iiiiiii(HEAP32[gb + 92340 + 104 >> 2] | 0, i1 | 0, i11 | 0, i2 & 255 | 0, i6 | 0, i8 | 0, i7 | 0) | 0) + i1 | 0;
  }
 } while (0);
 return i1 | 0;
}

function _PM_Friction() {
 var d1 = 0.0, i2 = 0, d3 = 0.0, d4 = 0.0, i5 = 0, d6 = 0.0, i7 = 0, d8 = 0.0, i9 = 0, d10 = 0.0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 i7 = HEAP32[gb + 121136 >> 2] | 0;
 if (!(+HEAPF32[i7 + 204 >> 2] != 0.0)) {
  d1 = +HEAPF32[i7 + 92 >> 2];
  d3 = +HEAPF32[i7 + 96 >> 2];
  d4 = +HEAPF32[i7 + 100 >> 2];
  d8 = +Math_sqrt(+(d1 * d1 + d3 * d3 + d4 * d4));
  if (!(d8 < .10000000149011612)) {
   if ((HEAP32[i7 + 224 >> 2] | 0) == -1) {
    d6 = d1;
    i2 = i7;
    d1 = 0.0;
   } else {
    d1 = d1 / d8 * 16.0 + +HEAPF32[i7 + 56 >> 2];
    HEAPF32[i9 + 68 >> 2] = d1;
    HEAPF32[i9 + 80 >> 2] = d1;
    d1 = d3 / d8 * 16.0 + +HEAPF32[i7 + 60 >> 2];
    HEAPF32[i9 + 68 + 4 >> 2] = d1;
    HEAPF32[i9 + 80 + 4 >> 2] = d1;
    d1 = +HEAPF32[i7 + 64 >> 2] + +HEAPF32[i7 + 324852 + ((HEAP32[i7 + 188 >> 2] | 0) * 12 | 0) + 8 >> 2];
    HEAPF32[i9 + 80 + 8 >> 2] = d1;
    HEAPF32[i9 + 68 + 8 >> 2] = d1 + -34.0;
    mftCall_viiiii(HEAP32[i7 + 324992 >> 2] | 0, i9 | 0, i9 + 80 | 0, i9 + 68 | 0, 0, -1);
    i5 = HEAP32[gb + 121136 >> 2] | 0;
    i2 = HEAP32[i5 + 324848 >> 2] | 0;
    d1 = +HEAPF32[i2 + 28 >> 2];
    if (+HEAPF32[i9 + 16 >> 2] == 1.0) d1 = d1 * +HEAPF32[i2 + 32 >> 2];
    d10 = +HEAPF32[i2 + 4 >> 2];
    d6 = +HEAPF32[i7 + 92 >> 2];
    d3 = +HEAPF32[i7 + 96 >> 2];
    d4 = +HEAPF32[i7 + 100 >> 2];
    i2 = i5;
    d1 = +HEAPF32[i5 + 16 >> 2] * d1 * +HEAPF32[i5 + 196 >> 2] * (d8 < d10 ? d10 : d8);
   }
   d10 = d8 - d1;
   d10 = (d10 < 0.0 ? 0.0 : d10) / d8;
   HEAPF32[i2 + 92 >> 2] = d6 * d10;
   HEAPF32[i2 + 96 >> 2] = d3 * d10;
   HEAPF32[i2 + 100 >> 2] = d4 * d10;
  }
 }
 STACKTOP = i9;
 return;
}

function __ZN15CHudTextMessage18LocaliseTextStringEPKcPci(i3, i8, i1) {
 i3 = i3 | 0;
 i8 = i8 | 0;
 i1 = i1 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i2 = HEAP8[i3 >> 0] | 0;
 if ((i1 | 0) > 0 & i2 << 24 >> 24 != 0) {
  i7 = i8;
  while (1) {
   do if (i2 << 24 >> 24 == 35) {
    i4 = i3 + 1 | 0;
    i2 = HEAP8[i4 >> 0] | 0;
    if ((i2 + -65 & 255) < 58 | (i2 + -48 & 255) < 10) {
     i5 = i4;
     i6 = gb + 131417 | 0;
     do {
      HEAP8[i6 >> 0] = i2;
      i6 = i6 + 1 | 0;
      i5 = i5 + 1 | 0;
      i2 = HEAP8[i5 >> 0] | 0;
     } while ((i2 + -65 & 255) < 58 | (i2 + -48 & 255) < 10);
     i2 = i6;
    } else {
     i5 = i4;
     i2 = gb + 131417 | 0;
    }
    HEAP8[i2 >> 0] = 0;
    i2 = mftCall_ii(HEAP32[gb + 92340 + 100 >> 2] | 0, gb + 131417 | 0) | 0;
    if (i2 | 0) {
     i6 = HEAP32[i2 + 40 >> 2] | 0;
     if (i6 | 0) {
      i2 = HEAP8[i6 >> 0] | 0;
      if (!(i2 << 24 >> 24)) i2 = i7; else {
       i4 = i2;
       i2 = i7;
       i3 = i6;
       do {
        HEAP8[i2 >> 0] = i4;
        i3 = i3 + 1 | 0;
        i2 = i2 + 1 | 0;
        i4 = HEAP8[i3 >> 0] | 0;
       } while (i4 << 24 >> 24 != 0);
      }
      HEAP8[i2 >> 0] = 0;
      i6 = i2;
      i4 = i5;
      break;
     }
    }
    HEAP8[i7 >> 0] = HEAP8[i3 >> 0] | 0;
    i6 = i7 + 1 | 0;
   } else {
    HEAP8[i7 >> 0] = i2;
    i6 = i7 + 1 | 0;
    HEAP8[i6 >> 0] = 0;
    i4 = i3 + 1 | 0;
   } while (0);
   i3 = i1 + -1 | 0;
   i2 = HEAP8[i4 >> 0] | 0;
   if (!((i1 | 0) > 1 & i2 << 24 >> 24 != 0)) {
    i1 = i3;
    break;
   } else {
    i1 = i3;
    i7 = i6;
    i3 = i4;
   }
  }
 }
 HEAP8[i8 + (i1 + -1) >> 0] = 0;
 return i8 | 0;
}

function __Z16KB_ConvertStringPcPS_(i1, i7) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 4160 | 0;
 if (!i7) i1 = 0; else {
  HEAP32[i7 >> 2] = 0;
  i5 = i8 + 64 | 0;
  L3 : while (1) {
   i2 = HEAP8[i1 >> 0] | 0;
   switch (i2 << 24 >> 24) {
   case 0:
    break L3;
   case 43:
    {
     i4 = 43;
     i3 = 0;
     i2 = i8;
     break;
    }
   default:
    {
     HEAP8[i5 >> 0] = i2;
     i1 = i1 + 1 | 0;
     i5 = i5 + 1 | 0;
     continue L3;
    }
   }
   do {
    if (!((i3 | 0) < 63 & ((i3 | 0) == 0 | (_isalnum(i4 << 24 >> 24 | 0) | 0) != 0))) break;
    i1 = i1 + 1 | 0;
    i3 = i3 + 1 | 0;
    HEAP8[i2 >> 0] = i4;
    i2 = i8 + i3 | 0;
    i4 = HEAP8[i1 >> 0] | 0;
   } while (i4 << 24 >> 24 != 0);
   HEAP8[i2 >> 0] = 0;
   if (!(_strlen(i8 + 1 | 0) | 0)) {
    i2 = i8;
    i6 = 0;
   } else {
    i2 = mftCall_ii(HEAP32[gb + 92340 + 292 >> 2] | 0, i8 + 1 | 0) | 0;
    if (!i2) {
     i2 = i8;
     i6 = 0;
    } else {
     HEAP8[i5 >> 0] = 91;
     i5 = i5 + 1 | 0;
     i6 = 1;
    }
   }
   i3 = HEAP8[i2 >> 0] | 0;
   if (!(i3 << 24 >> 24)) i2 = i5; else while (1) {
    i2 = i2 + 1 | 0;
    i4 = i5 + 1 | 0;
    HEAP8[i5 >> 0] = i3;
    i3 = HEAP8[i2 >> 0] | 0;
    if (!(i3 << 24 >> 24)) {
     i2 = i4;
     break;
    } else i5 = i4;
   }
   if (!i6) {
    i5 = i2;
    continue;
   }
   HEAP8[i2 >> 0] = 93;
   i5 = i2 + 1 | 0;
  }
  HEAP8[i5 >> 0] = 0;
  i1 = _malloc((_strlen(i8 + 64 | 0) | 0) + 1 | 0) | 0;
  _strcpy(i1 | 0, i8 + 64 | 0) | 0;
  HEAP32[i7 >> 2] = i1;
  i1 = 1;
 }
 STACKTOP = i8;
 return i1 | 0;
}

function _PM_CheckFalling() {
 var i1 = 0, d2 = 0.0;
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 L1 : do if ((HEAP32[i1 + 224 >> 2] | 0) != -1) if (!(HEAP32[i1 + 208 >> 2] | 0)) {
  d2 = +HEAPF32[i1 + 156 >> 2];
  if (d2 >= 350.0) {
   do if ((HEAP32[i1 + 228 >> 2] | 0) > 0) d2 = .5; else {
    if (d2 > 580.0) {
     mftCall_viiddii(HEAP32[i1 + 325044 >> 2] | 0, 2, gb + 45923 | 0, 1.0, .800000011920929, 0, 100);
     d2 = 1.0;
     break;
    }
    if (!(d2 > 290.0)) if (d2 < 200.0) break L1; else {
     d2 = .5;
     break;
    }
    if ((_atoi(mftCall_iii(HEAP32[i1 + 324948 >> 2] | 0, i1 + 324592 | 0, gb + 45895 | 0) | 0) | 0) == 1) {
     mftCall_viiddii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325044 >> 2] | 0, 2, gb + 45923 | 0, 1.0, .800000011920929, 0, 100);
     d2 = .8500000238418579;
    } else d2 = .8500000238418579;
   } while (0);
   HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 148 >> 2] = 0;
   _PM_UpdateStepSound();
   switch (HEAP8[(HEAP32[gb + 121136 >> 2] | 0) + 496 >> 0] | 0) {
   case 83:
    {
     i1 = 6;
     break;
    }
   case 77:
    {
     i1 = 1;
     break;
    }
   case 68:
    {
     i1 = 2;
     break;
    }
   case 86:
    {
     i1 = 3;
     break;
    }
   case 71:
    {
     i1 = 4;
     break;
    }
   case 84:
    {
     i1 = 5;
     break;
    }
   default:
    i1 = 0;
   }
   _PM_PlayStepSound(i1, d2);
   i1 = HEAP32[gb + 121136 >> 2] | 0;
   HEAPF32[i1 + 168 >> 2] = +HEAPF32[i1 + 156 >> 2] * .013;
   if (+HEAPF32[i1 + 160 >> 2] > 8.0) HEAPF32[i1 + 160 >> 2] = 8.0;
  }
 } while (0);
 if ((HEAP32[i1 + 224 >> 2] | 0) != -1) HEAPF32[i1 + 156 >> 2] = 0.0;
 return;
}

function __Z21V_GetMapChasePositioniPfS_S_(i4, i2, i6, i5) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, d3 = 0.0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 do if (!i4) {
  i4 = HEAP32[i2 >> 2] | 0;
  HEAP32[i5 >> 2] = i4;
  HEAP32[i5 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
  HEAP32[i5 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
  i1 = i6 + 8 | 0;
  i2 = i5 + 8 | 0;
  d3 = (HEAP32[tempDoublePtr >> 2] = i4, +HEAPF32[tempDoublePtr >> 2]) * .011111111380159855 * 38.75 + 51.25;
 } else {
  i1 = mftCall_ii(HEAP32[gb + 92340 + 212 >> 2] | 0, i4 | 0) | 0;
  if (+HEAPF32[(HEAP32[gb + 46040 + 4276 >> 2] | 0) + 12 >> 2] != 0.0) {
   __Z13V_GetChasePosiPfS_S_(i4, i2, i6, i5);
   HEAP32[i6 >> 2] = HEAP32[i1 + 2888 >> 2];
   HEAP32[i6 + 4 >> 2] = HEAP32[i1 + 2888 + 4 >> 2];
   HEAP32[i6 + 8 >> 2] = HEAP32[i1 + 2888 + 8 >> 2];
   i1 = i6 + 8 | 0;
   i2 = i5 + 8 | 0;
   d3 = 45.0;
   break;
  } else {
   HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i5 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
   HEAP32[i5 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
   HEAP32[i6 >> 2] = HEAP32[i1 + 2888 >> 2];
   HEAP32[i6 + 4 >> 2] = HEAP32[i1 + 2888 + 4 >> 2];
   HEAP32[i6 + 8 >> 2] = HEAP32[i1 + 2888 + 8 >> 2];
   i1 = i6 + 8 | 0;
   i2 = i5 + 8 | 0;
   d3 = +HEAPF32[i5 >> 2] * .011111111380159855 * 38.75 + 51.25;
   break;
  }
 } while (0);
 HEAPF32[i5 >> 2] = d3;
 HEAPF32[i1 >> 2] = +HEAPF32[i1 >> 2] * (90.0 - d3) * .011111111380159855;
 HEAPF32[i2 >> 2] = 0.0;
 mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i5 | 0, i7 | 0, 0, 0);
 +_VectorNormalize(i7);
 _VectorMA(i6, -1536.0, i7, i6);
 STACKTOP = i7;
 return;
}

function __ZN15CHudStatusIcons10EnableIconEPchhh(i8, i6, i7, i5, i4) {
 i8 = i8 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = 0;
 while (1) {
  if (!(_strcasecmp(i8 + 20 + (i1 * 48 | 0) | 0, i6 | 0) | 0)) break;
  i1 = i1 + 1 | 0;
  if ((i1 | 0) >= 4) {
   i2 = 4;
   break;
  }
 }
 L4 : do if ((i2 | 0) == 4) if ((i1 | 0) == 4) {
  i1 = 0;
  do {
   if (!(HEAP32[i8 + 20 + (i1 * 48 | 0) + 24 >> 2] | 0)) break L4;
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) < 4);
 } while (0);
 i1 = (i1 | 0) == 4 ? 0 : i1;
 i2 = __ZN4CHud14GetSpriteIndexEPKc(gb + 46040 | 0, i6) | 0;
 if ((i2 | 0) < 0) i3 = 0; else i3 = HEAP32[(HEAP32[gb + 46040 + 112 >> 2] | 0) + (i2 << 2) >> 2] | 0;
 HEAP32[i8 + 20 + (i1 * 48 | 0) + 24 >> 2] = i3;
 i3 = (HEAP32[gb + 46040 + 116 >> 2] | 0) + (i2 << 4) | 0;
 HEAP32[i8 + 20 + (i1 * 48 | 0) + 28 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 + 20 + (i1 * 48 | 0) + 28 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
 HEAP32[i8 + 20 + (i1 * 48 | 0) + 28 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
 HEAP32[i8 + 20 + (i1 * 48 | 0) + 28 + 12 >> 2] = HEAP32[i3 + 12 >> 2];
 HEAP8[i8 + 20 + (i1 * 48 | 0) + 44 >> 0] = i7;
 HEAP8[i8 + 20 + (i1 * 48 | 0) + 45 >> 0] = i5;
 HEAP8[i8 + 20 + (i1 * 48 | 0) + 46 >> 0] = i4;
 _strcpy(i8 + 20 + (i1 * 48 | 0) | 0, i6 | 0) | 0;
 if (_strstr(i8 + 20 + (i1 * 48 | 0) | 0, gb + 43469 | 0) | 0) {
  i8 = mftCall_i(HEAP32[gb + 92340 + 204 >> 2] | 0) | 0;
  mftCall_viiiiddii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0, HEAP32[i8 >> 2] | 0, i8 + 2888 | 0, 6, gb + 43477 | 0, 1.0, .800000011920929, 0, 100);
 }
 return;
}

function __Z24V_CalcIntermissionRefdefP12ref_params_s(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 mftCall_i(HEAP32[gb + 92340 + 204 >> 2] | 0) | 0;
 i1 = mftCall_i(HEAP32[gb + 92340 + 208 >> 2] | 0) | 0;
 HEAP32[i2 >> 2] = HEAP32[i2 + 100 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i2 + 100 + 4 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i2 + 100 + 8 >> 2];
 HEAP32[i2 + 12 >> 2] = HEAP32[i2 + 128 >> 2];
 HEAP32[i2 + 12 + 4 >> 2] = HEAP32[i2 + 128 + 4 >> 2];
 HEAP32[i2 + 12 + 8 >> 2] = HEAP32[i2 + 128 + 8 >> 2];
 HEAP32[i1 + 2964 >> 2] = 0;
 i1 = HEAP32[gb + 116356 >> 2] | 0;
 HEAPF32[gb + 116356 >> 2] = 1.0;
 __Z9V_AddIdleP12ref_params_s(i2);
 if (mftCall_i(HEAP32[gb + 92340 + 352 >> 2] | 0) | 0) {
  HEAP32[i2 >> 2] = HEAP32[gb + 46040 + 4288 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[gb + 46040 + 4292 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[gb + 46040 + 4296 >> 2];
  HEAP32[i2 + 12 >> 2] = HEAP32[gb + 46040 + 4300 >> 2];
  HEAP32[i2 + 12 + 4 >> 2] = HEAP32[gb + 46040 + 4304 >> 2];
  HEAP32[i2 + 12 + 8 >> 2] = HEAP32[gb + 46040 + 4308 >> 2];
 }
 HEAP32[gb + 116356 >> 2] = i1;
 HEAP32[gb + 116260 >> 2] = HEAP32[i2 + 128 >> 2];
 HEAP32[gb + 116260 + 4 >> 2] = HEAP32[i2 + 128 + 4 >> 2];
 HEAP32[gb + 116260 + 8 >> 2] = HEAP32[i2 + 128 + 8 >> 2];
 HEAP32[gb + 116236 >> 2] = HEAP32[i2 >> 2];
 HEAP32[gb + 116236 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
 HEAP32[gb + 116236 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 HEAP32[gb + 116248 >> 2] = HEAP32[i2 + 12 >> 2];
 HEAP32[gb + 116248 + 4 >> 2] = HEAP32[i2 + 12 + 4 >> 2];
 HEAP32[gb + 116248 + 8 >> 2] = HEAP32[i2 + 12 + 8 >> 2];
 return;
}

function __Z15Game_HookEventsv() {
 mftCall_vii(HEAP32[gb + 92340 + 276 >> 2] | 0, gb + 39564 | 0, fb + 208 | 0);
 mftCall_vii(HEAP32[gb + 92340 + 276 >> 2] | 0, gb + 39581 | 0, fb + 209 | 0);
 mftCall_vii(HEAP32[gb + 92340 + 276 >> 2] | 0, gb + 39198 | 0, fb + 210 | 0);
 mftCall_vii(HEAP32[gb + 92340 + 276 >> 2] | 0, gb + 39217 | 0, fb + 211 | 0);
 mftCall_vii(HEAP32[gb + 92340 + 276 >> 2] | 0, gb + 38418 | 0, fb + 212 | 0);
 mftCall_vii(HEAP32[gb + 92340 + 276 >> 2] | 0, gb + 38432 | 0, fb + 213 | 0);
 mftCall_vii(HEAP32[gb + 92340 + 276 >> 2] | 0, gb + 38674 | 0, fb + 214 | 0);
 mftCall_vii(HEAP32[gb + 92340 + 276 >> 2] | 0, gb + 38002 | 0, fb + 215 | 0);
 mftCall_vii(HEAP32[gb + 92340 + 276 >> 2] | 0, gb + 38018 | 0, fb + 216 | 0);
 mftCall_vii(HEAP32[gb + 92340 + 276 >> 2] | 0, gb + 38038 | 0, fb + 217 | 0);
 mftCall_vii(HEAP32[gb + 92340 + 276 >> 2] | 0, gb + 38054 | 0, fb + 218 | 0);
 mftCall_vii(HEAP32[gb + 92340 + 276 >> 2] | 0, gb + 38072 | 0, fb + 219 | 0);
 mftCall_vii(HEAP32[gb + 92340 + 276 >> 2] | 0, gb + 38092 | 0, fb + 220 | 0);
 mftCall_vii(HEAP32[gb + 92340 + 276 >> 2] | 0, gb + 38796 | 0, fb + 221 | 0);
 mftCall_vii(HEAP32[gb + 92340 + 276 >> 2] | 0, gb + 38112 | 0, fb + 222 | 0);
 mftCall_vii(HEAP32[gb + 92340 + 276 >> 2] | 0, gb + 38132 | 0, fb + 223 | 0);
 mftCall_vii(HEAP32[gb + 92340 + 276 >> 2] | 0, gb + 38218 | 0, fb + 224 | 0);
 mftCall_vii(HEAP32[gb + 92340 + 276 >> 2] | 0, gb + 39391 | 0, fb + 225 | 0);
 mftCall_vii(HEAP32[gb + 92340 + 276 >> 2] | 0, gb + 39352 | 0, fb + 226 | 0);
 return;
}

function __ZN11CHudSayText12SayTextPrintEPKcii(i9, i8, i7, i6) {
 i9 = i9 | 0;
 i8 = i8 | 0;
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 mftCall_vi(HEAP32[gb + 92340 + 120 >> 2] | 0, i8 | 0);
 i1 = 0;
 while (1) {
  if (!(HEAP8[gb + 129049 + (i1 << 8) >> 0] | 0)) break;
  i1 = i1 + 1 | 0;
  if ((i1 | 0) >= 5) {
   i2 = 4;
   break;
  }
 }
 if ((i2 | 0) == 4) if ((i1 | 0) == 5) {
  __Z12ScrollTextUpv() | 0;
  i1 = 4;
 }
 i3 = gb + 94404 + (i1 << 2) | 0;
 HEAP32[i3 >> 2] = 0;
 i4 = gb + 94380 + (i1 << 2) | 0;
 HEAP32[i4 >> 2] = 0;
 if ((i6 | 0) > 0 & (HEAP8[i8 >> 0] | 0) == 2) {
  i2 = gb + 54736 + (i6 << 5) | 0;
  mftCall_vii(HEAP32[gb + 92340 + 84 >> 2] | 0, i6 | 0, i2 | 0);
  i2 = HEAP32[i2 >> 2] | 0;
  if (i2 | 0) {
   i5 = _strstr(i8 | 0, i2 | 0) | 0;
   if (i5 | 0) {
    HEAP32[i3 >> 2] = i5 - i8 + (_strlen(i2 | 0) | 0);
    HEAP32[i4 >> 2] = __Z14GetClientColori(i6) | 0;
   }
  }
 }
 _strncpy(gb + 129049 + (i1 << 8) | 0, i8 | 0, ((i7 + -1 | 0) > 255 ? i7 + -1 | 0 : 255) | 0) | 0;
 __ZN11CHudSayText38EnsureTextFitsInOneLineAndWrapIfHaveToEi(i9, i1);
 if (!i1) HEAPF32[gb + 94432 >> 2] = +HEAPF32[gb + 46040 + 36 >> 2] + +HEAPF32[(HEAP32[i9 + 24 >> 2] | 0) + 12 >> 2];
 HEAP32[i9 + 16 >> 2] = HEAP32[i9 + 16 >> 2] | 1;
 mftCall_vid(HEAP32[gb + 92340 + 88 >> 2] | 0, gb + 43430 | 0, 1.0);
 i9 = HEAP32[gb + 46040 + 8116 >> 2] | 0;
 i9 = ((i9 | 0) > 479 ? -60 : -45) + i9 + (Math_imul(HEAP32[gb + 94436 >> 2] | 0, -6) | 0) | 0;
 HEAP32[gb + 94428 >> 2] = i9;
 return;
}

function _PM_CheckVelocity() {
 var i1 = 0, i2 = 0, d3 = 0.0, d4 = 0.0, i5 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 i5 = 0;
 do {
  i2 = HEAP32[gb + 36520 >> 2] | 0;
  if ((i2 & HEAP32[i1 + 92 + (i5 << 2) >> 2] | 0) == (i2 | 0)) {
   i1 = HEAP32[i1 + 324968 >> 2] | 0;
   HEAP32[i6 >> 2] = i5;
   mftCall_vii(i1 | 0, gb + 45771 | 0, i6 | 0);
   i1 = HEAP32[gb + 121136 >> 2] | 0;
   HEAPF32[i1 + 92 + (i5 << 2) >> 2] = 0.0;
   i2 = HEAP32[gb + 36520 >> 2] | 0;
  }
  if ((HEAP32[i1 + 56 + (i5 << 2) >> 2] & i2 | 0) == (i2 | 0)) {
   i1 = HEAP32[i1 + 324968 >> 2] | 0;
   HEAP32[i6 + 8 >> 2] = i5;
   mftCall_vii(i1 | 0, gb + 45798 | 0, i6 + 8 | 0);
   i1 = HEAP32[gb + 121136 >> 2] | 0;
   HEAPF32[i1 + 56 + (i5 << 2) >> 2] = 0.0;
  }
  d3 = +HEAPF32[i1 + 92 + (i5 << 2) >> 2];
  d4 = +HEAPF32[(HEAP32[i1 + 324848 >> 2] | 0) + 52 >> 2];
  if (d3 > d4) {
   i1 = HEAP32[i1 + 324964 >> 2] | 0;
   HEAP32[i6 + 16 >> 2] = i5;
   mftCall_vii(i1 | 0, gb + 45826 | 0, i6 + 16 | 0);
   i1 = HEAP32[gb + 121136 >> 2] | 0;
   HEAP32[i1 + 92 + (i5 << 2) >> 2] = HEAP32[(HEAP32[i1 + 324848 >> 2] | 0) + 52 >> 2];
  } else if (d3 < -d4) {
   i1 = HEAP32[i1 + 324964 >> 2] | 0;
   HEAP32[i6 + 24 >> 2] = i5;
   mftCall_vii(i1 | 0, gb + 45861 | 0, i6 + 24 | 0);
   i1 = HEAP32[gb + 121136 >> 2] | 0;
   HEAPF32[i1 + 92 + (i5 << 2) >> 2] = -+HEAPF32[(HEAP32[i1 + 324848 >> 2] | 0) + 52 >> 2];
  }
  i5 = i5 + 1 | 0;
 } while ((i5 | 0) != 3);
 STACKTOP = i6;
 return;
}

function __ZN20CStudioModelRenderer26StudioRenderFinal_HardwareEv(i4) {
 i4 = i4 | 0;
 var d1 = 0.0, i2 = 0, i3 = 0;
 if (!(mftCall_i(HEAP32[gb + 94440 + 132 >> 2] | 0) | 0)) i3 = HEAP32[(HEAP32[i4 + 48 >> 2] | 0) + 760 >> 2] | 0; else i3 = 5;
 mftCall_vi(HEAP32[gb + 94440 + 148 >> 2] | 0, i3 | 0);
 d1 = +HEAPF32[(HEAP32[i4 + 44 >> 2] | 0) + 12 >> 2];
 do if (d1 == 2.0) mftCall_v(HEAP32[gb + 94440 + 112 >> 2] | 0); else {
  if (d1 == 3.0) {
   mftCall_v(HEAP32[gb + 94440 + 104 >> 2] | 0);
   break;
  }
  if ((HEAP32[(HEAP32[i4 + 68 >> 2] | 0) + 204 >> 2] | 0) > 0) {
   i2 = 0;
   do {
    mftCall_viii(HEAP32[gb + 94440 + 80 >> 2] | 0, i2 | 0, i4 + 72 | 0, i4 + 76 | 0);
    if (HEAP32[i4 + 24 >> 2] | 0) HEAP32[(HEAP32[i4 + 48 >> 2] | 0) + 2960 >> 2] = 0;
    mftCall_vi(HEAP32[gb + 94440 + 168 >> 2] | 0, i3 | 0);
    mftCall_v(HEAP32[gb + 94440 + 100 >> 2] | 0);
    mftCall_v(HEAP32[gb + 94440 + 164 >> 2] | 0);
    i2 = i2 + 1 | 0;
   } while ((i2 | 0) < (HEAP32[(HEAP32[i4 + 68 >> 2] | 0) + 204 >> 2] | 0));
  }
 } while (0);
 d1 = +HEAPF32[(HEAP32[i4 + 44 >> 2] | 0) + 12 >> 2];
 if (d1 == 4.0) {
  mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 4 >> 2] | 0, 5);
  mftCall_v(HEAP32[gb + 94440 + 104 >> 2] | 0);
  mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 4 >> 2] | 0, 0);
  d1 = +HEAPF32[(HEAP32[i4 + 44 >> 2] | 0) + 12 >> 2];
 }
 if (d1 == 5.0) mftCall_v(HEAP32[gb + 94440 + 108 >> 2] | 0);
 mftCall_v(HEAP32[gb + 94440 + 152 >> 2] | 0);
 return;
}

function __ZN4CHud6RedrawEfi(i6, d5, i4) {
 i6 = i6 | 0;
 d5 = +d5;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, d7 = 0.0;
 i3 = HEAP32[i6 + 36 >> 2] | 0;
 HEAP32[i6 + 40 >> 2] = i3;
 HEAPF32[i6 + 36 >> 2] = d5;
 d7 = d5 - (HEAP32[tempDoublePtr >> 2] = i3, +HEAPF32[tempDoublePtr >> 2]);
 HEAPF64[i6 + 48 >> 3] = d7 < 0.0 ? 0.0 : d7;
 HEAP32[i6 + 8648 >> 2] = i4;
 if (+HEAPF32[(HEAP32[i6 + 104 >> 2] | 0) + 12 >> 2] != 0.0) {
  i1 = HEAP32[i6 >> 2] | 0;
  if (i1 | 0) do {
   i2 = HEAP32[i1 >> 2] | 0;
   i3 = HEAP32[i2 + 16 >> 2] | 0;
   if (!i4) {
    if (i3 & 1 | 0) if (!(HEAP32[i6 + 84 >> 2] & 4)) mftCall_iid(HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] | 0, i2 | 0, +d5) | 0;
   } else if (i3 & 2 | 0) mftCall_iid(HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] | 0, i2 | 0, +d5) | 0;
   i1 = HEAP32[i1 + 4 >> 2] | 0;
  } while ((i1 | 0) != 0);
 }
 if (HEAP32[i6 + 8 >> 2] | 0) {
  i1 = HEAP32[i6 + 4 >> 2] | 0;
  if (!i1) {
   i1 = __Z10LoadSpritePKc(gb + 40977 | 0) | 0;
   HEAP32[i6 + 4 >> 2] = i1;
  }
  mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, i1 | 0, 250, 250, 250);
  i4 = mftCall_iii(HEAP32[gb + 92340 + 12 >> 2] | 0, HEAP32[i6 + 4 >> 2] | 0, 0) | 0;
  i4 = (HEAP32[gb + 46040 + 8112 >> 2] | 0) - i4 | 0;
  i6 = (mftCall_iii(HEAP32[gb + 92340 + 8 >> 2] | 0, HEAP32[i6 + 4 >> 2] | 0, 0) | 0) / 2 | 0;
  mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, (HEAP32[gb + 35340 + (((~~(d5 * 20.0) | 0) % 56 | 0) << 2) >> 2] | 0) + -1 | 0, i4 | 0, i6 | 0, 0);
 }
 return 1;
}

function __Z18UTIL_ParticleBoxesv() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, d5 = 0.0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 40 >> 2] | 0, 0, 1);
 mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 44 >> 2] | 0);
 i3 = mftCall_i(HEAP32[gb + 92340 + 204 >> 2] | 0) | 0;
 mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 52 >> 2] | 0, (HEAP32[i3 >> 2] | 0) + -1 | 0);
 i3 = 1;
 do {
  i2 = mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
  if (!i2) break;
  i1 = HEAP32[i2 + 80 >> 2] | 0;
  if ((i1 | 0) > 0) if ((i1 | 0) <= (mftCall_i(HEAP32[gb + 92340 + 144 >> 2] | 0) | 0)) {
   d7 = +HEAPF32[i2 + 36 >> 2];
   d6 = +HEAPF32[i2 + 40 >> 2];
   d9 = d6 + +HEAPF32[i2 + 60 >> 2];
   d5 = +HEAPF32[i2 + 44 >> 2];
   d8 = d5 + +HEAPF32[i2 + 64 >> 2];
   HEAPF32[i4 + 12 >> 2] = d7 + +HEAPF32[i2 + 56 >> 2];
   HEAPF32[i4 + 12 + 4 >> 2] = d9;
   HEAPF32[i4 + 12 + 8 >> 2] = d8;
   d6 = d6 + +HEAPF32[i2 + 72 >> 2];
   d5 = d5 + +HEAPF32[i2 + 76 >> 2];
   HEAPF32[i4 >> 2] = d7 + +HEAPF32[i2 + 68 >> 2];
   HEAPF32[i4 + 4 >> 2] = d6;
   HEAPF32[i4 + 8 >> 2] = d5;
   mftCall_viiiiid(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 80 >> 2] | 0, i4 + 12 | 0, i4 | 0, 0, 0, -1, 2.0);
  }
  i3 = i3 + 1 | 0;
 } while ((i3 | 0) < 100);
 mftCall_v(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 48 >> 2] | 0);
 STACKTOP = i4;
 return;
}

function __Z20FindHullIntersectionRK6VectorR11TraceResultPfS4_P7edict_s(i11, i10, i3, i2, i4) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var d1 = 0.0, d5 = 0.0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, d12 = 0.0, d13 = 0.0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 __Z14UTIL_TraceLineRK6VectorS1_15IGNORE_MONSTERSP7edict_sP11TraceResult(0, 0, 0, 0, i9);
 if (+HEAPF32[i9 + 16 >> 2] < 1.0) {
  i2 = i10;
  i3 = i9;
  i4 = i2 + 56 | 0;
  do {
   HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
   i2 = i2 + 4 | 0;
   i3 = i3 + 4 | 0;
  } while ((i2 | 0) < (i4 | 0));
 } else {
  d1 = 1.0e6;
  i8 = 0;
  do {
   i7 = 0;
   do {
    i6 = 0;
    do {
     __Z14UTIL_TraceLineRK6VectorS1_15IGNORE_MONSTERSP7edict_sP11TraceResult(0, 0, 0, 0, i9);
     if (+HEAPF32[i9 + 16 >> 2] < 1.0) {
      d13 = +HEAPF32[i9 + 20 >> 2] - +HEAPF32[i11 >> 2];
      d12 = +HEAPF32[i9 + 24 >> 2] - +HEAPF32[i11 + 4 >> 2];
      d5 = +HEAPF32[i9 + 28 >> 2] - +HEAPF32[i11 + 8 >> 2];
      d5 = +Math_sqrt(+(d13 * d13 + d12 * d12 + d5 * d5));
      if (d5 < d1) {
       i2 = i10;
       i3 = i9;
       i4 = i2 + 56 | 0;
       do {
        HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
        i2 = i2 + 4 | 0;
        i3 = i3 + 4 | 0;
       } while ((i2 | 0) < (i4 | 0));
       d1 = d5;
      }
     }
     i6 = i6 + 1 | 0;
    } while ((i6 | 0) != 2);
    i7 = i7 + 1 | 0;
   } while ((i7 | 0) != 2);
   i8 = i8 + 1 | 0;
  } while ((i8 | 0) != 2);
 }
 STACKTOP = i9;
 return;
}

function __Z22EV_GetDefaultShellInfoP12event_args_sPfS1_S1_S1_S1_S1_S1_fff(i2, i9, i14, i6, i5, i7, i10, i12, d8, d13, d11) {
 i2 = i2 | 0;
 i9 = i9 | 0;
 i14 = i14 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 i10 = i10 | 0;
 i12 = i12 | 0;
 d8 = +d8;
 d13 = +d13;
 d11 = +d11;
 var i1 = 0, d3 = 0.0, d4 = 0.0, i15 = 0, i16 = 0, i17 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 HEAPF32[i15 >> 2] = 0.0;
 HEAPF32[i15 + 4 >> 2] = 0.0;
 HEAPF32[i15 + 8 >> 2] = 28.0;
 do if ((i1 | 0) > 0) if ((mftCall_i(HEAP32[gb + 92340 + 144 >> 2] | 0) | 0) >= (i1 | 0)) {
  if (__Z10EV_IsLocali(i1) | 0) {
   mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 24 >> 2] | 0, i15 | 0);
   break;
  }
  if ((HEAP32[i2 + 44 >> 2] | 0) == 1) HEAPF32[i15 + 8 >> 2] = 12.0;
 } while (0);
 d3 = +mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, 50.0, 70.0);
 d4 = +mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, 100.0, 150.0);
 i1 = 0;
 do {
  i2 = i10 + (i1 << 2) | 0;
  i17 = i12 + (i1 << 2) | 0;
  i16 = i7 + (i1 << 2) | 0;
  HEAPF32[i6 + (i1 << 2) >> 2] = +HEAPF32[i14 + (i1 << 2) >> 2] + d3 * +HEAPF32[i2 >> 2] + d4 * +HEAPF32[i17 >> 2] + +HEAPF32[i16 >> 2] * 25.0;
  HEAPF32[i5 + (i1 << 2) >> 2] = +HEAPF32[i9 + (i1 << 2) >> 2] + +HEAPF32[i15 + (i1 << 2) >> 2] + +HEAPF32[i17 >> 2] * d13 + +HEAPF32[i16 >> 2] * d8 + +HEAPF32[i2 >> 2] * d11;
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != 3);
 STACKTOP = i15;
 return;
}

function __ZN10CHudGeiger4DrawEf(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 var i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 i2 = HEAP32[i2 + 20 >> 2] | 0;
 do if ((i2 + -1 | 0) >>> 0 < 999) {
  if ((i2 | 0) > 800) {
   d1 = 0.0;
   i3 = 0;
   i2 = 0;
  } else if ((i2 | 0) > 600) {
   d1 = .4000000059604645;
   i3 = 2;
   i2 = 2;
  } else if ((i2 | 0) > 500) {
   d1 = .5;
   i3 = 2;
   i2 = 4;
  } else if ((i2 | 0) > 400) {
   d1 = .6000000238418579;
   i3 = 3;
   i2 = 8;
  } else if ((i2 | 0) > 300) {
   d1 = .699999988079071;
   i3 = 3;
   i2 = 8;
  } else if ((i2 | 0) > 200) {
   d1 = .7799999713897705;
   i3 = 3;
   i2 = 28;
  } else if ((i2 | 0) > 150) {
   d1 = .800000011920929;
   i3 = 3;
   i2 = 40;
  } else if ((i2 | 0) > 100) {
   d1 = .8500000238418579;
   i3 = 3;
   i2 = 60;
  } else if ((i2 | 0) > 75) {
   d1 = .8999999761581421;
   i3 = 3;
   i2 = 80;
  } else {
   d1 = (i2 | 0) > 50 ? .949999988079071 : 1.0;
   i3 = 2;
   i2 = (i2 | 0) > 50 ? 90 : 95;
  }
  d1 = d1 * +((_rand() | 0) & 127 | 0) * .003921568859368563 + .25;
  if (((_rand() | 0) & 127) >>> 0 >= i2 >>> 0) if (((_rand() | 0) & 127) >>> 0 >= i2 >>> 0) break;
  i2 = (_rand() | 0) & 1;
  if ((i3 | 0) > 2) i2 = ((_rand() | 0) & 1) + i2 | 0;
  HEAP32[i4 >> 2] = i2 + 1;
  _sprintf(i4 + 8 | 0, gb + 40504 | 0, i4 | 0) | 0;
  mftCall_vid(HEAP32[gb + 92340 + 88 >> 2] | 0, i4 + 8 | 0, +d1);
 } while (0);
 STACKTOP = i4;
 return 1;
}

function __ZN6CGauss10WeaponIdleEv(i2) {
 i2 = i2 | 0;
 var d1 = 0.0;
 mftCall_vi(HEAP32[(HEAP32[i2 >> 2] | 0) + 320 >> 2] | 0, i2 | 0);
 d1 = +HEAPF32[(HEAP32[i2 + 128 >> 2] | 0) + 1588 >> 2];
 if (d1 != 0.0) if (d1 < +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2]) {
  switch (mftCall_iii(HEAP32[gb + 56972 + 360 >> 2] | 0, 0, 3) | 0) {
  case 0:
   {
    +mftCall_ddd(HEAP32[gb + 56972 + 364 >> 2] | 0, .699999988079071, .800000011920929);
    break;
   }
  case 1:
   {
    +mftCall_ddd(HEAP32[gb + 56972 + 364 >> 2] | 0, .699999988079071, .800000011920929);
    break;
   }
  case 2:
   {
    +mftCall_ddd(HEAP32[gb + 56972 + 364 >> 2] | 0, .699999988079071, .800000011920929);
    break;
   }
  default:
   {}
  }
  HEAPF32[(HEAP32[i2 + 128 >> 2] | 0) + 1588 >> 2] = 0.0;
 }
 do if (!(+HEAPF32[i2 + 164 >> 2] > 0.0)) {
  if (HEAP32[i2 + 92 >> 2] | 0) {
   __ZN6CGauss9StartFireEv(i2);
   HEAP32[i2 + 92 >> 2] = 0;
   HEAPF32[i2 + 164 >> 2] = 2.0;
   break;
  }
  d1 = +mftCall_ddd(HEAP32[gb + 56972 + 364 >> 2] | 0, 0.0, 1.0);
  if (d1 <= .5) {
   HEAPF32[i2 + 164 >> 2] = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i2 + 128 >> 2] | 0) + 680 >> 2] | 0, 10.0, 15.0);
   break;
  }
  if (!(d1 <= .75)) {
   HEAPF32[i2 + 164 >> 2] = 3.0;
   break;
  } else {
   HEAPF32[i2 + 164 >> 2] = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i2 + 128 >> 2] | 0) + 680 >> 2] | 0, 10.0, 15.0);
   break;
  }
 } while (0);
 return;
}

function __ZN13CHudSpectator25SetSpectatorStartPositionEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 do if (!(__Z20UTIL_FindEntityInMapPcPfS0_(gb + 41112 | 0, i1 + 3864 | 0, i1 + 3876 | 0) | 0)) {
  if (__Z20UTIL_FindEntityInMapPcPfS0_(gb + 41127 | 0, i1 + 3864 | 0, i1 + 3876 | 0) | 0) {
   HEAP32[gb + 121144 >> 2] = 1;
   break;
  }
  if (__Z20UTIL_FindEntityInMapPcPfS0_(gb + 41145 | 0, i1 + 3864 | 0, i1 + 3876 | 0) | 0) {
   HEAP32[gb + 121144 >> 2] = 1;
   break;
  }
  if (!(__Z20UTIL_FindEntityInMapPcPfS0_(gb + 41168 | 0, i1 + 3864 | 0, i1 + 3876 | 0) | 0)) {
   i4 = HEAP32[gb + 121124 >> 2] | 0;
   HEAP32[i1 + 3864 >> 2] = i4;
   i3 = HEAP32[gb + 121124 + 4 >> 2] | 0;
   HEAP32[i1 + 3864 + 4 >> 2] = i3;
   i2 = HEAP32[gb + 121124 + 8 >> 2] | 0;
   HEAP32[i1 + 3864 + 8 >> 2] = i2;
   HEAP32[i1 + 3876 >> 2] = i4;
   HEAP32[i1 + 3876 + 4 >> 2] = i3;
   HEAP32[i1 + 3876 + 8 >> 2] = i2;
   break;
  } else {
   HEAP32[gb + 121144 >> 2] = 1;
   break;
  }
 } else HEAP32[gb + 121144 >> 2] = 1; while (0);
 HEAP32[gb + 116212 >> 2] = HEAP32[i1 + 3864 >> 2];
 HEAP32[gb + 116212 + 4 >> 2] = HEAP32[i1 + 3864 + 4 >> 2];
 HEAP32[gb + 116212 + 8 >> 2] = HEAP32[i1 + 3864 + 8 >> 2];
 HEAP32[gb + 116224 >> 2] = HEAP32[i1 + 3876 >> 2];
 HEAP32[gb + 116224 + 4 >> 2] = HEAP32[i1 + 3876 + 4 >> 2];
 HEAP32[gb + 116224 + 8 >> 2] = HEAP32[i1 + 3876 + 8 >> 2];
 HEAP32[gb + 121144 >> 2] = 1;
 return;
}

function _PM_AirMove() {
 var d1 = 0.0, d2 = 0.0, i3 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = HEAP32[gb + 121136 >> 2] | 0;
 d1 = +HEAPF32[i3 + 283752 >> 2];
 d2 = +HEAPF32[i3 + 283756 >> 2];
 HEAPF32[i3 + 28 >> 2] = 0.0;
 HEAPF32[i3 + 40 >> 2] = 0.0;
 +_VectorNormalize(i3 + 20 | 0);
 +_VectorNormalize((HEAP32[gb + 121136 >> 2] | 0) + 32 | 0);
 i3 = HEAP32[gb + 121136 >> 2] | 0;
 i4 = 0;
 do {
  HEAPF32[i5 + 12 + (i4 << 2) >> 2] = d1 * +HEAPF32[i3 + 20 + (i4 << 2) >> 2] + d2 * +HEAPF32[i3 + 32 + (i4 << 2) >> 2];
  i4 = i4 + 1 | 0;
 } while ((i4 | 0) != 2);
 HEAPF32[i5 + 12 + 8 >> 2] = 0.0;
 HEAP32[i5 >> 2] = HEAP32[i5 + 12 >> 2];
 HEAP32[i5 + 4 >> 2] = HEAP32[i5 + 12 + 4 >> 2];
 HEAP32[i5 + 8 >> 2] = 0;
 d1 = +_VectorNormalize(i5);
 i3 = HEAP32[gb + 121136 >> 2] | 0;
 d2 = +HEAPF32[i3 + 500 >> 2];
 if (d1 > d2) {
  _VectorScale(i5 + 12 | 0, d2 / d1, i5 + 12 | 0);
  i4 = HEAP32[gb + 121136 >> 2] | 0;
  i3 = i4;
  d1 = +HEAPF32[i4 + 500 >> 2];
 }
 _PM_AirAccelerate(i5, d1, +HEAPF32[(HEAP32[i3 + 324848 >> 2] | 0) + 20 >> 2]);
 i4 = HEAP32[gb + 121136 >> 2] | 0;
 HEAPF32[i4 + 92 >> 2] = +HEAPF32[i4 + 92 >> 2] + +HEAPF32[i4 + 116 >> 2];
 HEAPF32[i4 + 96 >> 2] = +HEAPF32[i4 + 96 >> 2] + +HEAPF32[i4 + 120 >> 2];
 HEAPF32[i4 + 100 >> 2] = +HEAPF32[i4 + 100 >> 2] + +HEAPF32[i4 + 124 >> 2];
 _PM_FlyMove() | 0;
 STACKTOP = i5;
 return;
}

function __ZN8CHudMenu16MsgFunc_ShowMenuEPKciPv(i5, i1, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var d2 = 0.0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[i6 >> 2] = 0;
 __Z10BEGIN_READPvi(i4, i3);
 HEAP32[i5 + 24 >> 2] = __Z10READ_SHORTv() | 0;
 i1 = __Z9READ_CHARv() | 0;
 i3 = __Z9READ_BYTEv() | 0;
 if ((i1 | 0) > 0) d2 = +(i1 | 0) + +HEAPF32[gb + 46040 + 36 >> 2]; else d2 = -1.0;
 HEAPF32[i5 + 28 >> 2] = d2;
 if (!(HEAP32[i5 + 24 >> 2] | 0)) {
  HEAP32[i5 + 20 >> 2] = 0;
  HEAP32[i5 + 16 >> 2] = HEAP32[i5 + 16 >> 2] & -2;
  i1 = i5 + 32 | 0;
 } else {
  i4 = (HEAP32[i5 + 32 >> 2] | 0) == 0;
  __Z11READ_STRINGv() | 0;
  if (i4) _strncpy(gb + 125465 | 0, gb + 127001 | 0, 512) | 0; else {
   i4 = 512 - (_strlen(gb + 125465 | 0) | 0) | 0;
   _strncat(gb + 125465 | 0, gb + 127001 | 0, i4 | 0) | 0;
  }
  HEAP8[gb + 125465 + 511 >> 0] = 0;
  if (!i3) {
   __ZN15CHudTextMessage26BufferedLocaliseTextStringEPKc(gb + 125465 | 0) | 0;
   _strcpy(gb + 124953 | 0, gb + 131672 | 0) | 0;
   if (__Z16KB_ConvertStringPcPS_(gb + 124953 | 0, i6) | 0) {
    _strcpy(gb + 124953 | 0, HEAP32[i6 >> 2] | 0) | 0;
    _free(HEAP32[i6 >> 2] | 0);
   }
  }
  HEAP32[i5 + 20 >> 2] = 1;
  HEAP32[i5 + 16 >> 2] = HEAP32[i5 + 16 >> 2] | 1;
  i1 = i5 + 32 | 0;
 }
 HEAP32[i1 >> 2] = i3;
 STACKTOP = i6;
 return 1;
}

function __ZN8CHudAmmo5ThinkEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!(HEAP32[gb + 46040 + 8644 >> 2] | 0)) {
  i1 = HEAP32[gb + 46040 + 8640 >> 2] | 0;
  if ((i1 | 0) != (HEAP32[gb + 81328 + 10768 >> 2] | 0)) {
   HEAP32[gb + 81328 + 10768 >> 2] = i1;
   i4 = 31;
   while (1) {
    i2 = gb + 81328 + (i4 * 328 | 0) | 0;
    do if (i2 | 0) {
     i3 = gb + 81328 + 10496 + ((HEAP32[gb + 81328 + (i4 * 328 | 0) + 144 >> 2] | 0) * 24 | 0) + (HEAP32[gb + 81328 + (i4 * 328 | 0) + 148 >> 2] << 2) | 0;
     if (!(1 << HEAP32[gb + 81328 + (i4 * 328 | 0) + 156 >> 2] & i1)) {
      HEAP32[i3 >> 2] = 0;
      break;
     } else {
      HEAP32[i3 >> 2] = i2;
      break;
     }
    } while (0);
    if ((i4 | 0) > 1) i4 = i4 + -1 | 0; else break;
   }
  }
  i2 = HEAP32[gb + 81320 >> 2] | 0;
  if (i2 | 0) {
   i1 = HEAP32[gb + 46040 + 80 >> 2] | 0;
   if (i1 & 1 | 0) {
    if ((i2 | 0) == 1) i2 = 1; else {
     mftCall_ii(HEAP32[gb + 92340 + 76 >> 2] | 0, i2 | 0) | 0;
     i2 = HEAP32[gb + 81320 >> 2] | 0;
     HEAP32[gb + 92100 >> 2] = HEAP32[i2 + 156 >> 2];
     i1 = HEAP32[gb + 46040 + 80 >> 2] | 0;
    }
    HEAP32[gb + 81324 >> 2] = i2;
    HEAP32[gb + 81320 >> 2] = 0;
    HEAP32[gb + 46040 + 80 >> 2] = i1 & -2;
    mftCall_vid(HEAP32[gb + 92340 + 88 >> 2] | 0, gb + 39658 | 0, 1.0);
   }
  }
 }
 return;
}

function __ZN8CCrowbar5SwingEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i4 = HEAP32[i2 + 128 >> 2] | 0;
 mftCall_vii(HEAP32[(HEAP32[i4 >> 2] | 0) + 476 >> 2] | 0, i3 | 0, i4 | 0);
 __Z14UTIL_TraceLineRK6VectorS1_15IGNORE_MONSTERSP7edict_sP11TraceResult(0, 0, 0, 0, i3 + 16 | 0);
 mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 1, HEAP32[(HEAP32[(HEAP32[i2 + 128 >> 2] | 0) + 4 >> 2] | 0) + 520 >> 2] | 0, HEAP16[i2 + 256 >> 1] | 0, 0.0, gb + 56956 | 0, gb + 56956 | 0, 0.0, 0.0, 0, 0, 0, 0);
 if (!(+HEAPF32[i3 + 16 + 16 >> 2] >= 1.0)) {
  i4 = HEAP32[i2 + 196 >> 2] | 0;
  HEAP32[i2 + 196 >> 2] = i4 + 1;
  switch ((i4 | 0) % 2 | 0 | 0) {
  case -1:
   {
    mftCall_viiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 324 >> 2] | 0, i2 | 0, 3, 1, 0);
    break;
   }
  case 0:
   {
    mftCall_viiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 324 >> 2] | 0, i2 | 0, 6, 1, 0);
    break;
   }
  case 1:
   {
    mftCall_viiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 324 >> 2] | 0, i2 | 0, 8, 1, 0);
    break;
   }
  default:
   {}
  }
  HEAPF32[i2 + 156 >> 2] = .25;
  HEAP32[i2 + 16 >> 2] = fb + 206;
  HEAP32[i2 + 20 >> 2] = 0;
  HEAPF32[(HEAP32[i2 + 4 >> 2] | 0) + 260 >> 2] = .20000000298023224;
 } else if (i1 | 0) HEAPF32[i2 + 156 >> 2] = .5;
 STACKTOP = i3;
 return 0;
}

function __Z26V_GetDirectedChasePositionP11cl_entity_sS0_PfS1_(i2, i3, i1, i4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, d8 = 0.0, d9 = 0.0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (HEAP32[gb + 36084 >> 2] | 0) HEAPF32[gb + 116300 >> 2] = 4096.0;
 do if ((i3 | 0) == (-1 | 0)) i6 = 6; else {
  i5 = (HEAP32[i2 + 4 >> 2] | 0) == 0;
  if (!i5) if (!(HEAP16[i2 + 746 >> 1] | 0)) {
   i6 = 6;
   break;
  }
  if (!i3) {
   i3 = HEAP32[gb + 46040 + 4240 >> 2] | 0;
   d8 = i3 & 32 | 0 ? 96.0 : 128.0;
   d8 = (i3 & 512 | 0) == 0 ? d8 : d8 * 2.0;
   d9 = +HEAPF32[gb + 116300 >> 2] + +HEAPF32[gb + 116296 >> 2] * 32.0;
   HEAPF32[gb + 116300 >> 2] = d9;
   HEAP32[i7 >> 2] = HEAP32[i2 + 2888 >> 2];
   HEAP32[i7 + 4 >> 2] = HEAP32[i2 + 2888 + 4 >> 2];
   HEAPF32[i7 + 8 >> 2] = (i5 ? 8.0 : 17.0) + +HEAPF32[i2 + 2888 + 8 >> 2];
   __Z16V_GetChaseOriginPfS_fS_(i1, i7, d8 > d9 ? d9 : d8, i4);
   break;
  } else {
   __Z21V_GetDoubleTargetsCamP11cl_entity_sS0_PfS1_(i2, i3, i1, i4);
   break;
  }
 } while (0);
 if ((i6 | 0) == 6) __Z20V_GetSingleTargetCamP11cl_entity_sPfS1_(i2, i1, i4);
 HEAP32[gb + 116284 >> 2] = HEAP32[i1 >> 2];
 HEAP32[gb + 116284 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[gb + 116284 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 STACKTOP = i7;
 return;
}

function __Z16V_GetChaseOriginPfS_fS_(i1, i5, d2, i6) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 d2 = +d2;
 i6 = i6 | 0;
 var i3 = 0, i4 = 0, i7 = 0, i8 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i1 | 0, i7 + 12 | 0, 0, 0);
 _VectorScale(i7 + 12 | 0, -1.0, i7 + 12 | 0);
 HEAP32[i7 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i7 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
 HEAP32[i7 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
 _VectorMA(i7, d2, i7 + 12 | 0, i7 + 24 | 0);
 i1 = -1;
 i4 = 8;
 while (1) {
  i3 = mftCall_iiiiii(HEAP32[gb + 92340 + 236 >> 2] | 0, i7 | 0, i7 + 24 | 0, 0, 2, i1 | 0) | 0;
  i1 = HEAP32[i3 + 48 >> 2] | 0;
  if ((i1 | 0) < 1) break;
  i8 = HEAP32[gb + 92340 + 212 >> 2] | 0;
  i1 = mftCall_ii(i8 | 0, _PM_GetPhysEntInfo(i1) | 0) | 0;
  if (!i1) break;
  if ((HEAP16[i1 + 746 >> 1] | 0) == 4) if (!(HEAP32[i1 + 4 >> 2] | 0)) break;
  if (+_Distance(i3 + 20 | 0, i7 + 24 | 0) < 1.0) break;
  i1 = HEAP32[i3 + 48 >> 2] | 0;
  HEAP32[i7 >> 2] = HEAP32[i3 + 20 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i3 + 20 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i3 + 20 + 8 >> 2];
  if ((i4 | 0) <= 1) break; else i4 = i4 + -1 | 0;
 }
 _VectorMA(i3 + 20 | 0, 4.0, i3 + 32 | 0, i6);
 d2 = +_Distance(i3 + 20 | 0, i5);
 HEAPF32[gb + 116300 >> 2] = d2;
 STACKTOP = i7;
 return;
}

function __Z13V_GetInEyePosiPfS_(i2, i4, i3) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 var d1 = 0.0, i5 = 0;
 do if (!i2) {
  HEAP32[i3 >> 2] = HEAP32[gb + 116224 >> 2];
  HEAP32[i3 + 4 >> 2] = HEAP32[gb + 116224 + 4 >> 2];
  HEAP32[i3 + 8 >> 2] = HEAP32[gb + 116224 + 8 >> 2];
  HEAP32[i4 >> 2] = HEAP32[gb + 116212 >> 2];
  HEAP32[i4 + 4 >> 2] = HEAP32[gb + 116212 + 4 >> 2];
  HEAP32[i4 + 8 >> 2] = HEAP32[gb + 116212 + 8 >> 2];
 } else {
  i2 = mftCall_ii(HEAP32[gb + 92340 + 212 >> 2] | 0, i2 | 0) | 0;
  if (i2 | 0) {
   HEAP32[i4 >> 2] = HEAP32[i2 + 2888 >> 2];
   HEAP32[i4 + 4 >> 2] = HEAP32[i2 + 2888 + 4 >> 2];
   HEAP32[i4 + 8 >> 2] = HEAP32[i2 + 2888 + 8 >> 2];
   i5 = HEAP32[i2 + 2900 >> 2] | 0;
   HEAP32[i3 >> 2] = i5;
   HEAP32[i3 + 4 >> 2] = HEAP32[i2 + 2900 + 4 >> 2];
   HEAP32[i3 + 8 >> 2] = HEAP32[i2 + 2900 + 8 >> 2];
   HEAPF32[i3 >> 2] = (HEAP32[tempDoublePtr >> 2] = i5, +HEAPF32[tempDoublePtr >> 2]) * -3.0;
   if (!(HEAP16[i2 + 746 >> 1] | 0)) {
    HEAPF32[i3 + 8 >> 2] = 80.0;
    HEAPF32[i4 + 8 >> 2] = +HEAPF32[i4 + 8 >> 2] + -8.0;
    break;
   }
   d1 = +HEAPF32[i4 + 8 >> 2];
   if ((HEAP32[i2 + 888 >> 2] | 0) == 1) {
    HEAPF32[i4 + 8 >> 2] = d1 + 12.0;
    break;
   } else {
    HEAPF32[i4 + 8 >> 2] = d1 + 28.0;
    break;
   }
  }
 } while (0);
 return;
}

function __Z6V_Initv() {
 var i1 = 0;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 44557 | 0, gb + 44858 | 0, 0) | 0;
 HEAP32[gb + 116316 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 44566 | 0, gb + 44858 | 0, 0) | 0;
 HEAP32[gb + 116320 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 44575 | 0, gb + 44858 | 0, 0) | 0;
 HEAP32[gb + 116324 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 44584 | 0, gb + 44597 | 0, 0) | 0;
 HEAP32[gb + 116328 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 44602 | 0, gb + 44616 | 0, 0) | 0;
 HEAP32[gb + 116332 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 44620 | 0, gb + 44632 | 0, 0) | 0;
 HEAP32[gb + 116336 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 44636 | 0, gb + 44643 | 0, 0) | 0;
 HEAP32[gb + 116340 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 44648 | 0, gb + 43858 | 0, 0) | 0;
 HEAP32[gb + 116344 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 44657 | 0, gb + 44670 | 0, 0) | 0;
 HEAP32[gb + 116348 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 44672 | 0, gb + 44685 | 0, 0) | 0;
 HEAP32[gb + 116352 >> 2] = i1;
 return;
}

function __ZN14CSatchelCharge12SatchelSlideEP11CBaseEntity(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0, i4 = 0, d5 = 0.0, d6 = 0.0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if ((HEAP32[(HEAP32[i2 + 4 >> 2] | 0) + 520 >> 2] | 0) != (HEAP32[i1 + 408 >> 2] | 0)) {
  HEAPF32[i1 + 284 >> 2] = 1.0;
  __Z14UTIL_TraceLineRK6VectorS1_15IGNORE_MONSTERSP7edict_sP11TraceResult(0, 0, 0, 0, i4);
  if (+HEAPF32[i4 + 16 >> 2] < 1.0) {
   i2 = HEAP32[i3 + 4 >> 2] | 0;
   d5 = +HEAPF32[i2 + 36 >> 2] * .949999988079071;
   d6 = +HEAPF32[i2 + 40 >> 2] * .949999988079071;
   HEAPF32[i2 + 32 >> 2] = +HEAPF32[i2 + 32 >> 2] * .949999988079071;
   HEAPF32[i2 + 36 >> 2] = d5;
   HEAPF32[i2 + 40 >> 2] = d6;
   i2 = HEAP32[i3 + 4 >> 2] | 0;
   d6 = +HEAPF32[i2 + 96 >> 2] * .8999999761581421;
   d5 = +HEAPF32[i2 + 100 >> 2] * .8999999761581421;
   HEAPF32[i2 + 92 >> 2] = +HEAPF32[i2 + 92 >> 2] * .8999999761581421;
   HEAPF32[i2 + 96 >> 2] = d6;
   HEAPF32[i2 + 100 >> 2] = d5;
  }
  i1 = HEAP32[i3 + 4 >> 2] | 0;
  if (!(HEAP32[i1 + 420 >> 2] & 512)) {
   d5 = +HEAPF32[i1 + 32 >> 2];
   d6 = +HEAPF32[i1 + 36 >> 2];
   if (+Math_sqrt(+(d5 * d5 + d6 * d6)) > 10.0) mftCall_vi(HEAP32[(HEAP32[i3 >> 2] | 0) + 500 >> 2] | 0, i3 | 0);
  }
 }
 STACKTOP = i4;
 return;
}

function __Z13DrawUtfStringiiiPciii(i5, i11, i10, i4, i3, i2, i1) {
 i5 = i5 | 0;
 i11 = i11 | 0;
 i10 = i10 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 mftCall_iiiiiiii(HEAP32[gb + 92340 + 472 >> 2] | 0, 0, 0, 0, 0, 0, 0, 0) | 0;
 i9 = i1;
 L1 : while (1) {
  i1 = HEAP8[i4 >> 0] | 0;
  switch (i1 << 24 >> 24) {
  case 10:
  case 0:
   break L1;
  default:
   {}
  }
  if (((HEAP16[gb + 46040 + 8282 >> 1] | 0) + i5 | 0) > (i10 | 0)) break;
  if (i1 << 24 >> 24 == 94) {
   i6 = HEAP8[i4 + 1 >> 0] | 0;
   if ((i6 & -8) << 24 >> 24 == 48) {
    i2 = i4 + 2 | 0;
    i1 = HEAP8[i2 >> 0] | 0;
    if (!(i1 << 24 >> 24)) break; else {
     i7 = HEAPU8[gb + 40997 + (((i6 << 24 >> 24) + -48 | 0) * 3 | 0) + 2 >> 0] | 0;
     i8 = HEAPU8[gb + 40997 + (((i6 << 24 >> 24) + -48 | 0) * 3 | 0) + 1 >> 0] | 0;
     i6 = HEAPU8[gb + 40997 + (((i6 << 24 >> 24) + -48 | 0) * 3 | 0) >> 0] | 0;
     i4 = i2;
    }
   } else {
    i1 = 94;
    i7 = i9;
    i8 = i2;
    i6 = i3;
   }
  } else {
   i7 = i9;
   i8 = i2;
   i6 = i3;
  }
  i9 = i7;
  i2 = i8;
  i3 = i6;
  i4 = i4 + 1 | 0;
  i5 = (mftCall_iiiiiiii(HEAP32[gb + 92340 + 472 >> 2] | 0, i5 | 0, i11 | 0, i1 & 255 | 0, i6 | 0, i8 | 0, i7 | 0, 0) | 0) + i5 | 0;
 }
 return i5 | 0;
}

function __Z17EV_GetGunPositionP12event_args_sPfS1_(i5, i7, i6) {
 i5 = i5 | 0;
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, d2 = 0.0, d3 = 0.0, d4 = 0.0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = HEAP32[i5 + 4 >> 2] | 0;
 HEAPF32[i8 >> 2] = 0.0;
 HEAPF32[i8 + 4 >> 2] = 0.0;
 HEAPF32[i8 + 8 >> 2] = 28.0;
 L1 : do if ((i1 | 0) > 0) if ((mftCall_i(HEAP32[gb + 92340 + 144 >> 2] | 0) | 0) < (i1 | 0)) {
  d2 = 0.0;
  d3 = 28.0;
  d4 = 0.0;
 } else {
  i9 = (__Z10EV_IsLocali(i1) | 0) == 0;
  i1 = HEAP32[gb + 121104 >> 2] | 0;
  do if (!(i9 | (i1 | 0) == 4)) {
   if (i1 | 0) if (+HEAPF32[(HEAP32[gb + 46040 + 4280 >> 2] | 0) + 12 >> 2] == 2.0) break;
   mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 24 >> 2] | 0, i8 | 0);
   d2 = +HEAPF32[i8 + 4 >> 2];
   d3 = +HEAPF32[i8 + 8 >> 2];
   d4 = +HEAPF32[i8 >> 2];
   break L1;
  } while (0);
  if ((HEAP32[i5 + 44 >> 2] | 0) == 1) {
   HEAPF32[i8 + 8 >> 2] = 12.0;
   d2 = 0.0;
   d3 = 12.0;
   d4 = 0.0;
  } else {
   d2 = 0.0;
   d3 = 28.0;
   d4 = 0.0;
  }
 } else {
  d2 = 0.0;
  d3 = 28.0;
  d4 = 0.0;
 } while (0);
 HEAPF32[i7 >> 2] = d4 + +HEAPF32[i6 >> 2];
 HEAPF32[i7 + 4 >> 2] = d2 + +HEAPF32[i6 + 4 >> 2];
 HEAPF32[i7 + 8 >> 2] = d3 + +HEAPF32[i6 + 8 >> 2];
 STACKTOP = i8;
 return;
}

function __ZN11CHudMessage16MessageScanStartEv(i6) {
 i6 = i6 | 0;
 var d1 = 0.0, d2 = 0.0, d3 = 0.0, i4 = 0, i5 = 0;
 i5 = HEAP32[i6 + 148 >> 2] | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 L1 : do switch (i4 | 0) {
 case 0:
 case 1:
  {
   d1 = +HEAPF32[i5 + 20 >> 2];
   d3 = d1 + +HEAPF32[i5 + 28 >> 2];
   HEAPF32[i6 + 212 >> 2] = d3;
   d2 = +HEAPF32[i6 + 152 >> 2];
   do if (d2 < d1) HEAP32[i6 + 204 >> 2] = ~~(1.0 / d1 * (d1 - d2) * 255.0); else {
    if (!(d2 > d3)) {
     HEAP32[i6 + 204 >> 2] = 0;
     break;
    }
    d1 = +HEAPF32[i5 + 24 >> 2];
    if (d1 > 0.0) {
     HEAP32[i6 + 204 >> 2] = ~~((d2 - d3) / d1 * 255.0);
     break;
    } else {
     HEAP32[i6 + 204 >> 2] = 255;
     break;
    }
   } while (0);
   HEAPF32[i6 + 208 >> 2] = 0.0;
   if ((i4 | 0) == 1) if (((_rand() | 0) % 100 | 0 | 0) < 10) HEAPF32[i6 + 208 >> 2] = 1.0;
   break;
  }
 case 2:
  {
   d3 = +HEAPF32[i5 + 28 >> 2] + +HEAPF32[i5 + 20 >> 2] * +(HEAP32[i6 + 184 >> 2] | 0);
   HEAPF32[i6 + 212 >> 2] = d3;
   d2 = +HEAPF32[i6 + 152 >> 2];
   if (d2 > d3) {
    d1 = +HEAPF32[i5 + 24 >> 2];
    if (d1 > 0.0) {
     HEAP32[i6 + 204 >> 2] = ~~((d2 - d3) / d1 * 255.0);
     break L1;
    }
   }
   HEAP32[i6 + 204 >> 2] = 0;
   break;
  }
 default:
  {}
 } while (0);
 return;
}

function __Z19EV_HLDM_CheckTraceriPfS_S_S_iiPi(i2, i6, i7, i4, i5, i1, i8, i3) {
 i2 = i2 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 i8 = i8 | 0;
 i3 = i3 | 0;
 var i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((i2 | 0) > 0) i1 = (mftCall_i(HEAP32[gb + 92340 + 144 >> 2] | 0) | 0) >= (i2 | 0); else i1 = 0;
 if (!i8) i1 = 0; else {
  i2 = HEAP32[i3 >> 2] | 0;
  HEAP32[i3 >> 2] = i2 + 1;
  if (!((i2 | 0) % (i8 | 0) | 0)) {
   if (i1) {
    HEAPF32[i9 >> 2] = 0.0;
    HEAPF32[i9 + 4 >> 2] = 0.0;
    HEAPF32[i9 + 8 >> 2] = -4.0;
    HEAPF32[i9 + 12 >> 2] = +HEAPF32[i6 >> 2] + +HEAPF32[i5 >> 2] * 2.0 + +HEAPF32[i4 >> 2] * 16.0;
    i1 = 1;
    do {
     HEAPF32[i9 + 12 + (i1 << 2) >> 2] = +HEAPF32[i9 + (i1 << 2) >> 2] + +HEAPF32[i6 + (i1 << 2) >> 2] + +HEAPF32[i5 + (i1 << 2) >> 2] * 2.0 + +HEAPF32[i4 + (i1 << 2) >> 2] * 16.0;
     i1 = i1 + 1 | 0;
    } while ((i1 | 0) != 3);
    i1 = i9 + 12 | 0;
   } else {
    HEAP32[i9 + 12 >> 2] = HEAP32[i6 >> 2];
    HEAP32[i9 + 12 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
    HEAP32[i9 + 12 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
    i1 = i9 + 12 | 0;
   }
   __Z15EV_CreateTracerPfS_(i1, i7);
   i1 = (i8 | 0) != 1 & 1;
  } else i1 = 0;
 }
 STACKTOP = i9;
 return i1 | 0;
}

function _PM_CatagorizeTextureType() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 i5 = HEAP32[i1 + 56 >> 2] | 0;
 HEAP32[i3 + 12 >> 2] = i5;
 i4 = HEAP32[i1 + 60 >> 2] | 0;
 HEAP32[i3 + 12 + 4 >> 2] = i4;
 i2 = HEAP32[i1 + 64 >> 2] | 0;
 HEAP32[i3 + 12 + 8 >> 2] = i2;
 HEAP32[i3 >> 2] = i5;
 HEAP32[i3 + 4 >> 2] = i4;
 HEAPF32[i3 + 8 >> 2] = (HEAP32[tempDoublePtr >> 2] = i2, +HEAPF32[tempDoublePtr >> 2]) + -64.0;
 HEAP8[i1 + 240 >> 0] = 0;
 HEAP8[i1 + 496 >> 0] = 67;
 i1 = mftCall_iiii(HEAP32[i1 + 325048 >> 2] | 0, HEAP32[i1 + 224 >> 2] | 0, i3 + 12 | 0, i3 | 0) | 0;
 if (i1 | 0) {
  i2 = HEAP8[i1 >> 0] | 0;
  switch (i2 << 24 >> 24) {
  case 43:
  case 45:
   {
    i2 = HEAP8[i1 + 2 >> 0] | 0;
    i1 = i1 + 2 | 0;
    break;
   }
  default:
   {}
  }
  switch (i2 << 24 >> 24) {
  case 32:
  case 126:
  case 33:
  case 123:
   {
    i1 = i1 + 1 | 0;
    break;
   }
  default:
   {}
  }
  _strcpy((HEAP32[gb + 121136 >> 2] | 0) + 240 | 0, i1 | 0) | 0;
  i5 = HEAP32[gb + 121136 >> 2] | 0;
  HEAP8[i5 + 252 >> 0] = 0;
  i5 = _PM_FindTextureType(i5 + 240 | 0) | 0;
  HEAP8[(HEAP32[gb + 121136 >> 2] | 0) + 496 >> 0] = i5;
 }
 STACKTOP = i3;
 return;
}

function __ZN4CMP58PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44248 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 38257 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44229 | 0) | 0;
 HEAP32[i1 + 200 >> 2] = mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 39449 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 38913 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 38276 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39466 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 38299 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 38321 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 38344 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 38361 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 38378 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 38774 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 38395 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39176 | 0) | 0;
 HEAP16[i1 + 204 >> 1] = mftCall_iii(HEAP32[gb + 56972 + 488 >> 2] | 0, 1, gb + 38418 | 0) | 0;
 HEAP16[i1 + 206 >> 1] = mftCall_iii(HEAP32[gb + 56972 + 488 >> 2] | 0, 1, gb + 38432 | 0) | 0;
 return;
}

function __ZN8CHudMenu4DrawEf(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 var i3 = 0, i4 = 0, i5 = 0;
 d1 = +HEAPF32[i2 + 28 >> 2];
 L1 : do if (d1 > 0.0 ? !(d1 <= +HEAPF32[gb + 46040 + 36 >> 2]) : 1) {
  i3 = 0;
  i2 = 0;
  L2 : do {
   switch (HEAP8[gb + 124953 + i3 >> 0] | 0) {
   case 0:
    break L2;
   case 10:
    {
     i2 = i2 + 1 | 0;
     break;
    }
   default:
    {}
   }
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) < 512);
  i3 = 0;
  i4 = (Math_imul((i2 | 0) / 2 | 0, -12) | 0) + -40 + ((HEAP32[gb + 46040 + 8116 >> 2] | 0) / 2 | 0) | 0;
  do {
   i2 = gb + 124953 + i3 | 0;
   if (!(HEAP8[i2 >> 0] | 0)) break L1;
   __ZN4CHud13DrawHudStringEiiiPciii(0, 20, i4, 320, i2, 255, 255, 255) | 0;
   i4 = i4 + 12 | 0;
   L11 : while (1) {
    i2 = HEAP8[gb + 124953 + i3 >> 0] | 0;
    switch (i2 << 24 >> 24) {
    case 0:
    case 10:
     break L11;
    default:
     {}
    }
    i3 = i3 + 1 | 0;
    if ((i3 | 0) >= 512) {
     i5 = 11;
     break;
    }
   }
   if ((i5 | 0) == 11) {
    i5 = 0;
    i2 = HEAP8[gb + 124953 + i3 >> 0] | 0;
   }
   i3 = (i2 << 24 >> 24 == 10 & 1) + i3 | 0;
  } while ((i3 | 0) < 512);
 } else {
  HEAP32[i2 + 20 >> 2] = 0;
  HEAP32[i2 + 16 >> 2] = HEAP32[i2 + 16 >> 2] & -2;
 } while (0);
 return 1;
}

function __ZN20CStudioModelRenderer16StudioSlerpBonesEPA4_fPA3_fS1_S3_f(i8, i6, i4, i7, i5, d1) {
 i8 = i8 | 0;
 i6 = i6 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 i5 = i5 | 0;
 d1 = +d1;
 var d2 = 0.0, i3 = 0, i9 = 0, i10 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (d1 < 0.0) d1 = 0.0; else if (d1 > 1.0) d1 = 1.0;
 d2 = 1.0 - d1;
 if ((HEAP32[(HEAP32[i8 + 68 >> 2] | 0) + 140 >> 2] | 0) > 0) {
  i3 = 0;
  do {
   i10 = i6 + (i3 << 4) | 0;
   __Z15QuaternionSlerpPfS_fS_(i10, i7 + (i3 << 4) | 0, d1, i9);
   HEAP32[i10 >> 2] = HEAP32[i9 >> 2];
   HEAP32[i6 + (i3 << 4) + 4 >> 2] = HEAP32[i9 + 4 >> 2];
   HEAP32[i6 + (i3 << 4) + 8 >> 2] = HEAP32[i9 + 8 >> 2];
   HEAP32[i6 + (i3 << 4) + 12 >> 2] = HEAP32[i9 + 12 >> 2];
   i10 = i4 + (i3 * 12 | 0) | 0;
   HEAPF32[i10 >> 2] = d2 * +HEAPF32[i10 >> 2] + d1 * +HEAPF32[i5 + (i3 * 12 | 0) >> 2];
   i10 = i4 + (i3 * 12 | 0) + 4 | 0;
   HEAPF32[i10 >> 2] = d2 * +HEAPF32[i10 >> 2] + d1 * +HEAPF32[i5 + (i3 * 12 | 0) + 4 >> 2];
   i10 = i4 + (i3 * 12 | 0) + 8 | 0;
   HEAPF32[i10 >> 2] = d2 * +HEAPF32[i10 >> 2] + d1 * +HEAPF32[i5 + (i3 * 12 | 0) + 8 >> 2];
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) < (HEAP32[(HEAP32[i8 + 68 >> 2] | 0) + 140 >> 2] | 0));
 }
 STACKTOP = i9;
 return;
}

function __Z16QuaternionMatrixPfPA4_f(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var d3 = 0.0, d4 = 0.0;
 d4 = +HEAPF32[i2 + 4 >> 2];
 d3 = +HEAPF32[i2 + 8 >> 2];
 HEAPF32[i1 >> 2] = 1.0 - d4 * d4 * 2.0 - d3 * d3 * 2.0;
 HEAPF32[i1 + 16 >> 2] = +HEAPF32[i2 >> 2] * 2.0 * +HEAPF32[i2 + 4 >> 2] + +HEAPF32[i2 + 12 >> 2] * 2.0 * +HEAPF32[i2 + 8 >> 2];
 HEAPF32[i1 + 32 >> 2] = +HEAPF32[i2 >> 2] * 2.0 * +HEAPF32[i2 + 8 >> 2] - +HEAPF32[i2 + 12 >> 2] * 2.0 * +HEAPF32[i2 + 4 >> 2];
 HEAPF32[i1 + 4 >> 2] = +HEAPF32[i2 >> 2] * 2.0 * +HEAPF32[i2 + 4 >> 2] - +HEAPF32[i2 + 12 >> 2] * 2.0 * +HEAPF32[i2 + 8 >> 2];
 d3 = +HEAPF32[i2 >> 2];
 d4 = +HEAPF32[i2 + 8 >> 2];
 HEAPF32[i1 + 20 >> 2] = 1.0 - d3 * d3 * 2.0 - d4 * d4 * 2.0;
 HEAPF32[i1 + 36 >> 2] = +HEAPF32[i2 + 4 >> 2] * 2.0 * +HEAPF32[i2 + 8 >> 2] + +HEAPF32[i2 + 12 >> 2] * 2.0 * +HEAPF32[i2 >> 2];
 HEAPF32[i1 + 8 >> 2] = +HEAPF32[i2 >> 2] * 2.0 * +HEAPF32[i2 + 8 >> 2] + +HEAPF32[i2 + 12 >> 2] * 2.0 * +HEAPF32[i2 + 4 >> 2];
 HEAPF32[i1 + 24 >> 2] = +HEAPF32[i2 + 4 >> 2] * 2.0 * +HEAPF32[i2 + 8 >> 2] - +HEAPF32[i2 + 12 >> 2] * 2.0 * +HEAPF32[i2 >> 2];
 d4 = +HEAPF32[i2 >> 2];
 d3 = +HEAPF32[i2 + 4 >> 2];
 HEAPF32[i1 + 40 >> 2] = 1.0 - d4 * d4 * 2.0 - d3 * d3 * 2.0;
 return;
}

function __ZN8CShotgun6ReloadEv(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i2 = (HEAP32[i3 + 128 >> 2] | 0) + 1236 + (HEAP32[i3 + 168 >> 2] << 2) | 0;
 L1 : do if ((HEAP32[i2 >> 2] | 0) >= 1) {
  i1 = HEAP32[i3 + 176 >> 2] | 0;
  if ((i1 | 0) != 8) if (!(+HEAPF32[i3 + 156 >> 2] > 0.0)) switch (HEAP32[i3 + 152 >> 2] | 0) {
  case 0:
   {
    mftCall_viiii(HEAP32[(HEAP32[i3 >> 2] | 0) + 324 >> 2] | 0, i3 | 0, 5, 1, 0);
    HEAP32[i3 + 152 >> 2] = 1;
    HEAPF32[(HEAP32[i3 + 128 >> 2] | 0) + 612 >> 2] = .6000000238418579;
    HEAPF32[i3 + 164 >> 2] = .6000000238418579;
    HEAPF32[i3 + 156 >> 2] = 1.0;
    HEAPF32[i3 + 160 >> 2] = 1.0;
    break L1;
   }
  case 1:
   {
    if (+HEAPF32[i3 + 164 >> 2] > 0.0) break L1;
    HEAP32[i3 + 152 >> 2] = 2;
    mftCall_iii(HEAP32[gb + 56972 + 360 >> 2] | 0, 0, 1) | 0;
    mftCall_iii(HEAP32[gb + 56972 + 360 >> 2] | 0, 0, 31) | 0;
    mftCall_viiii(HEAP32[(HEAP32[i3 >> 2] | 0) + 324 >> 2] | 0, i3 | 0, 3, 1, 0);
    HEAPF32[i3 + 200 >> 2] = .5;
    HEAPF32[i3 + 164 >> 2] = .5;
    break L1;
   }
  default:
   {
    HEAP32[i3 + 176 >> 2] = i1 + 1;
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + -1;
    HEAP32[i3 + 152 >> 2] = 1;
    break L1;
   }
  }
 } while (0);
 return;
}

function __ZN8CHudAmmo18UserCmd_PrevWeaponEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 do if (!(HEAP32[gb + 46040 + 8644 >> 2] | 0)) if (!(HEAP32[gb + 46040 + 84 >> 2] & 5)) {
  i1 = HEAP32[gb + 81320 >> 2] | 0;
  if (i1 >>> 0 < 2 >>> 0) {
   i1 = HEAP32[i2 + 28 >> 2] | 0;
   HEAP32[gb + 81320 >> 2] = i1;
  }
  if (!i1) {
   i4 = 0;
   i2 = 4;
   i1 = 4;
  } else {
   i4 = 0;
   i2 = (HEAP32[i1 + 148 >> 2] | 0) + -1 | 0;
   i1 = HEAP32[i1 + 144 >> 2] | 0;
  }
  L9 : while (1) {
   if ((i1 | 0) > -1) while (1) {
    if ((i2 | 0) > -1) while (1) {
     i3 = HEAP32[gb + 81328 + 10496 + (i1 * 24 | 0) + (i2 << 2) >> 2] | 0;
     if (i3 | 0) if (__ZN15WeaponsResource7HasAmmoEP6WEAPON(gb + 81328 | 0, i3) | 0) {
      i1 = 14;
      break L9;
     }
     if ((i2 | 0) > 0) i2 = i2 + -1 | 0; else break;
    }
    if ((i1 | 0) > 0) {
     i2 = 4;
     i1 = i1 + -1 | 0;
    } else {
     i1 = 4;
     break;
    }
   } else i1 = i2;
   i4 = i4 + 1 | 0;
   if ((i4 | 0) >= 2) {
    i1 = 15;
    break;
   } else {
    i2 = i1;
    i1 = 4;
   }
  }
  if ((i1 | 0) == 14) {
   HEAP32[gb + 81320 >> 2] = i3;
   break;
  } else if ((i1 | 0) == 15) {
   HEAP32[gb + 81320 >> 2] = 0;
   break;
  }
 } while (0);
 return;
}

function __ZN20CStudioModelRenderer17StudioFxTransformEP11cl_entity_sPA4_f(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var d4 = 0.0;
 L1 : do switch (HEAP32[i1 + 772 >> 2] | 0) {
 case 16:
 case 15:
  {
   i2 = (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 49) | 0) == 0;
   i1 = HEAP32[gb + 92340 + 272 >> 2] | 0;
   if (i2) {
    i2 = mftCall_iii(i1 | 0, 0, 1) | 0;
    i3 = i3 + (((i2 | 0) == 1 ? 2 : i2) << 4) | 0;
    _VectorScale(i3, +mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, 1.0, 1.4839999675750732), i3);
    break L1;
   }
   if (!(mftCall_iii(i1 | 0, 0, 49) | 0)) {
    mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 1) | 0;
    d4 = +mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, -10.0, 10.0);
    i3 = i3 + ((mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 2) | 0) << 4) + 12 | 0;
    HEAPF32[i3 >> 2] = d4 + +HEAPF32[i3 >> 2];
   }
   break;
  }
 case 18:
  {
   d4 = (+HEAPF64[i2 + 8 >> 3] - +HEAPF32[i1 + 780 >> 2]) * 10.0 + 1.0;
   d4 = d4 > 2.0 ? 2.0 : d4;
   HEAPF32[i3 + 4 >> 2] = +HEAPF32[i3 + 4 >> 2] * d4;
   HEAPF32[i3 + 20 >> 2] = +HEAPF32[i3 + 20 >> 2] * d4;
   HEAPF32[i3 + 36 >> 2] = +HEAPF32[i3 + 36 >> 2] * d4;
   break;
  }
 default:
  {}
 } while (0);
 return;
}

function __ZN11CBaseEntity17FireBulletsPlayerEm6VectorS0_S0_fiiiP9entvars_si(i12, i6, i9, i8, i7, i13, d1, i3, i5, i4, i10, i11) {
 i12 = i12 | 0;
 i6 = i6 | 0;
 i9 = i9 | 0;
 i8 = i8 | 0;
 i7 = i7 | 0;
 i13 = i13 | 0;
 d1 = +d1;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 var d2 = 0.0;
 if (!i9) {
  d2 = 0.0;
  d1 = 0.0;
 } else {
  i3 = 1;
  do {
   if (!i10) do {
    d2 = +mftCall_ddd(HEAP32[gb + 56972 + 364 >> 2] | 0, -.5, .5);
    d2 = d2 + +mftCall_ddd(HEAP32[gb + 56972 + 364 >> 2] | 0, -.5, .5);
    d1 = +mftCall_ddd(HEAP32[gb + 56972 + 364 >> 2] | 0, -.5, .5);
    d1 = d1 + +mftCall_ddd(HEAP32[gb + 56972 + 364 >> 2] | 0, -.5, .5);
   } while (d2 * d2 + d1 * d1 > 1.0); else {
    d2 = +__Z22UTIL_SharedRandomFloatjff(i3 + i11 | 0, -.5, .5);
    d2 = d2 + +__Z22UTIL_SharedRandomFloatjff(i11 + 1 + i3 | 0, -.5, .5);
    d1 = +__Z22UTIL_SharedRandomFloatjff(i11 + 2 + i3 | 0, -.5, .5);
    d1 = d1 + +__Z22UTIL_SharedRandomFloatjff(i11 + 3 + i3 | 0, -.5, .5);
   }
   i3 = i3 + 1 | 0;
  } while (i3 >>> 0 <= i9 >>> 0);
 }
 d1 = d1 * +HEAPF32[i13 + 4 >> 2];
 HEAPF32[i12 >> 2] = d2 * +HEAPF32[i13 >> 2];
 HEAPF32[i12 + 4 >> 2] = d1;
 HEAPF32[i12 + 8 >> 2] = 0.0;
 return;
}

function __ZN14CSatchelCharge12SatchelThinkEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, d3 = 0.0, d4 = 0.0;
 HEAPF32[(HEAP32[i2 + 4 >> 2] | 0) + 260 >> 2] = +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2] + .1;
 L1 : do if (mftCall_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 152 >> 2] | 0, i2 | 0) | 0) {
  i1 = HEAP32[i2 + 4 >> 2] | 0;
  switch (HEAP32[i1 + 448 >> 2] | 0) {
  case 3:
   {
    HEAP32[i1 + 264 >> 2] = 5;
    d3 = +HEAPF32[i1 + 36 >> 2] * .800000011920929;
    d4 = +HEAPF32[i1 + 40 >> 2] * .800000011920929;
    HEAPF32[i1 + 32 >> 2] = +HEAPF32[i1 + 32 >> 2] * .800000011920929;
    HEAPF32[i1 + 36 >> 2] = d3;
    HEAPF32[i1 + 40 >> 2] = d4;
    i1 = HEAP32[i2 + 4 >> 2] | 0;
    d4 = +HEAPF32[i1 + 96 >> 2] * .8999999761581421;
    d3 = +HEAPF32[i1 + 100 >> 2] * .8999999761581421;
    HEAPF32[i1 + 92 >> 2] = +HEAPF32[i1 + 92 >> 2] * .8999999761581421;
    HEAPF32[i1 + 96 >> 2] = d4;
    HEAPF32[i1 + 100 >> 2] = d3;
    i2 = (HEAP32[i2 + 4 >> 2] | 0) + 40 | 0;
    HEAPF32[i2 >> 2] = +HEAPF32[i2 >> 2] + 8.0;
    break L1;
   }
  case 0:
   {
    HEAP32[i1 + 264 >> 2] = 10;
    break L1;
   }
  default:
   {
    HEAPF32[i1 + 40 >> 2] = +HEAPF32[i1 + 40 >> 2] + -8.0;
    break L1;
   }
  }
 } while (0);
 return;
}

function _PM_Ladder() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 L1 : do if ((HEAP32[i1 + 134992 >> 2] | 0) > 0) {
  i4 = 0;
  while (1) {
   i3 = i1 + 134996 + (i4 * 224 | 0) | 0;
   i2 = HEAP32[i1 + 134996 + (i4 * 224 | 0) + 48 >> 2] | 0;
   if (i2 | 0) if (!(mftCall_ii(HEAP32[i1 + 325008 >> 2] | 0, i2 | 0) | 0)) if ((HEAP32[i1 + 134996 + (i4 * 224 | 0) + 100 >> 2] | 0) == -16) {
    i1 = mftCall_iii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325016 >> 2] | 0, i3 | 0, i5 | 0) | 0;
    i2 = HEAP32[i1 + 8 >> 2] | 0;
    i6 = HEAP32[gb + 121136 >> 2] | 0;
    HEAPF32[i5 >> 2] = +HEAPF32[i6 + 56 >> 2] - +HEAPF32[i5 >> 2];
    HEAPF32[i5 + 4 >> 2] = +HEAPF32[i6 + 60 >> 2] - +HEAPF32[i5 + 4 >> 2];
    HEAPF32[i5 + 8 >> 2] = +HEAPF32[i6 + 64 >> 2] - +HEAPF32[i5 + 8 >> 2];
    if ((mftCall_iiii(HEAP32[i6 + 324988 >> 2] | 0, i1 | 0, i2 | 0, i5 | 0) | 0) != -1) {
     i1 = i3;
     break L1;
    }
   }
   i4 = i4 + 1 | 0;
   i1 = HEAP32[gb + 121136 >> 2] | 0;
   if ((i4 | 0) >= (HEAP32[i1 + 134992 >> 2] | 0)) {
    i1 = 0;
    break;
   }
  }
 } else i1 = 0; while (0);
 STACKTOP = i5;
 return i1 | 0;
}

function __ZN7CPython10WeaponIdleEv(i3) {
 i3 = i3 | 0;
 var d1 = 0.0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 mftCall_vi(HEAP32[(HEAP32[i3 >> 2] | 0) + 320 >> 2] | 0, i3 | 0);
 __ZN11CBasePlayer16GetAutoaimVectorEf(i4, 0, 0.0);
 if (+HEAPF32[i3 + 196 >> 2] < 0.0) {
  +mftCall_ddd(HEAP32[gb + 56972 + 364 >> 2] | 0, .800000011920929, .8999999761581421);
  HEAPF32[i3 + 196 >> 2] = 0.0;
 }
 if (!(+HEAPF32[i3 + 164 >> 2] > 0.0)) {
  d1 = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i3 + 128 >> 2] | 0) + 680 >> 2] | 0, 0.0, 1.0);
  do if (!(d1 <= .5)) {
   if (d1 <= .7) {
    HEAPF32[i3 + 164 >> 2] = 2.0;
    i2 = 6;
    break;
   }
   if (!(d1 <= .9)) {
    HEAPF32[i3 + 164 >> 2] = 5.666666507720947;
    i2 = 1;
    break;
   } else {
    HEAPF32[i3 + 164 >> 2] = 2.933333396911621;
    i2 = 7;
    break;
   }
  } else {
   HEAPF32[i3 + 164 >> 2] = 2.3333332538604736;
   i2 = 0;
  } while (0);
  i5 = (__Z14bIsMultiplayerv() | 0) & 1;
  i6 = HEAP32[i3 >> 2] | 0;
  i7 = HEAP32[i6 + 324 >> 2] | 0;
  mftCall_viiii(i7 | 0, i3 | 0, i2 | 0, (mftCall_ii(HEAP32[i6 + 356 >> 2] | 0, i3 | 0) | 0) != 0 | 0, i5 | 0);
 }
 STACKTOP = i4;
 return;
}

function __ZN8CHudAmmo18UserCmd_NextWeaponEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 do if (!(HEAP32[gb + 46040 + 8644 >> 2] | 0)) if (!(HEAP32[gb + 46040 + 84 >> 2] & 5)) {
  i1 = HEAP32[gb + 81320 >> 2] | 0;
  if (i1 >>> 0 < 2 >>> 0) {
   i1 = HEAP32[i2 + 28 >> 2] | 0;
   HEAP32[gb + 81320 >> 2] = i1;
  }
  if (!i1) {
   i4 = 0;
   i2 = 0;
   i1 = 0;
  } else {
   i4 = 0;
   i2 = (HEAP32[i1 + 148 >> 2] | 0) + 1 | 0;
   i1 = HEAP32[i1 + 144 >> 2] | 0;
  }
  L9 : while (1) {
   if ((i1 | 0) < 5) while (1) {
    if ((i2 | 0) < 5) do {
     i3 = HEAP32[gb + 81328 + 10496 + (i1 * 24 | 0) + (i2 << 2) >> 2] | 0;
     if (i3 | 0) if (__ZN15WeaponsResource7HasAmmoEP6WEAPON(gb + 81328 | 0, i3) | 0) {
      i1 = 14;
      break L9;
     }
     i2 = i2 + 1 | 0;
    } while ((i2 | 0) < 5);
    i1 = i1 + 1 | 0;
    if ((i1 | 0) >= 5) {
     i1 = 0;
     break;
    } else i2 = 0;
   } else i1 = i2;
   i4 = i4 + 1 | 0;
   if ((i4 | 0) >= 2) {
    i1 = 15;
    break;
   } else {
    i2 = i1;
    i1 = 0;
   }
  }
  if ((i1 | 0) == 14) {
   HEAP32[gb + 81320 >> 2] = i3;
   break;
  } else if ((i1 | 0) == 15) {
   HEAP32[gb + 81320 >> 2] = 0;
   break;
  }
 } while (0);
 return;
}

function _EV_FireCrossbow(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, d5 = 0.0, i6 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = HEAP32[i1 + 4 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i1 + 12 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i1 + 16 >> 2];
 i4 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0;
 i6 = (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 15) | 0) + 93 | 0;
 mftCall_viiiiddii(i4 | 0, i3 | 0, i2 | 0, 1, gb + 37180 | 0, 1.0, .800000011920929, 0, i6 | 0);
 i6 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0;
 d5 = +mftCall_ddd(HEAP32[gb + 92340 + 268 >> 2] | 0, .949999988079071, 1.0);
 i4 = (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 15) | 0) + 93 | 0;
 mftCall_viiiiddii(i6 | 0, i3 | 0, i2 | 0, 3, gb + 37203 | 0, +d5, .800000011920929, 0, i4 | 0);
 if (__Z10EV_IsLocali(i3) | 0) {
  if (!(HEAP32[i1 + 56 >> 2] | 0)) {
   if (HEAP32[i1 + 60 >> 2] | 0) mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0, 6, 1);
  } else mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0, 4, 1);
  __Z11V_PunchAxisif(0, -2.0);
 }
 STACKTOP = i2;
 return;
}

function __Z14V_CalcGunAngleP12ref_params_s(i2) {
 i2 = i2 | 0;
 var i1 = 0, d3 = 0.0, d4 = 0.0, d5 = 0.0, d6 = 0.0, d7 = 0.0;
 i1 = mftCall_i(HEAP32[gb + 92340 + 208 >> 2] | 0) | 0;
 if (i1 | 0) {
  d6 = +HEAPF32[i2 + 12 + 4 >> 2] + +HEAPF32[i2 + 144 + 4 >> 2];
  HEAPF32[i1 + 2900 + 4 >> 2] = d6;
  d7 = -+HEAPF32[i2 + 12 >> 2] + +HEAPF32[i2 + 144 >> 2] * .25;
  HEAPF32[i1 + 2900 >> 2] = d7;
  d4 = +HEAPF32[gb + 116356 >> 2];
  d3 = d4 * +Math_sin(+(+HEAPF32[i2 + 64 >> 2] * +HEAPF32[gb + 36108 + 12 >> 2]));
  d3 = +HEAPF32[i1 + 2900 + 8 >> 2] - d3 * +HEAPF32[gb + 36168 + 12 >> 2];
  HEAPF32[i1 + 2900 + 8 >> 2] = d3;
  d5 = d4 * +Math_sin(+(+HEAPF32[i2 + 64 >> 2] * +HEAPF32[gb + 36128 + 12 >> 2]));
  d5 = d7 - d5 * +HEAPF32[gb + 36188 + 12 >> 2] * .5;
  HEAPF32[i1 + 2900 >> 2] = d5;
  d4 = d4 * +Math_sin(+(+HEAPF32[i2 + 64 >> 2] * +HEAPF32[gb + 36088 + 12 >> 2]));
  d4 = d6 - d4 * +HEAPF32[gb + 36148 + 12 >> 2];
  HEAPF32[i1 + 2900 + 4 >> 2] = d4;
  HEAPF32[i1 + 716 >> 2] = d5;
  HEAPF32[i1 + 716 + 4 >> 2] = d4;
  HEAPF32[i1 + 716 + 8 >> 2] = d3;
  HEAPF32[i1 + 2856 >> 2] = d5;
  HEAPF32[i1 + 2856 + 4 >> 2] = d4;
  HEAPF32[i1 + 2856 + 8 >> 2] = d3;
 }
 return;
}

function __ZN9CTripmine13PrimaryAttackEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i1 = HEAP32[i2 + 128 >> 2] | 0;
 if ((HEAP32[i1 + 1236 + (HEAP32[i2 + 168 >> 2] << 2) >> 2] | 0) >= 1) {
  mftCall_vii(HEAP32[(HEAP32[i1 >> 2] | 0) + 476 >> 2] | 0, i3 + 56 | 0, i1 | 0);
  __Z14UTIL_TraceLineRK6VectorS1_15IGNORE_MONSTERSP7edict_sP11TraceResult(0, 0, 0, 0, i3);
  mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 1, HEAP32[(HEAP32[(HEAP32[i2 + 128 >> 2] | 0) + 4 >> 2] | 0) + 520 >> 2] | 0, HEAP16[i2 + 196 >> 1] | 0, 0.0, gb + 56956 | 0, gb + 56956 | 0, 0.0, 0.0, 0, 0, 0, 0);
  do if (+HEAPF32[i3 + 16 >> 2] < 1.0) {
   i1 = HEAP32[i3 + 48 >> 2] | 0;
   if (!i1) {
    i1 = mftCall_ii(HEAP32[gb + 56972 + 276 >> 2] | 0, 0) | 0;
    if (!i1) break;
   }
   i1 = HEAP32[i1 + 124 >> 2] | 0;
   if (i1 | 0) if (!(HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 420 >> 2] & 4)) __Z16UTIL_VecToAnglesRK6Vector(0, 0);
  } while (0);
  HEAPF32[i2 + 156 >> 2] = .30000001192092896;
  HEAPF32[i2 + 164 >> 2] = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i2 + 128 >> 2] | 0) + 680 >> 2] | 0, 10.0, 15.0);
 }
 STACKTOP = i3;
 return;
}

function __ZN8CHudAmmo18MsgFunc_HideWeaponEPKciPv(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 __Z10BEGIN_READPvi(i3, i2);
 i3 = __Z9READ_BYTEv() | 0;
 HEAP32[gb + 46040 + 84 >> 2] = i3;
 do if (!(mftCall_i(HEAP32[gb + 92340 + 352 >> 2] | 0) | 0)) {
  if (HEAP32[gb + 46040 + 84 >> 2] & 5 | 0) {
   HEAP32[gb + 81320 >> 2] = 0;
   i4 = HEAP32[gb + 92340 + 52 >> 2] | 0;
   HEAP32[i5 >> 2] = HEAP32[gb + 92124 >> 2];
   HEAP32[i5 + 4 >> 2] = HEAP32[gb + 92124 + 4 >> 2];
   HEAP32[i5 + 8 >> 2] = HEAP32[gb + 92124 + 8 >> 2];
   HEAP32[i5 + 12 >> 2] = HEAP32[gb + 92124 + 12 >> 2];
   mftCall_viiiii(i4 | 0, 0, i5 | 0, 0, 0, 0);
   break;
  }
  i1 = HEAP32[i4 + 28 >> 2] | 0;
  if (i1 | 0) {
   i3 = HEAP32[gb + 92340 + 52 >> 2] | 0;
   i4 = HEAP32[i1 + 248 >> 2] | 0;
   HEAP32[i5 >> 2] = HEAP32[i1 + 252 >> 2];
   HEAP32[i5 + 4 >> 2] = HEAP32[i1 + 252 + 4 >> 2];
   HEAP32[i5 + 8 >> 2] = HEAP32[i1 + 252 + 8 >> 2];
   HEAP32[i5 + 12 >> 2] = HEAP32[i1 + 252 + 12 >> 2];
   mftCall_viiiii(i3 | 0, i4 | 0, i5 | 0, 255, 255, 255);
  }
 } while (0);
 STACKTOP = i5;
 return 1;
}

function __ZN20CStudioModelRenderer26StudioRenderFinal_SoftwareEv(i3) {
 i3 = i3 | 0;
 var d1 = 0.0, i2 = 0;
 mftCall_vi(HEAP32[gb + 94440 + 148 >> 2] | 0, 0);
 d1 = +HEAPF32[(HEAP32[i3 + 44 >> 2] | 0) + 12 >> 2];
 do if (d1 == 2.0) mftCall_v(HEAP32[gb + 94440 + 112 >> 2] | 0); else {
  if (d1 == 3.0) {
   mftCall_v(HEAP32[gb + 94440 + 104 >> 2] | 0);
   break;
  }
  if ((HEAP32[(HEAP32[i3 + 68 >> 2] | 0) + 204 >> 2] | 0) > 0) {
   i2 = 0;
   do {
    mftCall_viii(HEAP32[gb + 94440 + 80 >> 2] | 0, i2 | 0, i3 + 72 | 0, i3 + 76 | 0);
    mftCall_v(HEAP32[gb + 94440 + 100 >> 2] | 0);
    i2 = i2 + 1 | 0;
   } while ((i2 | 0) < (HEAP32[(HEAP32[i3 + 68 >> 2] | 0) + 204 >> 2] | 0));
  }
 } while (0);
 d1 = +HEAPF32[(HEAP32[i3 + 44 >> 2] | 0) + 12 >> 2];
 if (d1 == 4.0) {
  mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 4 >> 2] | 0, 5);
  mftCall_v(HEAP32[gb + 94440 + 104 >> 2] | 0);
  mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 4 >> 2] | 0, 0);
  d1 = +HEAPF32[(HEAP32[i3 + 44 >> 2] | 0) + 12 >> 2];
 }
 if (d1 == 5.0) mftCall_v(HEAP32[gb + 94440 + 108 >> 2] | 0);
 mftCall_v(HEAP32[gb + 94440 + 152 >> 2] | 0);
 return;
}

function __Z14SpectatorSprayv() {
 var i1 = 0, i2 = 0, i3 = 0, d4 = 0.0, d5 = 0.0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if (mftCall_i(HEAP32[gb + 92340 + 352 >> 2] | 0) | 0) {
  mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, gb + 116248 | 0, i2 + 32 | 0, 0, 0);
  _VectorScale(i2 + 32 | 0, 128.0, i2 + 32 | 0);
  HEAPF32[i2 + 32 >> 2] = +HEAPF32[i2 + 32 >> 2] + +HEAPF32[gb + 116236 >> 2];
  HEAPF32[i2 + 32 + 4 >> 2] = +HEAPF32[i2 + 32 + 4 >> 2] + +HEAPF32[gb + 116236 + 4 >> 2];
  HEAPF32[i2 + 32 + 8 >> 2] = +HEAPF32[i2 + 32 + 8 >> 2] + +HEAPF32[gb + 116236 + 8 >> 2];
  i1 = mftCall_iiiiii(HEAP32[gb + 92340 + 236 >> 2] | 0, gb + 116236 | 0, i2 + 32 | 0, 0, 2, -1) | 0;
  if (+HEAPF32[i1 + 16 >> 2] != 1.0) {
   d5 = +HEAPF32[i1 + 20 + 4 >> 2];
   d4 = +HEAPF32[i1 + 20 + 8 >> 2];
   i3 = HEAP32[i1 + 48 >> 2] | 0;
   HEAPF64[i2 >> 3] = +HEAPF32[i1 + 20 >> 2];
   HEAPF64[i2 + 8 >> 3] = d5;
   HEAPF64[i2 + 16 >> 3] = d4;
   HEAP32[i2 + 24 >> 2] = i3;
   _sprintf(i2 + 48 | 0, gb + 41995 | 0, i2 | 0) | 0;
   mftCall_ii(HEAP32[gb + 92340 + 76 >> 2] | 0, i2 + 48 | 0) | 0;
  }
 }
 STACKTOP = i2;
 return;
}

function __ZN7CSqueak10WeaponIdleEv(i3) {
 i3 = i3 | 0;
 var d1 = 0.0, i2 = 0;
 do if (!(+HEAPF32[i3 + 164 >> 2] > 0.0)) {
  if (HEAP32[i3 + 196 >> 2] | 0) {
   HEAP32[i3 + 196 >> 2] = 0;
   i2 = mftCall_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 284 >> 2] | 0, i3 | 0) | 0;
   if (!(HEAP32[(HEAP32[i3 + 128 >> 2] | 0) + 1236 + (i2 << 2) >> 2] | 0)) {
    mftCall_vi(HEAP32[(HEAP32[i3 >> 2] | 0) + 348 >> 2] | 0, i3 | 0);
    break;
   } else {
    mftCall_viiii(HEAP32[(HEAP32[i3 >> 2] | 0) + 324 >> 2] | 0, i3 | 0, 4, 1, 0);
    HEAPF32[i3 + 164 >> 2] = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i3 + 128 >> 2] | 0) + 680 >> 2] | 0, 10.0, 15.0);
    break;
   }
  }
  d1 = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i3 + 128 >> 2] | 0) + 680 >> 2] | 0, 0.0, 1.0);
  do if (!(d1 <= .75)) if (!(d1 <= .875)) {
   HEAPF32[i3 + 164 >> 2] = 5.0;
   i2 = 2;
   break;
  } else {
   HEAPF32[i3 + 164 >> 2] = 4.375;
   i2 = 1;
   break;
  } else {
   HEAPF32[i3 + 164 >> 2] = 3.75;
   i2 = 0;
  } while (0);
  mftCall_viiii(HEAP32[(HEAP32[i3 >> 2] | 0) + 324 >> 2] | 0, i3 | 0, i2 | 0, 1, 0);
 } while (0);
 return;
}

function __ZN10CHudHealth11UpdateTilesEfl(i11, d8, i6) {
 i11 = i11 | 0;
 d8 = +d8;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i9 = 0, i10 = 0;
 i4 = HEAP32[i11 + 252 >> 2] | 0;
 i7 = (HEAP32[gb + 93736 >> 2] | 0) / 8 | 0;
 i5 = HEAP32[gb + 93732 >> 2] | 0;
 i10 = (HEAP32[gb + 46040 + 8116 >> 2] | 0) - (i5 << 1) | 0;
 i1 = i4;
 i9 = 0;
 do {
  i3 = i11 + 60 + (i9 << 4) | 0;
  i2 = HEAP32[gb + 35252 + (i9 << 2) >> 2] | 0;
  if (i2 & i1 | 0) {
   HEAPF32[i3 >> 2] = d8 + 2.0;
   i1 = i11 + 60 + (i9 << 4) + 4 | 0;
   if (!(+HEAPF32[i1 >> 2] != 0.0)) HEAPF32[i1 >> 2] = d8;
  }
  if (~i4 & i6 & i2 | 0) {
   HEAP32[i11 + 60 + (i9 << 4) + 8 >> 2] = i7;
   HEAP32[i11 + 60 + (i9 << 4) + 12 >> 2] = i10;
   HEAPF32[i3 >> 2] = d8 + 2.0;
   i2 = 0;
   do {
    if ((i2 | 0) != (i9 | 0)) {
     i3 = i11 + 60 + (i2 << 4) + 12 | 0;
     i1 = HEAP32[i3 >> 2] | 0;
     if (i1 | 0) HEAP32[i3 >> 2] = i1 - i5;
    }
    i2 = i2 + 1 | 0;
   } while ((i2 | 0) != 12);
  }
  i9 = i9 + 1 | 0;
  i1 = HEAP32[i11 + 252 >> 2] | 0;
 } while ((i9 | 0) != 12);
 HEAP32[i11 + 252 >> 2] = i1 | i6;
 return;
}

function _EV_HornetGunFire(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i2 + 8 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i2 + 12 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i2 + 16 >> 2];
 if (__Z10EV_IsLocali(i1) | 0) {
  __Z11V_PunchAxisif(0, +(mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 2) | 0));
  mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0, 5, 1);
 }
 switch (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 2) | 0) {
 case 0:
  {
   mftCall_viiiiddii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0, i1 | 0, i3 | 0, 1, gb + 37413 | 0, 1.0, .800000011920929, 0, 100);
   break;
  }
 case 1:
  {
   mftCall_viiiiddii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0, i1 | 0, i3 | 0, 1, gb + 37433 | 0, 1.0, .800000011920929, 0, 100);
   break;
  }
 case 2:
  {
   mftCall_viiiiddii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0, i1 | 0, i3 | 0, 1, gb + 37453 | 0, 1.0, .800000011920929, 0, 100);
   break;
  }
 default:
  {}
 }
 STACKTOP = i3;
 return;
}

function _PM_AddToTouched(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = HEAP32[gb + 121136 >> 2] | 0;
 i1 = HEAP32[i2 + 283788 >> 2] | 0;
 L1 : do if ((i1 | 0) > 0) {
  i4 = HEAP32[i6 + 48 >> 2] | 0;
  i3 = 0;
  do {
   if ((HEAP32[i2 + 283792 + (i3 * 68 | 0) + 48 >> 2] | 0) == (i4 | 0)) break L1;
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) < (i1 | 0));
 } else i3 = 0; while (0);
 if ((i3 | 0) == (i1 | 0)) {
  HEAP32[i6 + 52 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i6 + 56 >> 2] = HEAP32[i5 + 4 >> 2];
  HEAP32[i6 + 60 >> 2] = HEAP32[i5 + 8 >> 2];
  if ((i1 | 0) > 599) {
   mftCall_vii(HEAP32[i2 + 324964 >> 2] | 0, gb + 45738 | 0, i7 | 0);
   i1 = HEAP32[gb + 121136 >> 2] | 0;
   i2 = i1;
   i1 = HEAP32[i1 + 283788 >> 2] | 0;
  }
  HEAP32[i2 + 283788 >> 2] = i1 + 1;
  i3 = i2 + 283792 + (i1 * 68 | 0) | 0;
  i1 = i6;
  i2 = i3 + 68 | 0;
  do {
   HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
   i3 = i3 + 4 | 0;
   i1 = i1 + 4 | 0;
  } while ((i3 | 0) < (i2 | 0));
  i1 = 1;
 } else i1 = 0;
 STACKTOP = i7;
 return i1 | 0;
}

function __ZN9CCrossbow10WeaponIdleEv(i4) {
 i4 = i4 | 0;
 var d1 = 0.0, i2 = 0, i3 = 0, i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 __ZN11CBasePlayer16GetAutoaimVectorEf(i5, 0, 0.0);
 mftCall_vi(HEAP32[(HEAP32[i4 >> 2] | 0) + 320 >> 2] | 0, i4 | 0);
 if (+HEAPF32[i4 + 164 >> 2] < 0.0) {
  i6 = !(+__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i4 + 128 >> 2] | 0) + 680 >> 2] | 0, 0.0, 1.0) <= .75);
  i3 = (HEAP32[i4 + 176 >> 2] | 0) != 0;
  i2 = HEAP32[(HEAP32[i4 >> 2] | 0) + 324 >> 2] | 0;
  if (i6) {
   if (i3) {
    mftCall_viiii(i2 | 0, i4 | 0, 2, 1, 0);
    d1 = 3.0;
   } else {
    mftCall_viiii(i2 | 0, i4 | 0, 3, 1, 0);
    d1 = 2.6666667461395264;
   }
   HEAPF32[i4 + 164 >> 2] = d1;
   d1 = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i4 + 128 >> 2] | 0) + 680 >> 2] | 0, 10.0, 15.0);
  } else {
   if (i3) mftCall_viiii(i2 | 0, i4 | 0, 0, 1, 0); else mftCall_viiii(i2 | 0, i4 | 0, 1, 1, 0);
   d1 = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i4 + 128 >> 2] | 0) + 680 >> 2] | 0, 10.0, 15.0);
  }
  HEAPF32[i4 + 164 >> 2] = d1;
 }
 STACKTOP = i5;
 return;
}

function __Z9V_CalcBobP12ref_params_s(i4) {
 i4 = i4 | 0;
 var d1 = 0.0, d2 = 0.0, d3 = 0.0, i5 = 0;
 if ((HEAP32[i4 + 80 >> 2] | 0) == -1) i5 = 3; else {
  d1 = +HEAPF32[i4 + 64 >> 2];
  if (d1 == +HEAPF32[gb + 116360 >> 2]) i5 = 3; else {
   HEAPF32[gb + 116360 >> 2] = d1;
   d3 = +HEAPF64[gb + 54720 >> 3] + +HEAPF32[i4 + 60 >> 2];
   HEAPF64[gb + 54720 >> 3] = d3;
   d1 = +HEAPF32[(HEAP32[gb + 116336 >> 2] | 0) + 12 >> 2];
   d2 = +HEAPF32[(HEAP32[gb + 116344 >> 2] | 0) + 12 >> 2];
   if ((d3 - d1 * +(~~(d3 / d1) | 0)) / d1 < d2) d1 = (d3 - d1 * +(~~(d3 / d1) | 0)) / d1 * 3.141592653589793 / d2; else d1 = ((d3 - d1 * +(~~(d3 / d1) | 0)) / d1 - d2) * 3.141592653589793 / (1.0 - d2) + 3.141592653589793;
   d2 = +HEAPF32[i4 + 88 >> 2];
   d3 = +HEAPF32[i4 + 88 + 4 >> 2];
   d3 = +Math_sqrt(+(d2 * d2 + d3 * d3));
   d3 = +HEAPF32[(HEAP32[gb + 116340 >> 2] | 0) + 12 >> 2] * d3;
   d1 = d3 * .3 + +Math_sin(+d1) * d3 * .7;
   d1 = d1 < 4.0 ? d1 : 4.0;
   d1 = d1 > -7.0 ? d1 : -7.0;
   HEAPF32[gb + 116364 >> 2] = d1;
  }
 }
 if ((i5 | 0) == 3) d1 = +HEAPF32[gb + 116364 >> 2];
 return +d1;
}

function __ZN6CGauss8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 37668 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44084 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44065 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39466 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 37687 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 37581 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 37602 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 37623 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 37706 | 0) | 0;
 HEAP32[i1 + 200 >> 2] = mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 37732 | 0) | 0;
 HEAP32[i1 + 196 >> 2] = mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 37732 | 0) | 0;
 HEAP32[i1 + 204 >> 2] = mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 37752 | 0) | 0;
 HEAP16[i1 + 216 >> 1] = mftCall_iii(HEAP32[gb + 56972 + 488 >> 2] | 0, 1, gb + 38002 | 0) | 0;
 HEAP16[i1 + 218 >> 1] = mftCall_iii(HEAP32[gb + 56972 + 488 >> 2] | 0, 1, gb + 38018 | 0) | 0;
 return;
}

function _EV_FireMP52(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i2 + 8 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i2 + 12 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i2 + 16 >> 2];
 if (__Z10EV_IsLocali(i1) | 0) {
  mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0, 2, 2);
  __Z11V_PunchAxisif(0, -10.0);
 }
 switch (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 1) | 0) {
 case 0:
  {
   i4 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0;
   i2 = (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 15) | 0) + 94 | 0;
   mftCall_viiiiddii(i4 | 0, i1 | 0, i3 | 0, 1, gb + 38774 | 0, 1.0, .800000011920929, 0, i2 | 0);
   break;
  }
 case 1:
  {
   i2 = HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0;
   i4 = (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 15) | 0) + 94 | 0;
   mftCall_viiiiddii(i2 | 0, i1 | 0, i3 | 0, 1, gb + 38395 | 0, 1.0, .800000011920929, 0, i4 | 0);
   break;
  }
 default:
  {}
 }
 STACKTOP = i3;
 return;
}

function _PM_ViewEntity() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 _AngleVectors((HEAP32[gb + 121136 >> 2] | 0) + 68 | 0, i3 + 116 | 0, i3 + 104 | 0, i3 + 92 | 0);
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 i4 = HEAP32[i1 + 56 >> 2] | 0;
 HEAP32[i3 + 80 >> 2] = i4;
 i2 = HEAP32[i1 + 60 >> 2] | 0;
 HEAP32[i3 + 80 + 4 >> 2] = i2;
 HEAP32[i3 + 80 + 8 >> 2] = HEAP32[i1 + 64 >> 2];
 HEAPF32[i3 + 68 >> 2] = (HEAP32[tempDoublePtr >> 2] = i4, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[i3 + 116 >> 2] * 256.0;
 HEAPF32[i3 + 68 + 4 >> 2] = (HEAP32[tempDoublePtr >> 2] = i2, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[i3 + 116 + 4 >> 2] * 256.0;
 i2 = 2;
 do {
  HEAPF32[i3 + 68 + (i2 << 2) >> 2] = +HEAPF32[i3 + 80 + (i2 << 2) >> 2] + +HEAPF32[i3 + 116 + (i2 << 2) >> 2] * 256.0;
  i2 = i2 + 1 | 0;
 } while ((i2 | 0) != 3);
 mftCall_viiiii(HEAP32[i1 + 324992 >> 2] | 0, i3 | 0, i3 + 80 | 0, i3 + 68 | 0, 2, -1);
 i1 = HEAP32[i3 + 48 >> 2] | 0;
 if ((i1 | 0) > 0) _PM_DrawPhysEntBBox(i1, 111, .30000001192092896);
 STACKTOP = i3;
 return;
}

function __GLOBAL__sub_I_cdll_int_cpp() {
 var i1 = 0;
 i1 = g$___dso_handle() | 0;
 HEAP32[gb + 46040 >> 2] = 0;
 HEAP32[gb + 46040 + 16 >> 2] = 0;
 HEAP32[gb + 46040 + 128 >> 2] = gb + 33792 + 8;
 HEAP32[gb + 46040 + 168 >> 2] = gb + 35300 + 8;
 HEAP32[gb + 46040 + 424 >> 2] = gb + 35564 + 8;
 HEAP32[gb + 46040 + 5160 >> 2] = gb + 35212 + 8;
 HEAP32[gb + 46040 + 5184 >> 2] = gb + 33876 + 8;
 HEAP32[gb + 46040 + 5232 >> 2] = gb + 36032 + 8;
 HEAP32[gb + 46040 + 5260 >> 2] = gb + 35048 + 8;
 HEAP32[gb + 46040 + 5324 >> 2] = gb + 35648 + 8;
 HEAP32[gb + 46040 + 5556 >> 2] = gb + 35808 + 8;
 HEAP32[gb + 46040 + 6132 >> 2] = gb + 35e3 + 8;
 HEAP32[gb + 46040 + 6156 >> 2] = gb + 35728 + 8;
 HEAP32[gb + 46040 + 6184 >> 2] = gb + 35604 + 8;
 HEAP32[gb + 46040 + 6220 >> 2] = gb + 33832 + 8;
 HEAP32[gb + 46040 + 6264 >> 2] = gb + 35992 + 8;
 HEAP32[gb + 46040 + 6284 >> 2] = gb + 35768 + 8;
 HEAP32[gb + 46040 + 6496 >> 2] = gb + 36344 + 8;
 HEAP32[gb + 46040 + 6536 >> 2] = gb + 36384 + 8;
 ___cxa_atexit(fb + 228 | 0, gb + 46040 | 0, i1 | 0) | 0;
 return;
}

function _InterpolateAngles(i7, i5, i8, d6) {
 i7 = i7 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 d6 = +d6;
 var d1 = 0.0, i2 = 0, i3 = 0, d4 = 0.0;
 i3 = 0;
 do {
  i2 = i7 + (i3 << 2) | 0;
  d1 = +HEAPF32[i2 >> 2];
  if (d1 > 180.0) HEAPF32[i2 >> 2] = d1 + -360.0; else if (d1 < -180.0) HEAPF32[i2 >> 2] = d1 + 360.0;
  i3 = i3 + 1 | 0;
 } while ((i3 | 0) != 3);
 i3 = 0;
 do {
  i2 = i5 + (i3 << 2) | 0;
  d1 = +HEAPF32[i2 >> 2];
  if (d1 > 180.0) HEAPF32[i2 >> 2] = d1 + -360.0; else if (d1 < -180.0) HEAPF32[i2 >> 2] = d1 + 360.0;
  i3 = i3 + 1 | 0;
 } while ((i3 | 0) != 3);
 i2 = 0;
 do {
  d4 = +HEAPF32[i7 + (i2 << 2) >> 2];
  d1 = +HEAPF32[i5 + (i2 << 2) >> 2] - d4;
  if (d1 > 180.0) d1 = d1 + -360.0; else if (d1 < -180.0) d1 = d1 + 360.0;
  HEAPF32[i8 + (i2 << 2) >> 2] = d4 + d1 * d6;
  i2 = i2 + 1 | 0;
 } while ((i2 | 0) != 3);
 i3 = 0;
 do {
  i2 = i8 + (i3 << 2) | 0;
  d1 = +HEAPF32[i2 >> 2];
  if (d1 > 180.0) HEAPF32[i2 >> 2] = d1 + -360.0; else if (d1 < -180.0) HEAPF32[i2 >> 2] = d1 + 360.0;
  i3 = i3 + 1 | 0;
 } while ((i3 | 0) != 3);
 return;
}

function _HUD_PostRunCmd(i3, i6, i2, i1, d5, i4) {
 i3 = i3 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 d5 = +d5;
 i4 = i4 | 0;
 var i7 = 0, i8 = 0, d9 = 0.0, d10 = 0.0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[gb + 92896 >> 2] = i1;
 i1 = HEAP32[gb + 93756 >> 2] | 0;
 if (!i1) i7 = 4; else if (+HEAPF32[i1 + 12 >> 2] != 0.0) __Z20HUD_WeaponsPostThinkP13local_state_sS0_P9usercmd_sdj(i3, i6, i2, d5, i4); else i7 = 4;
 if ((i7 | 0) == 4) HEAP32[i6 + 436 >> 2] = HEAP32[gb + 93760 >> 2];
 if ((HEAP32[gb + 59360 >> 2] | 0) == 1) {
  mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, gb + 116248 | 0, i8 | 0, 0, 0);
  d10 = +HEAPF32[gb + 59356 >> 2];
  d9 = +HEAPF32[i6 + 356 >> 2] - d10 * +HEAPF32[i8 + 4 >> 2] * 5.0;
  d5 = +HEAPF32[i6 + 360 >> 2] - d10 * +HEAPF32[i8 + 8 >> 2] * 5.0;
  HEAPF32[i6 + 352 >> 2] = +HEAPF32[i6 + 352 >> 2] - d10 * +HEAPF32[i8 >> 2] * 5.0;
  HEAPF32[i6 + 356 >> 2] = d9;
  HEAPF32[i6 + 360 >> 2] = d5;
  HEAP32[gb + 59360 >> 2] = 0;
 }
 HEAP32[gb + 93760 >> 2] = HEAP32[i6 + 436 >> 2];
 STACKTOP = i8;
 return;
}

function _EV_Crowbar(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = HEAP32[i1 + 4 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i1 + 12 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i1 + 16 >> 2];
 mftCall_viiiiddii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0, i3 | 0, i2 | 0, 1, gb + 37157 | 0, 1.0, .800000011920929, 0, 100);
 L1 : do if (__Z10EV_IsLocali(i3) | 0) {
  mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0, 4, 1);
  i3 = HEAP32[gb + 56816 >> 2] | 0;
  HEAP32[gb + 56816 >> 2] = i3 + 1;
  switch ((i3 | 0) % 3 | 0 | 0) {
  case 0:
   {
    mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0, 4, 1);
    break L1;
   }
  case 1:
   {
    mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0, 5, 1);
    break L1;
   }
  case 2:
   {
    mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0, 7, 1);
    break L1;
   }
  default:
   break L1;
  }
 } while (0);
 STACKTOP = i2;
 return;
}

function _PM_DrawBBox(i6, i5, i1, i8, d7) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 i8 = i8 | 0;
 d7 = +d7;
 var d2 = 0.0, d3 = 0.0, d4 = 0.0, i9 = 0, d10 = 0.0, d11 = 0.0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 d3 = +HEAPF32[i1 >> 2];
 d4 = +HEAPF32[i1 + 4 >> 2];
 d2 = +HEAPF32[i1 + 8 >> 2];
 i1 = 0;
 do {
  d11 = d4 + +HEAPF32[((i1 & 2 | 0) == 0 ? i5 : i6) + 4 >> 2];
  d10 = d2 + +HEAPF32[((i1 & 4 | 0) == 0 ? i5 : i6) + 8 >> 2];
  HEAPF32[i9 + (i1 * 12 | 0) >> 2] = d3 + +HEAPF32[((i1 & 1 | 0) == 0 ? i5 : i6) >> 2];
  HEAPF32[i9 + (i1 * 12 | 0) + 4 >> 2] = d11;
  HEAPF32[i9 + (i1 * 12 | 0) + 8 >> 2] = d10;
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != 8);
 i1 = 0;
 do {
  _PM_DrawRectangle(i9 + ((HEAP32[gb + 36424 + (i1 << 4) + 4 >> 2] | 0) * 12 | 0) | 0, i9 + ((HEAP32[gb + 36424 + (i1 << 4) >> 2] | 0) * 12 | 0) | 0, i9 + ((HEAP32[gb + 36424 + (i1 << 4) + 8 >> 2] | 0) * 12 | 0) | 0, i9 + ((HEAP32[gb + 36424 + (i1 << 4) + 12 >> 2] | 0) * 12 | 0) | 0, i8, d7);
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != 6);
 STACKTOP = i9;
 return;
}

function __ZN20CStudioModelRenderer13StudioGetAnimEP7model_sP16mstudioseqdesc_t(i1, i2, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 var i3 = 0, i4 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = HEAP32[i1 + 68 >> 2] | 0;
 i4 = i1 + (HEAP32[i1 + 176 >> 2] | 0) | 0;
 i3 = HEAP32[i5 + 156 >> 2] | 0;
 if (!i3) i1 = i1 + (HEAP32[i5 + 124 >> 2] | 0) | 0; else {
  i1 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i1) {
   i1 = mftCall_iii(HEAP32[gb + 94440 >> 2] | 0, 16, 4) | 0;
   HEAP32[i2 + 124 >> 2] = i1;
   i2 = HEAP32[i5 + 156 >> 2] | 0;
  } else i2 = i3;
  if (!(mftCall_ii(HEAP32[gb + 94440 + 4 >> 2] | 0, i1 + (i2 << 2) | 0) | 0)) {
   i2 = HEAP32[gb + 92340 + 164 >> 2] | 0;
   HEAP32[i6 >> 2] = i4 + (i3 * 104 | 0) + 32;
   mftCall_vii(i2 | 0, gb + 43695 | 0, i6 | 0);
   mftCall_vii(HEAP32[gb + 94440 + 8 >> 2] | 0, i4 + (i3 * 104 | 0) + 32 | 0, i1 + (HEAP32[i5 + 156 >> 2] << 2) | 0);
  }
  i1 = (HEAP32[i1 + (HEAP32[i5 + 156 >> 2] << 2) >> 2] | 0) + (HEAP32[i5 + 124 >> 2] | 0) | 0;
 }
 STACKTOP = i6;
 return i1 | 0;
}

function __ZN4CMP515SecondaryAttackEv(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = HEAP32[i3 + 128 >> 2] | 0;
 do if ((HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 448 >> 2] | 0) == 3) {
  mftCall_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 316 >> 2] | 0, i3 | 0) | 0;
  HEAPF32[i3 + 156 >> 2] = .15000000596046448;
 } else {
  i2 = i1 + 1236 + (HEAP32[i3 + 172 >> 2] << 2) | 0;
  if (!(HEAP32[i2 >> 2] | 0)) {
   mftCall_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 316 >> 2] | 0, i3 | 0) | 0;
   break;
  } else {
   HEAP32[i1 + 692 >> 2] = 600;
   HEAP32[i1 + 700 >> 2] = 512;
   HEAP32[i1 + 696 >> 2] = 32;
   HEAPF32[i1 + 704 >> 2] = .20000000298023224;
   HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + -1;
   mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 1, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, HEAP16[i3 + 206 >> 1] | 0, 0.0, gb + 56956 | 0, gb + 56956 | 0, 0.0, 0.0, 0, 0, 0, 0);
   HEAPF32[i3 + 156 >> 2] = 1.0;
   HEAPF32[i3 + 160 >> 2] = 1.0;
   HEAPF32[i3 + 164 >> 2] = 5.0;
   return;
  }
 } while (0);
 return;
}

function __ZN7CSqueak13PrimaryAttackEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if (HEAP32[(HEAP32[i1 + 128 >> 2] | 0) + 1236 + (HEAP32[i1 + 168 >> 2] << 2) >> 2] | 0) {
  __Z14UTIL_TraceLineRK6VectorS1_15IGNORE_MONSTERSP7edict_sP11TraceResult(0, 0, 0, 0, i2);
  mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 1, HEAP32[(HEAP32[(HEAP32[i1 + 128 >> 2] | 0) + 4 >> 2] | 0) + 520 >> 2] | 0, HEAP16[i1 + 200 >> 1] | 0, 0.0, gb + 56956 | 0, gb + 56956 | 0, 0.0, 0.0, 0, 0, 0, 0);
  if (!(HEAP32[i2 >> 2] | 0)) if (!(HEAP32[i2 + 4 >> 2] | 0)) if (+HEAPF32[i2 + 16 >> 2] > .25) {
   +mftCall_ddd(HEAP32[gb + 56972 + 364 >> 2] | 0, 0.0, 1.0);
   i3 = HEAP32[i1 + 128 >> 2] | 0;
   HEAP32[i3 + 692 >> 2] = 200;
   i3 = i3 + 1236 + (HEAP32[i1 + 168 >> 2] << 2) | 0;
   HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + -1;
   HEAP32[i1 + 196 >> 2] = 1;
   HEAPF32[i1 + 156 >> 2] = .30000001192092896;
   HEAPF32[i1 + 164 >> 2] = 1.0;
  }
 }
 STACKTOP = i2;
 return;
}

function __ZN8CHudMOTD12MsgFunc_MOTDEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (HEAP32[i4 + 16 >> 2] & 1 | 0) mftCall_vi(HEAP32[(HEAP32[i4 >> 2] | 0) + 24 >> 2] | 0, i4 | 0);
 __Z10BEGIN_READPvi(i2, i1);
 i3 = __Z9READ_BYTEv() | 0;
 __Z11READ_STRINGv() | 0;
 _strncat(i4 + 25 | 0, gb + 127001 | 0, 1535) | 0;
 if (i3 | 0) {
  HEAP32[i4 + 1568 >> 2] = 0;
  HEAP32[i4 + 16 >> 2] = HEAP32[i4 + 16 >> 2] | 1;
  i1 = 0;
  i2 = 0;
  i3 = i4 + 25 | 0;
  L6 : while (1) {
   switch (HEAP8[i3 >> 0] | 0) {
   case 0:
    break L6;
   case 10:
    {
     HEAP32[i4 + 1564 >> 2] = (HEAP32[i4 + 1564 >> 2] | 0) + 1;
     if ((i2 | 0) > (i1 | 0)) {
      HEAP32[i4 + 1568 >> 2] = i2;
      i1 = i2;
      i2 = 0;
     }
     break;
    }
   default:
    {}
   }
   i2 = i2 + 1 | 0;
   i3 = i3 + 1 | 0;
  }
  HEAP32[i4 + 1564 >> 2] = (HEAP32[i4 + 1564 >> 2] | 0) + 1;
  if ((i2 | 0) > (i1 | 0)) HEAP32[i4 + 1568 >> 2] = i2;
  HEAP8[i4 + 24 >> 0] = 1;
 }
 return 1;
}

function __ZN8CShotgun8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44356 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 39089 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44335 | 0) | 0;
 HEAP32[i1 + 204 >> 2] = mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 39110 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39466 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39134 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39155 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39040 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39060 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39176 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39021 | 0) | 0;
 HEAP16[i1 + 210 >> 1] = mftCall_iii(HEAP32[gb + 56972 + 488 >> 2] | 0, 1, gb + 39198 | 0) | 0;
 HEAP16[i1 + 208 >> 1] = mftCall_iii(HEAP32[gb + 56972 + 488 >> 2] | 0, 1, gb + 39217 | 0) | 0;
 return;
}

function __ZN15WeaponsResource20GetAmmoPicFromWeaponEiR7wrect_s(i4, i2, i3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i5 = 0;
 i1 = 0;
 while (1) {
  if ((HEAP32[i4 + (i1 * 328 | 0) + 128 >> 2] | 0) == (i2 | 0)) {
   i5 = 3;
   break;
  }
  if ((HEAP32[i4 + (i1 * 328 | 0) + 132 >> 2] | 0) == (i2 | 0)) {
   i5 = 5;
   break;
  }
  i1 = i1 + 1 | 0;
  if ((i1 | 0) >= 32) {
   i1 = 0;
   break;
  }
 }
 if ((i5 | 0) == 3) {
  i5 = i4 + (i1 * 328 | 0) + 212 | 0;
  HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i3 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
  HEAP32[i3 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
  HEAP32[i3 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
  i1 = i4 + (i1 * 328 | 0) + 208 | 0;
 } else if ((i5 | 0) == 5) {
  i5 = i4 + (i1 * 328 | 0) + 232 | 0;
  HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i3 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
  HEAP32[i3 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
  HEAP32[i3 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
  i1 = i4 + (i1 * 328 | 0) + 228 | 0;
 }
 return i1 | 0;
}

function _PM_PlayWaterSounds() {
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 i2 = (HEAP32[i1 + 228 >> 2] | 0) == 0;
 if (!(HEAP32[i1 + 236 >> 2] | 0)) {
  if (!i2) i3 = 4;
 } else if (i2) i3 = 4;
 L4 : do if ((i3 | 0) == 4) switch (mftCall_iii(HEAP32[i1 + 325e3 >> 2] | 0, 0, 3) | 0) {
 case 0:
  {
   mftCall_viiddii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325044 >> 2] | 0, 4, gb + 45570 | 0, 1.0, .800000011920929, 0, 100);
   break L4;
  }
 case 1:
  {
   mftCall_viiddii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325044 >> 2] | 0, 4, gb + 45590 | 0, 1.0, .800000011920929, 0, 100);
   break L4;
  }
 case 2:
  {
   mftCall_viiddii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325044 >> 2] | 0, 4, gb + 45610 | 0, 1.0, .800000011920929, 0, 100);
   break L4;
  }
 case 3:
  {
   mftCall_viiddii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 325044 >> 2] | 0, 4, gb + 45630 | 0, 1.0, .800000011920929, 0, 100);
   break L4;
  }
 default:
  break L4;
 } while (0);
 return;
}

function __ZN20CStudioModelRenderer17StudioRenderModelEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 mftCall_v(HEAP32[gb + 94440 + 156 >> 2] | 0);
 mftCall_vi(HEAP32[gb + 94440 + 136 >> 2] | 0, 0);
 i1 = (HEAP32[i2 + 48 >> 2] | 0) + 772 | 0;
 if ((HEAP32[i1 >> 2] | 0) == 19) {
  HEAP32[i1 >> 2] = 0;
  mftCall_vi(HEAP32[(HEAP32[i2 >> 2] | 0) + 80 >> 2] | 0, i2 | 0);
  if (!(mftCall_i(HEAP32[gb + 94440 + 160 >> 2] | 0) | 0)) mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 4 >> 2] | 0, 5);
  mftCall_vi(HEAP32[gb + 94440 + 136 >> 2] | 0, 2);
  mftCall_iii(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 44 >> 2] | 0, HEAP32[i2 + 88 >> 2] | 0, 0) | 0;
  HEAP32[(HEAP32[i2 + 48 >> 2] | 0) + 772 >> 2] = 19;
  mftCall_vi(HEAP32[(HEAP32[i2 >> 2] | 0) + 80 >> 2] | 0, i2 | 0);
  if (!(mftCall_i(HEAP32[gb + 94440 + 160 >> 2] | 0) | 0)) mftCall_vi(HEAP32[(HEAP32[gb + 92340 + 328 >> 2] | 0) + 4 >> 2] | 0, 0);
 } else mftCall_vi(HEAP32[(HEAP32[i2 >> 2] | 0) + 80 >> 2] | 0, i2 | 0);
 return;
}

function __Z12COM_FileBasePKcPc(i4, i5) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i2 = _strlen(i4 | 0) | 0;
 L1 : do if (!(i2 + -1 | 0)) i1 = 0; else {
  i1 = i2 + -1 | 0;
  while (1) {
   switch (HEAP8[i4 + i1 >> 0] | 0) {
   case 92:
   case 47:
   case 46:
    break L1;
   default:
    {}
   }
   i1 = i1 + -1 | 0;
   if (!i1) {
    i1 = 0;
    break L1;
   }
  }
 } while (0);
 i3 = (HEAP8[i4 + i1 >> 0] | 0) == 46 ? i1 + -1 | 0 : i2 + -1 | 0;
 L6 : do if ((i2 | 0) > 0) {
  i2 = i2 + -1 | 0;
  while (1) {
   switch (HEAP8[i4 + i2 >> 0] | 0) {
   case 47:
   case 92:
    {
     i1 = i2;
     break L6;
    }
   default:
    {}
   }
   i1 = i2 + -1 | 0;
   if ((i2 | 0) > 0) i2 = i1; else break L6;
  }
 } else i1 = i2 + -1 | 0; while (0);
 switch (HEAP8[i4 + i1 >> 0] | 0) {
 case 92:
 case 47:
  {
   i1 = i1 + 1 | 0;
   break;
  }
 default:
  i1 = 0;
 }
 i3 = i3 - i1 + 1 | 0;
 _strncpy(i5 | 0, i4 + i1 | 0, i3 | 0) | 0;
 HEAP8[i5 + i3 >> 0] = 0;
 return;
}

function __ZN14CHudFlashlight7VidInitEv(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i2 = __ZN4CHud14GetSpriteIndexEPKc(gb + 46040 | 0, gb + 40406 | 0) | 0;
 i3 = __ZN4CHud14GetSpriteIndexEPKc(gb + 46040 | 0, gb + 40418 | 0) | 0;
 i4 = __ZN4CHud14GetSpriteIndexEPKc(gb + 46040 | 0, gb + 40429 | 0) | 0;
 if ((i2 | 0) < 0) i1 = 0; else i1 = HEAP32[(HEAP32[gb + 46040 + 112 >> 2] | 0) + (i2 << 2) >> 2] | 0;
 HEAP32[i5 + 20 >> 2] = i1;
 if ((i3 | 0) < 0) i1 = 0; else i1 = HEAP32[(HEAP32[gb + 46040 + 112 >> 2] | 0) + (i3 << 2) >> 2] | 0;
 HEAP32[i5 + 24 >> 2] = i1;
 if ((i4 | 0) < 0) i1 = 0; else i1 = HEAP32[(HEAP32[gb + 46040 + 112 >> 2] | 0) + (i4 << 2) >> 2] | 0;
 HEAP32[i5 + 28 >> 2] = i1;
 i1 = HEAP32[gb + 46040 + 116 >> 2] | 0;
 HEAP32[i5 + 32 >> 2] = i1 + (i2 << 4);
 HEAP32[i5 + 36 >> 2] = i1 + (i3 << 4);
 HEAP32[i5 + 40 >> 2] = i1 + (i4 << 4);
 HEAP32[i5 + 60 >> 2] = (HEAP32[i1 + (i3 << 4) + 4 >> 2] | 0) - (HEAP32[i1 + (i3 << 4) >> 2] | 0);
 return 1;
}

function _VectorMatrix(i2, i3, i4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var d1 = 0.0;
 d1 = +HEAPF32[i2 + 4 >> 2];
 if (+HEAPF32[i2 >> 2] == 0.0 & d1 == 0.0) {
  HEAPF32[i3 >> 2] = 1.0;
  HEAPF32[i3 + 4 >> 2] = 0.0;
  HEAPF32[i3 + 8 >> 2] = 0.0;
  HEAPF32[i4 >> 2] = -+HEAPF32[i2 + 8 >> 2];
  HEAPF32[i4 + 4 >> 2] = 0.0;
  HEAPF32[i4 + 8 >> 2] = 0.0;
 } else {
  HEAPF32[i3 >> 2] = d1 - +HEAPF32[i2 + 8 >> 2] * 0.0;
  HEAPF32[i3 + 4 >> 2] = +HEAPF32[i2 + 8 >> 2] * 0.0 - +HEAPF32[i2 >> 2];
  HEAPF32[i3 + 8 >> 2] = +HEAPF32[i2 >> 2] * 0.0 - +HEAPF32[i2 + 4 >> 2] * 0.0;
  +_VectorNormalize(i3);
  HEAPF32[i4 >> 2] = +HEAPF32[i3 + 4 >> 2] * +HEAPF32[i2 + 8 >> 2] - +HEAPF32[i3 + 8 >> 2] * +HEAPF32[i2 + 4 >> 2];
  HEAPF32[i4 + 4 >> 2] = +HEAPF32[i3 + 8 >> 2] * +HEAPF32[i2 >> 2] - +HEAPF32[i3 >> 2] * +HEAPF32[i2 + 8 >> 2];
  HEAPF32[i4 + 8 >> 2] = +HEAPF32[i3 >> 2] * +HEAPF32[i2 + 4 >> 2] - +HEAPF32[i3 + 4 >> 2] * +HEAPF32[i2 >> 2];
  +_VectorNormalize(i4);
 }
 return;
}

function _HUD_StudioEvent(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 switch (HEAP32[i2 + 4 >> 2] | 0) {
 case 5001:
  {
   mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 76 >> 2] | 0, i1 + 2912 | 0, _atoi(i2 + 12 | 0) | 0);
   break;
  }
 case 5011:
  {
   mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 76 >> 2] | 0, i1 + 2924 | 0, _atoi(i2 + 12 | 0) | 0);
   break;
  }
 case 5021:
  {
   mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 76 >> 2] | 0, i1 + 2936 | 0, _atoi(i2 + 12 | 0) | 0);
   break;
  }
 case 5031:
  {
   mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 76 >> 2] | 0, i1 + 2948 | 0, _atoi(i2 + 12 | 0) | 0);
   break;
  }
 case 5002:
  {
   mftCall_viiii(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 132 >> 2] | 0, i1 + 2912 | 0, _atoi(i2 + 12 | 0) | 0, -100, 100);
   break;
  }
 case 5004:
  {
   mftCall_vidi(HEAP32[gb + 92340 + 252 >> 2] | 0, i2 + 12 | 0, 1.0, i1 + 2912 | 0);
   break;
  }
 default:
  {}
 }
 return;
}

function __ZN8CHudAmmo7VidInitEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __ZN4CHud14GetSpriteIndexEPKc(gb + 46040 | 0, gb + 39680 | 0) | 0;
 HEAP32[i1 + 32 >> 2] = i2;
 HEAP32[i1 + 36 >> 2] = __ZN4CHud14GetSpriteIndexEPKc(gb + 46040 | 0, gb + 39688 | 0) | 0;
 if ((i2 | 0) < 0) i1 = 0; else i1 = HEAP32[(HEAP32[gb + 46040 + 112 >> 2] | 0) + (i2 << 2) >> 2] | 0;
 HEAP32[gb + 92120 >> 2] = i1;
 i1 = HEAP32[gb + 46040 + 116 >> 2] | 0;
 HEAP32[gb + 92108 >> 2] = (HEAP32[i1 + (i2 << 4) + 4 >> 2] | 0) - (HEAP32[i1 + (i2 << 4) >> 2] | 0);
 i2 = (HEAP32[i1 + (i2 << 4) + 12 >> 2] | 0) - (HEAP32[i1 + (i2 << 4) + 8 >> 2] | 0) | 0;
 HEAP32[gb + 92104 >> 2] = i2;
 i1 = HEAP32[gb + 92140 + 192 >> 2] | 0;
 HEAP32[gb + 92140 + 192 >> 2] = (i1 | 0) > (i2 | 0) ? i1 : i2;
 __ZN15WeaponsResource20LoadAllWeaponSpritesEv(gb + 81328 | 0);
 i2 = (HEAP32[gb + 46040 + 8112 >> 2] | 0) > 639;
 HEAP32[gb + 92116 >> 2] = i2 ? 20 : 10;
 HEAP32[gb + 92112 >> 2] = i2 ? 4 : 2;
 return 1;
}

function __Z25V_SmoothInterpolateAnglesPfS_S_f(i10, i7, i8, d6) {
 i10 = i10 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 d6 = +d6;
 var d1 = 0.0, d2 = 0.0, d3 = 0.0, d4 = 0.0, i5 = 0, i9 = 0;
 _NormalizeAngles(i10);
 _NormalizeAngles(i7);
 i9 = 0;
 do {
  d3 = +HEAPF32[i7 + (i9 << 2) >> 2];
  d4 = +HEAPF32[i10 + (i9 << 2) >> 2];
  if (d3 - d4 > 180.0) d1 = d3 - d4 + -360.0; else if (d3 - d4 < -180.0) d1 = d3 - d4 + 360.0; else d1 = d3 - d4;
  i5 = d1 > 0.0;
  d2 = i5 ? d1 : -d1;
  do if (d2 > .009999999776482582) {
   d1 = +HEAPF32[gb + 116296 >> 2] * d6;
   if (d2 < d6 * .25) d1 = d2 / (d6 * .25) * (d2 / (d6 * .25)) * d1;
   if (d1 > d2) {
    HEAPF32[i8 + (i9 << 2) >> 2] = d3;
    break;
   }
   if (i5) {
    HEAPF32[i8 + (i9 << 2) >> 2] = d4 + d1;
    break;
   } else {
    HEAPF32[i8 + (i9 << 2) >> 2] = d4 - d1;
    break;
   }
  } else HEAPF32[i8 + (i9 << 2) >> 2] = d3; while (0);
  i9 = i9 + 1 | 0;
 } while ((i9 | 0) != 3);
 _NormalizeAngles(i8);
 return;
}

function __ZN6CGauss9StartFireEv(i2) {
 i2 = i2 | 0;
 var d1 = 0.0, i3 = 0, i4 = 0, d5 = 0.0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = HEAP32[i2 + 128 >> 2] | 0;
 mftCall_vii(HEAP32[(HEAP32[i4 >> 2] | 0) + 476 >> 2] | 0, i3 | 0, i4 | 0);
 d1 = +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2] - +HEAPF32[(HEAP32[i2 + 128 >> 2] | 0) + 1580 >> 2];
 i4 = __Z14bIsMultiplayerv() | 0;
 if (d1 > (i4 ? 1.5 : 4.0)) d1 = 200.0; else {
  d1 = +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2] - +HEAPF32[(HEAP32[i2 + 128 >> 2] | 0) + 1580 >> 2];
  i4 = __Z14bIsMultiplayerv() | 0;
  d1 = d1 / (i4 ? 1.5 : 4.0) * 200.0;
 }
 d1 = (HEAP32[i2 + 212 >> 2] | 0) == 0 ? d1 : 20.0;
 d5 = +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2];
 d5 = d5 + +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i2 + 128 >> 2] | 0) + 680 >> 2] | 0, .30000001192092896, .800000011920929);
 HEAPF32[(HEAP32[i2 + 128 >> 2] | 0) + 1588 >> 2] = d5;
 __ZN6CGauss4FireE6VectorS0_f(i2, 0, 0, d1);
 STACKTOP = i3;
 return;
}

function __ZN5CEgon8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 36828 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44047 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44029 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 39624 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39466 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 37391 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 37350 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 37325 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 37372 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 36846 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39176 | 0) | 0;
 HEAP16[i1 + 232 >> 1] = mftCall_iii(HEAP32[gb + 56972 + 488 >> 2] | 0, 1, gb + 38112 | 0) | 0;
 HEAP16[i1 + 212 >> 1] = mftCall_iii(HEAP32[gb + 56972 + 488 >> 2] | 0, 1, gb + 38132 | 0) | 0;
 return;
}

function __ZN8CHudAmmo18MsgFunc_WeaponListEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 __Z11READ_STRINGv() | 0;
 _strcpy(i4 | 0, gb + 127001 | 0) | 0;
 HEAP32[i4 + 128 >> 2] = __Z9READ_CHARv() | 0;
 i3 = __Z9READ_BYTEv() | 0;
 HEAP32[i4 + 136 >> 2] = (i3 | 0) == 255 ? -1 : i3;
 HEAP32[i4 + 132 >> 2] = __Z9READ_CHARv() | 0;
 i3 = __Z9READ_BYTEv() | 0;
 HEAP32[i4 + 140 >> 2] = (i3 | 0) == 255 ? -1 : i3;
 HEAP32[i4 + 144 >> 2] = __Z9READ_CHARv() | 0;
 HEAP32[i4 + 148 >> 2] = __Z9READ_CHARv() | 0;
 HEAP32[i4 + 156 >> 2] = __Z9READ_CHARv() | 0;
 HEAP32[i4 + 152 >> 2] = __Z9READ_BYTEv() | 0;
 HEAP32[i4 + 160 >> 2] = 0;
 i3 = HEAP32[i4 + 156 >> 2] | 0;
 _memcpy(gb + 81328 + (i3 * 328 | 0) | 0, i4 | 0, 328) | 0;
 __ZN15WeaponsResource17LoadWeaponSpritesEP6WEAPON(0, gb + 81328 + (i3 * 328 | 0) | 0);
 STACKTOP = i4;
 return 1;
}

function _PM_FixPlayerCrouchStuck(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0;
 i6 = HEAP32[gb + 121136 >> 2] | 0;
 L1 : do if ((mftCall_iii(HEAP32[i6 + 324956 >> 2] | 0, i6 + 56 | 0, 0) | 0) != -1) {
  i6 = HEAP32[gb + 121136 >> 2] | 0;
  i2 = HEAP32[i6 + 56 >> 2] | 0;
  i3 = HEAP32[i6 + 60 >> 2] | 0;
  i4 = HEAP32[i6 + 64 >> 2] | 0;
  HEAPF32[i6 + 64 >> 2] = +(i5 | 0) + (HEAP32[tempDoublePtr >> 2] = i4, +HEAPF32[tempDoublePtr >> 2]);
  if ((mftCall_iii(HEAP32[i6 + 324956 >> 2] | 0, i6 + 56 | 0, 0) | 0) != -1) {
   i6 = 1;
   while (1) {
    i1 = HEAP32[gb + 121136 >> 2] | 0;
    if ((i6 | 0) >= 36) break;
    HEAPF32[i1 + 64 >> 2] = +(i5 | 0) + +HEAPF32[i1 + 64 >> 2];
    if ((mftCall_iii(HEAP32[i1 + 324956 >> 2] | 0, i1 + 56 | 0, 0) | 0) == -1) break L1; else i6 = i6 + 1 | 0;
   }
   HEAP32[i1 + 56 >> 2] = i2;
   HEAP32[i1 + 60 >> 2] = i3;
   HEAP32[i1 + 64 >> 2] = i4;
  }
 } while (0);
 return;
}

function __ZN10CHudHealth14MsgFunc_DamageEPKciPv(i5, i1, i2, i3) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 __Z10BEGIN_READPvi(i3, i2);
 i1 = __Z9READ_BYTEv() | 0;
 i4 = __Z9READ_BYTEv() | 0;
 i2 = __Z9READ_LONGv() | 0;
 i3 = 0;
 do {
  HEAPF32[i6 + 12 + (i3 << 2) >> 2] = +__Z10READ_COORDv();
  i3 = i3 + 1 | 0;
 } while ((i3 | 0) != 3);
 __ZN10CHudHealth11UpdateTilesEfl(i5, +HEAPF32[gb + 46040 + 36 >> 2], i2);
 if ((i1 | 0) > 0 | (i4 | 0) > 0) {
  HEAP32[i6 >> 2] = HEAP32[i6 + 12 >> 2];
  HEAP32[i6 + 4 >> 2] = HEAP32[i6 + 12 + 4 >> 2];
  HEAP32[i6 + 8 >> 2] = HEAP32[i6 + 12 + 8 >> 2];
  __ZN10CHudHealth19CalcDamageDirectionE6Vector(i5, i6);
  i1 = HEAP32[gb + 92876 >> 2] | 0;
  if ((i4 | 0) > 0 & (i1 | 0) != 0) mftCall_vdi(HEAP32[i1 + 4 >> 2] | 0, +(+(i4 | 0) * 4.0 > 200.0 ? 200.0 : +(i4 | 0) * 4.0), 0);
 }
 STACKTOP = i6;
 return 1;
}

function __ZN13CHudSpectator17AddOverviewEntityEiP11cl_entity_sPKc(i6, i2, i5, i1) {
 i6 = i6 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 var d3 = 0.0, i4 = 0;
 L1 : do if ((i2 | 0) == 1 & (i5 | 0) != 0) if (!(HEAP16[i5 + 746 >> 1] | 0)) i1 = 0; else {
  switch (HEAP16[gb + 122336 + ((HEAP32[i5 >> 2] | 0) * 24 | 0) + 6 >> 1] | 0) {
  case 1:
   {
    i1 = i6 + 4656 | 0;
    break;
   }
  case 2:
   {
    i1 = i6 + 4660 | 0;
    break;
   }
  default:
   i1 = i6 + 4664 | 0;
  }
  i4 = HEAP32[i1 >> 2] | 0;
  d3 = +mftCall_d(HEAP32[gb + 92340 + 216 >> 2] | 0) + -1.0;
  i1 = 0;
  while (1) {
   i2 = i6 + 1768 + (i1 << 4) + 4 | 0;
   if (!(HEAP32[i2 >> 2] | 0)) break;
   i1 = i1 + 1 | 0;
   if ((i1 | 0) >= 128) {
    i1 = 0;
    break L1;
   }
  }
  HEAP32[i2 >> 2] = i5;
  HEAP32[i6 + 1768 + (i1 << 4) >> 2] = i4;
  HEAPF64[i6 + 1768 + (i1 << 4) + 8 >> 3] = d3;
  i1 = 1;
 } else i1 = 0; while (0);
 return i1 | 0;
}

function __ZN6CGauss13PrimaryAttackEv(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = HEAP32[i3 + 128 >> 2] | 0;
 do if ((HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 448 >> 2] | 0) == 3) {
  mftCall_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 316 >> 2] | 0, i3 | 0) | 0;
  HEAPF32[i3 + 156 >> 2] = .15000000596046448;
  HEAPF32[i3 + 160 >> 2] = .15000000596046448;
 } else {
  i2 = i1 + 1236 + (HEAP32[i3 + 168 >> 2] << 2) | 0;
  if ((HEAP32[i2 >> 2] | 0) < 2) {
   mftCall_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 316 >> 2] | 0, i3 | 0) | 0;
   HEAPF32[(HEAP32[i3 + 128 >> 2] | 0) + 612 >> 2] = .5;
   break;
  } else {
   HEAP32[i1 + 692 >> 2] = 450;
   HEAP32[i3 + 212 >> 2] = 1;
   HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + -2;
   __ZN6CGauss9StartFireEv(i3);
   HEAP32[i3 + 92 >> 2] = 0;
   HEAPF32[i3 + 164 >> 2] = 1.0;
   HEAPF32[(HEAP32[i3 + 128 >> 2] | 0) + 612 >> 2] = .20000000298023224;
   break;
  }
 } while (0);
 return;
}

function __Z17HUD_PlaybackEventiPK7edict_stfPfS2_ffiiii(i7, i12, i6, d5, i2, i1, d8, d9, i10, i11, i3, i4) {
 i7 = i7 | 0;
 i12 = i12 | 0;
 i6 = i6 | 0;
 d5 = +d5;
 i2 = i2 | 0;
 i1 = i1 | 0;
 d8 = +d8;
 d9 = +d9;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i1 = HEAP32[gb + 92900 >> 2] | 0;
 if ((HEAP32[gb + 92896 >> 2] | 0) != 0 & (i1 | 0) != 0) {
  HEAP32[i2 + 12 >> 2] = HEAP32[i1 + 16 >> 2];
  HEAP32[i2 + 12 + 4 >> 2] = HEAP32[i1 + 16 + 4 >> 2];
  HEAP32[i2 + 12 + 8 >> 2] = HEAP32[i1 + 16 + 8 >> 2];
  HEAP32[i2 >> 2] = HEAP32[gb + 116248 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[gb + 116248 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[gb + 116248 + 8 >> 2];
  mftCall_viiidiiddiiii(HEAP32[gb + 92340 + 260 >> 2] | 0, i7 | 0, i12 | 0, i6 | 0, +d5, i2 + 12 | 0, i2 | 0, +d8, +d9, i10 | 0, i11 | 0, i3 | 0, i4 | 0);
 }
 STACKTOP = i2;
 return;
}

function __ZN13CHudSpectator11InitHUDDataEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 + 4728 >> 2] = 0;
 HEAP32[i1 + 4724 >> 2] = 0;
 HEAPF32[i1 + 4712 >> 2] = 0.0;
 HEAP32[i1 + 1400 >> 2] = 0;
 HEAP32[i1 + 3820 >> 2] = 0;
 HEAP32[gb + 121144 >> 2] = 0;
 HEAP32[gb + 121108 >> 2] = 0;
 HEAP32[gb + 121104 >> 2] = 0;
 _memset(i1 + 1404 | 0, 0, 2412) | 0;
 if (!(mftCall_i(HEAP32[gb + 92340 + 352 >> 2] | 0) | 0)) if (!(mftCall_i(HEAP32[(HEAP32[gb + 92340 + 340 >> 2] | 0) + 4 >> 2] | 0) | 0)) HEAPF32[(HEAP32[i1 + 3852 >> 2] | 0) + 12 >> 2] = 0.0; else i2 = 3; else i2 = 3;
 if ((i2 | 0) == 3) HEAPF32[(HEAP32[i1 + 3852 >> 2] | 0) + 12 >> 2] = 1.0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] | 0, i1 | 0);
 __ZN13CHudSpectator8SetModesEii(i1, 2, 0);
 HEAP32[gb + 121108 >> 2] = 0;
 i2 = ~~+mftCall_di(HEAP32[gb + 92340 + 60 >> 2] | 0, gb + 41021 | 0);
 HEAP32[gb + 46040 + 88 >> 2] = i2;
 return;
}

function __ZN9CCrossbow14FireSniperBoltEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 HEAPF32[i2 + 156 >> 2] = .75;
 i1 = HEAP32[i2 + 176 >> 2] | 0;
 if (!i1) mftCall_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 316 >> 2] | 0, i2 | 0) | 0; else {
  i4 = HEAP32[i2 + 128 >> 2] | 0;
  HEAP32[i4 + 692 >> 2] = 200;
  HEAP32[i2 + 176 >> 2] = i1 + -1;
  mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 1, HEAP32[(HEAP32[i4 + 4 >> 2] | 0) + 520 >> 2] | 0, HEAP16[i2 + 202 >> 1] | 0, 0.0, gb + 56956 | 0, gb + 56956 | 0, 0.0, 0.0, i1 + -1 | 0, HEAP32[i4 + 1236 + (HEAP32[i2 + 168 >> 2] << 2) >> 2] | 0, 0, 0);
  i2 = HEAP32[i2 + 128 >> 2] | 0;
  mftCall_vii(HEAP32[(HEAP32[i2 >> 2] | 0) + 476 >> 2] | 0, i3 | 0, i2 | 0);
  __Z14UTIL_TraceLineRK6VectorS1_15IGNORE_MONSTERSP7edict_sP11TraceResult(0, 0, 0, 0, i3 + 16 | 0);
 }
 STACKTOP = i3;
 return;
}

function __ZN9CCrossbow8FireBoltEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = HEAP32[i2 + 176 >> 2] | 0;
 if (!i1) mftCall_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 316 >> 2] | 0, i2 | 0) | 0; else {
  i4 = HEAP32[i2 + 128 >> 2] | 0;
  HEAP32[i4 + 692 >> 2] = 200;
  HEAP32[i2 + 176 >> 2] = i1 + -1;
  mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 1, HEAP32[(HEAP32[i4 + 4 >> 2] | 0) + 520 >> 2] | 0, HEAP16[i2 + 200 >> 1] | 0, 0.0, gb + 56956 | 0, gb + 56956 | 0, 0.0, 0.0, i1 + -1 | 0, HEAP32[i4 + 1236 + (HEAP32[i2 + 168 >> 2] << 2) >> 2] | 0, 0, 0);
  i1 = HEAP32[i2 + 128 >> 2] | 0;
  mftCall_vii(HEAP32[(HEAP32[i1 >> 2] | 0) + 476 >> 2] | 0, i3 | 0, i1 | 0);
  HEAPF32[i2 + 156 >> 2] = .75;
  HEAPF32[i2 + 160 >> 2] = .75;
  HEAPF32[i2 + 164 >> 2] = (HEAP32[i2 + 176 >> 2] | 0) == 0 ? .75 : 5.0;
 }
 STACKTOP = i3;
 return;
}

function __Z15CAM_ClearStatesv() {
 var i1 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 mftCall_vi(HEAP32[gb + 92340 + 136 >> 2] | 0, i1 | 0);
 HEAP32[gb + 93860 + 8 >> 2] = 0;
 HEAP32[gb + 93872 + 8 >> 2] = 0;
 HEAP32[gb + 93884 + 8 >> 2] = 0;
 HEAP32[gb + 93896 + 8 >> 2] = 0;
 HEAP32[gb + 93908 + 8 >> 2] = 0;
 HEAP32[gb + 93920 + 8 >> 2] = 0;
 HEAP32[gb + 93828 >> 2] = 0;
 HEAPF32[(HEAP32[gb + 93768 >> 2] | 0) + 12 >> 2] = 0.0;
 HEAP32[gb + 93832 >> 2] = 0;
 HEAPF32[(HEAP32[gb + 93772 >> 2] | 0) + 12 >> 2] = 0.0;
 HEAP32[gb + 93840 >> 2] = 0;
 HEAPF32[gb + 93816 >> 2] = 0.0;
 HEAPF32[gb + 93816 + 4 >> 2] = 0.0;
 HEAPF32[gb + 93816 + 8 >> 2] = 30.0;
 HEAP32[(HEAP32[gb + 93780 >> 2] | 0) + 12 >> 2] = HEAP32[i1 >> 2];
 HEAP32[(HEAP32[gb + 93776 >> 2] | 0) + 12 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAPF32[(HEAP32[gb + 93784 >> 2] | 0) + 12 >> 2] = 30.0;
 STACKTOP = i1;
 return;
}

function __ZN4CHud5ThinkEv(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, d3 = 0.0, i4 = 0;
 i1 = HEAP32[i5 >> 2] | 0;
 if (i1 | 0) do {
  i2 = HEAP32[i1 >> 2] | 0;
  if (HEAP32[i2 + 16 >> 2] & 1 | 0) mftCall_vi(HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] | 0, i2 | 0);
  i1 = HEAP32[i1 + 4 >> 2] | 0;
 } while ((i1 | 0) != 0);
 i4 = ~~+__Z10HUD_GetFOVv();
 i2 = (HEAP32[i5 + 124 >> 2] | 0) + 12 | 0;
 if (!i4) i1 = ~~+HEAPF32[i2 >> 2]; else i1 = i4;
 HEAP32[i5 + 88 >> 2] = i1;
 d3 = +HEAPF32[i2 >> 2];
 if (+(i1 | 0) == d3) d3 = 0.0; else {
  d3 = +(i4 | 0) / d3 * +HEAPF32[(HEAP32[gb + 118452 >> 2] | 0) + 12 >> 2];
  d3 = d3 * +mftCall_di(HEAP32[gb + 92340 + 60 >> 2] | 0, gb + 40954 | 0);
  i1 = HEAP32[i5 + 88 >> 2] | 0;
 }
 HEAPF32[i5 + 24 >> 2] = d3;
 if (!i1) {
  d3 = +HEAPF32[(HEAP32[i5 + 124 >> 2] | 0) + 12 >> 2];
  HEAP32[i5 + 88 >> 2] = d3 > 90.0 ? ~~d3 : 90;
 }
 return;
}

function _PM_AirAccelerate(i9, d4, d2) {
 i9 = i9 | 0;
 d4 = +d4;
 d2 = +d2;
 var i1 = 0, d3 = 0.0, d5 = 0.0, d6 = 0.0, d7 = 0.0, i8 = 0;
 i8 = HEAP32[gb + 121136 >> 2] | 0;
 if (!(HEAP32[i8 + 208 >> 2] | 0)) if (!(+HEAPF32[i8 + 204 >> 2] != 0.0)) {
  d5 = +HEAPF32[i8 + 92 >> 2];
  d6 = +HEAPF32[i9 >> 2];
  d7 = +HEAPF32[i8 + 96 >> 2];
  d3 = (d4 > 30.0 ? 30.0 : d4) - (d5 * d6 + d7 * +HEAPF32[i9 + 4 >> 2] + +HEAPF32[i8 + 100 >> 2] * +HEAPF32[i9 + 8 >> 2]);
  if (!(d3 <= 0.0)) {
   d2 = d4 * d2 * +HEAPF32[i8 + 16 >> 2] * +HEAPF32[i8 + 196 >> 2];
   d2 = d2 > d3 ? d3 : d2;
   HEAPF32[i8 + 92 >> 2] = d5 + d6 * d2;
   HEAPF32[i8 + 96 >> 2] = d2 * +HEAPF32[i9 + 4 >> 2] + d7;
   i1 = 2;
   do {
    HEAPF32[i8 + 92 + (i1 << 2) >> 2] = d2 * +HEAPF32[i9 + (i1 << 2) >> 2] + +HEAPF32[i8 + 92 + (i1 << 2) >> 2];
    i1 = i1 + 1 | 0;
   } while ((i1 | 0) != 3);
  }
 }
 return;
}

function __ZN15HistoryResource12AddToHistoryEiPKci(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i5 = 0;
 if ((i1 | 0) == 3) {
  i5 = HEAP32[gb + 92140 + 192 >> 2] | 0;
  i1 = HEAP32[i4 + 196 >> 2] | 0;
  i5 = (i5 << 1) + 32 + (Math_imul(i5 + 5 | 0, i1) | 0) | 0;
  if ((i1 | 0) > 11 ? 1 : (i5 | 0) > ((HEAP32[gb + 46040 + 8116 >> 2] | 0) + -100 | 0)) {
   HEAP32[i4 + 196 >> 2] = 0;
   i1 = 0;
  }
  HEAP32[i4 + 196 >> 2] = i1 + 1;
  i2 = __ZN4CHud14GetSpriteIndexEPKc(gb + 46040 | 0, i2) | 0;
  if ((i2 | 0) != -1) {
   HEAP32[i4 + (i1 << 4) + 12 >> 2] = i2;
   HEAP32[i4 + (i1 << 4) >> 2] = 3;
   HEAP32[i4 + (i1 << 4) + 8 >> 2] = i3;
   i5 = ~~+mftCall_di(HEAP32[gb + 92340 + 60 >> 2] | 0, gb + 40086 | 0);
   HEAP32[gb + 33872 >> 2] = i5;
   HEAPF32[i4 + (i1 << 4) + 4 >> 2] = +HEAPF32[gb + 46040 + 36 >> 2] + +(i5 | 0);
  }
 }
 return;
}

function _AngleVectorsTranspose(i1, i8, i9, i10) {
 i1 = i1 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var d2 = 0.0, d3 = 0.0, d4 = 0.0, d5 = 0.0, d6 = 0.0, d7 = 0.0;
 d7 = +HEAPF32[i1 + 4 >> 2] * .017453292519943295;
 d6 = +Math_sin(+d7);
 d7 = +Math_cos(+d7);
 d5 = +HEAPF32[i1 >> 2] * .017453292519943295;
 d4 = +Math_sin(+d5);
 d5 = +Math_cos(+d5);
 d3 = +HEAPF32[i1 + 8 >> 2] * .017453292519943295;
 d2 = +Math_sin(+d3);
 d3 = +Math_cos(+d3);
 if (i8 | 0) {
  HEAPF32[i8 >> 2] = d7 * d5;
  HEAPF32[i8 + 4 >> 2] = d7 * d4 * d2 - d6 * d3;
  HEAPF32[i8 + 8 >> 2] = d6 * d2 + d7 * d4 * d3;
 }
 if (i9 | 0) {
  HEAPF32[i9 >> 2] = d6 * d5;
  HEAPF32[i9 + 4 >> 2] = d6 * d4 * d2 + d7 * d3;
  HEAPF32[i9 + 8 >> 2] = d6 * d4 * d3 - d7 * d2;
 }
 if (i10 | 0) {
  HEAPF32[i10 >> 2] = -d4;
  HEAPF32[i10 + 4 >> 2] = d5 * d2;
  HEAPF32[i10 + 8 >> 2] = d5 * d3;
 }
 return;
}

function __Z14V_CalcViewRollP12ref_params_s(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, d4 = 0.0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i1 = mftCall_ii(HEAP32[gb + 92340 + 212 >> 2] | 0, HEAP32[i2 + 176 >> 2] | 0) | 0;
 if (i1 | 0) {
  HEAP32[i3 + 12 >> 2] = HEAP32[i1 + 2900 >> 2];
  HEAP32[i3 + 12 + 4 >> 2] = HEAP32[i1 + 2904 >> 2];
  HEAP32[i3 + 12 + 8 >> 2] = HEAP32[i1 + 2908 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i2 + 88 >> 2];
  HEAP32[i3 + 4 >> 2] = HEAP32[i2 + 92 >> 2];
  HEAP32[i3 + 8 >> 2] = HEAP32[i2 + 96 >> 2];
  i1 = HEAP32[i2 + 204 >> 2] | 0;
  d4 = +__Z10V_CalcRoll6VectorS_ff(i3 + 12 | 0, i3, +HEAPF32[i1 + 100 >> 2], +HEAPF32[i1 + 104 >> 2]);
  HEAPF32[i2 + 12 + 8 >> 2] = d4 + +HEAPF32[i2 + 12 + 8 >> 2];
  if ((HEAP32[i2 + 140 >> 2] | 0) < 1) if (+HEAPF32[i2 + 112 + 8 >> 2] != 0.0) HEAPF32[i2 + 12 + 8 >> 2] = 80.0;
 }
 STACKTOP = i3;
 return;
}

function __Z12ScrollTextUpv() {
 var i1 = 0;
 mftCall_vi(HEAP32[gb + 92340 + 120 >> 2] | 0, gb + 129049 | 0);
 HEAP8[gb + 129049 + 1280 >> 0] = 0;
 _memmove(gb + 129049 | 0, gb + 129049 + 256 | 0, 1280) | 0;
 _memmove(gb + 94380 | 0, gb + 94380 + 4 | 0, 20) | 0;
 _memmove(gb + 94404 | 0, gb + 94404 + 4 | 0, 20) | 0;
 HEAP8[gb + 129049 + 1024 >> 0] = 0;
 if ((HEAP8[gb + 129049 >> 0] | 0) == 32) {
  i1 = 1;
  do {
   HEAP8[gb + 129049 >> 0] = 2;
   i1 = i1 + 1 | 0;
   mftCall_vi(HEAP32[gb + 92340 + 120 >> 2] | 0, gb + 129049 | 0);
   HEAP8[gb + 129049 + 1280 >> 0] = 0;
   _memmove(gb + 129049 | 0, gb + 129049 + 256 | 0, 1280) | 0;
   _memmove(gb + 94380 | 0, gb + 94380 + 4 | 0, 20) | 0;
   _memmove(gb + 94404 | 0, gb + 94404 + 4 | 0, 20) | 0;
   HEAP8[gb + 129049 + 1024 >> 0] = 0;
  } while ((HEAP8[gb + 129049 >> 0] | 0) == 32);
 } else i1 = 1;
 return i1 | 0;
}

function _AngleVectors(i1, i8, i9, i10) {
 i1 = i1 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var d2 = 0.0, d3 = 0.0, d4 = 0.0, d5 = 0.0, d6 = 0.0, d7 = 0.0;
 d7 = +HEAPF32[i1 + 4 >> 2] * .017453292519943295;
 d6 = +Math_sin(+d7);
 d7 = +Math_cos(+d7);
 d5 = +HEAPF32[i1 >> 2] * .017453292519943295;
 d4 = +Math_sin(+d5);
 d5 = +Math_cos(+d5);
 d3 = +HEAPF32[i1 + 8 >> 2] * .017453292519943295;
 d2 = +Math_sin(+d3);
 d3 = +Math_cos(+d3);
 if (i8 | 0) {
  HEAPF32[i8 >> 2] = d7 * d5;
  HEAPF32[i8 + 4 >> 2] = d6 * d5;
  HEAPF32[i8 + 8 >> 2] = -d4;
 }
 if (i9 | 0) {
  HEAPF32[i9 >> 2] = d7 * d4 * -d2 + d6 * d3;
  HEAPF32[i9 + 4 >> 2] = d6 * d4 * -d2 - d7 * d3;
  HEAPF32[i9 + 8 >> 2] = d5 * -d2;
 }
 if (i10 | 0) {
  HEAPF32[i10 >> 2] = d6 * d2 + d7 * d4 * d3;
  HEAPF32[i10 + 4 >> 2] = d6 * d4 * d3 - d7 * d2;
  HEAPF32[i10 + 8 >> 2] = d5 * d3;
 }
 return;
}

function _AngleIMatrix(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0, d4 = 0.0, d5 = 0.0, d6 = 0.0, d7 = 0.0, d8 = 0.0;
 d6 = +HEAPF32[i1 + 4 >> 2] * .017453292519943295;
 d8 = +Math_sin(+d6);
 d6 = +Math_cos(+d6);
 d4 = +HEAPF32[i1 >> 2] * .017453292519943295;
 d7 = +Math_sin(+d4);
 d4 = +Math_cos(+d4);
 d3 = +HEAPF32[i1 + 8 >> 2] * .017453292519943295;
 d5 = +Math_sin(+d3);
 d3 = +Math_cos(+d3);
 HEAPF32[i2 >> 2] = d6 * d4;
 HEAPF32[i2 + 4 >> 2] = d8 * d4;
 HEAPF32[i2 + 8 >> 2] = -d7;
 HEAPF32[i2 + 16 >> 2] = d6 * d7 * d5 - d8 * d3;
 HEAPF32[i2 + 20 >> 2] = d8 * d7 * d5 + d6 * d3;
 HEAPF32[i2 + 24 >> 2] = d4 * d5;
 HEAPF32[i2 + 32 >> 2] = d8 * d5 + d6 * d7 * d3;
 HEAPF32[i2 + 36 >> 2] = d8 * d7 * d3 - d6 * d5;
 HEAPF32[i2 + 40 >> 2] = d4 * d3;
 HEAPF32[i2 + 12 >> 2] = 0.0;
 HEAPF32[i2 + 28 >> 2] = 0.0;
 HEAPF32[i2 + 44 >> 2] = 0.0;
 return;
}

function __Z20V_GetMapFreePositionPfS_S_(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0, d5 = 0.0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i6 = HEAP32[i2 >> 2] | 0;
 HEAP32[i1 >> 2] = i6;
 HEAP32[i1 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
 HEAP32[i1 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 d5 = (HEAP32[tempDoublePtr >> 2] = i6, +HEAPF32[tempDoublePtr >> 2]) * .011111111380159855 * 38.75 + 51.25;
 HEAPF32[i1 >> 2] = d5;
 HEAP32[i4 >> 2] = HEAP32[gb + 46040 + 4252 >> 2];
 HEAP32[i4 + 4 >> 2] = HEAP32[gb + 46040 + 4256 >> 2];
 HEAPF32[i4 + 8 >> 2] = (90.0 - d5) * .011111111380159855 * +HEAPF32[gb + 46040 + 4260 >> 2];
 mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i1 | 0, i4 + 12 | 0, 0, 0);
 +_VectorNormalize(i4 + 12 | 0);
 _VectorMA(i4, -(4096.0 / +HEAPF32[gb + 46040 + 4248 >> 2]), i4 + 12 | 0, i3);
 STACKTOP = i4;
 return;
}

function _EV_EgonStop(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i2 + 8 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i2 + 12 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i2 + 16 >> 2];
 mftCall_viii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 8 >> 2] | 0, i1 | 0, 6, gb + 37350 | 0);
 if (HEAP32[i2 + 56 >> 2] | 0) mftCall_viiiiddii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0, i1 | 0, i3 | 0, 1, gb + 37391 | 0, .9800000190734863, .800000011920929, 0, 100);
 if (__Z10EV_IsLocali(i1) | 0) {
  i1 = HEAP32[gb + 56820 >> 2] | 0;
  if (i1 | 0) {
   HEAPF32[i1 + 56 >> 2] = 0.0;
   HEAP32[gb + 56820 >> 2] = 0;
  }
  i1 = HEAP32[gb + 56824 >> 2] | 0;
  if (i1 | 0) {
   HEAPF32[i1 + 56 >> 2] = 0.0;
   HEAP32[gb + 56824 >> 2] = 0;
  }
 }
 STACKTOP = i3;
 return;
}

function _AngleMatrix(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0, d4 = 0.0, d5 = 0.0, d6 = 0.0, d7 = 0.0, d8 = 0.0;
 d6 = +HEAPF32[i1 + 4 >> 2] * .017453292519943295;
 d8 = +Math_sin(+d6);
 d6 = +Math_cos(+d6);
 d4 = +HEAPF32[i1 >> 2] * .017453292519943295;
 d7 = +Math_sin(+d4);
 d4 = +Math_cos(+d4);
 d3 = +HEAPF32[i1 + 8 >> 2] * .017453292519943295;
 d5 = +Math_sin(+d3);
 d3 = +Math_cos(+d3);
 HEAPF32[i2 >> 2] = d6 * d4;
 HEAPF32[i2 + 16 >> 2] = d8 * d4;
 HEAPF32[i2 + 32 >> 2] = -d7;
 HEAPF32[i2 + 4 >> 2] = d6 * d7 * d5 - d8 * d3;
 HEAPF32[i2 + 20 >> 2] = d8 * d7 * d5 + d6 * d3;
 HEAPF32[i2 + 36 >> 2] = d4 * d5;
 HEAPF32[i2 + 8 >> 2] = d8 * d5 + d6 * d7 * d3;
 HEAPF32[i2 + 24 >> 2] = d8 * d7 * d3 - d6 * d5;
 HEAPF32[i2 + 40 >> 2] = d4 * d3;
 HEAPF32[i2 + 12 >> 2] = 0.0;
 HEAPF32[i2 + 28 >> 2] = 0.0;
 HEAPF32[i2 + 44 >> 2] = 0.0;
 return;
}

function __ZN6CGlock8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44127 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 39425 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44103 | 0) | 0;
 HEAP32[i1 + 196 >> 2] = mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 39449 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39466 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39485 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39504 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39524 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39544 | 0) | 0;
 HEAP16[i1 + 200 >> 1] = mftCall_iii(HEAP32[gb + 56972 + 488 >> 2] | 0, 1, gb + 39564 | 0) | 0;
 HEAP16[i1 + 202 >> 1] = mftCall_iii(HEAP32[gb + 56972 + 488 >> 2] | 0, 1, gb + 39581 | 0) | 0;
 return;
}

function __ZN5CHgun15SecondaryAttackEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 mftCall_vi(HEAP32[(HEAP32[i2 >> 2] | 0) + 340 >> 2] | 0, i2 | 0);
 i1 = HEAP32[i2 + 128 >> 2] | 0;
 if ((HEAP32[i1 + 1236 + (HEAP32[i2 + 168 >> 2] << 2) >> 2] | 0) >= 1) {
  mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 1, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, HEAP16[i2 + 208 >> 1] | 0, 0.0, gb + 56956 | 0, gb + 56956 | 0, 0.0, 0.0, 1, 0, 0, 0);
  i1 = HEAP32[i2 + 128 >> 2] | 0;
  i3 = i1 + 1236 + (HEAP32[i2 + 168 >> 2] << 2) | 0;
  HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + -1;
  HEAP32[i1 + 692 >> 2] = 600;
  HEAP32[i1 + 700 >> 2] = 128;
  HEAPF32[i2 + 160 >> 2] = .10000000149011612;
  HEAPF32[i2 + 156 >> 2] = .10000000149011612;
  HEAPF32[i2 + 164 >> 2] = +__Z22UTIL_SharedRandomFloatjff(HEAP32[i1 + 680 >> 2] | 0, 10.0, 15.0);
 }
 return;
}

function _PM_Accelerate(i9, d4, d2) {
 i9 = i9 | 0;
 d4 = +d4;
 d2 = +d2;
 var i1 = 0, d3 = 0.0, d5 = 0.0, d6 = 0.0, d7 = 0.0, i8 = 0;
 i8 = HEAP32[gb + 121136 >> 2] | 0;
 if (!(HEAP32[i8 + 208 >> 2] | 0)) if (!(+HEAPF32[i8 + 204 >> 2] != 0.0)) {
  d5 = +HEAPF32[i8 + 92 >> 2];
  d6 = +HEAPF32[i9 >> 2];
  d7 = +HEAPF32[i8 + 96 >> 2];
  d3 = d4 - (d5 * d6 + d7 * +HEAPF32[i9 + 4 >> 2] + +HEAPF32[i8 + 100 >> 2] * +HEAPF32[i9 + 8 >> 2]);
  if (!(d3 <= 0.0)) {
   d2 = +HEAPF32[i8 + 196 >> 2] * +HEAPF32[i8 + 16 >> 2] * d2 * d4;
   d2 = d2 > d3 ? d3 : d2;
   HEAPF32[i8 + 92 >> 2] = d5 + d6 * d2;
   HEAPF32[i8 + 96 >> 2] = d2 * +HEAPF32[i9 + 4 >> 2] + d7;
   i1 = 2;
   do {
    HEAPF32[i8 + 92 + (i1 << 2) >> 2] = d2 * +HEAPF32[i9 + (i1 << 2) >> 2] + +HEAPF32[i8 + 92 + (i1 << 2) >> 2];
    i1 = i1 + 1 | 0;
   } while ((i1 | 0) != 3);
  }
 }
 return;
}

function __ZN9CTripmine10WeaponIdleEv(i3) {
 i3 = i3 | 0;
 var d1 = 0.0, i2 = 0;
 do if (!(+HEAPF32[i3 + 164 >> 2] > 0.0)) {
  if ((HEAP32[(HEAP32[i3 + 128 >> 2] | 0) + 1236 + (HEAP32[i3 + 168 >> 2] << 2) >> 2] | 0) <= 0) {
   mftCall_vi(HEAP32[(HEAP32[i3 >> 2] | 0) + 348 >> 2] | 0, i3 | 0);
   break;
  }
  mftCall_viiii(HEAP32[(HEAP32[i3 >> 2] | 0) + 324 >> 2] | 0, i3 | 0, 6, 1, 0);
  d1 = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i3 + 128 >> 2] | 0) + 680 >> 2] | 0, 0.0, 1.0);
  do if (!(d1 <= .25)) if (!(d1 <= .75)) {
   HEAPF32[i3 + 164 >> 2] = 3.3333332538604736;
   i2 = 4;
   break;
  } else {
   HEAPF32[i3 + 164 >> 2] = 2.0;
   i2 = 1;
   break;
  } else {
   HEAPF32[i3 + 164 >> 2] = 3.0;
   i2 = 0;
  } while (0);
  mftCall_viiii(HEAP32[(HEAP32[i3 >> 2] | 0) + 324 >> 2] | 0, i3 | 0, i2 | 0, 1, 0);
 } while (0);
 return;
}

function _Demo_ReadBuffer(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 switch (HEAP32[i2 >> 2] | 0) {
 case 0:
  {
   i3 = HEAP32[i2 + 4 >> 2] | 0;
   HEAP32[gb + 93692 >> 2] = i3;
   if (i3 | 0) {
    HEAP32[gb + 93696 >> 2] = HEAP32[i2 + 8 >> 2];
    HEAP32[gb + 93712 >> 2] = HEAP32[i2 + 12 >> 2];
    HEAP32[gb + 93712 + 4 >> 2] = HEAP32[i2 + 16 >> 2];
    HEAP32[gb + 93712 + 8 >> 2] = HEAP32[i2 + 20 >> 2];
    HEAP32[gb + 93700 >> 2] = HEAP32[i2 + 24 >> 2];
    HEAP32[gb + 93700 + 4 >> 2] = HEAP32[i2 + 28 >> 2];
    HEAP32[gb + 93700 + 8 >> 2] = HEAP32[i2 + 32 >> 2];
   }
   break;
  }
 case 1:
  {
   HEAP32[gb + 93724 >> 2] = HEAP32[i2 + 4 >> 2];
   break;
  }
 default:
  mftCall_vii(HEAP32[gb + 92340 + 164 >> 2] | 0, gb + 40358 | 0, i1 | 0);
 }
 STACKTOP = i1;
 return;
}

function __Z7KeyDownP9kbutton_s(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = mftCall_ii(HEAP32[gb + 92340 + 156 >> 2] | 0, 1) | 0;
 if (!(HEAP8[i3 >> 0] | 0)) i4 = -1; else i4 = _atoi(i3 | 0) | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 L4 : do if ((i4 | 0) != (i1 | 0)) {
  i2 = HEAP32[i5 + 4 >> 2] | 0;
  if ((i4 | 0) != (i2 | 0)) {
   do if (!i1) HEAP32[i5 >> 2] = i4; else if (!i2) {
    HEAP32[i5 + 4 >> 2] = i4;
    break;
   } else {
    i5 = HEAP32[gb + 92340 + 164 >> 2] | 0;
    HEAP32[i6 >> 2] = i1;
    HEAP32[i6 + 4 >> 2] = i2;
    HEAP32[i6 + 8 >> 2] = i3;
    mftCall_vii(i5 | 0, gb + 42591 | 0, i6 | 0);
    break L4;
   } while (0);
   i1 = HEAP32[i5 + 8 >> 2] | 0;
   if (!(i1 & 1)) HEAP32[i5 + 8 >> 2] = i1 | 3;
  }
 } while (0);
 STACKTOP = i6;
 return;
}

function __ZN20CStudioModelRenderer19StudioEstimateFrameEP16mstudioseqdesc_t(i4, i5) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 var d1 = 0.0, i2 = 0, d3 = 0.0;
 if (!(HEAP32[i4 + 24 >> 2] | 0)) d3 = 0.0; else {
  d1 = +HEAPF64[i4 + 8 >> 3];
  i2 = HEAP32[i4 + 48 >> 2] | 0;
  d3 = +HEAPF32[i2 + 780 >> 2];
  if (d1 < d3) d3 = 0.0; else d3 = (d1 - d3) * +HEAPF32[i2 + 784 >> 2] * +HEAPF32[i5 + 32 >> 2];
 }
 i2 = HEAP32[i5 + 56 >> 2] | 0;
 if ((i2 | 0) < 2) d1 = 0.0; else d1 = +(i2 + -1 | 0) * +HEAPF32[(HEAP32[i4 + 48 >> 2] | 0) + 736 >> 2] * .00390625;
 d1 = d3 + d1;
 if (!(HEAP32[i5 + 36 >> 2] & 1)) {
  d1 = d1 >= +(i2 | 0) + -1.001 ? +(i2 | 0) + -1.001 : d1;
  if (d1 < 0.0) d1 = 0.0;
 } else {
  if ((i2 | 0) > 1) d1 = d1 - +(Math_imul(~~(d1 / +(i2 + -1 | 0)), i2 + -1 | 0) | 0);
  if (d1 < 0.0) d1 = +(i2 + -1 | 0) + d1;
 }
 return +d1;
}

function __ZN20CStudioModelRenderer21StudioCalcAttachmentsEv(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = HEAP32[i4 + 68 >> 2] | 0;
 i2 = HEAP32[i1 + 212 >> 2] | 0;
 if ((i2 | 0) > 4) {
  i3 = HEAP32[gb + 92340 + 164 >> 2] | 0;
  HEAP32[i5 >> 2] = HEAP32[(HEAP32[i4 + 48 >> 2] | 0) + 2964 >> 2];
  mftCall_vii(i3 | 0, gb + 43667 | 0, i5 | 0);
  _exit(-1);
 }
 i3 = i1 + (HEAP32[i1 + 216 >> 2] | 0) | 0;
 if ((i2 | 0) > 0) {
  i1 = 0;
  do {
   _VectorTransform(i3 + (i1 * 88 | 0) + 40 | 0, (HEAP32[i4 + 16556 >> 2] | 0) + ((HEAP32[i3 + (i1 * 88 | 0) + 36 >> 2] | 0) * 48 | 0) | 0, (HEAP32[i4 + 48 >> 2] | 0) + 2912 + (i1 * 12 | 0) | 0);
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) < (HEAP32[(HEAP32[i4 + 68 >> 2] | 0) + 212 >> 2] | 0));
 }
 STACKTOP = i5;
 return;
}

function _PM_NoClip() {
 var d1 = 0.0, d2 = 0.0, i3 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = HEAP32[gb + 121136 >> 2] | 0;
 d1 = +HEAPF32[i3 + 283752 >> 2];
 d2 = +HEAPF32[i3 + 283756 >> 2];
 +_VectorNormalize(i3 + 20 | 0);
 +_VectorNormalize((HEAP32[gb + 121136 >> 2] | 0) + 32 | 0);
 i3 = HEAP32[gb + 121136 >> 2] | 0;
 i4 = 0;
 do {
  HEAPF32[i5 + (i4 << 2) >> 2] = d1 * +HEAPF32[i3 + 20 + (i4 << 2) >> 2] + d2 * +HEAPF32[i3 + 32 + (i4 << 2) >> 2];
  i4 = i4 + 1 | 0;
 } while ((i4 | 0) != 3);
 HEAPF32[i5 + 8 >> 2] = +HEAPF32[i3 + 283760 >> 2] + +HEAPF32[i5 + 8 >> 2];
 _VectorMA(i3 + 56 | 0, +HEAPF32[i3 + 16 >> 2], i5, i3 + 56 | 0);
 i4 = HEAP32[gb + 121136 >> 2] | 0;
 HEAPF32[i4 + 92 >> 2] = 0.0;
 HEAPF32[i4 + 96 >> 2] = 0.0;
 HEAPF32[i4 + 100 >> 2] = 0.0;
 STACKTOP = i5;
 return;
}

function __ZN15HistoryResource12AddToHistoryEiii(i5, i4, i3, i2) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0, i6 = 0;
 if ((i4 | 0) != 1 | (i2 | 0) != 0) {
  i6 = HEAP32[gb + 92140 + 192 >> 2] | 0;
  i1 = HEAP32[i5 + 196 >> 2] | 0;
  i6 = (i6 << 1) + 32 + (Math_imul(i6 + 5 | 0, i1) | 0) | 0;
  if ((i1 | 0) > 11 ? 1 : (i6 | 0) > ((HEAP32[gb + 46040 + 8116 >> 2] | 0) + -100 | 0)) {
   HEAP32[i5 + 196 >> 2] = 0;
   i1 = 0;
  }
  HEAP32[i5 + 196 >> 2] = i1 + 1;
  i6 = ~~+mftCall_di(HEAP32[gb + 92340 + 60 >> 2] | 0, gb + 40086 | 0);
  HEAP32[gb + 33872 >> 2] = i6;
  HEAP32[i5 + (i1 << 4) >> 2] = i4;
  HEAP32[i5 + (i1 << 4) + 12 >> 2] = i3;
  HEAP32[i5 + (i1 << 4) + 8 >> 2] = i2;
  HEAPF32[i5 + (i1 << 4) + 4 >> 2] = +HEAPF32[gb + 46040 + 36 >> 2] + +(HEAP32[gb + 33872 >> 2] | 0);
 }
 return;
}

function _PM_ParticleLine(i6, i1, i5, d4, d7) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i5 = i5 | 0;
 d4 = +d4;
 d7 = +d7;
 var d2 = 0.0, d3 = 0.0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 HEAPF32[i8 >> 2] = +HEAPF32[i1 >> 2] - +HEAPF32[i6 >> 2];
 HEAPF32[i8 + 4 >> 2] = +HEAPF32[i1 + 4 >> 2] - +HEAPF32[i6 + 4 >> 2];
 HEAPF32[i8 + 8 >> 2] = +HEAPF32[i1 + 8 >> 2] - +HEAPF32[i6 + 8 >> 2];
 d2 = +_VectorNormalize(i8);
 if (d2 >= 0.0) {
  d3 = 0.0;
  do {
   i1 = 0;
   do {
    HEAPF32[i8 + 12 + (i1 << 2) >> 2] = +HEAPF32[i6 + (i1 << 2) >> 2] + d3 * +HEAPF32[i8 + (i1 << 2) >> 2];
    i1 = i1 + 1 | 0;
   } while ((i1 | 0) != 3);
   mftCall_viidii(HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 324952 >> 2] | 0, i8 + 12 | 0, i5 | 0, +d4, 0, ~~d7 | 0);
   d3 = d3 + 2.0;
  } while (d3 <= d2);
 }
 STACKTOP = i8;
 return;
}

function __ZN5CHgun13PrimaryAttackEv(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, d5 = 0.0;
 mftCall_vi(HEAP32[(HEAP32[i4 >> 2] | 0) + 340 >> 2] | 0, i4 | 0);
 i1 = HEAP32[i4 + 128 >> 2] | 0;
 i3 = i1 + 1236 + (HEAP32[i4 + 168 >> 2] << 2) | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 if ((i2 | 0) >= 1) {
  HEAP32[i3 >> 2] = i2 + -1;
  HEAP32[i1 + 692 >> 2] = 200;
  HEAP32[i1 + 700 >> 2] = 128;
  mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 1, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, HEAP16[i4 + 208 >> 1] | 0, 0.0, gb + 56956 | 0, gb + 56956 | 0, 0.0, 0.0, 0, 0, 0, 0);
  d5 = +HEAPF32[i4 + 156 >> 2] + .25;
  HEAPF32[i4 + 156 >> 2] = d5 < 0.0 ? .25 : d5;
  HEAPF32[i4 + 164 >> 2] = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i4 + 128 >> 2] | 0) + 680 >> 2] | 0, 10.0, 15.0);
 }
 return;
}

function __ZN15CHudStatusIcons4DrawEf(i5, d1) {
 i5 = i5 | 0;
 d1 = +d1;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!(mftCall_i(HEAP32[gb + 92340 + 352 >> 2] | 0) | 0)) {
  i4 = 0;
  i2 = (HEAP32[gb + 46040 + 8116 >> 2] | 0) / 2 | 0;
  do {
   i3 = HEAP32[i5 + 20 + (i4 * 48 | 0) + 24 >> 2] | 0;
   if (i3) {
    i2 = i2 + -5 - (HEAP32[i5 + 20 + (i4 * 48 | 0) + 40 >> 2] | 0) + (HEAP32[i5 + 20 + (i4 * 48 | 0) + 36 >> 2] | 0) | 0;
    mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, i3 | 0, HEAPU8[i5 + 20 + (i4 * 48 | 0) + 44 >> 0] | 0 | 0, HEAPU8[i5 + 20 + (i4 * 48 | 0) + 45 >> 0] | 0 | 0, HEAPU8[i5 + 20 + (i4 * 48 | 0) + 46 >> 0] | 0 | 0);
    mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, 0, 5, i2 | 0, i5 + 20 + (i4 * 48 | 0) + 28 | 0);
   }
   i4 = i4 + 1 | 0;
  } while ((i4 | 0) != 4);
 }
 return 1;
}

function __ZN20CStudioModelRenderer4InitEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 36 >> 2] = mftCall_ii(HEAP32[gb + 94440 + 44 >> 2] | 0, gb + 43707 | 0) | 0;
 HEAP32[i1 + 40 >> 2] = mftCall_ii(HEAP32[gb + 94440 + 44 >> 2] | 0, gb + 43719 | 0) | 0;
 HEAP32[i1 + 44 >> 2] = mftCall_ii(HEAP32[gb + 94440 + 44 >> 2] | 0, gb + 43729 | 0) | 0;
 HEAP32[i1 + 88 >> 2] = mftCall_i(HEAP32[gb + 94440 + 52 >> 2] | 0) | 0;
 mftCall_vii(HEAP32[gb + 94440 + 56 >> 2] | 0, i1 + 16536 | 0, i1 + 16540 | 0);
 HEAP32[i1 + 16552 >> 2] = mftCall_i(HEAP32[gb + 94440 + 64 >> 2] | 0) | 0;
 HEAP32[i1 + 16556 >> 2] = mftCall_i(HEAP32[gb + 94440 + 68 >> 2] | 0) | 0;
 HEAP32[i1 + 16548 >> 2] = mftCall_i(HEAP32[gb + 94440 + 72 >> 2] | 0) | 0;
 HEAP32[i1 + 16544 >> 2] = mftCall_i(HEAP32[gb + 94440 + 76 >> 2] | 0) | 0;
 return;
}

function __ZN4CHud14MsgFunc_SetFOVEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i5 = 0, d6 = 0.0;
 __Z10BEGIN_READPvi(i2, i1);
 i2 = __Z9READ_BYTEv() | 0;
 i3 = ~~+mftCall_di(HEAP32[gb + 92340 + 60 >> 2] | 0, gb + 41021 | 0);
 i1 = HEAP32[gb + 93756 >> 2] | 0;
 if (!i1) i5 = 3; else if (!(+HEAPF32[i1 + 12 >> 2] != 0.0)) i5 = 3;
 do if ((i5 | 0) == 3) {
  HEAPF32[gb + 93760 >> 2] = +(i2 | 0);
  i5 = (i2 | 0) == 0 ? i3 : i2;
  HEAP32[i4 + 88 >> 2] = i5;
  if ((i5 | 0) == (i3 | 0)) {
   HEAPF32[i4 + 24 >> 2] = 0.0;
   break;
  } else {
   d6 = +(i2 | 0) / +(i3 | 0) * +HEAPF32[(HEAP32[gb + 118452 >> 2] | 0) + 12 >> 2];
   HEAPF32[i4 + 24 >> 2] = d6 * +mftCall_di(HEAP32[gb + 92340 + 60 >> 2] | 0, gb + 40954 | 0);
   break;
  }
 } while (0);
 return 1;
}

function __ZN13CHudSpectator12DrawOverviewEv(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, d3 = 0.0;
 i1 = HEAP32[gb + 121104 >> 2] | 0;
 do if (i1 | 0) {
  i2 = HEAP32[i4 + 20 >> 2] | 0;
  if (!((i1 + -5 | 0) >>> 0 > 1 & (i2 | 0) == 0)) {
   if ((i2 | 0) == 1) if (+HEAPF32[(HEAP32[i4 + 3856 >> 2] | 0) + 12 >> 2] < 3.0) break;
   __ZN13CHudSpectator17DrawOverviewLayerEv(i4);
   __ZN13CHudSpectator20DrawOverviewEntitiesEv(i4);
   d3 = +mftCall_d(HEAP32[gb + 92340 + 216 >> 2] | 0);
   i1 = 0;
   do {
    if (+HEAPF64[i4 + 1768 + (i1 << 4) + 8 >> 3] < d3) {
     i2 = i4 + 1768 + (i1 << 4) | 0;
     HEAP32[i2 >> 2] = 0;
     HEAP32[i2 + 4 >> 2] = 0;
     HEAP32[i2 + 8 >> 2] = 0;
     HEAP32[i2 + 12 >> 2] = 0;
    }
    i1 = i1 + 1 | 0;
   } while ((i1 | 0) != 128);
  }
 } while (0);
 return;
}

function __ZN9CHudTrain4DrawEf(i3, d2) {
 i3 = i3 | 0;
 d2 = +d2;
 var i1 = 0, i4 = 0;
 i1 = HEAP32[i3 + 20 >> 2] | 0;
 if (!i1) {
  i1 = __Z10LoadSpritePKc(gb + 43793 | 0) | 0;
  HEAP32[i3 + 20 >> 2] = i1;
 }
 if (HEAP32[i3 + 24 >> 2] | 0) {
  mftCall_viiii(HEAP32[gb + 92340 + 16 >> 2] | 0, i1 | 0, 255, 160, 0);
  i1 = HEAP32[gb + 46040 + 8116 >> 2] | 0;
  i1 = i1 - (mftCall_iii(HEAP32[gb + 92340 + 8 >> 2] | 0, HEAP32[i3 + 20 >> 2] | 0, 0) | 0) | 0;
  i1 = i1 - (HEAP32[gb + 46040 + 108 >> 2] | 0) | 0;
  i4 = (HEAP32[gb + 46040 + 8112 >> 2] | 0) / 3 | 0;
  i4 = ((mftCall_iii(HEAP32[gb + 92340 + 12 >> 2] | 0, HEAP32[i3 + 20 >> 2] | 0, 0) | 0) / 4 | 0) + i4 | 0;
  mftCall_viiii(HEAP32[gb + 92340 + 28 >> 2] | 0, (HEAP32[i3 + 24 >> 2] | 0) + -1 | 0, i4 | 0, i1 | 0, 0);
 }
 return 1;
}

function __ZN4CRpg10WeaponIdleEv(i3) {
 i3 = i3 | 0;
 var i1 = 0, d2 = 0.0, i4 = 0;
 mftCall_vi(HEAP32[(HEAP32[i3 >> 2] | 0) + 320 >> 2] | 0, i3 | 0);
 do if (!(+HEAPF32[i3 + 164 >> 2] > 0.0)) {
  i1 = HEAP32[i3 + 128 >> 2] | 0;
  if (!(HEAP32[i1 + 1236 + (HEAP32[i3 + 168 >> 2] << 2) >> 2] | 0)) {
   HEAPF32[i3 + 164 >> 2] = 1.0;
   break;
  }
  if (!(+__Z22UTIL_SharedRandomFloatjff(HEAP32[i1 + 680 >> 2] | 0, 0.0, 1.0) <= .75)) if (!(HEAP32[i3 + 200 >> 2] | 0)) {
   i1 = (HEAP32[i3 + 176 >> 2] | 0) == 0 ? 9 : 1;
   d2 = 3.0;
  } else i4 = 5; else i4 = 5;
  if ((i4 | 0) == 5) {
   i1 = (HEAP32[i3 + 176 >> 2] | 0) == 0 ? 8 : 0;
   d2 = 6.0;
  }
  HEAPF32[i3 + 164 >> 2] = d2;
  mftCall_viiii(HEAP32[(HEAP32[i3 >> 2] | 0) + 324 >> 2] | 0, i3 | 0, i1 | 0, 1, 0);
 } while (0);
 return;
}

function __Z13SpectatorModev() {
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 do if ((mftCall_i(HEAP32[gb + 92340 + 152 >> 2] | 0) | 0) < 2) mftCall_vii(HEAP32[gb + 92340 + 160 >> 2] | 0, gb + 42023 | 0, i1 | 0); else {
  if ((mftCall_i(HEAP32[gb + 92340 + 152 >> 2] | 0) | 0) == 2) {
   i2 = _atoi(mftCall_ii(HEAP32[gb + 92340 + 156 >> 2] | 0, 1) | 0) | 0;
   __ZN13CHudSpectator8SetModesEii(gb + 46040 + 424 | 0, i2, -1);
   break;
  }
  if ((mftCall_i(HEAP32[gb + 92340 + 152 >> 2] | 0) | 0) == 3) {
   i3 = _atoi(mftCall_ii(HEAP32[gb + 92340 + 156 >> 2] | 0, 1) | 0) | 0;
   i2 = _atoi(mftCall_ii(HEAP32[gb + 92340 + 156 >> 2] | 0, 2) | 0) | 0;
   __ZN13CHudSpectator8SetModesEii(gb + 46040 + 424 | 0, i3, i2);
  }
 } while (0);
 STACKTOP = i1;
 return;
}

function __Z19EV_HLDM_DamageDecalP9physent_s(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 do if ((HEAP32[i1 + 140 >> 2] | 0) == 1) {
  HEAP32[i4 >> 2] = (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 2) | 0) + 1;
  _sprintf(gb + 123896 | 0, gb + 37037 | 0, i4 | 0) | 0;
 } else if (!(HEAP32[i1 + 104 >> 2] | 0)) {
  HEAP32[i4 + 8 >> 2] = (mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, 0, 4) | 0) + 1;
  _sprintf(gb + 123896 | 0, gb + 37055 | 0, i4 + 8 | 0) | 0;
  break;
 } else {
  i1 = gb + 123896 | 0;
  i2 = gb + 37046 | 0;
  i3 = i1 + 9 | 0;
  do {
   HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
   i1 = i1 + 1 | 0;
   i2 = i2 + 1 | 0;
  } while ((i1 | 0) < (i3 | 0));
  break;
 } while (0);
 STACKTOP = i4;
 return gb + 123896 | 0;
}

function __ZN17CBasePlayerWeapon10PrintStateEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 HEAPF64[i2 >> 3] = +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2];
 __Z7COM_LogPcS_z(gb + 38172 | 0, gb + 38182 | 0, i2);
 HEAPF64[i2 + 8 >> 3] = +HEAPF32[(HEAP32[i1 + 128 >> 2] | 0) + 612 >> 2];
 __Z7COM_LogPcS_z(gb + 38172 | 0, gb + 38182 | 0, i2 + 8 | 0);
 HEAPF64[i2 + 16 >> 3] = +HEAPF32[i1 + 156 >> 2];
 __Z7COM_LogPcS_z(gb + 38172 | 0, gb + 38182 | 0, i2 + 16 | 0);
 HEAPF64[i2 + 24 >> 3] = +HEAPF32[i1 + 164 >> 2] - +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2];
 __Z7COM_LogPcS_z(gb + 38172 | 0, gb + 38182 | 0, i2 + 24 | 0);
 HEAP32[i2 + 32 >> 2] = HEAP32[i1 + 176 >> 2];
 __Z7COM_LogPcS_z(gb + 38172 | 0, gb + 38188 | 0, i2 + 32 | 0);
 STACKTOP = i2;
 return;
}

function __ZN15CHudStatusIcons18MsgFunc_StatusIconEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 i3 = __Z9READ_BYTEv() | 0;
 __Z11READ_STRINGv() | 0;
 L1 : do if (!i3) {
  i2 = 0;
  while (1) {
   i1 = i4 + 20 + (i2 * 48 | 0) | 0;
   i2 = i2 + 1 | 0;
   if (!(_strcasecmp(i1 | 0, gb + 127001 | 0) | 0)) break;
   if ((i2 | 0) >= 4) break L1;
  }
  i2 = i1 + 48 | 0;
  do {
   HEAP32[i1 >> 2] = 0;
   i1 = i1 + 4 | 0;
  } while ((i1 | 0) < (i2 | 0));
 } else {
  i1 = __Z9READ_BYTEv() | 0;
  i2 = __Z9READ_BYTEv() | 0;
  i3 = (__Z9READ_BYTEv() | 0) & 255;
  __ZN15CHudStatusIcons10EnableIconEPchhh(i4, gb + 127001 | 0, i1 & 255, i2 & 255, i3);
  HEAP32[i4 + 16 >> 2] = HEAP32[i4 + 16 >> 2] | 1;
 } while (0);
 return 1;
}

function __ZN6CGlock10WeaponIdleEv(i3) {
 i3 = i3 | 0;
 var d1 = 0.0, i2 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 mftCall_vi(HEAP32[(HEAP32[i3 >> 2] | 0) + 320 >> 2] | 0, i3 | 0);
 __ZN11CBasePlayer16GetAutoaimVectorEf(i4, 0, 0.0);
 if (!(+HEAPF32[i3 + 164 >> 2] > 0.0)) if (HEAP32[i3 + 176 >> 2] | 0) {
  d1 = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i3 + 128 >> 2] | 0) + 680 >> 2] | 0, 0.0, 1.0);
  do if (!(d1 <= .3)) if (!(d1 <= .6)) {
   HEAPF32[i3 + 164 >> 2] = 2.5;
   i2 = 1;
   break;
  } else {
   HEAPF32[i3 + 164 >> 2] = 3.75;
   i2 = 0;
   break;
  } else {
   HEAPF32[i3 + 164 >> 2] = 3.0625;
   i2 = 2;
  } while (0);
  mftCall_viiii(HEAP32[(HEAP32[i3 >> 2] | 0) + 324 >> 2] | 0, i3 | 0, i2 | 0, 1, 0);
 }
 STACKTOP = i4;
 return;
}

function __ZN14CHudScoreboard17MsgFunc_TeamScoreEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 __Z11READ_STRINGv() | 0;
 i3 = HEAP32[i4 + 20 >> 2] | 0;
 L1 : do if ((i3 | 0) < 1) i1 = 1; else {
  i1 = 1;
  while (1) {
   if (!(_strcasecmp(gb + 127001 | 0, gb + 118504 + (i1 * 40 | 0) | 0) | 0)) break L1;
   i2 = i1 + 1 | 0;
   if ((i1 | 0) < (i3 | 0)) i1 = i2; else {
    i1 = i2;
    break;
   }
  }
 } while (0);
 if ((i1 | 0) <= (i3 | 0)) {
  HEAP32[gb + 118504 + (i1 * 40 | 0) + 32 >> 2] = 1;
  i4 = (__Z10READ_SHORTv() | 0) & 65535;
  HEAP16[gb + 118504 + (i1 * 40 | 0) + 16 >> 1] = i4;
  i4 = (__Z10READ_SHORTv() | 0) & 65535;
  HEAP16[gb + 118504 + (i1 * 40 | 0) + 18 >> 1] = i4;
 }
 return 1;
}

function __ZN13CHudSpectator7VidInitEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 4664 >> 2] = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, gb + 41621 | 0) | 0;
 HEAP32[i1 + 4656 >> 2] = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, gb + 41641 | 0) | 0;
 HEAP32[i1 + 4660 >> 2] = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, gb + 41665 | 0) | 0;
 HEAP32[i1 + 4672 >> 2] = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, gb + 41688 | 0) | 0;
 HEAP32[i1 + 4680 >> 2] = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, gb + 41712 | 0) | 0;
 HEAP32[i1 + 4684 >> 2] = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, gb + 41729 | 0) | 0;
 HEAP32[i1 + 4668 >> 2] = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, gb + 43357 | 0) | 0;
 HEAP32[i1 + 4688 >> 2] = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, gb + 41751 | 0) | 0;
 return 1;
}

function __ZN14CSatchelCharge5SpawnEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 HEAP32[i2 + 264 >> 2] = 10;
 HEAP32[i2 + 268 >> 2] = 2;
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[i2 + 520 >> 2] | 0, gb + 38932 | 0);
 HEAP32[i1 + 24 >> 2] = fb + 42;
 HEAP32[i1 + 28 >> 2] = 0;
 HEAP32[i1 + 32 >> 2] = fb + 2;
 HEAP32[i1 + 36 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = fb + 227;
 HEAP32[i1 + 20 >> 2] = 0;
 i1 = HEAP32[i1 + 4 >> 2] | 0;
 HEAPF32[i1 + 260 >> 2] = +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2] + .1;
 HEAPF32[i1 + 284 >> 2] = .5;
 HEAPF32[i1 + 288 >> 2] = .800000011920929;
 HEAP32[i1 + 480 >> 2] = HEAP32[gb + 59016 + 256 >> 2];
 HEAP32[i1 + 296 >> 2] = 1;
 return;
}

function _EV_FireRpg(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = HEAP32[i1 + 4 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i1 + 12 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i1 + 16 >> 2];
 mftCall_viiiiddii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0, i3 | 0, i2 | 0, 1, gb + 38750 | 0, .8999999761581421, .800000011920929, 0, 100);
 mftCall_viiiiddii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0, i3 | 0, i2 | 0, 3, gb + 38774 | 0, .699999988079071, .800000011920929, 0, 100);
 if (__Z10EV_IsLocali(i3) | 0) {
  mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 64 >> 2] | 0, 3, 1);
  __Z11V_PunchAxisif(0, -5.0);
 }
 STACKTOP = i2;
 return;
}

function __Z22UTIL_SharedRandomFloatjff(i2, d1, d3) {
 i2 = i2 | 0;
 d1 = +d1;
 d3 = +d3;
 var i4 = 0;
 i4 = (HEAPF32[tempDoublePtr >> 2] = d1, HEAP32[tempDoublePtr >> 2] | 0);
 i2 = (HEAP32[gb + 33916 + ((i4 + i2 + (HEAPF32[tempDoublePtr >> 2] = d3, HEAP32[tempDoublePtr >> 2] | 0) & 255) << 2) >> 2] | 0) * 69069 | 0;
 i2 = (i2 + 1 + (HEAP32[gb + 33916 + ((i2 & 255) << 2) >> 2] | 0) | 0) * 69069 | 0;
 i2 = (HEAP32[gb + 33916 + ((i2 & 255) << 2) >> 2] | 0) + 1 + i2 | 0;
 HEAP32[gb + 92908 >> 2] = i2;
 if (~~(d3 - d1) >>> 0) {
  i4 = (i2 * 69069 | 0) + 1 + (HEAP32[gb + 33916 + ((i2 * 69069 & 255) << 2) >> 2] | 0) | 0;
  HEAP32[gb + 92908 >> 2] = i4;
  d1 = +(~~(d3 - d1) >>> 0 >>> 0) * +(i4 & 65535 | 0) * .0000152587890625 + d1;
 }
 return +d1;
}

function __ZN4CHud16UpdateClientDataEP13client_data_sf(i2, i1, d3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 d3 = +d3;
 HEAP32[i2 + 56 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i2 + 56 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i2 + 56 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i2 + 68 >> 2] = HEAP32[i1 + 12 >> 2];
 HEAP32[i2 + 68 + 4 >> 2] = HEAP32[i1 + 12 + 4 >> 2];
 HEAP32[i2 + 68 + 8 >> 2] = HEAP32[i1 + 12 + 8 >> 2];
 HEAP32[i2 + 80 >> 2] = __Z13CL_ButtonBitsi(0) | 0;
 HEAP32[i2 + 8640 >> 2] = HEAP32[i1 + 24 >> 2];
 HEAP32[gb + 93764 >> 2] = HEAP32[i1 + 28 >> 2];
 __ZN4CHud5ThinkEv(i2);
 HEAPF32[i1 + 28 >> 2] = +(HEAP32[i2 + 88 >> 2] | 0);
 HEAPF32[gb + 116356 >> 2] = +(HEAP32[i2 + 28 >> 2] | 0);
 __Z18CL_ResetButtonBitsi(HEAP32[i2 + 80 >> 2] | 0);
 return 1;
}

function __ZN8CCrowbar8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44008 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 36678 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 43987 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 36699 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 36721 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 36743 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 36768 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 36793 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 37157 | 0) | 0;
 HEAP16[i1 + 256 >> 1] = mftCall_iii(HEAP32[gb + 56972 + 488 >> 2] | 0, 1, gb + 38054 | 0) | 0;
 return;
}

function __ZN7CPython8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44284 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 38589 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44267 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 38606 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39466 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 38561 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39176 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 38630 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 38652 | 0) | 0;
 HEAP16[i1 + 204 >> 1] = mftCall_iii(HEAP32[gb + 56972 + 488 >> 2] | 0, 1, gb + 38674 | 0) | 0;
 return;
}

function _PM_FindTextureType(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 if (!(HEAP32[gb + 121156 >> 2] | 0)) ___assert_fail(gb + 44912 | 0, gb + 44934 | 0, 232, gb + 44959 | 0);
 i1 = HEAP32[gb + 121148 >> 2] | 0;
 L4 : do if ((i1 | 0) < 1) i1 = 67; else {
  i3 = 0;
  L5 : while (1) {
   i4 = i1 + -1 | 0;
   while (1) {
    i1 = (i3 + i4 | 0) / 2 | 0;
    i2 = _strncasecmp(i5 | 0, gb + 132825 + (i1 * 13 | 0) | 0, 12) | 0;
    if (!i2) break L5;
    if ((i2 | 0) <= 0) break;
    if ((i1 | 0) < (i4 | 0)) i3 = i1 + 1 | 0; else {
     i1 = 67;
     break L4;
    }
   }
   if ((i3 | 0) >= (i1 | 0)) {
    i1 = 67;
    break L4;
   }
  }
  i1 = HEAP8[gb + 139481 + i1 >> 0] | 0;
 } while (0);
 return i1 | 0;
}

function __ZN14CHudScoreboard4InitEv(i1) {
 i1 = i1 | 0;
 __ZN4CHud10AddHudElemEP8CHudBase(gb + 46040 | 0, i1);
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 44787 | 0, fb + 92 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 68 >> 2] | 0, gb + 44799 | 0, fb + 93 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 44811 | 0, fb + 46 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 44821 | 0, fb + 47 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 44831 | 0, fb + 48 | 0) | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] | 0, i1 | 0);
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 44840 | 0, gb + 44858 | 0, 1) | 0;
 HEAP32[gb + 118500 >> 2] = i1;
 return 1;
}

function __ZN20CStudioModelRenderer17StudioPlayerBlendEP16mstudioseqdesc_tPiPf(i1, i5, i6, i7) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var d2 = 0.0, d3 = 0.0, d4 = 0.0;
 d3 = +HEAPF32[i7 >> 2];
 HEAP32[i6 >> 2] = ~~(d3 * 3.0);
 d4 = +HEAPF32[i5 + 136 >> 2];
 do if (+(~~(d3 * 3.0) | 0) < d4) {
  HEAPF32[i7 >> 2] = d3 - d4 * .3333333333333333;
  HEAP32[i6 >> 2] = 0;
 } else {
  d2 = +HEAPF32[i5 + 144 >> 2];
  if (+(~~(d3 * 3.0) | 0) > d2) {
   HEAPF32[i7 >> 2] = d3 - d2 * .3333333333333333;
   HEAP32[i6 >> 2] = 255;
   break;
  }
  if (d2 - d4 < .1) i1 = 127; else i1 = ~~((+(~~(d3 * 3.0) | 0) - d4) * 255.0 / (d2 - d4));
  HEAP32[i6 >> 2] = i1;
  HEAPF32[i7 >> 2] = 0.0;
 } while (0);
 return;
}

function __ZN6CGauss4FireE6VectorS0_f(i4, i2, i1, d3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 d3 = +d3;
 i1 = HEAP32[i4 + 128 >> 2] | 0;
 HEAP32[i1 + 692 >> 2] = 450;
 i2 = HEAP32[i4 + 212 >> 2] | 0;
 if (!i2) HEAP32[gb + 59360 >> 2] = 1;
 i1 = HEAP32[i1 + 4 >> 2] | 0;
 mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 1, HEAP32[i1 + 520 >> 2] | 0, HEAP16[i4 + 216 >> 1] | 0, 0.0, i1 + 8 | 0, i1 + 80 | 0, +d3, 0.0, 0, 0, (i2 | 0) != 0 | 0, 0);
 i2 = HEAP32[(HEAP32[i4 + 128 >> 2] | 0) + 4 >> 2] | 0;
 mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 3, HEAP32[i2 + 520 >> 2] | 0, HEAP16[i4 + 216 >> 1] | 0, .009999999776482582, i2 + 8 | 0, i2 + 80 | 0, 0.0, 0.0, 0, 0, 0, 1);
 return;
}

function __Z19UTIL_StringToVectorPfPKc(i5, i1) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 _strcpy(i6 | 0, i1 | 0) | 0;
 i3 = 0;
 i1 = i6;
 while (1) {
  HEAPF32[i5 + (i3 << 2) >> 2] = +_atof(i1 | 0);
  i2 = i1;
  do {
   i1 = HEAP8[i2 >> 0] | 0;
   i2 = i2 + 1 | 0;
  } while (i1 << 24 >> 24 != 32 & (i1 << 24 >> 24 == 0 ^ 1));
  if (!(i1 << 24 >> 24)) {
   i4 = 6;
   break;
  }
  i1 = i3 + 1 | 0;
  if ((i1 | 0) < 3) {
   i3 = i1;
   i1 = i2;
  } else break;
 }
 if ((i4 | 0) == 6) if ((i3 | 0) < 2) {
  i1 = i3 + 1 | 0;
  if ((i1 | 0) < 3) _memset(i5 + (i1 << 2) | 0, 0, 8 - (i3 << 2) | 0) | 0;
 }
 STACKTOP = i6;
 return;
}

function __ZN17CBasePlayerWeapon13DefaultReloadEiifi(i7, i6, i5, d4, i3) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 d4 = +d4;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = HEAP32[i7 + 128 >> 2] | 0;
 i2 = HEAP32[i1 + 1236 + (HEAP32[i7 + 168 >> 2] << 2) >> 2] | 0;
 if ((i2 | 0) < 1) i1 = 0; else {
  i6 = i6 - (HEAP32[i7 + 176 >> 2] | 0) | 0;
  if (!(((i6 | 0) < (i2 | 0) ? i6 : i2) | 0)) i1 = 0; else {
   HEAPF32[i1 + 612 >> 2] = d4;
   i1 = HEAP32[i7 >> 2] | 0;
   i6 = HEAP32[i1 + 324 >> 2] | 0;
   mftCall_viiii(i6 | 0, i7 | 0, i5 | 0, mftCall_ii(HEAP32[i1 + 356 >> 2] | 0, i7 | 0) | 0, i3 | 0);
   HEAP32[i7 + 188 >> 2] = 1;
   HEAPF32[i7 + 164 >> 2] = 3.0;
   i1 = 1;
  }
 }
 return i1 | 0;
}

function __ZN14CHudScoreboard17MsgFunc_ScoreInfoEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i5 = 0;
 HEAP32[i4 + 16 >> 2] = HEAP32[i4 + 16 >> 2] | 1;
 __Z10BEGIN_READPvi(i2, i1);
 i1 = __Z9READ_BYTEv() | 0;
 i2 = __Z10READ_SHORTv() | 0;
 i3 = __Z10READ_SHORTv() | 0;
 i4 = __Z10READ_SHORTv() | 0;
 i5 = __Z10READ_SHORTv() | 0;
 if (((i1 << 16) + -1 | 0) >>> 0 < 4259839) {
  HEAP16[gb + 122336 + ((i1 << 16 >> 16) * 24 | 0) >> 1] = i2;
  HEAP16[gb + 122336 + ((i1 << 16 >> 16) * 24 | 0) + 2 >> 1] = i3;
  HEAP16[gb + 122336 + ((i1 << 16 >> 16) * 24 | 0) + 4 >> 1] = i4;
  HEAP16[gb + 122336 + ((i1 << 16 >> 16) * 24 | 0) + 6 >> 1] = i5;
 }
 return 1;
}

function __ZN8CSatchel7HolsterEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAPF32[(HEAP32[i2 + 128 >> 2] | 0) + 612 >> 2] = .5;
 i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + 324 >> 2] | 0;
 if (!(HEAP32[i2 + 88 >> 2] | 0)) mftCall_viiii(i1 | 0, i2 | 0, 3, 1, 0); else mftCall_viiii(i1 | 0, i2 | 0, 4, 1, 0);
 i1 = HEAP32[i2 + 128 >> 2] | 0;
 if (!(HEAP32[i1 + 1236 + (HEAP32[i2 + 168 >> 2] << 2) >> 2] | 0)) if (!(HEAP32[i2 + 88 >> 2] | 0)) {
  i1 = (HEAP32[i1 + 4 >> 2] | 0) + 360 | 0;
  HEAP32[i1 >> 2] = HEAP32[i1 >> 2] & -16385;
  HEAP32[i2 + 16 >> 2] = fb + 207;
  HEAP32[i2 + 20 >> 2] = 0;
  HEAPF32[(HEAP32[i2 + 4 >> 2] | 0) + 260 >> 2] = +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2] + .1;
 }
 return;
}

function __ZN4CHud17DrawDarkRectangleEiiii(i2, i4, i5, i3, i1) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 mftCall_viiiiiiii(HEAP32[gb + 92340 + 520 >> 2] | 0, i4 | 0, i5 | 0, i3 | 0, i1 | 0, 0, 0, 0, 153);
 mftCall_viiiiiiii(HEAP32[gb + 92340 + 44 >> 2] | 0, i4 + 1 | 0, i5 | 0, i3 + -1 | 0, 1, 255, 140, 0, 255);
 mftCall_viiiiiiii(HEAP32[gb + 92340 + 44 >> 2] | 0, i4 | 0, i5 | 0, 1, i1 + -1 | 0, 255, 140, 0, 255);
 mftCall_viiiiiiii(HEAP32[gb + 92340 + 44 >> 2] | 0, i4 + -1 + i3 | 0, i5 + 1 | 0, 1, i1 + -1 | 0, 255, 140, 0, 255);
 mftCall_viiiiiiii(HEAP32[gb + 92340 + 44 >> 2] | 0, i4 | 0, i5 + -1 + i1 | 0, i3 + -1 | 0, 1, 255, 140, 0, 255);
 return;
}

function __Z14HUD_PrepEntityP11CBaseEntityP11CBasePlayer(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i5 = HEAP32[gb + 59376 >> 2] | 0;
 i4 = gb + 59380 + (i5 * 676 | 0) | 0;
 _memset(i4 | 0, 0, 676) | 0;
 HEAP32[gb + 59376 >> 2] = i5 + 1;
 HEAP32[i1 + 4 >> 2] = i4;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 mftCall_vi(HEAP32[HEAP32[i1 >> 2] >> 2] | 0, i1 | 0);
 if (i2 | 0) {
  HEAP32[i1 + 128 >> 2] = i2;
  mftCall_iii(HEAP32[(HEAP32[i1 >> 2] | 0) + 240 >> 2] | 0, i1 | 0, i3 | 0) | 0;
  HEAP32[gb + 81012 + (HEAP32[i3 + 32 >> 2] << 2) >> 2] = i1;
 }
 STACKTOP = i3;
 return;
}

function __ZN12CBaseMonster10BodyTargetERK6Vector(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var d4 = 0.0, d5 = 0.0, d6 = 0.0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 mftCall_vii(HEAP32[(HEAP32[i3 >> 2] | 0) + 200 >> 2] | 0, i2 + 12 | 0, i3 | 0);
 d6 = +HEAPF32[i2 + 12 >> 2] * .75;
 d5 = +HEAPF32[i2 + 12 + 4 >> 2] * .75;
 d4 = +HEAPF32[i2 + 12 + 8 >> 2] * .75;
 mftCall_vii(HEAP32[(HEAP32[i3 >> 2] | 0) + 204 >> 2] | 0, i2 | 0, i3 | 0);
 d5 = d5 + +HEAPF32[i2 + 4 >> 2] * .25;
 d4 = d4 + +HEAPF32[i2 + 8 >> 2] * .25;
 HEAPF32[i1 >> 2] = d6 + +HEAPF32[i2 >> 2] * .25;
 HEAPF32[i1 + 4 >> 2] = d5;
 HEAPF32[i1 + 8 >> 2] = d4;
 STACKTOP = i2;
 return;
}

function _AngleBetweenVectors(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var d1 = 0.0, i2 = 0, d3 = 0.0, d4 = 0.0;
 i2 = 0;
 d1 = 0.0;
 do {
  d4 = +HEAPF32[i5 + (i2 << 2) >> 2];
  d1 = d1 + d4 * d4;
  i2 = i2 + 1 | 0;
 } while ((i2 | 0) != 3);
 i2 = 0;
 d4 = 0.0;
 do {
  d3 = +HEAPF32[i6 + (i2 << 2) >> 2];
  d4 = d4 + d3 * d3;
  i2 = i2 + 1 | 0;
 } while ((i2 | 0) != 3);
 d3 = +Math_sqrt(+d1);
 d1 = +Math_sqrt(+d4);
 if (d3 != 0.0 & d1 != 0.0) d1 = +Math_acos(+(+HEAPF32[i5 >> 2] * +HEAPF32[i6 >> 2] + +HEAPF32[i5 + 4 >> 2] * +HEAPF32[i6 + 4 >> 2] + +HEAPF32[i5 + 8 >> 2] * +HEAPF32[i6 + 8 >> 2])) / (d3 * d1) * 180.0 * .3183098861837907; else d1 = 0.0;
 return +d1;
}

function __ZN4CRpg13PrimaryAttackEv(i2) {
 i2 = i2 | 0;
 var d1 = 0.0, i3 = 0;
 if (!(HEAP32[i2 + 176 >> 2] | 0)) {
  mftCall_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 316 >> 2] | 0, i2 | 0) | 0;
  d1 = .20000000298023224;
 } else {
  i3 = HEAP32[i2 + 128 >> 2] | 0;
  HEAP32[i3 + 692 >> 2] = 1e3;
  HEAP32[i3 + 700 >> 2] = 512;
  mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 1, HEAP32[(HEAP32[i3 + 4 >> 2] | 0) + 520 >> 2] | 0, HEAP16[i2 + 208 >> 1] | 0, 0.0, gb + 56956 | 0, gb + 56956 | 0, 0.0, 0.0, 0, 0, 0, 0);
  HEAP32[i2 + 176 >> 2] = (HEAP32[i2 + 176 >> 2] | 0) + -1;
  HEAPF32[i2 + 164 >> 2] = 1.5;
  d1 = 1.5;
 }
 HEAPF32[i2 + 156 >> 2] = d1;
 return;
}

function __ZN20CStudioModelRenderer15StudioSaveBonesEv(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i2 = HEAP32[i3 + 68 >> 2] | 0;
 i1 = i2 + (HEAP32[i2 + 144 >> 2] | 0) | 0;
 i2 = HEAP32[i2 + 140 >> 2] | 0;
 HEAP32[i3 + 92 >> 2] = i2;
 if ((i2 | 0) > 0) {
  i2 = 0;
  do {
   _strcpy(i3 + 96 + (i2 << 5) | 0, i1 + (i2 * 112 | 0) | 0) | 0;
   __Z10MatrixCopyPA4_fS0_((HEAP32[i3 + 16552 >> 2] | 0) + (i2 * 48 | 0) | 0, i3 + 4192 + (i2 * 48 | 0) | 0);
   __Z10MatrixCopyPA4_fS0_((HEAP32[i3 + 16556 >> 2] | 0) + (i2 * 48 | 0) | 0, i3 + 10336 + (i2 * 48 | 0) | 0);
   i2 = i2 + 1 | 0;
  } while ((i2 | 0) < (HEAP32[(HEAP32[i3 + 68 >> 2] | 0) + 140 >> 2] | 0));
 }
 return;
}

function __Z16UTIL_ParticleBoxP11CBasePlayerPfS1_fhhh(i5, i7, i6, d4, i3, i2, i1) {
 i5 = i5 | 0;
 i7 = i7 | 0;
 i6 = i6 | 0;
 d4 = +d4;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i2 = (HEAP32[i5 + 4 >> 2] | 0) + 8 | 0;
 i1 = 0;
 do {
  i5 = i2 + (i1 << 2) | 0;
  HEAPF32[i3 + 12 + (i1 << 2) >> 2] = +HEAPF32[i5 >> 2] + +HEAPF32[i7 + (i1 << 2) >> 2];
  HEAPF32[i3 + (i1 << 2) >> 2] = +HEAPF32[i5 >> 2] + +HEAPF32[i6 + (i1 << 2) >> 2];
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != 3);
 mftCall_viiiiid(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 80 >> 2] | 0, i3 + 12 | 0, i3 | 0, 5, 0, -1, 0.0);
 STACKTOP = i3;
 return;
}

function _VectorTransform(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 HEAPF32[i3 >> 2] = +HEAPF32[i2 + 12 >> 2] + (+HEAPF32[i1 >> 2] * +HEAPF32[i2 >> 2] + +HEAPF32[i1 + 4 >> 2] * +HEAPF32[i2 + 4 >> 2] + +HEAPF32[i1 + 8 >> 2] * +HEAPF32[i2 + 8 >> 2]);
 HEAPF32[i3 + 4 >> 2] = +HEAPF32[i2 + 28 >> 2] + (+HEAPF32[i1 >> 2] * +HEAPF32[i2 + 16 >> 2] + +HEAPF32[i1 + 4 >> 2] * +HEAPF32[i2 + 20 >> 2] + +HEAPF32[i1 + 8 >> 2] * +HEAPF32[i2 + 24 >> 2]);
 HEAPF32[i3 + 8 >> 2] = +HEAPF32[i2 + 44 >> 2] + (+HEAPF32[i1 >> 2] * +HEAPF32[i2 + 32 >> 2] + +HEAPF32[i1 + 4 >> 2] * +HEAPF32[i2 + 36 >> 2] + +HEAPF32[i1 + 8 >> 2] * +HEAPF32[i2 + 40 >> 2]);
 return;
}

function __ZN17CHudAmmoSecondary18MsgFunc_SecAmmoValEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i5 = 0;
 __Z10BEGIN_READPvi(i2, i1);
 i1 = __Z9READ_BYTEv() | 0;
 do if (i1 >>> 0 <= 3) {
  HEAP32[i4 + 24 + (i1 << 2) >> 2] = __Z9READ_BYTEv() | 0;
  i1 = HEAP32[i4 + 16 >> 2] | 0;
  HEAP32[i4 + 16 >> 2] = i1 | 1;
  i2 = 0;
  i3 = 0;
  do {
   i5 = HEAP32[i4 + 24 + (i3 << 2) >> 2] | 0;
   i2 = ((i5 | 0) < 0 ? 0 : i5) + i2 | 0;
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) != 4);
  if (!i2) {
   HEAP32[i4 + 16 >> 2] = i1 & -2;
   break;
  } else {
   HEAPF32[i4 + 40 >> 2] = 200.0;
   break;
  }
 } while (0);
 return 1;
}

function __Z11DrawAmmoBarP6WEAPONiiii(i5, i3, i7, i6, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, d2 = 0.0;
 if (i5 | 0) {
  i1 = HEAP32[i5 + 128 >> 2] | 0;
  if ((i1 | 0) >= 0) {
   i1 = HEAP32[gb + 81328 + 10640 + (i1 << 2) >> 2] | 0;
   if (i1 | 0) {
    i3 = __Z7DrawBariiiif(i3, i7, i6, i4, +(i1 | 0) / +(HEAP32[i5 + 136 >> 2] | 0)) | 0;
    i1 = HEAP32[i5 + 132 >> 2] | 0;
    if ((i1 | 0) != -1) {
     if ((i1 | 0) < 0) d2 = 0.0; else d2 = +(HEAP32[gb + 81328 + 10640 + (i1 << 2) >> 2] | 0);
     __Z7DrawBariiiif(i3 + 5 | 0, i7, i6, i4, d2 / +(HEAP32[i5 + 140 >> 2] | 0)) | 0;
    }
   }
  }
 }
 return;
}

function __ZN20CStudioModelRendererC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = gb + 35880 + 8;
 HEAP32[i1 + 24 >> 2] = 1;
 HEAP32[i1 + 28 >> 2] = 1;
 HEAP32[i1 + 88 >> 2] = 0;
 HEAP32[i1 + 68 >> 2] = 0;
 HEAP32[i1 + 72 >> 2] = 0;
 HEAP32[i1 + 76 >> 2] = 0;
 HEAP32[i1 + 36 >> 2] = 0;
 HEAP32[i1 + 36 + 4 >> 2] = 0;
 HEAP32[i1 + 36 + 8 >> 2] = 0;
 HEAP32[i1 + 36 + 12 >> 2] = 0;
 HEAP32[i1 + 36 + 16 >> 2] = 0;
 HEAP32[i1 + 36 + 20 >> 2] = 0;
 HEAP32[i1 + 16536 >> 2] = 0;
 HEAP32[i1 + 16536 + 4 >> 2] = 0;
 HEAP32[i1 + 16536 + 8 >> 2] = 0;
 HEAP32[i1 + 16536 + 12 >> 2] = 0;
 HEAP32[i1 + 16536 + 16 >> 2] = 0;
 HEAP32[i1 + 16536 + 20 >> 2] = 0;
 return;
}

function __Z18CAM_StartMouseMovev() {
 var i1 = 0, d2 = 0.0;
 do if (!(HEAP32[gb + 93828 >> 2] | 0)) {
  HEAP32[gb + 93832 >> 2] = 0;
  HEAP32[gb + 93836 >> 2] = 0;
 } else if (!(HEAP32[gb + 93832 >> 2] | 0)) {
  HEAP32[gb + 93832 >> 2] = 1;
  HEAP32[gb + 93836 >> 2] = 1;
  d2 = +__ZN4CHud14GetSensitivityEv(gb + 46040 | 0);
  i1 = HEAP32[gb + 93852 >> 2] | 0;
  if (d2 != 0.0) {
   HEAP32[gb + 93844 >> 2] = ~~(d2 * +(i1 | 0));
   HEAP32[gb + 93848 >> 2] = ~~(d2 * +(HEAP32[gb + 93852 + 4 >> 2] | 0));
   break;
  } else {
   HEAP32[gb + 93844 >> 2] = i1;
   HEAP32[gb + 93848 >> 2] = HEAP32[gb + 93852 + 4 >> 2];
   break;
  }
 } while (0);
 return;
}

function _PM_ClipVelocity(i4, i5, i6, d1) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 d1 = +d1;
 var i2 = 0, d3 = 0.0, d7 = 0.0, d8 = 0.0;
 d3 = +HEAPF32[i5 + 8 >> 2];
 d8 = +HEAPF32[i4 >> 2];
 d7 = +HEAPF32[i5 >> 2];
 d1 = (d8 * d7 + +HEAPF32[i4 + 4 >> 2] * +HEAPF32[i5 + 4 >> 2] + d3 * +HEAPF32[i4 + 8 >> 2]) * d1;
 HEAPF32[i6 >> 2] = d8 - d7 * d1 > -.1 & d8 - d7 * d1 < .1 ? 0.0 : d8 - d7 * d1;
 i2 = 1;
 do {
  d8 = +HEAPF32[i4 + (i2 << 2) >> 2] - d1 * +HEAPF32[i5 + (i2 << 2) >> 2];
  HEAPF32[i6 + (i2 << 2) >> 2] = d8 > -.1 & d8 < .1 ? 0.0 : d8;
  i2 = i2 + 1 | 0;
 } while ((i2 | 0) != 3);
 return (d3 != 0.0 ? d3 > 0.0 & 1 : d3 > 0.0 | 2) | 0;
}

function __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii(i7, i5, i6, i2, i4, i3, i1) {
 i7 = i7 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 if (!(mftCall_ii(HEAP32[(HEAP32[i7 >> 2] | 0) + 244 >> 2] | 0, i7 | 0) | 0)) i1 = 0; else {
  mftCall_iii(HEAP32[gb + 92340 + 240 >> 2] | 0, i5 | 0, (HEAP32[(HEAP32[i7 + 128 >> 2] | 0) + 4 >> 2] | 0) + 188 | 0) | 0;
  mftCall_viiii(HEAP32[(HEAP32[i7 >> 2] | 0) + 324 >> 2] | 0, i7 | 0, i2 | 0, i3 | 0, i1 | 0);
  HEAP32[gb + 59360 >> 2] = 0;
  HEAPF32[(HEAP32[i7 + 128 >> 2] | 0) + 612 >> 2] = .5;
  HEAPF32[i7 + 164 >> 2] = 1.0;
  i1 = 1;
 }
 return i1 | 0;
}

function __ZN11CBasePlayer10BodyTargetERK6Vector(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var d4 = 0.0, d5 = 0.0, d6 = 0.0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 mftCall_vii(HEAP32[(HEAP32[i3 >> 2] | 0) + 200 >> 2] | 0, i2 | 0, i3 | 0);
 i3 = HEAP32[i3 + 4 >> 2] | 0;
 d6 = +mftCall_ddd(HEAP32[gb + 56972 + 364 >> 2] | 0, .5, 1.100000023841858);
 d5 = d6 * +HEAPF32[i3 + 376 >> 2] + +HEAPF32[i2 + 4 >> 2];
 d4 = d6 * +HEAPF32[i3 + 380 >> 2] + +HEAPF32[i2 + 8 >> 2];
 HEAPF32[i1 >> 2] = d6 * +HEAPF32[i3 + 372 >> 2] + +HEAPF32[i2 >> 2];
 HEAPF32[i1 + 4 >> 2] = d5;
 HEAPF32[i1 + 8 >> 2] = d4;
 STACKTOP = i2;
 return;
}

function __Z18DeactivateSatchelsP11CBasePlayer(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = mftCall_iiii(HEAP32[gb + 56972 + 56 >> 2] | 0, 0, gb + 41317 | 0, gb + 38980 | 0) | 0;
 L1 : do if (i1 | 0) do {
  if (!(mftCall_ii(HEAP32[gb + 56972 + 280 >> 2] | 0, i1 | 0) | 0)) break L1;
  i2 = HEAP32[i1 + 124 >> 2] | 0;
  if (i2 | 0) {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   if ((HEAP32[i2 + 408 >> 2] | 0) == (HEAP32[(HEAP32[i3 + 4 >> 2] | 0) + 520 >> 2] | 0)) HEAP32[i2 + 268 >> 2] = 0;
  }
  i1 = mftCall_iiii(HEAP32[gb + 56972 + 56 >> 2] | 0, i1 | 0, gb + 41317 | 0, gb + 38980 | 0) | 0;
 } while ((i1 | 0) != 0); while (0);
 return;
}

function __ZN5CEgon10WeaponIdleEv(i3) {
 i3 = i3 | 0;
 var i1 = 0, d2 = 0.0;
 mftCall_vi(HEAP32[(HEAP32[i3 >> 2] | 0) + 320 >> 2] | 0, i3 | 0);
 if (!(+HEAPF32[i3 + 164 >> 2] > 0.0)) {
  if (HEAP32[i3 + 96 >> 2] | 0) __ZN5CEgon9EndAttackEv(i3);
  if (!(+mftCall_ddd(HEAP32[gb + 56972 + 364 >> 2] | 0, 0.0, 1.0) <= .5)) {
   i1 = 1;
   d2 = 3.0;
  } else {
   i1 = 0;
   d2 = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i3 + 128 >> 2] | 0) + 680 >> 2] | 0, 10.0, 15.0);
  }
  HEAPF32[i3 + 164 >> 2] = d2;
  mftCall_viiii(HEAP32[(HEAP32[i3 >> 2] | 0) + 324 >> 2] | 0, i3 | 0, i1 | 0, 1, 0);
  HEAP32[i3 + 228 >> 2] = 1;
 }
 return;
}

function __ZN13CHudSpectator12DeathMessageEi(i6, i1) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, d5 = 0.0;
 i4 = mftCall_ii(HEAP32[gb + 92340 + 212 >> 2] | 0, i1 | 0) | 0;
 L1 : do if (i4 | 0) if (HEAP32[i4 + 4 >> 2] | 0) {
  i3 = HEAP32[i6 + 4672 >> 2] | 0;
  d5 = +mftCall_d(HEAP32[gb + 92340 + 216 >> 2] | 0) + 2.0;
  i1 = 0;
  while (1) {
   i2 = i6 + 1768 + (i1 << 4) + 4 | 0;
   if (!(HEAP32[i2 >> 2] | 0)) break;
   i1 = i1 + 1 | 0;
   if ((i1 | 0) >= 128) break L1;
  }
  HEAP32[i2 >> 2] = i4;
  HEAP32[i6 + 1768 + (i1 << 4) >> 2] = i3;
  HEAPF64[i6 + 1768 + (i1 << 4) + 8 >> 3] = d5;
 } while (0);
 return;
}

function __Z9V_AddIdleP12ref_params_s(i1) {
 i1 = i1 | 0;
 var d2 = 0.0, d3 = 0.0, d4 = 0.0;
 d3 = +HEAPF32[gb + 116356 >> 2];
 d2 = +HEAPF32[i1 + 64 >> 2];
 d4 = d3 * +Math_sin(+(d2 * +HEAPF32[gb + 36108 + 12 >> 2]));
 HEAPF32[i1 + 12 + 8 >> 2] = +HEAPF32[i1 + 12 + 8 >> 2] + d4 * +HEAPF32[gb + 36168 + 12 >> 2];
 d4 = d3 * +Math_sin(+(d2 * +HEAPF32[gb + 36128 + 12 >> 2]));
 HEAPF32[i1 + 12 >> 2] = +HEAPF32[i1 + 12 >> 2] + d4 * +HEAPF32[gb + 36188 + 12 >> 2];
 d2 = d3 * +Math_sin(+(d2 * +HEAPF32[gb + 36088 + 12 >> 2]));
 HEAPF32[i1 + 12 + 4 >> 2] = +HEAPF32[i1 + 12 + 4 >> 2] + d2 * +HEAPF32[gb + 36148 + 12 >> 2];
 return;
}

function _PM_WaterJump() {
 var d1 = 0.0, i2 = 0, i3 = 0;
 i2 = HEAP32[gb + 121136 >> 2] | 0;
 d1 = +HEAPF32[i2 + 204 >> 2];
 if (d1 > 1.0e4) {
  HEAPF32[i2 + 204 >> 2] = 1.0e4;
  d1 = 1.0e4;
  i3 = 4;
 } else if (d1 != 0.0) i3 = 4;
 if ((i3 | 0) == 4) {
  d1 = d1 - +(HEAPU8[i2 + 283738 >> 0] | 0);
  HEAPF32[i2 + 204 >> 2] = d1;
  if (d1 < 0.0) i3 = 6; else if (!(HEAP32[i2 + 228 >> 2] | 0)) i3 = 6;
  if ((i3 | 0) == 6) {
   HEAPF32[i2 + 204 >> 2] = 0.0;
   HEAP32[i2 + 184 >> 2] = HEAP32[i2 + 184 >> 2] & -2049;
  }
  HEAP32[i2 + 92 >> 2] = HEAP32[i2 + 104 >> 2];
  HEAP32[i2 + 96 >> 2] = HEAP32[i2 + 108 >> 2];
 }
 return;
}

function __Z11HUD_GetRectv() {
 var i1 = 0;
 i1 = mftCall_i(HEAP32[gb + 92340 + 128 >> 2] | 0) | 0;
 HEAP32[gb + 92880 >> 2] = i1 - ((HEAP32[gb + 46040 + 8112 >> 2] | 0) / 2 | 0);
 i1 = mftCall_i(HEAP32[gb + 92340 + 132 >> 2] | 0) | 0;
 HEAP32[gb + 92880 + 4 >> 2] = i1 - ((HEAP32[gb + 46040 + 8116 >> 2] | 0) / 2 | 0);
 i1 = mftCall_i(HEAP32[gb + 92340 + 128 >> 2] | 0) | 0;
 HEAP32[gb + 92880 + 8 >> 2] = ((HEAP32[gb + 46040 + 8112 >> 2] | 0) / 2 | 0) + i1;
 i1 = mftCall_i(HEAP32[gb + 92340 + 132 >> 2] | 0) | 0;
 HEAP32[gb + 92880 + 12 >> 2] = ((HEAP32[gb + 46040 + 8116 >> 2] | 0) / 2 | 0) + i1;
 return gb + 92880 | 0;
}

function __ZN15WeaponsResource7HasAmmoEP6WEAPON(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) i1 = 0; else if ((HEAP32[i2 + 136 >> 2] | 0) == -1) i1 = 1; else {
  i1 = HEAP32[i2 + 128 >> 2] | 0;
  do if ((i1 | 0) == -1) i1 = 1; else if ((HEAP32[i2 + 160 >> 2] | 0) > 0) i1 = 1; else {
   if ((i1 | 0) >= 0) if (HEAP32[i3 + 10640 + (i1 << 2) >> 2] | 0) {
    i1 = 1;
    break;
   }
   i1 = HEAP32[i2 + 132 >> 2] | 0;
   if ((i1 | 0) >= 0) if (HEAP32[i3 + 10640 + (i1 << 2) >> 2] | 0) {
    i1 = 1;
    break;
   }
   i1 = (HEAP32[i2 + 152 >> 2] & 1 | 0) != 0;
  } while (0);
  i1 = i1 & 1;
 }
 return i1 | 0;
}

function __Z5KeyUpP9kbutton_s(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = mftCall_ii(HEAP32[gb + 92340 + 156 >> 2] | 0, 1) | 0;
 do if (!(HEAP8[i1 >> 0] | 0)) {
  HEAP32[i3 + 4 >> 2] = 0;
  HEAP32[i3 >> 2] = 0;
  HEAP32[i3 + 8 >> 2] = 4;
 } else {
  i2 = _atoi(i1 | 0) | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  if ((i1 | 0) == (i2 | 0)) {
   HEAP32[i3 >> 2] = 0;
   if (HEAP32[i3 + 4 >> 2] | 0) break;
  } else {
   if ((HEAP32[i3 + 4 >> 2] | 0) != (i2 | 0)) break;
   HEAP32[i3 + 4 >> 2] = 0;
   if (i1 | 0) break;
  }
  i1 = HEAP32[i3 + 8 >> 2] | 0;
  if (i1 & 1 | 0) HEAP32[i3 + 8 >> 2] = i1 & -6 | 4;
 } while (0);
 return;
}

function __ZN5CHgun10WeaponIdleEv(i3) {
 i3 = i3 | 0;
 var d1 = 0.0, i2 = 0;
 mftCall_vi(HEAP32[(HEAP32[i3 >> 2] | 0) + 340 >> 2] | 0, i3 | 0);
 if (!(+HEAPF32[i3 + 164 >> 2] > 0.0)) {
  d1 = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i3 + 128 >> 2] | 0) + 680 >> 2] | 0, 0.0, 1.0);
  do if (!(d1 <= .75)) if (!(d1 <= .875)) {
   HEAPF32[i3 + 164 >> 2] = 2.1875;
   i2 = 2;
   break;
  } else {
   HEAPF32[i3 + 164 >> 2] = 2.5;
   i2 = 1;
   break;
  } else {
   HEAPF32[i3 + 164 >> 2] = 3.75;
   i2 = 0;
  } while (0);
  mftCall_viiii(HEAP32[(HEAP32[i3 >> 2] | 0) + 324 >> 2] | 0, i3 | 0, i2 | 0, 1, 0);
 }
 return;
}

function __ZN11CBasePlayer14SelectLastItemEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 do if (HEAP32[i2 + 1232 >> 2] | 0) {
  i1 = HEAP32[i2 + 1224 >> 2] | 0;
  if (i1) {
   if (!(mftCall_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 252 >> 2] | 0, i1 | 0) | 0)) break;
   i1 = HEAP32[i2 + 1224 >> 2] | 0;
   if (i1) {
    mftCall_vii(HEAP32[(HEAP32[i1 >> 2] | 0) + 256 >> 2] | 0, i1 | 0, 0);
    i1 = HEAP32[i2 + 1224 >> 2] | 0;
   }
  }
  i3 = HEAP32[i2 + 1232 >> 2] | 0;
  HEAP32[i2 + 1224 >> 2] = i3;
  HEAP32[i2 + 1232 >> 2] = i1;
  mftCall_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 248 >> 2] | 0, i3 | 0) | 0;
 } while (0);
 return;
}

function __ZN10CHudHealth4InitEv(i1) {
 i1 = i1 | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40578 | 0, fb + 18 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40585 | 0, fb + 19 | 0) | 0;
 HEAP32[i1 + 20 >> 2] = 100;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 252 >> 2] = 0;
 HEAP32[i1 + 32 >> 2] = 0;
 HEAP32[i1 + 32 + 4 >> 2] = 0;
 HEAP32[i1 + 32 + 8 >> 2] = 0;
 HEAP32[i1 + 32 + 12 >> 2] = 0;
 HEAP32[i1 + 32 + 16 >> 2] = 0;
 HEAP32[gb + 93732 >> 2] = 0;
 HEAP32[gb + 93736 >> 2] = 0;
 _memset(i1 + 60 | 0, 0, 192) | 0;
 __ZN4CHud10AddHudElemEP8CHudBase(gb + 46040 | 0, i1);
 return 1;
}

function __Z17CAM_StartDistancev() {
 var i1 = 0, d2 = 0.0;
 if (!(HEAP32[gb + 93828 >> 2] | 0)) {
  HEAP32[gb + 93840 >> 2] = 0;
  HEAP32[gb + 93832 >> 2] = 0;
  HEAP32[gb + 93836 >> 2] = 0;
 } else if (!(HEAP32[gb + 93840 >> 2] | 0)) {
  HEAP32[gb + 93840 >> 2] = 1;
  HEAP32[gb + 93832 >> 2] = 1;
  HEAP32[gb + 93836 >> 2] = 1;
  d2 = +(HEAP32[gb + 93852 >> 2] | 0);
  i1 = ~~(d2 * +__ZN4CHud14GetSensitivityEv(gb + 46040 | 0));
  HEAP32[gb + 93844 >> 2] = i1;
  d2 = +(HEAP32[gb + 93852 + 4 >> 2] | 0);
  i1 = ~~(d2 * +__ZN4CHud14GetSensitivityEv(gb + 46040 | 0));
  HEAP32[gb + 93848 >> 2] = i1;
 }
 return;
}

function _PM_ReduceTimers() {
 var i1 = 0, d2 = 0.0, i3 = 0;
 i3 = HEAP32[gb + 121136 >> 2] | 0;
 i1 = HEAP32[i3 + 148 >> 2] | 0;
 if ((i1 | 0) > 0) {
  i1 = i1 - (HEAPU8[i3 + 283738 >> 0] | 0) | 0;
  HEAP32[i3 + 148 >> 2] = (i1 | 0) < 0 ? 0 : i1;
 }
 d2 = +HEAPF32[i3 + 140 >> 2];
 if (d2 > 0.0) {
  d2 = d2 - +(HEAPU8[i3 + 283738 >> 0] | 0);
  HEAPF32[i3 + 140 >> 2] = d2;
  if (d2 < 0.0) HEAPF32[i3 + 140 >> 2] = 0.0;
 }
 d2 = +HEAPF32[i3 + 172 >> 2];
 if (d2 > 0.0) {
  d2 = d2 - +(HEAPU8[i3 + 283738 >> 0] | 0);
  HEAPF32[i3 + 172 >> 2] = d2;
  if (d2 < 0.0) HEAPF32[i3 + 172 >> 2] = 0.0;
 }
 return;
}

function mftCall_viiidiiddiiii(i13, i1, i2, i5, d6, i7, i8, d9, d10, i11, i12, i3, i4) {
 i13 = i13 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 i7 = i7 | 0;
 i8 = i8 | 0;
 d9 = +d9;
 d10 = +d10;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 if ((i13 | 0) >= (fb | 0) & (i13 | 0) < (fb + 1 | 0)) {
  FUNCTION_TABLE_viiidiiddiiii[i13 - fb & 1](i1 | 0, i2 | 0, i5 | 0, +d6, i7 | 0, i8 | 0, +d9, +d10, i11 | 0, i12 | 0, i3 | 0, i4 | 0);
  return;
 }
 ftCall_viiidiiddiiii(i13 | 0, i1 | 0, i2 | 0, i5 | 0, +d6, i7 | 0, i8 | 0, +d9, +d10, i11 | 0, i12 | 0, i3 | 0, i4 | 0);
}

function __ZN4CMP510WeaponIdleEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 320 >> 2] | 0, i1 | 0);
 __ZN11CBasePlayer16GetAutoaimVectorEf(i2, 0, 0.0);
 if (!(+HEAPF32[i1 + 164 >> 2] > 0.0)) {
  i3 = (mftCall_iii(HEAP32[gb + 56972 + 360 >> 2] | 0, 0, 1) | 0) != 0 & 1;
  mftCall_viiii(HEAP32[(HEAP32[i1 >> 2] | 0) + 324 >> 2] | 0, i1 | 0, i3 | 0, 1, 0);
  HEAPF32[i1 + 164 >> 2] = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i1 + 128 >> 2] | 0) + 680 >> 2] | 0, 10.0, 15.0);
 }
 STACKTOP = i2;
 return;
}

function _VectorAngles(i4, i5) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 var d1 = 0.0, d2 = 0.0, d3 = 0.0;
 d1 = +HEAPF32[i4 + 4 >> 2];
 d3 = +HEAPF32[i4 >> 2];
 if (d1 == 0.0 & d3 == 0.0) {
  d1 = +HEAPF32[i4 + 8 >> 2] > 0.0 ? 90.0 : 270.0;
  d2 = 0.0;
 } else {
  d2 = +Math_atan2(+d1, +d3) * 180.0 * .3183098861837907;
  d2 = d2 < 0.0 ? d2 + 360.0 : d2;
  d1 = +Math_sqrt(+(d1 * d1 + d3 * d3));
  d1 = +Math_atan2(+(+HEAPF32[i4 + 8 >> 2]), +d1) * 180.0 * .3183098861837907;
  if (d1 < 0.0) d1 = d1 + 360.0;
 }
 HEAPF32[i5 >> 2] = d1;
 HEAPF32[i5 + 4 >> 2] = d2;
 HEAPF32[i5 + 8 >> 2] = 0.0;
 return;
}

function mftCall_iiiidddddidddd(i14, i1, i2, i6, d7, d8, d9, d10, d11, i12, d13, d3, d4, d5) {
 i14 = i14 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 d7 = +d7;
 d8 = +d8;
 d9 = +d9;
 d10 = +d10;
 d11 = +d11;
 i12 = i12 | 0;
 d13 = +d13;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 if ((i14 | 0) >= (fb | 0) & (i14 | 0) < (fb + 0 | 0)) return FUNCTION_TABLE_iiiidddddidddd[i14 - fb & 0](i1 | 0, i2 | 0, i6 | 0, +d7, +d8, +d9, +d10, +d11, i12 | 0, +d13, +d3, +d4, +d5) | 0;
 return ftCall_iiiidddddidddd(i14 | 0, i1 | 0, i2 | 0, i6 | 0, +d7, +d8, +d9, +d10, +d11, i12 | 0, +d13, +d3, +d4, +d5) | 0;
}

function __ZN4CHud20DrawHudStringReverseEiiiPciii(i2, i1, i9, i6, i8, i7, i5, i4) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i9 = i9 | 0;
 i6 = i6 | 0;
 i8 = i8 | 0;
 i7 = i7 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i3 = 0;
 i2 = HEAP8[i8 >> 0] | 0;
 if (i2 << 24 >> 24) {
  i3 = i8;
  do {
   i1 = i1 - (HEAP16[gb + 46040 + 8128 + ((i2 & 255) << 1) >> 1] | 0) | 0;
   i3 = i3 + 1 | 0;
   i2 = HEAP8[i3 >> 0] | 0;
  } while (i2 << 24 >> 24 != 0);
 }
 i6 = (i1 | 0) < (i6 | 0) ? i6 : i1;
 __ZN4CHud13DrawHudStringEiiiPciii(0, i6, i9, HEAP32[gb + 46040 + 8112 >> 2] | 0, i8, i7, i5, i4) | 0;
 return i6 | 0;
}

function __Z10MoveTowardfff(d1, d3, d2) {
 d1 = +d1;
 d3 = +d3;
 d2 = +d2;
 do if (d1 != d3) {
  do if ((d1 - d3 > 0.0 ? d1 - d3 : -(d1 - d3)) > 180.0) if (d1 < d3) {
   d1 = d1 + 360.0;
   break;
  } else {
   d1 = d1 + -360.0;
   break;
  } while (0);
  d2 = d1;
  if (d1 < d3) {
   if (!(d2 < d3 + -1.0)) {
    d1 = d3;
    break;
   }
   d1 = d2 + (d3 - d1) * .25;
   break;
  } else {
   if (!(d2 > d3 + 1.0)) {
    d1 = d3;
    break;
   }
   d1 = d2 - (d1 - d3) * .25;
   break;
  }
 } while (0);
 if (d1 < 0.0) d1 = d1 + 360.0; else if (d1 >= 360.0) d1 = d1 + -360.0;
 return +d1;
}

function __Z15AngleQuaternionPfS_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0, d4 = 0.0, d5 = 0.0, d6 = 0.0, d7 = 0.0, d8 = 0.0;
 d5 = +HEAPF32[i1 + 8 >> 2] * .5;
 d8 = +Math_sin(+d5);
 d5 = +Math_cos(+d5);
 d4 = +HEAPF32[i1 + 4 >> 2] * .5;
 d7 = +Math_sin(+d4);
 d4 = +Math_cos(+d4);
 d3 = +HEAPF32[i1 >> 2] * .5;
 d6 = +Math_sin(+d3);
 d3 = +Math_cos(+d3);
 HEAPF32[i2 >> 2] = d5 * d4 * d6 - d8 * d7 * d3;
 HEAPF32[i2 + 4 >> 2] = d8 * d4 * d6 + d5 * d7 * d3;
 HEAPF32[i2 + 8 >> 2] = d8 * d4 * d3 - d5 * d7 * d6;
 HEAPF32[i2 + 12 >> 2] = d8 * d7 * d6 + d5 * d4 * d3;
 return;
}

function __ZN11CHudMessage9XPositionEfii(i1, d4, i5, i3) {
 i1 = i1 | 0;
 d4 = +d4;
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i2 = 0;
 do if (d4 == -1.0) {
  i1 = HEAP32[gb + 46040 + 8112 >> 2] | 0;
  i2 = i1;
  i1 = (i1 - i5 | 0) / 2 | 0;
 } else if (d4 < 0.0) {
  i1 = HEAP32[gb + 46040 + 8112 >> 2] | 0;
  i2 = i1;
  i1 = ~~((d4 + 1.0) * +(i1 | 0) - +(i3 | 0));
  break;
 } else {
  i1 = HEAP32[gb + 46040 + 8112 >> 2] | 0;
  i2 = i1;
  i1 = ~~(+(i1 | 0) * d4);
  break;
 } while (0);
 if ((i1 + i5 | 0) > (i2 | 0)) return i2 - i5 | 0; else return ((i1 | 0) < 0 ? 0 : i1) | 0;
 return 0;
}

function __ZN9CCrossbow8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 36596 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 43965 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 43943 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 37180 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 37203 | 0) | 0;
 HEAP16[i1 + 200 >> 1] = mftCall_iii(HEAP32[gb + 56972 + 488 >> 2] | 0, 1, gb + 38072 | 0) | 0;
 HEAP16[i1 + 202 >> 1] = mftCall_iii(HEAP32[gb + 56972 + 488 >> 2] | 0, 1, gb + 38092 | 0) | 0;
 return;
}

function __ZN5CHgun6ReloadEv(i6) {
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, d4 = 0.0, d5 = 0.0;
 i3 = HEAP32[i6 + 128 >> 2] | 0;
 i2 = i3 + 1236 + (HEAP32[i6 + 168 >> 2] << 2) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 L1 : do if ((i1 | 0) <= 7) {
  d4 = +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2];
  d5 = +HEAPF32[i6 + 200 >> 2];
  do {
   if (!(d5 < d4)) break L1;
   HEAP32[i2 >> 2] = i1 + 1;
   d5 = d5 + .5;
   HEAPF32[i6 + 200 >> 2] = d5;
   i2 = i3 + 1236 + (HEAP32[i6 + 168 >> 2] << 2) | 0;
   i1 = HEAP32[i2 >> 2] | 0;
  } while ((i1 | 0) < 8);
 } while (0);
 return;
}

function __ZN11CHudMessage9YPositionEfi(i1, d3, i4) {
 i1 = i1 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 var i2 = 0;
 do if (d3 == -1.0) {
  i1 = HEAP32[gb + 46040 + 8116 >> 2] | 0;
  i2 = i1;
  i1 = ~~(+(i1 - i4 | 0) * .5);
 } else if (d3 < 0.0) {
  i1 = HEAP32[gb + 46040 + 8116 >> 2] | 0;
  i2 = i1;
  i1 = ~~((d3 + 1.0) * +(i1 | 0) - +(i4 | 0));
  break;
 } else {
  i1 = HEAP32[gb + 46040 + 8116 >> 2] | 0;
  i2 = i1;
  i1 = ~~(+(i1 | 0) * d3);
  break;
 } while (0);
 if ((i1 + i4 | 0) > (i2 | 0)) return i2 - i4 | 0; else return ((i1 | 0) < 0 ? 0 : i1) | 0;
 return 0;
}

function __Z28V_FindViewModelByWeaponModeli(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = mftCall_ii(HEAP32[gb + 94440 + 20 >> 2] | 0, i1 | 0) | 0;
 L1 : do if (!i2) i1 = 0; else {
  i3 = _strlen(i2 | 0) | 0;
  i1 = 0;
  while (1) {
   if (!(_strncasecmp(i2 | 0, HEAP32[gb + 36208 + (i1 << 3) >> 2] | 0, i3 | 0) | 0)) break;
   i1 = i1 + 1 | 0;
   if ((i1 | 0) == 15) {
    i1 = 0;
    break L1;
   }
  }
  i1 = mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 12 >> 2] | 0, HEAP32[gb + 36208 + (i1 << 3) + 4 >> 2] | 0) | 0;
 } while (0);
 return i1 | 0;
}

function __ZN10CHudHealth7VidInitEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 + 52 >> 2] = 0;
 i2 = (__ZN4CHud14GetSpriteIndexEPKc(gb + 46040 | 0, gb + 40564 | 0) | 0) + 1 | 0;
 HEAP32[i1 + 24 >> 2] = i2;
 HEAP32[i1 + 28 >> 2] = __ZN4CHud14GetSpriteIndexEPKc(gb + 46040 | 0, gb + 40572 | 0) | 0;
 i1 = HEAP32[gb + 46040 + 116 >> 2] | 0;
 HEAP32[gb + 93732 >> 2] = (HEAP32[i1 + (i2 << 4) + 4 >> 2] | 0) - (HEAP32[i1 + (i2 << 4) >> 2] | 0);
 HEAP32[gb + 93736 >> 2] = (HEAP32[i1 + (i2 << 4) + 12 >> 2] | 0) - (HEAP32[i1 + (i2 << 4) + 8 >> 2] | 0);
 return 1;
}

function __Z7IN_Initv() {
 var i1 = 0;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 44689 | 0, gb + 44701 | 0, 1) | 0;
 HEAP32[gb + 118452 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 44703 | 0, gb + 44858 | 0, 1) | 0;
 HEAP32[gb + 118456 >> 2] = i1;
 i1 = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 44712 | 0, gb + 44726 | 0, 1) | 0;
 HEAP32[gb + 118460 >> 2] = i1;
 HEAPF32[gb + 118480 >> 2] = 0.0;
 HEAPF32[gb + 118476 >> 2] = 0.0;
 HEAPF32[gb + 118468 >> 2] = 0.0;
 HEAPF32[gb + 118464 >> 2] = 0.0;
 return;
}

function __Z10HUD_GetFOVv() {
 var d1 = 0.0, i2 = 0, i3 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if (mftCall_i(HEAP32[HEAP32[gb + 92340 + 340 >> 2] >> 2] | 0) | 0) {
  HEAP32[i2 >> 2] = HEAP32[gb + 93760 >> 2];
  __Z16Demo_WriteBufferiiPh(1, 4, i2);
 }
 if (!(mftCall_i(HEAP32[(HEAP32[gb + 92340 + 340 >> 2] | 0) + 4 >> 2] | 0) | 0)) d1 = +HEAPF32[gb + 93760 >> 2]; else {
  i3 = HEAP32[gb + 93724 >> 2] | 0;
  HEAP32[gb + 93760 >> 2] = i3;
  d1 = (HEAP32[tempDoublePtr >> 2] = i3, +HEAPF32[tempDoublePtr >> 2]);
 }
 STACKTOP = i2;
 return +d1;
}

function __ZN9CTripmine21SetObjectCollisionBoxEv(i1) {
 i1 = i1 | 0;
 var d2 = 0.0, d3 = 0.0, i4 = 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 d2 = +HEAPF32[i4 + 12 >> 2] + -16.0;
 d3 = +HEAPF32[i4 + 16 >> 2] + -5.0;
 HEAPF32[i4 + 196 >> 2] = +HEAPF32[i4 + 8 >> 2] + -16.0;
 HEAPF32[i4 + 200 >> 2] = d2;
 HEAPF32[i4 + 204 >> 2] = d3;
 i1 = HEAP32[i1 + 4 >> 2] | 0;
 d3 = +HEAPF32[i1 + 12 >> 2] + 16.0;
 d2 = +HEAPF32[i1 + 16 >> 2] + 28.0;
 HEAPF32[i1 + 208 >> 2] = +HEAPF32[i1 + 8 >> 2] + 16.0;
 HEAPF32[i1 + 212 >> 2] = d3;
 HEAPF32[i1 + 216 >> 2] = d2;
 return;
}

function __ZN11CHudMessage10MessageAddEP20client_textmessage_s(i5, i4) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0;
 i3 = HEAP32[gb + 46040 + 36 >> 2] | 0;
 HEAP32[i5 + 152 >> 2] = i3;
 i1 = HEAP32[i5 + 16 >> 2] | 0;
 if (!(i1 & 1)) {
  HEAP32[i5 + 16 >> 2] = i1 | 1;
  i1 = 0;
 } else i1 = 0;
 do {
  i2 = i5 + 20 + (i1 << 2) | 0;
  if (!(HEAP32[i2 >> 2] | 0)) {
   i6 = 4;
   break;
  }
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) < 16);
 if ((i6 | 0) == 4) {
  HEAP32[i2 >> 2] = i4;
  HEAP32[i5 + 84 + (i1 << 2) >> 2] = i3;
 }
 return;
}

function _Distance(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var d1 = 0.0, i4 = 0, d5 = 0.0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 d5 = +HEAPF32[i3 >> 2] - +HEAPF32[i2 >> 2];
 HEAPF32[i4 >> 2] = d5;
 d1 = +HEAPF32[i3 + 4 >> 2] - +HEAPF32[i2 + 4 >> 2];
 HEAPF32[i4 + 4 >> 2] = d1;
 HEAPF32[i4 + 8 >> 2] = +HEAPF32[i3 + 8 >> 2] - +HEAPF32[i2 + 8 >> 2];
 d1 = d5 * d5 + d1 * d1;
 i2 = 2;
 do {
  d5 = +HEAPF32[i4 + (i2 << 2) >> 2];
  d1 = d1 + d5 * d5;
  i2 = i2 + 1 | 0;
 } while ((i2 | 0) != 3);
 d5 = +Math_sqrt(+d1);
 STACKTOP = i4;
 return +d5;
}

function __ZN11CHudBattery7VidInitEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = __ZN4CHud14GetSpriteIndexEPKc(gb + 46040 | 0, gb + 40107 | 0) | 0;
 i4 = __ZN4CHud14GetSpriteIndexEPKc(gb + 46040 | 0, gb + 40118 | 0) | 0;
 HEAP32[i1 + 24 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 i3 = HEAP32[gb + 46040 + 116 >> 2] | 0;
 HEAP32[i1 + 28 >> 2] = i3 + (i2 << 4);
 HEAP32[i1 + 32 >> 2] = i3 + (i4 << 4);
 HEAP32[i1 + 44 >> 2] = (HEAP32[i3 + (i4 << 4) + 12 >> 2] | 0) - (HEAP32[i3 + (i2 << 4) + 8 >> 2] | 0);
 HEAPF32[i1 + 40 >> 2] = 0.0;
 return 1;
}

function __ZN12CHandGrenade7HolsterEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = HEAP32[i2 + 128 >> 2] | 0;
 HEAPF32[i1 + 612 >> 2] = .5;
 if (!(HEAP32[i1 + 1236 + (HEAP32[i2 + 168 >> 2] << 2) >> 2] | 0)) {
  i1 = (HEAP32[i1 + 4 >> 2] | 0) + 360 | 0;
  HEAP32[i1 >> 2] = HEAP32[i1 >> 2] & -4097;
  HEAP32[i2 + 16 >> 2] = fb + 207;
  HEAP32[i2 + 20 >> 2] = 0;
  HEAPF32[(HEAP32[i2 + 4 >> 2] | 0) + 260 >> 2] = +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2] + .1;
 } else mftCall_viiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 324 >> 2] | 0, i2 | 0, 6, 1, 0);
 return;
}

function __Z10V_CalcRoll6VectorS_ff(i2, i4, d1, d6) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 d1 = +d1;
 d6 = +d6;
 var d3 = 0.0, d5 = 0.0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 mftCall_viiii(HEAP32[gb + 92340 + 96 >> 2] | 0, i2 | 0, i7 + 24 | 0, i7 + 12 | 0, i7 | 0);
 d5 = +HEAPF32[i4 >> 2] * +HEAPF32[i7 + 12 >> 2] + +HEAPF32[i4 + 4 >> 2] * +HEAPF32[i7 + 12 + 4 >> 2] + +HEAPF32[i4 + 8 >> 2] * +HEAPF32[i7 + 12 + 8 >> 2];
 d3 = d5 > 0.0 ? d5 : -d5;
 if (d3 < d6) d1 = d3 * d1 / d6;
 STACKTOP = i7;
 return +((d5 < 0.0 ? -1.0 : 1.0) * d1);
}

function __ZN7CSqueak7HolsterEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = HEAP32[i2 + 128 >> 2] | 0;
 HEAPF32[i1 + 612 >> 2] = .5;
 if (!(HEAP32[i1 + 1236 + (HEAP32[i2 + 168 >> 2] << 2) >> 2] | 0)) {
  i1 = (HEAP32[i1 + 4 >> 2] | 0) + 360 | 0;
  HEAP32[i1 >> 2] = HEAP32[i1 >> 2] & -32769;
  HEAP32[i2 + 16 >> 2] = fb + 207;
  HEAP32[i2 + 20 >> 2] = 0;
  HEAPF32[(HEAP32[i2 + 4 >> 2] | 0) + 260 >> 2] = +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2] + .1;
 } else mftCall_viiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 324 >> 2] | 0, i2 | 0, 3, 1, 0);
 return;
}

function __ZN9CTripmine7HolsterEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = HEAP32[i2 + 128 >> 2] | 0;
 HEAPF32[i1 + 612 >> 2] = .5;
 if (!(HEAP32[i1 + 1236 + (HEAP32[i2 + 168 >> 2] << 2) >> 2] | 0)) {
  i1 = (HEAP32[i1 + 4 >> 2] | 0) + 360 | 0;
  HEAP32[i1 >> 2] = HEAP32[i1 >> 2] & -8193;
  HEAP32[i2 + 16 >> 2] = fb + 207;
  HEAP32[i2 + 20 >> 2] = 0;
  HEAPF32[(HEAP32[i2 + 4 >> 2] | 0) + 260 >> 2] = +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2] + .1;
 }
 mftCall_viiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 324 >> 2] | 0, i2 | 0, 5, 1, 0);
 return;
}

function __ZN4CRpg6ReloadEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = HEAP32[i2 + 176 >> 2] | 0;
 do if ((i1 | 0) != 1) if ((HEAP32[(HEAP32[i2 + 128 >> 2] | 0) + 64 >> 2] | 0) >= 1) {
  HEAPF32[i2 + 156 >> 2] = .5;
  if (!(HEAP32[i2 + 204 >> 2] | 0)) {
   if (i1 | 0) break;
  } else if (HEAP32[i2 + 200 >> 2] | i1 | 0) break;
  if (__ZN17CBasePlayerWeapon13DefaultReloadEiifi(i2, 1, 2, 2.0, 0) | 0) HEAPF32[i2 + 164 >> 2] = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i2 + 128 >> 2] | 0) + 680 >> 2] | 0, 10.0, 15.0);
 } while (0);
 return;
}

function __ZN4CRpg8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 38733 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44318 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44301 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39466 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 38750 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 38774 | 0) | 0;
 HEAP16[i1 + 208 >> 1] = mftCall_iii(HEAP32[gb + 56972 + 488 >> 2] | 0, 1, gb + 38796 | 0) | 0;
 return;
}

function __ZN11CHudSayText4InitEv(i1) {
 i1 = i1 | 0;
 __ZN4CHud10AddHudElemEP8CHudBase(gb + 46040 | 0, i1);
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 43391 | 0, fb + 40 | 0) | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] | 0, i1 | 0);
 HEAP32[i1 + 20 >> 2] = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43399 | 0, gb + 43877 | 0, 0) | 0;
 HEAP32[i1 + 24 >> 2] = mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43411 | 0, gb + 43428 | 0, 0) | 0;
 HEAP32[i1 + 16 >> 2] = HEAP32[i1 + 16 >> 2] | 2;
 return 1;
}

function _PM_SortTextures() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i1 = HEAP32[gb + 121148 >> 2] | 0;
 if ((i1 | 0) > 0) {
  i5 = 0;
  do {
   i4 = i5;
   i5 = i5 + 1 | 0;
   if ((i5 | 0) < (i1 | 0)) {
    i3 = gb + 132825 + (i4 * 13 | 0) | 0;
    i2 = i5;
    do {
     if ((_strcasecmp(i3 | 0, gb + 132825 + (i2 * 13 | 0) | 0) | 0) > 0) {
      _PM_SwapTextures(i4, i2);
      i1 = HEAP32[gb + 121148 >> 2] | 0;
     }
     i2 = i2 + 1 | 0;
    } while ((i2 | 0) < (i1 | 0));
   }
  } while ((i5 | 0) < (i1 | 0));
 }
 return;
}

function __Z13SpectatorHelpv() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 __ZN15CHudTextMessage26BufferedLocaliseTextStringEPKc(gb + 41976 | 0) | 0;
 i2 = gb + 131672 | 0;
 L1 : while (1) {
  i1 = HEAP8[i2 >> 0] | 0;
  switch (i1 << 24 >> 24) {
  case 0:
   break L1;
  case 13:
   break;
  default:
   {
    i4 = HEAP32[gb + 92340 + 160 >> 2] | 0;
    HEAP32[i3 >> 2] = i1 << 24 >> 24;
    mftCall_vii(i4 | 0, gb + 41992 | 0, i3 | 0);
   }
  }
  i2 = i2 + 1 | 0;
 }
 STACKTOP = i3;
 return;
}

function __ZN17CBasePlayerWeapon9CanDeployEv(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 + 136 >> 2] | 0;
 if (!(HEAP32[gb + 57608 + (i1 * 44 | 0) + 8 >> 2] | 0)) return 1;
 i2 = HEAP32[i4 + 128 >> 2] | 0;
 i3 = HEAP32[i2 + 1236 + (HEAP32[i4 + 168 >> 2] << 2) >> 2] | 0;
 if (!(HEAP32[gb + 57608 + (i1 * 44 | 0) + 16 >> 2] | 0)) i1 = (i3 | 0) != 0 & 1; else i1 = (HEAP32[i2 + 1236 + (HEAP32[i4 + 172 >> 2] << 2) >> 2] | i3 | 0) != 0 & 1;
 return ((i1 | 0) == 0 ? (HEAP32[i4 + 176 >> 2] | 0) < 1 : 0) & 1 ^ 1 | 0;
}

function __Z7DrawBariiiif(i1, i5, i3, i4, d2) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d2 = +d2;
 var i6 = 0;
 d2 = d2 < 0.0 ? 0.0 : d2;
 d2 = d2 > 1.0 ? 1.0 : d2;
 if (d2 != 0.0) {
  i6 = (~~(+(i3 | 0) * d2) | 0) < 1 ? 1 : ~~(+(i3 | 0) * d2);
  mftCall_viiiiiiii(HEAP32[gb + 92340 + 44 >> 2] | 0, i1 | 0, i5 | 0, i6 | 0, i4 | 0, 0, 160, 0, 255);
  i3 = i3 - i6 | 0;
  i1 = i6 + i1 | 0;
 }
 mftCall_viiiiiiii(HEAP32[gb + 92340 + 44 >> 2] | 0, i1 | 0, i5 | 0, i3 | 0, i4 | 0, 255, 160, 0, 128);
 return i1 + i3 | 0;
}

function __Z17CAM_ToThirdPersonv() {
 var i1 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((mftCall_i(HEAP32[gb + 92340 + 144 >> 2] | 0) | 0) <= 1) {
  mftCall_vi(HEAP32[gb + 92340 + 136 >> 2] | 0, i1 | 0);
  if (!(HEAP32[gb + 93828 >> 2] | 0)) {
   HEAP32[gb + 93828 >> 2] = 1;
   HEAP32[gb + 93816 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
   HEAP32[gb + 93816 >> 2] = HEAP32[i1 >> 2];
   HEAPF32[gb + 93816 + 8 >> 2] = 30.0;
  }
  mftCall_vid(HEAP32[gb + 92340 + 148 >> 2] | 0, gb + 42163 | 0, 0.0);
 }
 STACKTOP = i1;
 return;
}

function _HUD_AddEntity(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0;
 do if (!(HEAP32[gb + 121104 >> 2] | 0)) i4 = 5; else {
  __ZN13CHudSpectator17AddOverviewEntityEiP11cl_entity_sPKc(gb + 46040 + 424 | 0, i3, i1, 0) | 0;
  if ((HEAP32[gb + 121104 >> 2] | 0) != 4) if (!(+HEAPF32[(HEAP32[gb + 46040 + 4280 >> 2] | 0) + 12 >> 2] == 2.0)) {
   i4 = 5;
   break;
  }
  if ((HEAP32[i1 >> 2] | 0) == (HEAP32[gb + 121108 >> 2] | 0)) i1 = 0; else i4 = 5;
 } while (0);
 if ((i4 | 0) == 5) i1 = 1;
 return i1 | 0;
}

function __ZN12CHandGrenade11GetItemInfoEP8ItemInfo(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 + 24 >> 2] = (HEAP32[(HEAP32[gb + 57604 >> 2] | 0) + 152 >> 2] | 0) + (HEAP32[HEAP32[i2 + 4 >> 2] >> 2] | 0);
 HEAP32[i1 + 8 >> 2] = gb + 37814;
 HEAP32[i1 + 12 >> 2] = 10;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = -1;
 HEAP32[i1 + 28 >> 2] = -1;
 HEAP32[i1 >> 2] = 4;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i2 + 136 >> 2] = 12;
 HEAP32[i1 + 32 >> 2] = 12;
 HEAP32[i1 + 40 >> 2] = 5;
 HEAP32[i1 + 36 >> 2] = 24;
 return 1;
}

function __Z11GetClassPtrI15CMP5AmmoGrenadeEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 100) | 0;
  HEAP32[i4 >> 2] = gb + 29504 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __ZN8CSatchel5ThrowEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = HEAP32[i2 + 128 >> 2] | 0;
 if (HEAP32[i1 + 1236 + (HEAP32[i2 + 168 >> 2] << 2) >> 2] | 0) {
  __Z10LoadVModelPcP11CBasePlayer(gb + 44488 | 0, i1);
  mftCall_viiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 324 >> 2] | 0, i2 | 0, 2, 1, 0);
  HEAP32[i2 + 88 >> 2] = 1;
  i1 = (HEAP32[i2 + 128 >> 2] | 0) + 1236 + (HEAP32[i2 + 168 >> 2] << 2) | 0;
  HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + -1;
  HEAPF32[i2 + 156 >> 2] = 1.0;
  HEAPF32[i2 + 160 >> 2] = .5;
 }
 return;
}

function __ZN4CMP511GetItemInfoEP8ItemInfo(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 + 24 >> 2] = (HEAP32[(HEAP32[gb + 57604 >> 2] | 0) + 152 >> 2] | 0) + (HEAP32[HEAP32[i2 + 4 >> 2] >> 2] | 0);
 HEAP32[i1 + 8 >> 2] = gb + 39421;
 HEAP32[i1 + 12 >> 2] = 250;
 HEAP32[i1 + 16 >> 2] = gb + 38246;
 HEAP32[i1 + 20 >> 2] = 10;
 HEAP32[i1 + 28 >> 2] = 50;
 HEAP32[i1 >> 2] = 2;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 36 >> 2] = 0;
 HEAP32[i2 + 136 >> 2] = 4;
 HEAP32[i1 + 32 >> 2] = 4;
 HEAP32[i1 + 40 >> 2] = 15;
 return 1;
}

function __Z11GetClassPtrI14CSatchelChargeEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 684) | 0;
  HEAP32[i4 >> 2] = gb + 30960 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __ZN13CHudSpectator23AddOverviewEntityToListEiP11cl_entity_sd(i6, i5, i3, d4) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 var i1 = 0, i2 = 0, i7 = 0;
 i1 = 0;
 while (1) {
  i2 = i6 + 1768 + (i1 << 4) + 4 | 0;
  if (!(HEAP32[i2 >> 2] | 0)) {
   i7 = 4;
   break;
  }
  i1 = i1 + 1 | 0;
  if ((i1 | 0) >= 128) {
   i1 = 0;
   break;
  }
 }
 if ((i7 | 0) == 4) {
  HEAP32[i2 >> 2] = i3;
  HEAP32[i6 + 1768 + (i1 << 4) >> 2] = i5;
  HEAPF64[i6 + 1768 + (i1 << 4) + 8 >> 3] = d4;
  i1 = 1;
 }
 return i1 | 0;
}

function __Z11GetClassPtrI13CMP5ChainammoEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 100) | 0;
  HEAP32[i4 >> 2] = gb + 29264 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __Z11GetClassPtrI13CCrossbowAmmoEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 100) | 0;
  HEAP32[i4 >> 2] = gb + 17800 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __ZN9CTripmine11GetItemInfoEP8ItemInfo(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 + 24 >> 2] = (HEAP32[(HEAP32[gb + 57604 >> 2] | 0) + 152 >> 2] | 0) + (HEAP32[HEAP32[i2 + 4 >> 2] >> 2] | 0);
 HEAP32[i1 + 8 >> 2] = gb + 39381;
 HEAP32[i1 + 12 >> 2] = 5;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = -1;
 HEAP32[i1 + 28 >> 2] = -1;
 HEAP32[i1 >> 2] = 4;
 HEAP32[i1 + 4 >> 2] = 2;
 HEAP32[i2 + 136 >> 2] = 13;
 HEAP32[i1 + 32 >> 2] = 13;
 HEAP32[i1 + 40 >> 2] = -10;
 HEAP32[i1 + 36 >> 2] = 24;
 return 1;
}

function __Z11GetClassPtrI12CShotgunAmmoEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 100) | 0;
  HEAP32[i4 >> 2] = gb + 32208 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __Z11GetClassPtrI12CMP5AmmoClipEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 100) | 0;
  HEAP32[i4 >> 2] = gb + 29024 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __Z11GetClassPtrI12CHandGrenadeEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 196) | 0;
  HEAP32[i4 >> 2] = gb + 19644 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __ZN8CSatchel11GetItemInfoEP8ItemInfo(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 + 24 >> 2] = (HEAP32[(HEAP32[gb + 57604 >> 2] | 0) + 152 >> 2] | 0) + (HEAP32[HEAP32[i2 + 4 >> 2] >> 2] | 0);
 HEAP32[i1 + 8 >> 2] = gb + 38996;
 HEAP32[i1 + 12 >> 2] = 5;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = -1;
 HEAP32[i1 + 28 >> 2] = -1;
 HEAP32[i1 >> 2] = 4;
 HEAP32[i1 + 4 >> 2] = 1;
 HEAP32[i1 + 36 >> 2] = 25;
 HEAP32[i2 + 136 >> 2] = 14;
 HEAP32[i1 + 32 >> 2] = 14;
 HEAP32[i1 + 40 >> 2] = -10;
 return 1;
}

function __Z11GetClassPtrI11CPythonAmmoEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 100) | 0;
  HEAP32[i4 >> 2] = gb + 30112 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __ZN9CCrossbow15SecondaryAttackEv(i4) {
 i4 = i4 | 0;
 var i1 = 0, d2 = 0.0, i3 = 0;
 i1 = HEAP32[i4 + 128 >> 2] | 0;
 i3 = (HEAP32[i1 + 4 >> 2] | 0) + 532 | 0;
 d2 = +HEAPF32[i3 >> 2];
 if (d2 != 0.0) {
  HEAP32[i1 + 1192 >> 2] = 0;
  HEAPF32[i3 >> 2] = 0.0;
  HEAP32[i4 + 196 >> 2] = 0;
 } else if (d2 != 20.0) {
  HEAP32[i1 + 1192 >> 2] = 20;
  HEAPF32[i3 >> 2] = 20.0;
  HEAP32[i4 + 196 >> 2] = 1;
 }
 HEAPF32[(HEAP32[i4 + 4 >> 2] | 0) + 260 >> 2] = .10000000149011612;
 HEAPF32[i4 + 160 >> 2] = 1.0;
 return;
}

function __Z11GetClassPtrI10CGlockAmmoEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 100) | 0;
  HEAP32[i4 >> 2] = gb + 33552 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __Z11GetClassPtrI10CGaussAmmoEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 100) | 0;
  HEAP32[i4 >> 2] = gb + 19404 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __ZN7CSqueak11GetItemInfoEP8ItemInfo(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 + 24 >> 2] = (HEAP32[(HEAP32[gb + 57604 >> 2] | 0) + 152 >> 2] | 0) + (HEAP32[HEAP32[i2 + 4 >> 2] >> 2] | 0);
 HEAP32[i1 + 8 >> 2] = gb + 39324;
 HEAP32[i1 + 12 >> 2] = 15;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = -1;
 HEAP32[i1 + 28 >> 2] = -1;
 HEAP32[i1 >> 2] = 4;
 HEAP32[i1 + 4 >> 2] = 3;
 HEAP32[i2 + 136 >> 2] = 15;
 HEAP32[i1 + 32 >> 2] = 15;
 HEAP32[i1 + 40 >> 2] = 5;
 HEAP32[i1 + 36 >> 2] = 24;
 return 1;
}

function __ZN8CShotgun11GetItemInfoEP8ItemInfo(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 + 24 >> 2] = (HEAP32[(HEAP32[gb + 57604 >> 2] | 0) + 152 >> 2] | 0) + (HEAP32[HEAP32[i2 + 4 >> 2] >> 2] | 0);
 HEAP32[i1 + 8 >> 2] = gb + 39080;
 HEAP32[i1 + 12 >> 2] = 125;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = -1;
 HEAP32[i1 + 28 >> 2] = 8;
 HEAP32[i1 >> 2] = 2;
 HEAP32[i1 + 4 >> 2] = 1;
 HEAP32[i1 + 36 >> 2] = 0;
 HEAP32[i2 + 136 >> 2] = 7;
 HEAP32[i1 + 32 >> 2] = 7;
 HEAP32[i1 + 40 >> 2] = 15;
 return 1;
}

function __ZN5CEgon11GetItemInfoEP8ItemInfo(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 + 24 >> 2] = (HEAP32[(HEAP32[gb + 57604 >> 2] | 0) + 152 >> 2] | 0) + (HEAP32[HEAP32[i2 + 4 >> 2] >> 2] | 0);
 HEAP32[i1 + 8 >> 2] = gb + 37660;
 HEAP32[i1 + 12 >> 2] = 100;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = -1;
 HEAP32[i1 + 28 >> 2] = -1;
 HEAP32[i1 >> 2] = 3;
 HEAP32[i1 + 4 >> 2] = 2;
 HEAP32[i2 + 136 >> 2] = 10;
 HEAP32[i1 + 32 >> 2] = 10;
 HEAP32[i1 + 36 >> 2] = 0;
 HEAP32[i1 + 40 >> 2] = 20;
 return 1;
}

function __Z11GetClassPtrI9CTripmineEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 200) | 0;
  HEAP32[i4 >> 2] = gb + 32816 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __Z11GetClassPtrI9CEgonAmmoEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 100) | 0;
  HEAP32[i4 >> 2] = gb + 18776 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __Z11GetClassPtrI9CCrossbowEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 204) | 0;
  HEAP32[i4 >> 2] = gb + 17432 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __ZN6CGlock11GetItemInfoEP8ItemInfo(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 + 24 >> 2] = (HEAP32[(HEAP32[gb + 57604 >> 2] | 0) + 152 >> 2] | 0) + (HEAP32[HEAP32[i2 + 4 >> 2] >> 2] | 0);
 HEAP32[i1 + 8 >> 2] = gb + 39421;
 HEAP32[i1 + 12 >> 2] = 250;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = -1;
 HEAP32[i1 + 28 >> 2] = 17;
 HEAP32[i1 >> 2] = 1;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 36 >> 2] = 0;
 HEAP32[i2 + 136 >> 2] = 2;
 HEAP32[i1 + 32 >> 2] = 2;
 HEAP32[i1 + 40 >> 2] = 10;
 return 1;
}

function __ZN6CGauss11GetItemInfoEP8ItemInfo(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 + 24 >> 2] = (HEAP32[(HEAP32[gb + 57604 >> 2] | 0) + 152 >> 2] | 0) + (HEAP32[HEAP32[i2 + 4 >> 2] >> 2] | 0);
 HEAP32[i1 + 8 >> 2] = gb + 37660;
 HEAP32[i1 + 12 >> 2] = 100;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = -1;
 HEAP32[i1 + 28 >> 2] = -1;
 HEAP32[i1 >> 2] = 3;
 HEAP32[i1 + 4 >> 2] = 1;
 HEAP32[i2 + 136 >> 2] = 9;
 HEAP32[i1 + 32 >> 2] = 9;
 HEAP32[i1 + 36 >> 2] = 0;
 HEAP32[i1 + 40 >> 2] = 20;
 return 1;
}

function __Z11READ_STRINGv() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 HEAP8[gb + 127001 >> 0] = 0;
 i3 = HEAP32[gb + 94372 >> 2] | 0;
 i4 = HEAP32[gb + 94376 >> 2] | 0;
 i5 = HEAP32[gb + 94368 >> 2] | 0;
 i1 = 0;
 do {
  if ((i5 | 0) >= (i3 | 0)) break;
  i2 = HEAP8[i4 + i5 >> 0] | 0;
  i5 = i5 + 1 | 0;
  HEAP32[gb + 94368 >> 2] = i5;
  if (!(i2 << 24 >> 24)) break;
  HEAP8[gb + 127001 + i1 >> 0] = i2;
  i1 = i1 + 1 | 0;
 } while (i1 >>> 0 < 2047);
 HEAP8[gb + 127001 + i1 >> 0] = 0;
 return gb + 127001 | 0;
}

function __Z11GetClassPtrI8CShotgunEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 212) | 0;
  HEAP32[i4 >> 2] = gb + 31840 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __Z11GetClassPtrI8CSatchelEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 196) | 0;
  HEAP32[i4 >> 2] = gb + 31472 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __Z11GetClassPtrI8CRpgAmmoEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 100) | 0;
  HEAP32[i4 >> 2] = gb + 30720 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __Z11GetClassPtrI8CCrowbarEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 260) | 0;
  HEAP32[i4 >> 2] = gb + 18040 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __ZN7CPython11GetItemInfoEP8ItemInfo(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 + 24 >> 2] = (HEAP32[(HEAP32[gb + 57604 >> 2] | 0) + 152 >> 2] | 0) + (HEAP32[HEAP32[i2 + 4 >> 2] >> 2] | 0);
 HEAP32[i1 + 8 >> 2] = gb + 38585;
 HEAP32[i1 + 12 >> 2] = 36;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = -1;
 HEAP32[i1 + 28 >> 2] = 6;
 HEAP32[i1 + 36 >> 2] = 0;
 HEAP32[i1 >> 2] = 1;
 HEAP32[i1 + 4 >> 2] = 1;
 HEAP32[i2 + 136 >> 2] = 3;
 HEAP32[i1 + 32 >> 2] = 3;
 HEAP32[i1 + 40 >> 2] = 15;
 return 1;
}

function __ZN5CHgun11GetItemInfoEP8ItemInfo(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 + 24 >> 2] = (HEAP32[(HEAP32[gb + 57604 >> 2] | 0) + 152 >> 2] | 0) + (HEAP32[HEAP32[i2 + 4 >> 2] >> 2] | 0);
 HEAP32[i1 + 8 >> 2] = gb + 38192;
 HEAP32[i1 + 12 >> 2] = 8;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = -1;
 HEAP32[i1 + 28 >> 2] = -1;
 HEAP32[i1 >> 2] = 3;
 HEAP32[i1 + 4 >> 2] = 3;
 HEAP32[i2 + 136 >> 2] = 11;
 HEAP32[i1 + 32 >> 2] = 11;
 HEAP32[i1 + 36 >> 2] = 6;
 HEAP32[i1 + 40 >> 2] = 10;
 return 1;
}

function __Z11GetClassPtrI7CSqueakEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 204) | 0;
  HEAP32[i4 >> 2] = gb + 32448 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __Z11GetClassPtrI7CPythonEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 208) | 0;
  HEAP32[i4 >> 2] = gb + 29744 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __Z11GetClassPtrI6CGlockEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 204) | 0;
  HEAP32[i4 >> 2] = gb + 33184 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __Z11GetClassPtrI6CGaussEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 220) | 0;
  HEAP32[i4 >> 2] = gb + 19036 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __ZN11CHudSayText11InitHUDDataEv(i1) {
 i1 = i1 | 0;
 _memset(gb + 129049 | 0, 0, 1536) | 0;
 HEAP32[gb + 94380 >> 2] = 0;
 HEAP32[gb + 94380 + 4 >> 2] = 0;
 HEAP32[gb + 94380 + 8 >> 2] = 0;
 HEAP32[gb + 94380 + 12 >> 2] = 0;
 HEAP32[gb + 94380 + 16 >> 2] = 0;
 HEAP32[gb + 94380 + 20 >> 2] = 0;
 HEAP32[gb + 94404 >> 2] = 0;
 HEAP32[gb + 94404 + 4 >> 2] = 0;
 HEAP32[gb + 94404 + 8 >> 2] = 0;
 HEAP32[gb + 94404 + 12 >> 2] = 0;
 HEAP32[gb + 94404 + 16 >> 2] = 0;
 HEAP32[gb + 94404 + 20 >> 2] = 0;
 return;
}

function __Z11GetClassPtrI5CHgunEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 212) | 0;
  HEAP32[i4 >> 2] = gb + 28288 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __Z11GetClassPtrI5CEgonEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 236) | 0;
  HEAP32[i4 >> 2] = gb + 18408 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __Z11GetClassPtrI4CRpgEPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 212) | 0;
  HEAP32[i4 >> 2] = gb + 30352 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __Z11GetClassPtrI4CMP5EPT_S2_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if (!i1) {
  i1 = mftCall_i(HEAP32[gb + 56972 + 84 >> 2] | 0) | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + 128 | 0;
 }
 i2 = HEAP32[i1 + 520 >> 2] | 0;
 if (!i2) i4 = 5; else {
  i3 = HEAP32[i2 + 124 >> 2] | 0;
  if (!i3) i4 = 5; else i1 = i3;
 }
 if ((i4 | 0) == 5) {
  i4 = mftCall_iii(HEAP32[gb + 56972 + 252 >> 2] | 0, i2 | 0, 208) | 0;
  HEAP32[i4 >> 2] = gb + 28656 + 8;
  HEAP32[i4 + 4 >> 2] = i1;
  i1 = i4;
 }
 return i1 | 0;
}

function __ZN4CRpg11GetItemInfoEP8ItemInfo(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 + 24 >> 2] = (HEAP32[(HEAP32[gb + 57604 >> 2] | 0) + 152 >> 2] | 0) + (HEAP32[HEAP32[i2 + 4 >> 2] >> 2] | 0);
 HEAP32[i1 + 8 >> 2] = gb + 38725;
 HEAP32[i1 + 12 >> 2] = 5;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = -1;
 HEAP32[i1 + 28 >> 2] = 1;
 HEAP32[i1 >> 2] = 3;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i2 + 136 >> 2] = 8;
 HEAP32[i1 + 32 >> 2] = 8;
 HEAP32[i1 + 36 >> 2] = 0;
 HEAP32[i1 + 40 >> 2] = 20;
 return 1;
}

function __ZN5CHgun7HolsterEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAPF32[(HEAP32[i2 + 128 >> 2] | 0) + 612 >> 2] = .5;
 mftCall_viiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 324 >> 2] | 0, i2 | 0, 3, 1, 0);
 i1 = mftCall_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 284 >> 2] | 0, i2 | 0) | 0;
 if (!(HEAP32[(HEAP32[i2 + 128 >> 2] | 0) + 1236 + (i1 << 2) >> 2] | 0)) {
  i1 = mftCall_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 284 >> 2] | 0, i2 | 0) | 0;
  HEAP32[(HEAP32[i2 + 128 >> 2] | 0) + 1236 + (i1 << 2) >> 2] = 1;
 }
 return;
}

function __ZN17CHudAmmoSecondary4InitEv(i1) {
 i1 = i1 | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40043 | 0, fb + 11 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40054 | 0, fb + 12 | 0) | 0;
 __ZN4CHud10AddHudElemEP8CHudBase(gb + 46040 | 0, i1);
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 24 >> 2] = -1;
 HEAP32[i1 + 24 + 4 >> 2] = -1;
 HEAP32[i1 + 24 + 8 >> 2] = -1;
 HEAP32[i1 + 24 + 12 >> 2] = -1;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] | 0, i1 | 0);
 return 1;
}

function mftCall_viiiiidddid(i11, i1, i2, i3, i4, i5, d6, d7, d8, i9, d10) {
 i11 = i11 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 d7 = +d7;
 d8 = +d8;
 i9 = i9 | 0;
 d10 = +d10;
 if ((i11 | 0) >= (fb | 0) & (i11 | 0) < (fb + 0 | 0)) {
  FUNCTION_TABLE_viiiiidddid[i11 - fb & 0](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, +d6, +d7, +d8, i9 | 0, +d10);
  return;
 }
 ftCall_viiiiidddid(i11 | 0, i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, +d6, +d7, +d8, i9 | 0, +d10);
}

function __ZN7CPython15SecondaryAttackEv(i4) {
 i4 = i4 | 0;
 var i1 = 0, d2 = 0.0, i3 = 0;
 if (__Z14bIsMultiplayerv() | 0) {
  i1 = HEAP32[i4 + 128 >> 2] | 0;
  i3 = (HEAP32[i1 + 4 >> 2] | 0) + 532 | 0;
  d2 = +HEAPF32[i3 >> 2];
  if (d2 != 0.0) {
   HEAP32[i4 + 200 >> 2] = 0;
   HEAP32[i1 + 1192 >> 2] = 0;
   HEAPF32[i3 >> 2] = 0.0;
  } else if (d2 != 40.0) {
   HEAP32[i4 + 200 >> 2] = 1;
   HEAP32[i1 + 1192 >> 2] = 40;
   HEAPF32[i3 >> 2] = 40.0;
  }
  HEAPF32[i4 + 160 >> 2] = .5;
 }
 return;
}

function _EV_SpinGauss(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = HEAP32[i1 + 4 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i1 + 12 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i1 + 16 >> 2];
 mftCall_viiiiddii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 4 >> 2] | 0, i3 | 0, i2 | 0, 1, gb + 37706 | 0, 1.0, .800000011920929, (HEAP32[i1 + 64 >> 2] | 0 ? 128 : 0) | 0, HEAP32[i1 + 56 >> 2] | 0);
 STACKTOP = i2;
 return;
}

function __ZN13CHudStatusBar5ResetEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 16 >> 2] = HEAP32[i1 + 16 >> 2] & -2;
 HEAP8[i1 + 20 >> 0] = 0;
 HEAP8[i1 + 148 >> 0] = 0;
 HEAP32[i1 + 536 >> 2] = 0;
 HEAP32[i1 + 536 + 4 >> 2] = 0;
 HEAP32[i1 + 536 + 8 >> 2] = 0;
 HEAP32[i1 + 536 + 12 >> 2] = 0;
 HEAP32[i1 + 536 + 16 >> 2] = 0;
 HEAP32[i1 + 536 + 20 >> 2] = 0;
 HEAP32[i1 + 536 + 24 >> 2] = 0;
 HEAP32[i1 + 532 >> 2] = 1;
 HEAP32[i1 + 568 >> 2] = gb + 34976;
 HEAP32[i1 + 572 >> 2] = gb + 34976;
 return;
}

function __ZN9CCrossbow6ReloadEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = HEAP32[i2 + 128 >> 2] | 0;
 if ((HEAP32[i1 + 56 >> 2] | 0) >= 1) {
  if (+HEAPF32[(HEAP32[i1 + 4 >> 2] | 0) + 532 >> 2] != 0.0) mftCall_vi(HEAP32[(HEAP32[i2 >> 2] | 0) + 336 >> 2] | 0, i2 | 0);
  if (__ZN17CBasePlayerWeapon13DefaultReloadEiifi(i2, 5, 7, 4.5, 0) | 0) {
   +mftCall_ddd(HEAP32[gb + 56972 + 364 >> 2] | 0, .949999988079071, 1.0);
   mftCall_iii(HEAP32[gb + 56972 + 360 >> 2] | 0, 0, 15) | 0;
  }
 }
 return;
}

function __Z10EV_IsLocali(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 switch (HEAP32[gb + 121104 >> 2] | 0) {
 case 4:
  {
   i2 = 3;
   break;
  }
 case 0:
  {
   i2 = 4;
   break;
  }
 default:
  if (+HEAPF32[(HEAP32[gb + 46040 + 4280 >> 2] | 0) + 12 >> 2] == 2.0) i2 = 3; else i2 = 4;
 }
 if ((i2 | 0) == 3) i1 = (HEAP32[gb + 121108 >> 2] | 0) == (i1 | 0); else if ((i2 | 0) == 4) i1 = (mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 16 >> 2] | 0, i1 + -1 | 0) | 0) != 0;
 return i1 & 1 | 0;
}

function _PM_Move(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!(HEAP32[gb + 121156 >> 2] | 0)) ___assert_fail(gb + 44912 | 0, gb + 44934 | 0, 3277, gb + 45997 | 0);
 HEAP32[gb + 121136 >> 2] = i1;
 _PM_PlayerMove((i2 | 0) != 0 & 1);
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 i2 = HEAP32[i1 + 184 >> 2] | 0;
 HEAP32[i1 + 184 >> 2] = (HEAP32[i1 + 224 >> 2] | 0) == -1 ? i2 & -513 : i2 | 512;
 if (!(HEAP32[i1 + 8 >> 2] | 0)) if ((HEAP32[i1 + 220 >> 2] | 0) == 3) HEAPF32[i1 + 196 >> 2] = 1.0;
 return;
}

function __ZN9CCrossbow11GetItemInfoEP8ItemInfo(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 + 24 >> 2] = (HEAP32[(HEAP32[gb + 57604 >> 2] | 0) + 152 >> 2] | 0) + (HEAP32[HEAP32[i2 + 4 >> 2] >> 2] | 0);
 HEAP32[i1 + 8 >> 2] = gb + 36618;
 HEAP32[i1 + 12 >> 2] = 50;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = -1;
 HEAP32[i1 + 28 >> 2] = 5;
 HEAP32[i1 >> 2] = 2;
 HEAP32[i1 + 4 >> 2] = 2;
 HEAP32[i1 + 32 >> 2] = 6;
 HEAP32[i1 + 36 >> 2] = 0;
 HEAP32[i1 + 40 >> 2] = 10;
 return 1;
}

function _PM_CalcRoll(i2, i4, d1, d6) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 d1 = +d1;
 d6 = +d6;
 var d3 = 0.0, d5 = 0.0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 _AngleVectors(i2, i7 + 24 | 0, i7 + 12 | 0, i7);
 d5 = +HEAPF32[i4 >> 2] * +HEAPF32[i7 + 12 >> 2] + +HEAPF32[i4 + 4 >> 2] * +HEAPF32[i7 + 12 + 4 >> 2] + +HEAPF32[i4 + 8 >> 2] * +HEAPF32[i7 + 12 + 8 >> 2];
 d3 = +Math_abs(+d5);
 if (d3 < d6) d1 = d3 * d1 / d6;
 STACKTOP = i7;
 return +((d5 < 0.0 ? -1.0 : 1.0) * d1);
}

function __ZN9CTripmine5SpawnEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 HEAP32[i1 + 136 >> 2] = 13;
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 44439 | 0);
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 HEAPF32[i2 + 304 >> 2] = 0.0;
 HEAP32[i2 + 276 >> 2] = 3;
 HEAP32[i2 + 296 >> 2] = 8;
 HEAPF32[i2 + 312 >> 2] = 0.0;
 HEAP32[i1 + 192 >> 2] = 1;
 __Z14bIsMultiplayerv() | 0;
 return;
}

function __ZN15WeaponsResource16GetNextActivePosEii(i2, i4, i1) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 L1 : do if ((i4 | 0) > 4 | (i1 | 0) > 4) i1 = 0; else {
  i2 = i1;
  while (1) {
   i3 = i2;
   i2 = i2 + 1 | 0;
   i1 = HEAP32[gb + 81328 + 10496 + (i4 * 24 | 0) + (i2 << 2) >> 2] | 0;
   if (i1 | 0) if (__ZN15WeaponsResource7HasAmmoEP6WEAPON(gb + 81328 | 0, i1) | 0) break L1;
   if ((i3 | 0) > 3) {
    i1 = 0;
    break;
   }
  }
 } while (0);
 return i1 | 0;
}

function _PM_SwapTextures(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = gb + 132825 + (i1 * 13 | 0) | 0;
 _strcpy(i3 | 0, i6 | 0) | 0;
 i5 = gb + 139481 + i1 | 0;
 i1 = HEAP8[i5 >> 0] | 0;
 i4 = gb + 132825 + (i2 * 13 | 0) | 0;
 _strcpy(i6 | 0, i4 | 0) | 0;
 i2 = gb + 139481 + i2 | 0;
 HEAP8[i5 >> 0] = HEAP8[i2 >> 0] | 0;
 _strcpy(i4 | 0, i3 | 0) | 0;
 HEAP8[i2 >> 0] = i1;
 STACKTOP = i3;
 return;
}

function __ZN6CGauss7HolsterEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = HEAP32[(HEAP32[i2 + 128 >> 2] | 0) + 4 >> 2] | 0;
 mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 6, HEAP32[i1 + 520 >> 2] | 0, HEAP16[i2 + 216 >> 1] | 0, .009999999776482582, i1 + 8 | 0, i1 + 80 | 0, 0.0, 0.0, 0, 0, 0, 1);
 HEAPF32[(HEAP32[i2 + 128 >> 2] | 0) + 612 >> 2] = .5;
 mftCall_viiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 324 >> 2] | 0, i2 | 0, 7, 1, 0);
 HEAP32[i2 + 92 >> 2] = 0;
 return;
}

function __ZN15CHudTextMessage12LookupStringEPKcPi(i1, i3, i4) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i2 = 0;
 if (!i3) i1 = gb + 132760 | 0; else if ((HEAP8[i3 >> 0] | 0) == 35) {
  i2 = mftCall_ii(HEAP32[gb + 92340 + 100 >> 2] | 0, i3 + 1 | 0) | 0;
  if (!i2) i1 = i3; else {
   i1 = HEAP32[i2 + 40 >> 2] | 0;
   if (!i1) i1 = i3; else if (i4) {
    i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) < 0) HEAP32[i4 >> 2] = 0 - i2;
   }
  }
 } else i1 = i3;
 return i1 | 0;
}

function mftCall_iiidiiiddi(i10, i1, i2, d3, i4, i5, i6, d7, d8, i9) {
 i10 = i10 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 d7 = +d7;
 d8 = +d8;
 i9 = i9 | 0;
 if ((i10 | 0) >= (fb | 0) & (i10 | 0) < (fb + 0 | 0)) return FUNCTION_TABLE_iiidiiiddi[i10 - fb & 0](i1 | 0, i2 | 0, +d3, i4 | 0, i5 | 0, i6 | 0, +d7, +d8, i9 | 0) | 0;
 return ftCall_iiidiiiddi(i10 | 0, i1 | 0, i2 | 0, +d3, i4 | 0, i5 | 0, i6 | 0, +d7, +d8, i9 | 0) | 0;
}

function __ZN7CSqueak8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 39331 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44397 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44377 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39282 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39303 | 0) | 0;
 HEAP16[i1 + 200 >> 1] = mftCall_iii(HEAP32[gb + 56972 + 488 >> 2] | 0, 1, gb + 39352 | 0) | 0;
 return;
}

function __ZN8CSatchel6DeployEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 + 128 >> 2] | 0;
 HEAPF32[i2 + 612 >> 2] = 1.0;
 HEAPF32[i1 + 164 >> 2] = +__Z22UTIL_SharedRandomFloatjff(HEAP32[i2 + 680 >> 2] | 0, 10.0, 15.0);
 if (!(HEAP32[i1 + 88 >> 2] | 0)) i1 = __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii(i1, gb + 44536 | 0, 0, 2, 0, 0, 0) | 0; else i1 = __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii(i1, gb + 44488 | 0, 0, 2, 0, 0, 0) | 0;
 return i1 | 0;
}

function _PM_GetRandomStuckOffsets(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = gb + 121164 + (i1 << 3) + (i3 << 2) | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = i3 + 1;
 HEAP32[i2 >> 2] = HEAP32[gb + 121420 + (((i3 | 0) % 54 | 0) * 12 | 0) >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[gb + 121420 + (((i3 | 0) % 54 | 0) * 12 | 0) + 4 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[gb + 121420 + (((i3 | 0) % 54 | 0) * 12 | 0) + 8 >> 2];
 return (i3 | 0) % 54 | 0 | 0;
}

function __ZN13CHudSpectator5ResetEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (_strcmp(i2 + 1404 | 0, mftCall_i(HEAP32[gb + 92340 + 296 >> 2] | 0) | 0) | 0) {
  __ZN13CHudSpectator17ParseOverviewFileEv(i2) | 0;
  if ((HEAP32[i2 + 1484 >> 2] | 0) > 0) i1 = mftCall_ii(HEAP32[gb + 92340 + 356 >> 2] | 0, i2 + 1492 | 0) | 0; else i1 = 0;
  HEAP32[i2 + 4708 >> 2] = i1;
 }
 _memset(i2 + 1768 | 0, 0, 2048) | 0;
 __ZN13CHudSpectator25SetSpectatorStartPositionEv(i2);
 return;
}

function __ZN6CGlock6ReloadEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if ((HEAP32[(HEAP32[i2 + 128 >> 2] | 0) + 48 >> 2] | 0) >= 1) {
  if (!(HEAP32[i2 + 176 >> 2] | 0)) i1 = __ZN17CBasePlayerWeapon13DefaultReloadEiifi(i2, 17, 5, 1.5, 0) | 0; else i1 = __ZN17CBasePlayerWeapon13DefaultReloadEiifi(i2, 17, 6, 1.5, 0) | 0;
  if (i1 | 0) HEAPF32[i2 + 164 >> 2] = +__Z22UTIL_SharedRandomFloatjff(HEAP32[(HEAP32[i2 + 128 >> 2] | 0) + 680 >> 2] | 0, 10.0, 15.0);
 }
 return;
}

function __ZN7CPython6ReloadEv(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = HEAP32[i3 + 128 >> 2] | 0;
 if ((HEAP32[i1 + 52 >> 2] | 0) >= 1) {
  i2 = (HEAP32[i1 + 4 >> 2] | 0) + 532 | 0;
  if (+HEAPF32[i2 >> 2] != 0.0) {
   HEAP32[i3 + 200 >> 2] = 0;
   HEAP32[i1 + 1192 >> 2] = 0;
   HEAPF32[i2 >> 2] = 0.0;
  }
  if (__ZN17CBasePlayerWeapon13DefaultReloadEiifi(i3, 6, 3, 2.0, (__Z14bIsMultiplayerv() | 0) & 1) | 0) HEAPF32[i3 + 196 >> 2] = 1.5;
 }
 return;
}

function __ZN8CCrowbar11GetItemInfoEP8ItemInfo(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 + 24 >> 2] = (HEAP32[(HEAP32[gb + 57604 >> 2] | 0) + 152 >> 2] | 0) + (HEAP32[HEAP32[i2 + 4 >> 2] >> 2] | 0);
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = -1;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = -1;
 HEAP32[i1 + 28 >> 2] = -1;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 32 >> 2] = 1;
 HEAP32[i1 + 40 >> 2] = 0;
 return 1;
}

function mftCall_viiiiiiii(i9, i1, i2, i3, i4, i5, i6, i7, i8) {
 i9 = i9 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 if ((i9 | 0) >= (fb | 0) & (i9 | 0) < (fb + 0 | 0)) {
  FUNCTION_TABLE_viiiiiiii[i9 - fb & 0](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0, i8 | 0);
  return;
 }
 ftCall_viiiiiiii(i9 | 0, i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0, i8 | 0);
}

function __ZN8CHudMenu14SelectMenuItemEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((i1 | 0) > 0) if (HEAP32[i2 + 24 >> 2] & 1 << i1 + -1 | 0) {
  HEAP32[i3 >> 2] = i1;
  _sprintf(i3 + 8 | 0, gb + 43254 | 0, i3 | 0) | 0;
  mftCall_ii(HEAP32[gb + 92340 + 80 >> 2] | 0, i3 + 8 | 0) | 0;
  HEAP32[i2 + 20 >> 2] = 0;
  HEAP32[i2 + 16 >> 2] = HEAP32[i2 + 16 >> 2] & -2;
 }
 STACKTOP = i3;
 return;
}

function __ZN4CHud10AddHudElemEP8CHudBase(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 do if (i1 | 0) {
  i3 = _malloc(8) | 0;
  if (i3 | 0) {
   HEAP32[i3 >> 2] = 0;
   HEAP32[i3 + 4 >> 2] = 0;
   HEAP32[i3 >> 2] = i1;
   i1 = HEAP32[i2 >> 2] | 0;
   if (!i1) {
    HEAP32[i2 >> 2] = i3;
    break;
   }
   do {
    i2 = i1 + 4 | 0;
    i1 = HEAP32[i2 >> 2] | 0;
   } while ((i1 | 0) != 0);
   HEAP32[i2 >> 2] = i3;
  }
 } while (0);
 return;
}

function __ZN5CEgon9EndAttackEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[(HEAP32[i1 + 128 >> 2] | 0) + 4 >> 2] | 0;
 mftCall_viiidiiddiiii(HEAP32[gb + 56972 + 492 >> 2] | 0, 6, HEAP32[i2 + 520 >> 2] | 0, HEAP16[i1 + 212 >> 1] | 0, 0.0, i2 + 8 | 0, i2 + 80 | 0, 0.0, 0.0, (HEAP32[i1 + 96 >> 2] | 0) != 0 | 0, 0, 0, 0);
 HEAPF32[i1 + 164 >> 2] = 2.0;
 HEAPF32[i1 + 160 >> 2] = .5;
 HEAPF32[i1 + 156 >> 2] = .5;
 HEAP32[i1 + 96 >> 2] = 0;
 return;
}

function __ZN7CSqueak5SpawnEv(i1) {
 i1 = i1 | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 HEAP32[i1 + 136 >> 2] = 15;
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 39331 | 0);
 HEAP32[i1 + 192 >> 2] = 5;
 i1 = HEAP32[i1 + 4 >> 2] | 0;
 HEAP32[i1 + 296 >> 2] = 1;
 HEAP32[i1 + 308 >> 2] = HEAP32[HEAP32[gb + 57604 >> 2] >> 2];
 HEAPF32[i1 + 312 >> 2] = 1.0;
 return;
}

function __ZN7CPython7HolsterEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 188 >> 2] = 0;
 if (HEAP32[i2 + 200 >> 2] | 0) mftCall_vi(HEAP32[(HEAP32[i2 >> 2] | 0) + 336 >> 2] | 0, i2 | 0);
 i1 = HEAP32[i2 + 128 >> 2] | 0;
 HEAPF32[i1 + 612 >> 2] = 1.0;
 HEAPF32[i2 + 164 >> 2] = +__Z22UTIL_SharedRandomFloatjff(HEAP32[i1 + 680 >> 2] | 0, 10.0, 15.0);
 mftCall_viiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 324 >> 2] | 0, i2 | 0, 4, 1, 0);
 return;
}

function __ZN4CHudD2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = HEAP32[i2 + 112 >> 2] | 0;
 if (i1 | 0) __ZdaPv(i1 | 0);
 i1 = HEAP32[i2 + 116 >> 2] | 0;
 if (i1 | 0) __ZdaPv(i1 | 0);
 i1 = HEAP32[i2 + 120 >> 2] | 0;
 if (i1 | 0) __ZdaPv(i1 | 0);
 i1 = HEAP32[i2 >> 2] | 0;
 if (i1 | 0) {
  do {
   HEAP32[i2 >> 2] = HEAP32[i1 + 4 >> 2];
   _free(i1 | 0);
   i1 = HEAP32[i2 >> 2] | 0;
  } while ((i1 | 0) != 0);
  HEAP32[i2 >> 2] = 0;
 }
 return;
}

function __Z21MaxAngleBetweenAnglesPfS_(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var d1 = 0.0, i4 = 0, d5 = 0.0;
 _NormalizeAngles(i2);
 _NormalizeAngles(i3);
 i4 = 0;
 d5 = 0.0;
 do {
  d1 = +HEAPF32[i3 + (i4 << 2) >> 2] - +HEAPF32[i2 + (i4 << 2) >> 2];
  if (d1 > 180.0) d1 = d1 + -360.0; else if (d1 < -180.0) d1 = d1 + 360.0;
  d1 = d1 > 0.0 ? d1 : -d1;
  d5 = d1 > d5 ? d1 : d5;
  i4 = i4 + 1 | 0;
 } while ((i4 | 0) != 3);
 return +d5;
}

function __ZN4CHud19DrawHudNumberStringEiiiiiii(i6, i7, i8, i3, i4, i5, i2, i1) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 HEAP32[i6 >> 2] = i4;
 _sprintf(i6 + 8 | 0, gb + 44773 | 0, i6 | 0) | 0;
 i8 = __ZN4CHud20DrawHudStringReverseEiiiPciii(0, i7, i8, i3, i6 + 8 | 0, i5, i2, i1) | 0;
 STACKTOP = i6;
 return i8 | 0;
}

function __ZN13CHudStatusBar4InitEv(i1) {
 i1 = i1 | 0;
 __ZN4CHud10AddHudElemEP8CHudBase(gb + 46040 | 0, i1);
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 43533 | 0, fb + 42 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 43544 | 0, fb + 43 | 0) | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] | 0, i1 | 0);
 mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 43513 | 0, gb + 44858 | 0, 1) | 0;
 return 1;
}

function __ZN13CHudStatusBar18MsgFunc_StatusTextEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 i1 = __Z9READ_BYTEv() | 0;
 if (i1 >>> 0 <= 1) {
  __Z11READ_STRINGv() | 0;
  _strncpy(i4 + 20 + (i1 << 7) | 0, gb + 127001 | 0, 128) | 0;
  HEAP8[i4 + 20 + (i1 << 7) + 127 >> 0] = 0;
  HEAP32[i4 + 16 >> 2] = HEAP32[i4 + 16 >> 2] | 1;
  HEAP32[i4 + 564 >> 2] = 1;
 }
 return 1;
}

function _PM_AddCorrectGravity() {
 var i1 = 0, d2 = 0.0, d3 = 0.0;
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 if (!(+HEAPF32[i1 + 204 >> 2] != 0.0)) {
  d2 = +HEAPF32[i1 + 192 >> 2];
  d3 = +HEAPF32[i1 + 16 >> 2];
  HEAPF32[i1 + 100 >> 2] = d3 * +HEAPF32[i1 + 124 >> 2] + (+HEAPF32[i1 + 100 >> 2] - d3 * (d2 != 0.0 ? d2 : 1.0) * +HEAPF32[HEAP32[i1 + 324848 >> 2] >> 2] * .5);
  HEAPF32[i1 + 124 >> 2] = 0.0;
  _PM_CheckVelocity();
 }
 return;
}

function mftCall_viiiiddii(i9, i1, i2, i3, i4, d5, d6, i7, i8) {
 i9 = i9 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 d6 = +d6;
 i7 = i7 | 0;
 i8 = i8 | 0;
 if ((i9 | 0) >= (fb | 0) & (i9 | 0) < (fb + 0 | 0)) {
  FUNCTION_TABLE_viiiiddii[i9 - fb & 0](i1 | 0, i2 | 0, i3 | 0, i4 | 0, +d5, +d6, i7 | 0, i8 | 0);
  return;
 }
 ftCall_viiiiddii(i9 | 0, i1 | 0, i2 | 0, i3 | 0, i4 | 0, +d5, +d6, i7 | 0, i8 | 0);
}

function __ZN9CCrossbow7HolsterEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 188 >> 2] = 0;
 if (HEAP32[i2 + 196 >> 2] | 0) mftCall_vi(HEAP32[(HEAP32[i2 >> 2] | 0) + 336 >> 2] | 0, i2 | 0);
 HEAPF32[(HEAP32[i2 + 128 >> 2] | 0) + 612 >> 2] = .5;
 i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + 324 >> 2] | 0;
 if (!(HEAP32[i2 + 176 >> 2] | 0)) mftCall_viiii(i1 | 0, i2 | 0, 11, 1, 0); else mftCall_viiii(i1 | 0, i2 | 0, 10, 1, 0);
 return;
}

function _IN_MouseEvent(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0;
 i2 = 0;
 do {
  i5 = 1 << i2;
  i4 = (HEAP32[gb + 118496 >> 2] & i5 | 0) == 0;
  i1 = i2 + 241 | 0;
  if (!(i5 & i3)) {
   if (!i4) mftCall_vii(HEAP32[gb + 92340 + 192 >> 2] | 0, i1 | 0, 0);
  } else if (i4) mftCall_vii(HEAP32[gb + 92340 + 192 >> 2] | 0, i1 | 0, 1);
  i2 = i2 + 1 | 0;
 } while ((i2 | 0) != 5);
 HEAP32[gb + 118496 >> 2] = i3;
 return;
}

function __Z20EV_HLDM_DecalGunshotP9pmtrace_si(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = mftCall_ii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 36 >> 2] | 0, HEAP32[i2 + 48 >> 2] | 0) | 0;
 do if (i1 | 0) {
  if ((HEAP32[i1 + 96 >> 2] | 0) != 4) if ((HEAP32[i1 + 124 >> 2] | 0) != 13) break;
  __Z19EV_HLDM_DamageDecalP9physent_s(i1) | 0;
  __Z25EV_HLDM_GunshotDecalTraceP9pmtrace_sPc(i2, gb + 123896 | 0);
 } while (0);
 return;
}

function __ZN13CHudSpectator21CheckOverviewEntitiesEv(i3) {
 i3 = i3 | 0;
 var d1 = 0.0, i2 = 0, i4 = 0;
 d1 = +mftCall_d(HEAP32[gb + 92340 + 216 >> 2] | 0);
 i2 = 0;
 do {
  if (+HEAPF64[i3 + 1768 + (i2 << 4) + 8 >> 3] < d1) {
   i4 = i3 + 1768 + (i2 << 4) | 0;
   HEAP32[i4 >> 2] = 0;
   HEAP32[i4 + 4 >> 2] = 0;
   HEAP32[i4 + 8 >> 2] = 0;
   HEAP32[i4 + 12 >> 2] = 0;
  }
  i2 = i2 + 1 | 0;
 } while ((i2 | 0) != 128);
 return;
}

function __Z21UTIL_SharedRandomLongjii(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = HEAP32[gb + 33916 + ((i1 + i2 + i3 & 255) << 2) >> 2] | 0;
 HEAP32[gb + 92908 >> 2] = i2;
 if (i3 - i1 | 0) {
  i2 = (i2 * 69069 | 0) + 1 + (HEAP32[gb + 33916 + ((i2 * 69069 & 255) << 2) >> 2] | 0) | 0;
  HEAP32[gb + 92908 >> 2] = i2;
  i1 = (((i2 & 268435455) >>> 0) % ((i3 - i1 + 1 | 0) >>> 0) | 0) + i1 | 0;
 }
 return i1 | 0;
}

function __Z15EV_BoltCallbackP9tempent_sff(i2, d3, d1) {
 i2 = i2 | 0;
 d3 = +d3;
 d1 = +d1;
 HEAP32[i2 + 2956 >> 2] = HEAP32[i2 + 368 >> 2];
 HEAP32[i2 + 2956 + 4 >> 2] = HEAP32[i2 + 368 + 4 >> 2];
 HEAP32[i2 + 2956 + 8 >> 2] = HEAP32[i2 + 368 + 8 >> 2];
 HEAP32[i2 + 2968 >> 2] = HEAP32[i2 + 380 >> 2];
 HEAP32[i2 + 2968 + 4 >> 2] = HEAP32[i2 + 380 + 4 >> 2];
 HEAP32[i2 + 2968 + 8 >> 2] = HEAP32[i2 + 380 + 8 >> 2];
 return;
}

function _CrossProduct(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i2 + 4 >> 2] * +HEAPF32[i3 + 8 >> 2] - +HEAPF32[i2 + 8 >> 2] * +HEAPF32[i3 + 4 >> 2];
 HEAPF32[i1 + 4 >> 2] = +HEAPF32[i2 + 8 >> 2] * +HEAPF32[i3 >> 2] - +HEAPF32[i2 >> 2] * +HEAPF32[i3 + 8 >> 2];
 HEAPF32[i1 + 8 >> 2] = +HEAPF32[i2 >> 2] * +HEAPF32[i3 + 4 >> 2] - +HEAPF32[i2 + 4 >> 2] * +HEAPF32[i3 >> 2];
 return;
}

function mftCall_iiiiiiii(i8, i1, i2, i3, i4, i5, i6, i7) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 if ((i8 | 0) >= (fb | 0) & (i8 | 0) < (fb + 0 | 0)) return FUNCTION_TABLE_iiiiiiii[i8 - fb & 0](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0) | 0;
 return ftCall_iiiiiiii(i8 | 0, i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0) | 0;
}

function __Z6KB_AddPKcP9kbutton_s(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0;
 if (!(_KB_Find(i2) | 0)) {
  i1 = _malloc(40) | 0;
  i4 = i1;
  i5 = i4 + 40 | 0;
  do {
   HEAP32[i4 >> 2] = 0;
   i4 = i4 + 4 | 0;
  } while ((i4 | 0) < (i5 | 0));
  _strcpy(i1 + 8 | 0, i2 | 0) | 0;
  HEAP32[i1 + 4 >> 2] = i3;
  HEAP32[i1 >> 2] = HEAP32[gb + 94308 >> 2];
  HEAP32[gb + 94308 >> 2] = i1;
 }
 return;
}

function __Z14GetClientColori(i1) {
 i1 = i1 | 0;
 switch (HEAP16[gb + 122336 + (i1 * 24 | 0) + 6 >> 1] | 0) {
 case 1:
  {
   i1 = gb + 34940 | 0;
   break;
  }
 case 2:
  {
   i1 = gb + 34952 | 0;
   break;
  }
 case 3:
  {
   i1 = gb + 34976 | 0;
   break;
  }
 case 4:
  {
   i1 = gb + 34964 | 0;
   break;
  }
 case 0:
  {
   i1 = gb + 34976 | 0;
   break;
  }
 default:
  i1 = gb + 34988 | 0;
 }
 return i1 | 0;
}

function __Z13EV_EjectBrassPfS_fii(i2, i5, d3, i1, i4) {
 i2 = i2 | 0;
 i5 = i5 | 0;
 d3 = +d3;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAPF32[i6 >> 2] = 0.0;
 HEAPF32[i6 + 8 >> 2] = 0.0;
 HEAPF32[i6 + 4 >> 2] = d3;
 mftCall_iiiidii(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 192 >> 2] | 0, i2 | 0, i5 | 0, i6 | 0, 2.5, i1 | 0, i4 | 0) | 0;
 STACKTOP = i6;
 return;
}

function __ZN12CHandGrenade13PrimaryAttackEv(i1) {
 i1 = i1 | 0;
 if (!(+HEAPF32[i1 + 80 >> 2] != 0.0)) if ((HEAP32[(HEAP32[i1 + 128 >> 2] | 0) + 1236 + (HEAP32[i1 + 168 >> 2] << 2) >> 2] | 0) > 0) {
  HEAP32[i1 + 80 >> 2] = HEAP32[HEAP32[gb + 57604 >> 2] >> 2];
  HEAPF32[i1 + 84 >> 2] = 0.0;
  mftCall_viiii(HEAP32[(HEAP32[i1 >> 2] | 0) + 324 >> 2] | 0, i1 | 0, 2, 1, 0);
  HEAPF32[i1 + 164 >> 2] = .5;
 }
 return;
}

function __ZN15CHudStatusIcons11DisableIconEPc(i4, i3) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i5 = 0;
 i2 = 0;
 do {
  i1 = i4 + 20 + (i2 * 48 | 0) | 0;
  i2 = i2 + 1 | 0;
  if (!(_strcasecmp(i1 | 0, i3 | 0) | 0)) {
   i5 = 4;
   break;
  }
 } while ((i2 | 0) < 4);
 if ((i5 | 0) == 4) {
  i2 = i1 + 48 | 0;
  do {
   HEAP32[i1 >> 2] = 0;
   i1 = i1 + 4 | 0;
  } while ((i1 | 0) < (i2 | 0));
 }
 return;
}

function __ZN4CHud14GetSpriteIndexEPKc(i1, i4) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i3 = HEAP32[i1 + 16 >> 2] | 0;
 L1 : do if ((i3 | 0) > 0) {
  i2 = HEAP32[i1 + 120 >> 2] | 0;
  i1 = 0;
  while (1) {
   if (!(_strncmp(i4 | 0, i2 + (i1 * 24 | 0) | 0, 24) | 0)) break L1;
   i1 = i1 + 1 | 0;
   if ((i1 | 0) >= (i3 | 0)) {
    i1 = -1;
    break;
   }
  }
 } else i1 = -1; while (0);
 return i1 | 0;
}

function __ZN11CHudMessage15MsgFunc_HudTextEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 __Z11READ_STRINGv() | 0;
 __ZN11CHudMessage10MessageAddEPKcf(i4, gb + 127001 | 0, +HEAPF32[gb + 46040 + 36 >> 2]);
 HEAP32[i4 + 152 >> 2] = HEAP32[gb + 46040 + 36 >> 2];
 i1 = HEAP32[i4 + 16 >> 2] | 0;
 if (!(i1 & 1)) HEAP32[i4 + 16 >> 2] = i1 | 1;
 return 1;
}

function __ZN8CSatchel13PrimaryAttackEv(i1) {
 i1 = i1 | 0;
 switch (HEAP32[i1 + 88 >> 2] | 0) {
 case 0:
  {
   __ZN8CSatchel5ThrowEv(i1);
   break;
  }
 case 1:
  {
   mftCall_viiii(HEAP32[(HEAP32[i1 >> 2] | 0) + 324 >> 2] | 0, i1 | 0, 3, 1, 0);
   HEAP32[i1 + 88 >> 2] = 2;
   HEAPF32[i1 + 156 >> 2] = .5;
   HEAPF32[i1 + 160 >> 2] = .5;
   HEAPF32[i1 + 164 >> 2] = .5;
   break;
  }
 default:
  {}
 }
 return;
}

function _HUD_TxferLocalOverrides(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 16 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i2 + 16 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i2 + 16 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i2 + 260 >> 2] = HEAP32[i1 + 396 >> 2];
 HEAP32[i2 + 264 >> 2] = HEAP32[i1 + 400 >> 2];
 HEAP32[i2 + 268 >> 2] = HEAP32[i1 + 404 >> 2];
 HEAP32[i2 + 272 >> 2] = HEAP32[i1 + 408 >> 2];
 return;
}

function __Z9READ_LONGv() {
 var i1 = 0, i2 = 0;
 i1 = HEAP32[gb + 94368 >> 2] | 0;
 if ((i1 + 4 | 0) > (HEAP32[gb + 94372 >> 2] | 0)) i1 = -1; else {
  i2 = HEAP32[gb + 94376 >> 2] | 0;
  i2 = (HEAPU8[i2 + (i1 + 1) >> 0] | 0) << 8 | (HEAPU8[i2 + i1 >> 0] | 0) | (HEAPU8[i2 + (i1 + 2) >> 0] | 0) << 16 | (HEAPU8[i2 + (i1 + 3) >> 0] | 0) << 24;
  HEAP32[gb + 94368 >> 2] = i1 + 4;
  i1 = i2;
 }
 return i1 | 0;
}

function mftCall_viidiiii(i8, i1, i2, d3, i4, i5, i6, i7) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 if ((i8 | 0) >= (fb | 0) & (i8 | 0) < (fb + 3 | 0)) {
  FUNCTION_TABLE_viidiiii[i8 - fb & 3](i1 | 0, i2 | 0, +d3, i4 | 0, i5 | 0, i6 | 0, i7 | 0);
  return;
 }
 ftCall_viidiiii(i8 | 0, i1 | 0, i2 | 0, +d3, i4 | 0, i5 | 0, i6 | 0, i7 | 0);
}

function __ZN11CBaseEntity3UseEPS_S0_8USE_TYPEf(i5, i3, i4, i6, d7) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 d7 = +d7;
 var i1 = 0, i2 = 0;
 i1 = HEAP32[i5 + 32 >> 2] | 0;
 i2 = HEAP32[i5 + 36 >> 2] | 0;
 if (i2 & 1 | i1 | 0) {
  if (i2 & 1) i1 = HEAP32[(HEAP32[i5 + (i2 >> 1) >> 2] | 0) + i1 >> 2] | 0;
  mftCall_viiiid(i1 | 0, i5 + (i2 >> 1) | 0, i3 | 0, i4 | 0, i6 | 0, +d7);
 }
 return;
}

function __Z10HUD_IsGamePKc(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 1024 | 0;
 i1 = mftCall_i(HEAP32[gb + 92340 + 284 >> 2] | 0) | 0;
 if (!i1) i3 = 4; else if (!(HEAP8[i1 >> 0] | 0)) i3 = 4; else {
  __Z12COM_FileBasePKcPc(i1, i4);
  if (!(_strcasecmp(i4 | 0, i2 | 0) | 0)) i1 = 1; else i3 = 4;
 }
 if ((i3 | 0) == 4) i1 = 0;
 STACKTOP = i4;
 return i1 | 0;
}

function __Z12AlertMessage10ALERT_TYPEPcz(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 HEAP32[i1 + 16 >> 2] = i3;
 _vsprintf(gb + 123928 | 0, i2 | 0, i1 + 16 | 0) | 0;
 mftCall_vii(HEAP32[gb + 92340 + 160 >> 2] | 0, gb + 38166 | 0, i1 | 0);
 mftCall_vii(HEAP32[gb + 92340 + 160 >> 2] | 0, gb + 123928 | 0, i1 + 8 | 0);
 STACKTOP = i1;
 return;
}

function __Z19__MsgFunc_GameTitlePKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = mftCall_ii(HEAP32[gb + 92340 + 100 >> 2] | 0, gb + 43316 | 0) | 0;
 HEAP32[gb + 46040 + 5544 >> 2] = i3;
 if (i3 | 0) {
  HEAP32[gb + 46040 + 5540 >> 2] = HEAP32[gb + 46040 + 36 >> 2];
  i1 = HEAP32[gb + 46040 + 5340 >> 2] | 0;
  if (!(i1 & 1)) HEAP32[gb + 46040 + 5340 >> 2] = i1 | 1;
 }
 return 1;
}

function __ZN11CBaseEntity6CenterEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0, d4 = 0.0;
 i2 = HEAP32[i2 + 4 >> 2] | 0;
 d4 = (+HEAPF32[i2 + 212 >> 2] + +HEAPF32[i2 + 200 >> 2]) * .5;
 d3 = (+HEAPF32[i2 + 216 >> 2] + +HEAPF32[i2 + 204 >> 2]) * .5;
 HEAPF32[i1 >> 2] = (+HEAPF32[i2 + 208 >> 2] + +HEAPF32[i2 + 196 >> 2]) * .5;
 HEAPF32[i1 + 4 >> 2] = d4;
 HEAPF32[i1 + 8 >> 2] = d3;
 return;
}

function __Z13GetSpriteListP15client_sprite_sPKcii(i1, i4, i3, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 L1 : do if ((i1 | 0) == 0 | (i2 | 0) == 0) i1 = 0; else while (1) {
  i2 = i2 + -1 | 0;
  if (!(_strcmp(i4 | 0, i1 | 0) | 0)) if ((HEAP32[i1 + 132 >> 2] | 0) == (i3 | 0)) break L1;
  if (!i2) {
   i1 = 0;
   break;
  } else i1 = i1 + 152 | 0;
 } while (0);
 return i1 | 0;
}

function __ZN7CPython5SpawnEv(i1) {
 i1 = i1 | 0;
 HEAP32[HEAP32[i1 + 4 >> 2] >> 2] = gb + 38691 - (HEAP32[(HEAP32[gb + 57604 >> 2] | 0) + 152 >> 2] | 0);
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 HEAP32[i1 + 136 >> 2] = 3;
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 38589 | 0);
 HEAP32[i1 + 192 >> 2] = 6;
 return;
}

function __ZN6CGlock5SpawnEv(i1) {
 i1 = i1 | 0;
 HEAP32[HEAP32[i1 + 4 >> 2] >> 2] = gb + 39598 - (HEAP32[(HEAP32[gb + 57604 >> 2] | 0) + 152 >> 2] | 0);
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 HEAP32[i1 + 136 >> 2] = 2;
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 39425 | 0);
 HEAP32[i1 + 192 >> 2] = 17;
 return;
}

function __Z7COM_LogPcS_z(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 i2 = (i2 | 0) == 0 ? gb + 40150 | 0 : i2;
 HEAP32[i4 >> 2] = i3;
 _vsprintf(i4 + 16 | 0, i1 | 0, i4 | 0) | 0;
 i1 = _fopen(i2 | 0, gb + 40163 | 0) | 0;
 if (i1 | 0) {
  _fputs(i4 + 16 | 0, i1 | 0) | 0;
  _fclose(i1 | 0) | 0;
 }
 STACKTOP = i4;
 return;
}

function __ZN4CMP55SpawnEv(i1) {
 i1 = i1 | 0;
 HEAP32[HEAP32[i1 + 4 >> 2] >> 2] = gb + 38447 - (HEAP32[(HEAP32[gb + 57604 >> 2] | 0) + 152 >> 2] | 0);
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 38257 | 0);
 HEAP32[i1 + 136 >> 2] = 4;
 HEAP32[i1 + 192 >> 2] = 25;
 return;
}

function __ZN4CHud16MsgFunc_ResetHUDEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) do {
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 | 0) mftCall_vi(HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] | 0, i2 | 0);
  i1 = HEAP32[i1 + 4 >> 2] | 0;
 } while ((i1 | 0) != 0);
 HEAPF32[i4 + 24 >> 2] = 0.0;
 HEAP32[i4 + 28 >> 2] = 0;
 return 1;
}

function __ZN4CHud15MsgFunc_InitHUDEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) do {
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 | 0) mftCall_vi(HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] | 0, i2 | 0);
  i1 = HEAP32[i1 + 4 >> 2] | 0;
 } while ((i1 | 0) != 0);
 HEAP32[gb + 56824 >> 2] = 0;
 HEAP32[gb + 56820 >> 2] = 0;
 return;
}

function __Z10READ_FLOATv() {
 var d1 = 0.0, i2 = 0, i3 = 0;
 i2 = HEAP32[gb + 94368 >> 2] | 0;
 i3 = HEAP32[gb + 94376 >> 2] | 0;
 d1 = (HEAP32[tempDoublePtr >> 2] = (HEAPU8[i3 + (i2 + 1) >> 0] | 0) << 8 | (HEAPU8[i3 + i2 >> 0] | 0) | (HEAPU8[i3 + (i2 + 2) >> 0] | 0) << 16 | (HEAPU8[i3 + (i2 + 3) >> 0] | 0) << 24, +HEAPF32[tempDoublePtr >> 2]);
 HEAP32[gb + 94368 >> 2] = i2 + 4;
 return +d1;
}

function __ZN11CHudMessage17MsgFunc_GameTitleEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = mftCall_ii(HEAP32[gb + 92340 + 100 >> 2] | 0, gb + 43316 | 0) | 0;
 HEAP32[i4 + 220 >> 2] = i3;
 if (i3 | 0) {
  HEAP32[i4 + 216 >> 2] = HEAP32[gb + 46040 + 36 >> 2];
  i1 = HEAP32[i4 + 16 >> 2] | 0;
  if (!(i1 & 1)) HEAP32[i4 + 16 >> 2] = i1 | 1;
 }
 return 1;
}

function __ZN14CHudFlashlight4InitEv(i1) {
 i1 = i1 | 0;
 HEAPF32[i1 + 56 >> 2] = 0.0;
 HEAP32[i1 + 52 >> 2] = 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40440 | 0, fb + 15 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40451 | 0, fb + 16 | 0) | 0;
 HEAP32[i1 + 16 >> 2] = HEAP32[i1 + 16 >> 2] | 1;
 __ZN4CHud10AddHudElemEP8CHudBase(gb + 46040 | 0, i1);
 return 1;
}

function mftCall_viidddii(i8, i1, i2, d3, d4, d5, i6, i7) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 i6 = i6 | 0;
 i7 = i7 | 0;
 if ((i8 | 0) >= (fb | 0) & (i8 | 0) < (fb + 1 | 0)) {
  FUNCTION_TABLE_viidddii[i8 - fb & 1](i1 | 0, i2 | 0, +d3, +d4, +d5, i6 | 0, i7 | 0);
  return;
 }
 ftCall_viidddii(i8 | 0, i1 | 0, i2 | 0, +d3, +d4, +d5, i6 | 0, i7 | 0);
}

function mftCall_iiiiiii(i7, i1, i2, i3, i4, i5, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 if ((i7 | 0) >= (fb | 0) & (i7 | 0) < (fb + 0 | 0)) return FUNCTION_TABLE_iiiiiii[i7 - fb & 0](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0) | 0;
 return ftCall_iiiiiii(i7 | 0, i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0) | 0;
}

function __ZN4CHud15MsgFunc_ConcussEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 i3 = __Z9READ_BYTEv() | 0;
 HEAP32[i4 + 28 >> 2] = i3;
 if (!i3) __ZN15CHudStatusIcons11DisableIconEPc(i4 + 6284 | 0, gb + 40942 | 0); else __ZN15CHudStatusIcons10EnableIconEPchhh(i4 + 6284 | 0, gb + 40942 | 0, -1, -96, 0);
 return 1;
}

function __ZN11CBaseEntity11EyePositionEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0, d4 = 0.0;
 i2 = HEAP32[i2 + 4 >> 2] | 0;
 d4 = +HEAPF32[i2 + 12 >> 2] + +HEAPF32[i2 + 376 >> 2];
 d3 = +HEAPF32[i2 + 16 >> 2] + +HEAPF32[i2 + 380 >> 2];
 HEAPF32[i1 >> 2] = +HEAPF32[i2 + 8 >> 2] + +HEAPF32[i2 + 372 >> 2];
 HEAPF32[i1 + 4 >> 2] = d4;
 HEAPF32[i1 + 8 >> 2] = d3;
 return;
}

function __ZN20CStudioModelRenderer25StudioEstimateInterpolantEv(i2) {
 i2 = i2 | 0;
 var d1 = 0.0, i3 = 0;
 if (!(HEAP32[i2 + 24 >> 2] | 0)) d1 = 1.0; else {
  i3 = HEAP32[i2 + 48 >> 2] | 0;
  d1 = +HEAPF32[i3 + 780 >> 2];
  if (!(d1 >= +HEAPF32[i3 + 2832 >> 2] + .01)) d1 = 1.0; else {
   d1 = (+HEAPF64[i2 + 8 >> 3] - d1) * 10.0;
   if (d1 > 2.0) d1 = 2.0;
  }
 }
 return +d1;
}

function _VectorNormalize(i5) {
 i5 = i5 | 0;
 var d1 = 0.0, d2 = 0.0, d3 = 0.0, d4 = 0.0;
 d1 = +HEAPF32[i5 >> 2];
 d2 = +HEAPF32[i5 + 4 >> 2];
 d3 = +HEAPF32[i5 + 8 >> 2];
 d4 = +Math_sqrt(+(d1 * d1 + d2 * d2 + d3 * d3));
 if (d4 != 0.0) {
  HEAPF32[i5 >> 2] = d1 * (1.0 / d4);
  HEAPF32[i5 + 4 >> 2] = d2 * (1.0 / d4);
  HEAPF32[i5 + 8 >> 2] = d3 * (1.0 / d4);
 }
 return +d4;
}

function mftCall_iiiidii(i7, i1, i2, i3, d4, i5, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 i5 = i5 | 0;
 i6 = i6 | 0;
 if ((i7 | 0) >= (fb | 0) & (i7 | 0) < (fb + 1 | 0)) return FUNCTION_TABLE_iiiidii[i7 - fb & 1](i1 | 0, i2 | 0, i3 | 0, +d4, i5 | 0, i6 | 0) | 0;
 return ftCall_iiiidii(i7 | 0, i1 | 0, i2 | 0, i3 | 0, +d4, i5 | 0, i6 | 0) | 0;
}

function __ZN7CPython6DeployEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __Z14bIsMultiplayerv() | 0;
 HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 276 >> 2] = i2 & 1;
 i2 = mftCall_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 356 >> 2] | 0, i1 | 0) | 0;
 return __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii(i1, gb + 44284 | 0, 0, 5, 0, i2, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 276 >> 2] | 0) | 0;
}

function __ZN13CHudSpectator14IsActivePlayerEP11cl_entity_s(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i1) i1 = 0; else if (!(HEAP32[i1 + 4 >> 2] | 0)) i1 = 0; else if (!(HEAP16[i1 + 746 >> 1] | 0)) i1 = 0; else if ((mftCall_i(HEAP32[gb + 92340 + 204 >> 2] | 0) | 0) == (i1 | 0)) i1 = 0; else i1 = (HEAP32[gb + 54736 + (HEAP32[i1 >> 2] << 5) >> 2] | 0) != 0;
 return i1 | 0;
}

function __ZN4CRpg5SpawnEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 HEAP32[i1 + 136 >> 2] = 8;
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 38733 | 0);
 HEAP32[i1 + 200 >> 2] = 1;
 i2 = __Z14bIsMultiplayerv() | 0;
 HEAP32[i1 + 192 >> 2] = i2 ? 2 : 1;
 return;
}

function _PM_AddGravity() {
 var i1 = 0, d2 = 0.0, d3 = 0.0;
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 d3 = +HEAPF32[i1 + 192 >> 2];
 d2 = +HEAPF32[i1 + 16 >> 2];
 HEAPF32[i1 + 100 >> 2] = +HEAPF32[i1 + 100 >> 2] - (d3 != 0.0 ? d3 : 1.0) * +HEAPF32[HEAP32[i1 + 324848 >> 2] >> 2] * d2 + d2 * +HEAPF32[i1 + 124 >> 2];
 HEAPF32[i1 + 124 >> 2] = 0.0;
 _PM_CheckVelocity();
 return;
}

function __ZN8CSatchel8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44536 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44488 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 38932 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44515 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44461 | 0) | 0;
 return;
}

function __ZN14CHudScoreboard8DeathMsgEii(i3, i2, i4) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i1 = 0;
 i1 = HEAP32[i3 + 32 >> 2] | 0;
 if ((i2 | 0) == 0 | (i1 | 0) == (i4 | 0)) {
  HEAP32[i3 + 24 >> 2] = (i2 | 0) == 0 ? i1 : i2;
  HEAP32[i3 + 28 >> 2] = ~~(+HEAPF32[gb + 46040 + 36 >> 2] + 10.0);
  if ((i1 | 0) == (i2 | 0)) HEAP32[i3 + 24 >> 2] = i2;
 }
 return;
}

function mftCall_viiiiid(i7, i1, i2, i3, i4, i5, d6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 if ((i7 | 0) >= (fb | 0) & (i7 | 0) < (fb + 3 | 0)) {
  FUNCTION_TABLE_viiiiid[i7 - fb & 3](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, +d6);
  return;
 }
 ftCall_viiiiid(i7 | 0, i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, +d6);
}

function mftCall_viidiii(i7, i1, i2, d3, i4, i5, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 if ((i7 | 0) >= (fb | 0) & (i7 | 0) < (fb + 3 | 0)) {
  FUNCTION_TABLE_viidiii[i7 - fb & 3](i1 | 0, i2 | 0, +d3, i4 | 0, i5 | 0, i6 | 0);
  return;
 }
 ftCall_viidiii(i7 | 0, i1 | 0, i2 | 0, +d3, i4 | 0, i5 | 0, i6 | 0);
}

function mftCall_vidiiii(i7, i1, d2, i3, i4, i5, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 if ((i7 | 0) >= (fb | 0) & (i7 | 0) < (fb + 1 | 0)) {
  FUNCTION_TABLE_vidiiii[i7 - fb & 1](i1 | 0, +d2, i3 | 0, i4 | 0, i5 | 0, i6 | 0);
  return;
 }
 ftCall_vidiiii(i7 | 0, i1 | 0, +d2, i3 | 0, i4 | 0, i5 | 0, i6 | 0);
}

function _V_CalcRefdef(i1) {
 i1 = i1 | 0;
 do if (!(HEAP32[i1 + 68 >> 2] | 0)) {
  if (HEAP32[gb + 121104 >> 2] | HEAP32[i1 + 76 >> 2] | 0) {
   __Z21V_CalcSpectatorRefdefP12ref_params_s(i1);
   break;
  }
  if (!(HEAP32[i1 + 72 >> 2] | 0)) __Z18V_CalcNormalRefdefP12ref_params_s(i1);
 } else __Z24V_CalcIntermissionRefdefP12ref_params_s(i1); while (0);
 return;
}

function mftCall_viiddii(i7, i1, i2, d3, d4, i5, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 i5 = i5 | 0;
 i6 = i6 | 0;
 if ((i7 | 0) >= (fb | 0) & (i7 | 0) < (fb + 0 | 0)) {
  FUNCTION_TABLE_viiddii[i7 - fb & 0](i1 | 0, i2 | 0, +d3, +d4, i5 | 0, i6 | 0);
  return;
 }
 ftCall_viiddii(i7 | 0, i1 | 0, i2 | 0, +d3, +d4, i5 | 0, i6 | 0);
}

function _PM_MapTextureTypeStepType(i1) {
 i1 = i1 | 0;
 switch (i1 << 24 >> 24 | 0) {
 case 83:
  {
   i1 = 6;
   break;
  }
 case 77:
  {
   i1 = 1;
   break;
  }
 case 68:
  {
   i1 = 2;
   break;
  }
 case 86:
  {
   i1 = 3;
   break;
  }
 case 71:
  {
   i1 = 4;
   break;
  }
 case 84:
  {
   i1 = 5;
   break;
  }
 default:
  i1 = 0;
 }
 return i1 | 0;
}

function __Z11ScaleColorsRiS_S_i(i4, i3, i2, i1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i4 >> 2] = ~~(+(i1 | 0) * .003921568859368563 * +(HEAP32[i4 >> 2] | 0));
 HEAP32[i3 >> 2] = ~~(+(i1 | 0) * .003921568859368563 * +(HEAP32[i3 >> 2] | 0));
 HEAP32[i2 >> 2] = ~~(+(i1 | 0) * .003921568859368563 * +(HEAP32[i2 >> 2] | 0));
 return;
}

function __ZN11CHudBattery15MsgFunc_BatteryEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i4 + 16 >> 2] = HEAP32[i4 + 16 >> 2] | 1;
 __Z10BEGIN_READPvi(i2, i1);
 i1 = __Z10READ_SHORTv() | 0;
 if ((i1 | 0) != (HEAP32[i4 + 36 >> 2] | 0)) {
  HEAPF32[i4 + 40 >> 2] = 100.0;
  HEAP32[i4 + 36 >> 2] = i1;
 }
 return 1;
}

function _PM_FixupGravityVelocity() {
 var i1 = 0, d2 = 0.0;
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 if (!(+HEAPF32[i1 + 204 >> 2] != 0.0)) {
  d2 = +HEAPF32[i1 + 192 >> 2];
  HEAPF32[i1 + 100 >> 2] = +HEAPF32[i1 + 100 >> 2] - (d2 != 0.0 ? d2 : 1.0) * +HEAPF32[HEAP32[i1 + 324848 >> 2] >> 2] * +HEAPF32[i1 + 16 >> 2] * .5;
  _PM_CheckVelocity();
 }
 return;
}

function __ZN15WeaponsResource11GetFirstPosEi(i4, i3) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i2 = 0;
 while (1) {
  i1 = HEAP32[i4 + 10496 + (i3 * 24 | 0) + (i2 << 2) >> 2] | 0;
  if (i1 | 0) if (__ZN15WeaponsResource7HasAmmoEP6WEAPON(i4, i1) | 0) break;
  i2 = i2 + 1 | 0;
  if ((i2 | 0) >= 5) {
   i1 = 0;
   break;
  }
 }
 return i1 | 0;
}

function __ZN10CHudHealth14MsgFunc_HealthEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 i1 = __Z9READ_BYTEv() | 0;
 HEAP32[i4 + 16 >> 2] = HEAP32[i4 + 16 >> 2] | 1;
 if ((i1 | 0) != (HEAP32[i4 + 20 >> 2] | 0)) {
  HEAPF32[i4 + 48 >> 2] = 100.0;
  HEAP32[i4 + 20 >> 2] = i1;
 }
 return 1;
}

function mftCall_iiiiii(i6, i1, i2, i3, i4, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 if ((i6 | 0) >= (fb | 0) & (i6 | 0) < (fb + 1 | 0)) return FUNCTION_TABLE_iiiiii[i6 - fb & 1](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0) | 0;
 return ftCall_iiiiii(i6 | 0, i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0) | 0;
}

function __ZN11CHudMessage4InitEv(i1) {
 i1 = i1 | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 43298 | 0, fb + 38 | 0) | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 43306 | 0, fb + 39 | 0) | 0;
 __ZN4CHud10AddHudElemEP8CHudBase(gb + 46040 | 0, i1);
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] | 0, i1 | 0);
 return 1;
}

function mftCall_viiiii(i6, i1, i2, i3, i4, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 if ((i6 | 0) >= (fb | 0) & (i6 | 0) < (fb + 0 | 0)) {
  FUNCTION_TABLE_viiiii[i6 - fb & 0](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0);
  return;
 }
 ftCall_viiiii(i6 | 0, i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0);
}

function __Z10READ_SHORTv() {
 var i1 = 0, i2 = 0;
 i1 = HEAP32[gb + 94368 >> 2] | 0;
 if ((i1 + 2 | 0) > (HEAP32[gb + 94372 >> 2] | 0)) i1 = -1; else {
  i2 = HEAP32[gb + 94376 >> 2] | 0;
  i2 = ((HEAPU8[i2 + (i1 + 1) >> 0] | 0) << 8 | (HEAPU8[i2 + i1 >> 0] | 0)) << 16 >> 16;
  HEAP32[gb + 94368 >> 2] = i1 + 2;
  i1 = i2;
 }
 return i1 | 0;
}

function __ZN13CHudSpectator11ToggleInsetEb(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i1 = ~~+HEAPF32[(HEAP32[i1 + 3856 >> 2] | 0) + 12 >> 2];
 if ((HEAP32[gb + 121104 >> 2] | 0) < 5) {
  i2 = (i1 | 0) > 3 ? (i2 ? 0 : 3) : i1 + 1 | 0;
  return ((i2 | 0) == 1 ? 3 : i2) | 0;
 } else return ((i1 | 0) > 1 ? i2 & 1 ^ 1 : i1 + 1 | 0) | 0;
 return 0;
}

function __ZN11CHudMessage9FadeBlendEffff(i5, d1, d2, d3, d4) {
 i5 = i5 | 0;
 d1 = +d1;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 do if (d4 < 0.0) d1 = 0.0; else {
  if (d4 < d1) {
   d1 = 1.0 - (d1 - d4) / d1;
   break;
  }
  if (d1 + d3 < d4) if (d2 > 0.0) d1 = 1.0 - (d4 - (d1 + d3)) / d2; else d1 = 0.0; else d1 = 1.0;
 } while (0);
 return +d1;
}

function __ZN5CHgun8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44211 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 38200 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44193 | 0) | 0;
 HEAP16[i1 + 208 >> 1] = mftCall_iii(HEAP32[gb + 56972 + 488 >> 2] | 0, 1, gb + 38218 | 0) | 0;
 return;
}

function mftCall_iiiidi(i6, i1, i2, i3, d4, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 i5 = i5 | 0;
 if ((i6 | 0) >= (fb | 0) & (i6 | 0) < (fb + 3 | 0)) return FUNCTION_TABLE_iiiidi[i6 - fb & 3](i1 | 0, i2 | 0, i3 | 0, +d4, i5 | 0) | 0;
 return ftCall_iiiidi(i6 | 0, i1 | 0, i2 | 0, i3 | 0, +d4, i5 | 0) | 0;
}

function __ZN4CHud16DrawHudStringLenEPc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = 0;
 L1 : while (1) {
  i1 = HEAP8[i2 >> 0] | 0;
  switch (i1 << 24 >> 24) {
  case 10:
  case 0:
   break L1;
  default:
   {}
  }
  i3 = (HEAP16[gb + 46040 + 8128 + ((i1 & 255) << 1) >> 1] | 0) + i3 | 0;
  i2 = i2 + 1 | 0;
 }
 return i3 | 0;
}

function __Z16Demo_WriteBufferiiPh(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32768 | 0;
 HEAP32[i4 >> 2] = i3;
 _memcpy(i4 + 4 | 0, i1 | 0, i2 | 0) | 0;
 mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 340 >> 2] | 0) + 12 >> 2] | 0, i2 + 4 | 0, i4 | 0);
 STACKTOP = i4;
 return;
}

function mftCall_viiiid(i6, i1, i2, i3, i4, d5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 if ((i6 | 0) >= (fb | 0) & (i6 | 0) < (fb + 3 | 0)) {
  FUNCTION_TABLE_viiiid[i6 - fb & 3](i1 | 0, i2 | 0, i3 | 0, i4 | 0, +d5);
  return;
 }
 ftCall_viiiid(i6 | 0, i1 | 0, i2 | 0, i3 | 0, i4 | 0, +d5);
}

function mftCall_viidii(i6, i1, i2, d3, i4, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 i5 = i5 | 0;
 if ((i6 | 0) >= (fb | 0) & (i6 | 0) < (fb + 0 | 0)) {
  FUNCTION_TABLE_viidii[i6 - fb & 0](i1 | 0, i2 | 0, +d3, i4 | 0, i5 | 0);
  return;
 }
 ftCall_viidii(i6 | 0, i1 | 0, i2 | 0, +d3, i4 | 0, i5 | 0);
}

function mftCall_vidiii(i6, i1, d2, i3, i4, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 if ((i6 | 0) >= (fb | 0) & (i6 | 0) < (fb + 1 | 0)) {
  FUNCTION_TABLE_vidiii[i6 - fb & 1](i1 | 0, +d2, i3 | 0, i4 | 0, i5 | 0);
  return;
 }
 ftCall_vidiii(i6 | 0, i1 | 0, +d2, i3 | 0, i4 | 0, i5 | 0);
}

function mftCall_iiiidd(i6, i1, i2, i3, d4, d5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 if ((i6 | 0) >= (fb | 0) & (i6 | 0) < (fb + 3 | 0)) return FUNCTION_TABLE_iiiidd[i6 - fb & 3](i1 | 0, i2 | 0, i3 | 0, +d4, +d5) | 0;
 return ftCall_iiiidd(i6 | 0, i1 | 0, i2 | 0, i3 | 0, +d4, +d5) | 0;
}

function __ZN14CSatchelCharge8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 38913 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 38847 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 38869 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 38891 | 0) | 0;
 return;
}

function __ZN14CHudScoreboard11InitHUDDataEv(i1) {
 i1 = i1 | 0;
 _memset(gb + 122336 | 0, 0, 1560) | 0;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 20 + 4 >> 2] = 0;
 HEAP32[i1 + 20 + 8 >> 2] = 0;
 HEAP32[i1 + 20 + 12 >> 2] = 0;
 _memset(gb + 118504 | 0, 0, 2600) | 0;
 HEAP32[i1 + 16 >> 2] = HEAP32[i1 + 16 >> 2] & -4 | 2;
 return;
}

function __ZN10CHudHealth5ResetEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 HEAP32[i2 + 252 >> 2] = 0;
 HEAP32[i2 + 32 >> 2] = 0;
 HEAP32[i2 + 32 + 4 >> 2] = 0;
 HEAP32[i2 + 32 + 8 >> 2] = 0;
 HEAP32[i2 + 32 + 12 >> 2] = 0;
 i1 = 0;
 do {
  HEAPF32[i2 + 60 + (i1 << 4) >> 2] = 0.0;
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != 12);
 return;
}

function _KB_Find(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = HEAP32[gb + 94308 >> 2] | 0;
 L1 : do if (!i1) i1 = 0; else {
  while (1) {
   if (!(_strcasecmp(i2 | 0, i1 + 8 | 0) | 0)) break;
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) {
    i1 = 0;
    break L1;
   }
  }
  i1 = HEAP32[i1 + 4 >> 2] | 0;
 } while (0);
 return i1 | 0;
}

function __ZN13CHudStatusBar19MsgFunc_StatusValueEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 i1 = __Z9READ_BYTEv() | 0;
 if ((i1 + -1 | 0) >>> 0 <= 6) {
  HEAP32[i4 + 532 + (i1 << 2) >> 2] = __Z10READ_SHORTv() | 0;
  HEAP32[i4 + 564 >> 2] = 1;
 }
 return 1;
}

function __ZN11CBaseEntity7BlockedEPS_(i4, i3) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = HEAP32[i4 + 40 >> 2] | 0;
 i2 = HEAP32[i4 + 44 >> 2] | 0;
 if (i2 & 1 | i1 | 0) {
  if (i2 & 1) i1 = HEAP32[(HEAP32[i4 + (i2 >> 1) >> 2] | 0) + i1 >> 2] | 0;
  mftCall_vii(i1 | 0, i4 + (i2 >> 1) | 0, i3 | 0);
 }
 return;
}

function __ZN8CHudAmmo13UserCmd_CloseEv(i1) {
 i1 = i1 | 0;
 i1 = HEAP32[gb + 81320 >> 2] | 0;
 if (!i1) mftCall_ii(HEAP32[gb + 92340 + 80 >> 2] | 0, gb + 39969 | 0) | 0; else {
  HEAP32[gb + 81324 >> 2] = i1;
  HEAP32[gb + 81320 >> 2] = 0;
  mftCall_vid(HEAP32[gb + 92340 + 88 >> 2] | 0, gb + 39947 | 0, 1.0);
 }
 return;
}

function __ZN11CBaseEntity5TouchEPS_(i4, i3) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = HEAP32[i4 + 24 >> 2] | 0;
 i2 = HEAP32[i4 + 28 >> 2] | 0;
 if (i2 & 1 | i1 | 0) {
  if (i2 & 1) i1 = HEAP32[(HEAP32[i4 + (i2 >> 1) >> 2] | 0) + i1 >> 2] | 0;
  mftCall_vii(i1 | 0, i4 + (i2 >> 1) | 0, i3 | 0);
 }
 return;
}

function __Z10LoadSpritePKc(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 HEAP32[i2 >> 2] = (HEAP32[gb + 46040 + 8112 >> 2] | 0) < 640 ? 320 : 640;
 _sprintf(i2 + 8 | 0, i1 | 0, i2 | 0) | 0;
 i1 = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, i2 + 8 | 0) | 0;
 STACKTOP = i2;
 return i1 | 0;
}

function __Z14UTIL_TraceLineRK6VectorS1_15IGNORE_MONSTERSP7edict_sP11TraceResult(i4, i3, i1, i2, i5) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i1 = i5;
 i2 = i1 + 56 | 0;
 do {
  HEAP32[i1 >> 2] = 0;
  i1 = i1 + 4 | 0;
 } while ((i1 | 0) < (i2 | 0));
 HEAPF32[i5 + 16 >> 2] = 1.0;
 return;
}

function __ZN5CHgun5SpawnEv(i1) {
 i1 = i1 | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 HEAP32[i1 + 136 >> 2] = 11;
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 38200 | 0);
 HEAP32[i1 + 192 >> 2] = 8;
 HEAP32[i1 + 204 >> 2] = 0;
 return;
}

function __ZN8CHudAmmo18MsgFunc_AmmoPickupEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 i3 = __Z9READ_BYTEv() | 0;
 i4 = __Z9READ_BYTEv() | 0;
 __ZN15HistoryResource12AddToHistoryEiii(gb + 92140 | 0, 1, i3, (i4 | 0) > -1 ? i4 : 0 - i4 | 0);
 return 1;
}

function mftCall_viiddd(i6, i1, i2, d3, d4, d5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 if ((i6 | 0) >= (fb | 0) & (i6 | 0) < (fb + 1 | 0)) {
  FUNCTION_TABLE_viiddd[i6 - fb & 1](i1 | 0, i2 | 0, +d3, +d4, +d5);
  return;
 }
 ftCall_viiddd(i6 | 0, i1 | 0, i2 | 0, +d3, +d4, +d5);
}

function __ZN14CHudScoreboard17GetAllPlayersInfoEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = 1;
 do {
  mftCall_vii(HEAP32[gb + 92340 + 84 >> 2] | 0, i1 | 0, gb + 54736 + (i1 << 5) | 0);
  if (HEAP8[gb + 54736 + (i1 << 5) + 6 >> 0] | 0) HEAP32[i2 + 32 >> 2] = i1;
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != 64);
 return;
}

function __ZN14CHudFlashlight18MsgFunc_FlashlightEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 HEAP32[i4 + 52 >> 2] = __Z9READ_BYTEv() | 0;
 i3 = __Z9READ_BYTEv() | 0;
 HEAP32[i4 + 48 >> 2] = i3;
 HEAPF32[i4 + 44 >> 2] = +(i3 | 0) * .01;
 return 1;
}

function _VectorMA(i2, d1, i3, i4) {
 i2 = i2 | 0;
 d1 = +d1;
 i3 = i3 | 0;
 i4 = i4 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i2 >> 2] + +HEAPF32[i3 >> 2] * d1;
 HEAPF32[i4 + 4 >> 2] = +HEAPF32[i2 + 4 >> 2] + +HEAPF32[i3 + 4 >> 2] * d1;
 HEAPF32[i4 + 8 >> 2] = +HEAPF32[i2 + 8 >> 2] + +HEAPF32[i3 + 8 >> 2] * d1;
 return;
}

function mftCall_iiiii(i5, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 if ((i5 | 0) >= (fb | 0) & (i5 | 0) < (fb + 3 | 0)) return FUNCTION_TABLE_iiiii[i5 - fb & 3](i1 | 0, i2 | 0, i3 | 0, i4 | 0) | 0;
 return ftCall_iiiii(i5 | 0, i1 | 0, i2 | 0, i3 | 0, i4 | 0) | 0;
}

function __Z10READ_ANGLEv() {
 var i1 = 0, d2 = 0.0, i3 = 0;
 i1 = HEAP32[gb + 94368 >> 2] | 0;
 if ((i1 | 0) < (HEAP32[gb + 94372 >> 2] | 0)) {
  i3 = HEAP8[(HEAP32[gb + 94376 >> 2] | 0) + i1 >> 0] | 0;
  HEAP32[gb + 94368 >> 2] = i1 + 1;
  d2 = +(i3 << 24 >> 24) * 1.40625;
 } else d2 = -1.40625;
 return +d2;
}

function _HUD_GetStudioModelInterface(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((i3 | 0) == 1) {
  HEAP32[i1 >> 2] = gb + 35088;
  _memcpy(gb + 94440 | 0, i2 | 0, 184) | 0;
  mftCall_vi(HEAP32[(HEAP32[gb + 640 >> 2] | 0) + 8 >> 2] | 0, gb + 640 | 0);
  i1 = 1;
 } else i1 = 0;
 return i1 | 0;
}

function __Z17UTIL_ParticleLineP11CBasePlayerPfS1_fhhh(i5, i7, i2, d4, i6, i3, i1) {
 i5 = i5 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 i6 = i6 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 mftCall_viiiiid(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 96 >> 2] | 0, i7 | 0, i2 | 0, i6 | 0, i3 | 0, i1 | 0, +d4);
 return;
}

function __Z15__CmdFunc_Closev() {
 var i1 = 0;
 i1 = HEAP32[gb + 81320 >> 2] | 0;
 if (!i1) mftCall_ii(HEAP32[gb + 92340 + 80 >> 2] | 0, gb + 39969 | 0) | 0; else {
  HEAP32[gb + 81324 >> 2] = i1;
  HEAP32[gb + 81320 >> 2] = 0;
  mftCall_vid(HEAP32[gb + 92340 + 88 >> 2] | 0, gb + 39947 | 0, 1.0);
 }
 return;
}

function __Z15__MsgFunc_TrainPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 i2 = __Z9READ_BYTEv() | 0;
 HEAP32[gb + 46040 + 5256 >> 2] = i2;
 i3 = HEAP32[gb + 46040 + 5248 >> 2] | 0;
 HEAP32[gb + 46040 + 5248 >> 2] = (i2 | 0) == 0 ? i3 & -2 : i3 | 1;
 return 1;
}

function mftCall_viiii(i5, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 if ((i5 | 0) >= (fb | 0) & (i5 | 0) < (fb + 3 | 0)) {
  FUNCTION_TABLE_viiii[i5 - fb & 3](i1 | 0, i2 | 0, i3 | 0, i4 | 0);
  return;
 }
 ftCall_viiii(i5 | 0, i1 | 0, i2 | 0, i3 | 0, i4 | 0);
}

function mftCall_diiii(i5, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 if ((i5 | 0) >= (fb | 0) & (i5 | 0) < (fb + 0 | 0)) return +FUNCTION_TABLE_diiii[i5 - fb & 0](i1 | 0, i2 | 0, i3 | 0, i4 | 0);
 return +ftCall_diiii(i5 | 0, i1 | 0, i2 | 0, i3 | 0, i4 | 0);
}

function __ZN9CHudTrain13MsgFunc_TrainEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 i2 = __Z9READ_BYTEv() | 0;
 HEAP32[i4 + 24 >> 2] = i2;
 i3 = HEAP32[i4 + 16 >> 2] | 0;
 HEAP32[i4 + 16 >> 2] = (i2 | 0) == 0 ? i3 & -2 : i3 | 1;
 return 1;
}

function __ZN20CStudioModelRenderer17StudioRenderFinalEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = (mftCall_i(HEAP32[gb + 94440 + 160 >> 2] | 0) | 0) == 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i3) mftCall_vi(HEAP32[i2 + 84 >> 2] | 0, i1 | 0); else mftCall_vi(HEAP32[i2 + 88 >> 2] | 0, i1 | 0);
 return;
}

function _PM_DrawRectangle(i5, i1, i6, i2, i4, d3) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 d3 = +d3;
 _PM_ParticleLine(i5, i1, i4, d3, 0.0);
 _PM_ParticleLine(i1, i2, i4, d3, 0.0);
 _PM_ParticleLine(i2, i6, i4, d3, 0.0);
 _PM_ParticleLine(i6, i5, i4, d3, 0.0);
 return;
}

function __ZN8CSatchel11AddToPlayerEP11CBasePlayer(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = (HEAP32[i1 + 4 >> 2] | 0) + 360 | 0;
 HEAP32[i1 >> 2] = HEAP32[i1 >> 2] | 1 << HEAP32[i2 + 136 >> 2];
 HEAP32[i2 + 88 >> 2] = 0;
 return mftCall_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 312 >> 2] | 0, i2 | 0) | 0;
}

function _NormalizeAngles(i2) {
 i2 = i2 | 0;
 var d1 = 0.0, i3 = 0, i4 = 0;
 i4 = 0;
 do {
  i3 = i2 + (i4 << 2) | 0;
  d1 = +HEAPF32[i3 >> 2];
  if (d1 > 180.0) HEAPF32[i3 >> 2] = d1 + -360.0; else if (d1 < -180.0) HEAPF32[i3 >> 2] = d1 + 360.0;
  i4 = i4 + 1 | 0;
 } while ((i4 | 0) != 3);
 return;
}

function __ZN9CCrossbow6DeployEv(i1) {
 i1 = i1 | 0;
 if (!(HEAP32[i1 + 176 >> 2] | 0)) i1 = __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii(i1, gb + 43965 | 0, 0, 9, 0, 0, 0) | 0; else i1 = __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii(i1, gb + 43965 | 0, 0, 8, 0, 0, 0) | 0;
 return i1 | 0;
}

function __ZN8CHudMOTD4InitEv(i1) {
 i1 = i1 | 0;
 __ZN4CHud10AddHudElemEP8CHudBase(gb + 46040 | 0, i1);
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 44877 | 0, fb + 49 | 0) | 0;
 HEAP8[i1 + 24 >> 0] = 0;
 HEAP32[i1 + 16 >> 2] = HEAP32[i1 + 16 >> 2] & -2;
 HEAP8[i1 + 25 >> 0] = 0;
 return 1;
}

function __ZN12CHandGrenade5SpawnEv(i1) {
 i1 = i1 | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 HEAP32[i1 + 136 >> 2] = 12;
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 37827 | 0);
 HEAP32[i1 + 192 >> 2] = 5;
 return;
}

function __Z11CL_KeyStateP9kbutton_s(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 + 8 >> 2] | 0;
 HEAP32[i1 + 8 >> 2] = i2 & 1;
 return +((i2 & 6 | 0) == 6 ? ((i2 & 1 | 0) == 0 ? .25 : .75) : (i2 & 6 | 0) == 0 ? (i2 & 1 | 0 ? 1.0 : 0.0) : (i2 & 6 | 0) == 4 ? 0.0 : (i2 & 7 | 0) == 3 ? .5 : 0.0);
}

function _PM_PreventMegaBunnyJumping() {
 var i1 = 0, d2 = 0.0, d3 = 0.0;
 i1 = HEAP32[gb + 121136 >> 2] | 0;
 d3 = +HEAPF32[i1 + 500 >> 2] * 1.7000000476837158;
 if (!(d3 <= 0.0)) {
  d2 = +_Length(i1 + 92 | 0);
  if (!(d2 <= d3)) _VectorScale(i1 + 92 | 0, d3 / d2 * .65, i1 + 92 | 0);
 }
 return;
}

function mftCall_viiid(i5, i1, i2, i3, d4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 if ((i5 | 0) >= (fb | 0) & (i5 | 0) < (fb + 1 | 0)) {
  FUNCTION_TABLE_viiid[i5 - fb & 1](i1 | 0, i2 | 0, i3 | 0, +d4);
  return;
 }
 ftCall_viiid(i5 | 0, i1 | 0, i2 | 0, i3 | 0, +d4);
}

function __ZN4CHud11GetNumWidthEii(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 do if (!(i1 & 4)) if (!(i1 & 2)) {
  if ((i2 | 0) < 1) {
   i1 = i1 & 1;
   break;
  }
  if ((i2 | 0) < 10) i1 = 1; else i1 = (i2 | 0) < 100 ? 2 : 3;
 } else i1 = 2; else i1 = 3; while (0);
 return i1 | 0;
}

function __ZN11CHudSayText15MsgFunc_SayTextEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 i3 = __Z9READ_BYTEv() | 0;
 __Z11READ_STRINGv() | 0;
 __ZN11CHudSayText12SayTextPrintEPKcii(i4, gb + 127001 | 0, i1 + -1 | 0, i3);
 return 1;
}

function __ZN4CRpg6DeployEv(i1) {
 i1 = i1 | 0;
 if (!(HEAP32[i1 + 176 >> 2] | 0)) i1 = __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii(i1, gb + 44318 | 0, 0, 7, 0, 0, 0) | 0; else i1 = __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii(i1, gb + 44318 | 0, 0, 5, 0, 0, 0) | 0;
 return i1 | 0;
}

function _CL_IsThirdPerson() {
 var i1 = 0;
 if (!(HEAP32[gb + 93828 >> 2] | 0)) if (!(HEAP32[gb + 121104 >> 2] | 0)) i1 = 0; else {
  i1 = HEAP32[gb + 121108 >> 2] | 0;
  i1 = (i1 | 0) == (HEAP32[(mftCall_i(HEAP32[gb + 92340 + 204 >> 2] | 0) | 0) >> 2] | 0);
 } else i1 = 1;
 return i1 & 1 | 0;
}

function __ZN9CCrossbow5SpawnEv(i1) {
 i1 = i1 | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 HEAP32[i1 + 136 >> 2] = 6;
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 36596 | 0);
 HEAP32[i1 + 192 >> 2] = 5;
 return;
}

function __ZN8CShotgun5SpawnEv(i1) {
 i1 = i1 | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 HEAP32[i1 + 136 >> 2] = 7;
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 39089 | 0);
 HEAP32[i1 + 192 >> 2] = 12;
 return;
}

function __ZN8CSatchel5SpawnEv(i1) {
 i1 = i1 | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 HEAP32[i1 + 136 >> 2] = 14;
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 38932 | 0);
 HEAP32[i1 + 192 >> 2] = 1;
 return;
}

function __ZN8CHudAmmo13MsgFunc_AmmoXEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 i4 = __Z9READ_BYTEv() | 0;
 i3 = __Z9READ_BYTEv() | 0;
 HEAP32[gb + 81328 + 10640 + (i4 << 2) >> 2] = (i3 | 0) > -1 ? i3 : 0 - i3 | 0;
 return 1;
}

function __ZN8CCrowbar5SpawnEv(i1) {
 i1 = i1 | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 HEAP32[i1 + 136 >> 2] = 1;
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 36678 | 0);
 HEAP32[i1 + 176 >> 2] = -1;
 return;
}

function __ZN11CBaseEntity5ThinkEv(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = HEAP32[i3 + 16 >> 2] | 0;
 i2 = HEAP32[i3 + 20 >> 2] | 0;
 if (i2 & 1 | i1 | 0) {
  if (i2 & 1) i1 = HEAP32[(HEAP32[i3 + (i2 >> 1) >> 2] | 0) + i1 >> 2] | 0;
  mftCall_vi(i1 | 0, i3 + (i2 >> 1) | 0);
 }
 return;
}

function __ZN6CGauss5SpawnEv(i1) {
 i1 = i1 | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 HEAP32[i1 + 136 >> 2] = 9;
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 37668 | 0);
 HEAP32[i1 + 192 >> 2] = 20;
 return;
}

function __ZN5CEgon5SpawnEv(i1) {
 i1 = i1 | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 HEAP32[i1 + 136 >> 2] = 10;
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 36828 | 0);
 HEAP32[i1 + 192 >> 2] = 20;
 return;
}

function __ZN17CHudAmmoSecondary19MsgFunc_SecAmmoIconEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 __Z11READ_STRINGv() | 0;
 HEAP32[i4 + 20 >> 2] = __ZN4CHud14GetSpriteIndexEPKc(gb + 46040 | 0, gb + 127001 | 0) | 0;
 return 1;
}

function __ZN15CHudDeathNotice4InitEv(i1) {
 i1 = i1 | 0;
 __ZN4CHud10AddHudElemEP8CHudBase(gb + 46040 | 0, i1);
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40180 | 0, fb + 14 | 0) | 0;
 mftCall_iiii(HEAP32[gb + 92340 + 56 >> 2] | 0, gb + 40189 | 0, gb + 40210 | 0, 0) | 0;
 return 1;
}

function __VectorSubtract(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i2 >> 2] - +HEAPF32[i3 >> 2];
 HEAPF32[i1 + 4 >> 2] = +HEAPF32[i2 + 4 >> 2] - +HEAPF32[i3 + 4 >> 2];
 HEAPF32[i1 + 8 >> 2] = +HEAPF32[i2 + 8 >> 2] - +HEAPF32[i3 + 8 >> 2];
 return;
}

function __ZN8CSatchel9IsUseableEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = mftCall_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 284 >> 2] | 0, i1 | 0) | 0;
 if ((HEAP32[(HEAP32[i1 + 128 >> 2] | 0) + 1236 + (i2 << 2) >> 2] | 0) > 0) i1 = 1; else i1 = (HEAP32[i1 + 88 >> 2] | 0) != 0 & 1;
 return i1 | 0;
}

function __ZN8CHudAmmo5ResetEv(i1) {
 i1 = i1 | 0;
 HEAPF32[i1 + 20 >> 2] = 0.0;
 HEAP32[i1 + 16 >> 2] = HEAP32[i1 + 16 >> 2] | 1;
 HEAP32[gb + 81320 >> 2] = 0;
 HEAP32[gb + 46040 + 84 >> 2] = 0;
 _memset(gb + 81328 + 10496 | 0, 0, 276) | 0;
 _memset(gb + 92140 | 0, 0, 192) | 0;
 return;
}

function __ZN15HistoryResource17CheckClearHistoryEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i1 = 0;
 while (1) {
  if (HEAP32[i2 + (i1 << 4) >> 2] | 0) break;
  i1 = i1 + 1 | 0;
  if ((i1 | 0) >= 12) {
   i3 = 4;
   break;
  }
 }
 if ((i3 | 0) == 4) HEAP32[i2 + 196 >> 2] = 0;
 return;
}

function __ZN15WeaponsResource20LoadAllWeaponSpritesEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = 0;
 do {
  if (HEAP32[i2 + (i1 * 328 | 0) + 156 >> 2] | 0) __ZN15WeaponsResource17LoadWeaponSpritesEP6WEAPON(0, i2 + (i1 * 328 | 0) | 0);
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != 32);
 return;
}

function __VectorAdd(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i2 >> 2] + +HEAPF32[i3 >> 2];
 HEAPF32[i1 + 4 >> 2] = +HEAPF32[i2 + 4 >> 2] + +HEAPF32[i3 + 4 >> 2];
 HEAPF32[i1 + 8 >> 2] = +HEAPF32[i2 + 8 >> 2] + +HEAPF32[i3 + 8 >> 2];
 return;
}

function __ZN4CHud14MsgFunc_DamageEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 __Z9READ_BYTEv() | 0;
 __Z9READ_BYTEv() | 0;
 i1 = 0;
 do {
  +__Z10READ_COORDv();
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != 3);
 return 1;
}

function __ZN11CHudBattery4InitEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 36 >> 2] = 0;
 HEAPF32[i1 + 40 >> 2] = 0.0;
 HEAP32[i1 + 16 >> 2] = 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40128 | 0, fb + 13 | 0) | 0;
 __ZN4CHud10AddHudElemEP8CHudBase(gb + 46040 | 0, i1);
 return 1;
}

function __ZN9CTripmine8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44439 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44417 | 0) | 0;
 HEAP16[i1 + 196 >> 1] = mftCall_iii(HEAP32[gb + 56972 + 488 >> 2] | 0, 1, gb + 39391 | 0) | 0;
 return;
}

function __Z18CL_ResetButtonBitsi(i1) {
 i1 = i1 | 0;
 do if (((__Z13CL_ButtonBitsi(0) | 0) ^ i1) & 1 | 0) if (!(i1 & 1)) {
  HEAP32[gb + 94188 + 8 >> 2] = HEAP32[gb + 94188 + 8 >> 2] & -8;
  break;
 } else {
  __Z7KeyDownP9kbutton_s(gb + 94188 | 0);
  break;
 } while (0);
 return;
}

function _PM_Init(i1) {
 i1 = i1 | 0;
 if (!(HEAP32[gb + 121156 >> 2] | 0)) {
  HEAP32[gb + 121136 >> 2] = i1;
  _PM_CreateStuckTable();
  _PM_InitTextureTypes();
  HEAP32[gb + 121156 >> 2] = 1;
  return;
 } else ___assert_fail(gb + 46005 | 0, gb + 44934 | 0, 3321, gb + 46028 | 0);
}

function _VectorCompare(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 i1 = 0;
 while (1) {
  if (+HEAPF32[i2 + (i1 << 2) >> 2] != +HEAPF32[i3 + (i1 << 2) >> 2]) {
   i1 = 0;
   break;
  }
  i1 = i1 + 1 | 0;
  if ((i1 | 0) >= 3) {
   i1 = 1;
   break;
  }
 }
 return i1 | 0;
}

function mftCall_iiii(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if ((i4 | 0) >= (fb | 0) & (i4 | 0) < (fb + 63 | 0)) return FUNCTION_TABLE_iiii[i4 - fb & 63](i1 | 0, i2 | 0, i3 | 0) | 0;
 return ftCall_iiii(i4 | 0, i1 | 0, i2 | 0, i3 | 0) | 0;
}

function __ZN10CHudGeiger4InitEv(i1) {
 i1 = i1 | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 40524 | 0, fb + 17 | 0) | 0;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 __ZN4CHud10AddHudElemEP8CHudBase(gb + 46040 | 0, i1);
 _srand(_time(0) | 0);
 return 1;
}

function __Z21__MsgFunc_SecAmmoIconPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 __Z11READ_STRINGv() | 0;
 i3 = __ZN4CHud14GetSpriteIndexEPKc(gb + 46040 | 0, gb + 127001 | 0) | 0;
 HEAP32[gb + 46040 + 6240 >> 2] = i3;
 return 1;
}

function __Z16__MsgFunc_GeigerPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 i3 = (__Z9READ_BYTEv() | 0) << 2;
 HEAP32[gb + 46040 + 5180 >> 2] = i3;
 HEAP32[gb + 46040 + 5176 >> 2] = HEAP32[gb + 46040 + 5176 >> 2] | 1;
 return 1;
}

function __Z14HUD_SetLastOrgv() {
 var i1 = 0, i2 = 0;
 i1 = HEAP32[gb + 92900 >> 2] | 0;
 i2 = 0;
 do {
  HEAPF32[gb + 59364 + (i2 << 2) >> 2] = +HEAPF32[i1 + 16 + (i2 << 2) >> 2] + +HEAPF32[i1 + 392 + (i2 << 2) >> 2];
  i2 = i2 + 1 | 0;
 } while ((i2 | 0) != 3);
 return;
}

function __ZN8CHudAmmo18MsgFunc_ItemPickupEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 __Z11READ_STRINGv() | 0;
 __ZN15HistoryResource12AddToHistoryEiPKci(gb + 92140 | 0, 3, gb + 127001 | 0, 0);
 return 1;
}

function __Z9READ_BYTEv() {
 var i1 = 0, i2 = 0;
 i1 = HEAP32[gb + 94368 >> 2] | 0;
 if ((i1 | 0) < (HEAP32[gb + 94372 >> 2] | 0)) {
  i2 = HEAPU8[(HEAP32[gb + 94376 >> 2] | 0) + i1 >> 0] | 0;
  HEAP32[gb + 94368 >> 2] = i1 + 1;
  i1 = i2;
 } else i1 = -1;
 return i1 | 0;
}

function mftCall_viii(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if ((i4 | 0) >= (fb | 0) & (i4 | 0) < (fb + 15 | 0)) {
  FUNCTION_TABLE_viii[i4 - fb & 15](i1 | 0, i2 | 0, i3 | 0);
  return;
 }
 ftCall_viii(i4 | 0, i1 | 0, i2 | 0, i3 | 0);
}

function __Z9READ_CHARv() {
 var i1 = 0, i2 = 0;
 i1 = HEAP32[gb + 94368 >> 2] | 0;
 if ((i1 | 0) < (HEAP32[gb + 94372 >> 2] | 0)) {
  i2 = HEAP8[(HEAP32[gb + 94376 >> 2] | 0) + i1 >> 0] | 0;
  HEAP32[gb + 94368 >> 2] = i1 + 1;
  i1 = i2;
 } else i1 = -1;
 return i1 | 0;
}

function _PM_GetVisEntInfo(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if ((i2 | 0) > -1) {
  i1 = HEAP32[gb + 121136 >> 2] | 0;
  if ((HEAP32[i1 + 149332 >> 2] | 0) < (i2 | 0)) i1 = -1; else i1 = HEAP32[i1 + 149336 + (i2 * 224 | 0) + 80 >> 2] | 0;
 } else i1 = -1;
 return i1 | 0;
}

function mftCall_vdddd(i5, d1, d2, d3, d4) {
 i5 = i5 | 0;
 d1 = +d1;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 if ((i5 | 0) >= (fb | 0) & (i5 | 0) < (fb + 0 | 0)) {
  FUNCTION_TABLE_vdddd[i5 - fb & 0](+d1, +d2, +d3, +d4);
  return;
 }
 ftCall_vdddd(i5 | 0, +d1, +d2, +d3, +d4);
}

function __ZN15CHudTextMessage4InitEv(i1) {
 i1 = i1 | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 43767 | 0, fb + 44 | 0) | 0;
 __ZN4CHud10AddHudElemEP8CHudBase(gb + 46040 | 0, i1);
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] | 0, i1 | 0);
 return 1;
}

function __ZN15CHudStatusIcons4InitEv(i1) {
 i1 = i1 | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 43458 | 0, fb + 41 | 0) | 0;
 __ZN4CHud10AddHudElemEP8CHudBase(gb + 46040 | 0, i1);
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] | 0, i1 | 0);
 return 1;
}

function __Z15__MsgFunc_AmmoXPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 i3 = __Z9READ_BYTEv() | 0;
 i2 = __Z9READ_BYTEv() | 0;
 HEAP32[gb + 81328 + 10640 + (i3 << 2) >> 2] = (i2 | 0) > -1 ? i2 : 0 - i2 | 0;
 return 1;
}

function __ZN14CHudFlashlight16MsgFunc_FlashBatEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 i3 = __Z9READ_BYTEv() | 0;
 HEAP32[i4 + 48 >> 2] = i3;
 HEAPF32[i4 + 44 >> 2] = +(i3 | 0) * .01;
 return 1;
}

function _PM_GetPhysEntInfo(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if ((i2 | 0) > -1) {
  i1 = HEAP32[gb + 121136 >> 2] | 0;
  if ((HEAP32[i1 + 588 >> 2] | 0) < (i2 | 0)) i1 = -1; else i1 = HEAP32[i1 + 592 + (i2 * 224 | 0) + 80 >> 2] | 0;
 } else i1 = -1;
 return i1 | 0;
}

function mftCall_iidi(i4, i1, d2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 if ((i4 | 0) >= (fb | 0) & (i4 | 0) < (fb + 3 | 0)) return FUNCTION_TABLE_iidi[i4 - fb & 3](i1 | 0, +d2, i3 | 0) | 0;
 return ftCall_iidi(i4 | 0, i1 | 0, +d2, i3 | 0) | 0;
}

function __ZN10CHudGeiger14MsgFunc_GeigerEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 HEAP32[i4 + 20 >> 2] = (__Z9READ_BYTEv() | 0) << 2;
 HEAP32[i4 + 16 >> 2] = HEAP32[i4 + 16 >> 2] | 1;
 return 1;
}

function __ZN9CCrossbow13PrimaryAttackEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if (!(HEAP32[i1 + 196 >> 2] | 0)) i2 = 4; else if (__Z14bIsMultiplayerv() | 0) __ZN9CCrossbow14FireSniperBoltEv(i1); else i2 = 4;
 if ((i2 | 0) == 4) __ZN9CCrossbow8FireBoltEv(i1);
 return;
}

function __ZN7CSqueak6DeployEv(i1) {
 i1 = i1 | 0;
 +mftCall_ddd(HEAP32[gb + 56972 + 364 >> 2] | 0, 0.0, 1.0);
 HEAP32[(HEAP32[i1 + 128 >> 2] | 0) + 692 >> 2] = 200;
 return __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii(i1, gb + 44397 | 0, 0, 4, 0, 0, 0) | 0;
}

function __ZN8CHudMenu4InitEv(i1) {
 i1 = i1 | 0;
 __ZN4CHud10AddHudElemEP8CHudBase(gb + 46040 | 0, i1);
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 43235 | 0, fb + 37 | 0) | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] | 0, i1 | 0);
 return 1;
}

function __Z20EV_StopPreviousGaussi(i1) {
 i1 = i1 | 0;
 mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 84 >> 2] | 0, i1 | 0, gb + 38018 | 0);
 mftCall_viii(HEAP32[(HEAP32[gb + 92340 + 336 >> 2] | 0) + 8 >> 2] | 0, i1 | 0, 1, gb + 37706 | 0);
 return;
}

function __Z13ConvertCRtoNLPc(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2;
 L1 : while (1) {
  switch (HEAP8[i1 >> 0] | 0) {
  case 0:
   break L1;
  case 13:
   {
    HEAP8[i1 >> 0] = 10;
    break;
   }
  default:
   {}
  }
  i1 = i1 + 1 | 0;
 }
 return i2 | 0;
}

function mftCall_viid(i4, i1, i2, d3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 if ((i4 | 0) >= (fb | 0) & (i4 | 0) < (fb + 0 | 0)) {
  FUNCTION_TABLE_viid[i4 - fb & 0](i1 | 0, i2 | 0, +d3);
  return;
 }
 ftCall_viid(i4 | 0, i1 | 0, i2 | 0, +d3);
}

function mftCall_vidi(i4, i1, d2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 if ((i4 | 0) >= (fb | 0) & (i4 | 0) < (fb + 0 | 0)) {
  FUNCTION_TABLE_vidi[i4 - fb & 0](i1 | 0, +d2, i3 | 0);
  return;
 }
 ftCall_vidi(i4 | 0, i1 | 0, +d2, i3 | 0);
}

function __ZN11CBaseEntity11FireBulletsEm6VectorS0_S0_fiiiP9entvars_s(i7, i1, i10, i8, i9, d2, i3, i5, i4, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i10 = i10 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 return;
}

function __ZN10CHudHealth12GetPainColorERiS0_S0_(i4, i3, i2, i1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = (HEAP32[i4 + 20 >> 2] | 0) > 25;
 HEAP32[i3 >> 2] = i4 ? 255 : 250;
 HEAP32[i2 >> 2] = i4 ? 160 : 0;
 HEAP32[i1 >> 2] = 0;
 return;
}

function __ZN8CHudAmmo18MsgFunc_WeapPickupEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 i4 = __Z9READ_BYTEv() | 0;
 __ZN15HistoryResource12AddToHistoryEiii(gb + 92140 | 0, 2, i4, 0);
 return 1;
}

function __ZN8CCrowbar13PrimaryAttackEv(i1) {
 i1 = i1 | 0;
 __ZN8CCrowbar5SwingEi(i1, 1) | 0;
 HEAP32[i1 + 16 >> 2] = fb + 205;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAPF32[(HEAP32[i1 + 4 >> 2] | 0) + 260 >> 2] = +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2] + .1;
 return;
}

function __ZN11CBasePlayer6KilledEP9entvars_si(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = HEAP32[i3 + 1224 >> 2] | 0;
 if (i1 | 0) mftCall_vii(HEAP32[(HEAP32[i1 >> 2] | 0) + 256 >> 2] | 0, i1 | 0, 0);
 HEAP32[gb + 59360 >> 2] = 0;
 return;
}

function _IN_ClientMoveEvent(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 HEAPF32[gb + 118464 >> 2] = +HEAPF32[gb + 118464 >> 2] + d1;
 HEAPF32[gb + 118468 >> 2] = +HEAPF32[gb + 118468 >> 2] + d2;
 HEAP32[gb + 118472 >> 2] = (HEAP32[gb + 118472 >> 2] | 0) + 1;
 return;
}

function mftCall_iidd(i4, i1, d2, d3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 if ((i4 | 0) >= (fb | 0) & (i4 | 0) < (fb + 7 | 0)) return FUNCTION_TABLE_iidd[i4 - fb & 7](i1 | 0, +d2, +d3) | 0;
 return ftCall_iidd(i4 | 0, i1 | 0, +d2, +d3) | 0;
}

function b16(i1, i2, i6, d7, d8, d9, d10, d11, i12, d13, d3, d4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 d7 = +d7;
 d8 = +d8;
 d9 = +d9;
 d10 = +d10;
 d11 = +d11;
 i12 = i12 | 0;
 d13 = +d13;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 abort(16);
 return 0;
}

function __ZN5CEgon4FireERK6VectorS2_(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 __Z14UTIL_TraceLineRK6VectorS1_15IGNORE_MONSTERSP7edict_sP11TraceResult(0, 0, 0, 0, i3);
 STACKTOP = i3;
 return;
}

function __ZN11CBaseEntity9HasTargetEj(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i3 = HEAP32[(HEAP32[gb + 57604 >> 2] | 0) + 152 >> 2] | 0;
 return (_strcmp(i3 + i1 | 0, i3 + (HEAP32[(HEAP32[i2 + 4 >> 2] | 0) + 460 >> 2] | 0) | 0) | 0) == 0 | 0;
}

function _HUD_GetHullBounds(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 switch (i1 | 0) {
 case 0:
  {
   i1 = 1;
   break;
  }
 case 1:
  {
   i1 = 1;
   break;
  }
 case 2:
  {
   i1 = 1;
   break;
  }
 default:
  i1 = 0;
 }
 return i1 | 0;
}

function __ZN11CHudMessage5ResetEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAPF32[i1 + 216 >> 2] = 0.0;
 HEAP32[i1 + 220 >> 2] = 0;
 i1 = i1 + 20 | 0;
 i2 = i1 + 128 | 0;
 do {
  HEAP32[i1 >> 2] = 0;
  i1 = i1 + 4 | 0;
 } while ((i1 | 0) < (i2 | 0));
 return;
}

function __Z13HUD_PlaySoundPcf(i2, d3) {
 i2 = i2 | 0;
 d3 = +d3;
 var i1 = 0;
 i1 = HEAP32[gb + 92900 >> 2] | 0;
 if ((HEAP32[gb + 92896 >> 2] | 0) != 0 & (i1 | 0) != 0) mftCall_vidi(HEAP32[gb + 92340 + 252 >> 2] | 0, i2 | 0, +d3, i1 + 16 | 0);
 return;
}

function __ZN12CHandGrenade8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 37827 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44172 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 44151 | 0) | 0;
 return;
}

function __ZN17CBasePlayerWeapon14SendWeaponAnimEiii(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[(HEAP32[(HEAP32[i4 + 128 >> 2] | 0) + 4 >> 2] | 0) + 536 >> 2] = i2;
 __Z18HUD_SendWeaponAnimiii(i2, i1, 0);
 return;
}

function __Z18__MsgFunc_FlashBatPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 i3 = __Z9READ_BYTEv() | 0;
 HEAP32[gb + 46040 + 5308 >> 2] = i3;
 HEAPF32[gb + 46040 + 5304 >> 2] = +(i3 | 0) * .01;
 return 1;
}

function mftCall_vidd(i4, i1, d2, d3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 if ((i4 | 0) >= (fb | 0) & (i4 | 0) < (fb + 1 | 0)) {
  FUNCTION_TABLE_vidd[i4 - fb & 1](i1 | 0, +d2, +d3);
  return;
 }
 ftCall_vidd(i4 | 0, i1 | 0, +d2, +d3);
}

function __ZN9CHudTrain4InitEv(i1) {
 i1 = i1 | 0;
 mftCall_iii(HEAP32[gb + 92340 + 72 >> 2] | 0, gb + 43814 | 0, fb + 45 | 0) | 0;
 HEAP32[i1 + 24 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 __ZN4CHud10AddHudElemEP8CHudBase(gb + 46040 | 0, i1);
 return 1;
}

function __ZN5CEgon7UseAmmoEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = (HEAP32[i2 + 128 >> 2] | 0) + 1236 + (HEAP32[i2 + 168 >> 2] << 2) | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = (i3 | 0) < (i1 | 0) ? 0 : i3 - i1 | 0;
 return;
}

function __ZN11CHudMessage7VidInitEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 228 >> 2] = __ZN4CHud14GetSpriteIndexEPKc(gb + 46040 | 0, gb + 43276 | 0) | 0;
 HEAP32[i1 + 224 >> 2] = __ZN4CHud14GetSpriteIndexEPKc(gb + 46040 | 0, gb + 43287 | 0) | 0;
 return 1;
}

function __Z13SpectatorMenuv() {
 var i1 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((mftCall_i(HEAP32[gb + 92340 + 152 >> 2] | 0) | 0) < 2) mftCall_vii(HEAP32[gb + 92340 + 160 >> 2] | 0, gb + 41951 | 0, i1 | 0);
 STACKTOP = i1;
 return;
}

function __ZN8CRpgAmmo7AddAmmoEP11CBaseEntity(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i2 = __Z14bIsMultiplayerv() | 0;
 return (mftCall_iiiii(HEAP32[(HEAP32[i1 >> 2] | 0) + 96 >> 2] | 0, i1 | 0, (i2 ? 2 : 1) | 0, gb + 38725 | 0, 5) | 0) != -1 | 0;
}

function __ZN15CMP5AmmoGrenade5SpawnEv(i1) {
 i1 = i1 | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 38520 | 0);
 return;
}

function __ZN11CBaseEntity8IsMovingEv(i1) {
 i1 = i1 | 0;
 i1 = HEAP32[i1 + 4 >> 2] | 0;
 if (+HEAPF32[i1 + 32 >> 2] == 0.0) if (+HEAPF32[i1 + 36 >> 2] == 0.0) i1 = +HEAPF32[i1 + 40 >> 2] == 0.0; else i1 = 0; else i1 = 0;
 return i1 & 1 ^ 1 | 0;
}

function __Z20__MsgFunc_ItemPickupPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 __Z11READ_STRINGv() | 0;
 __ZN15HistoryResource12AddToHistoryEiPKci(gb + 92140 | 0, 3, gb + 127001 | 0, 0);
 return 1;
}

function __ZN13CCrossbowAmmo5SpawnEv(i1) {
 i1 = i1 | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 36651 | 0);
 return;
}

function mftCall_vddd(i4, d1, d2, d3) {
 i4 = i4 | 0;
 d1 = +d1;
 d2 = +d2;
 d3 = +d3;
 if ((i4 | 0) >= (fb | 0) & (i4 | 0) < (fb + 0 | 0)) {
  FUNCTION_TABLE_vddd[i4 - fb & 0](+d1, +d2, +d3);
  return;
 }
 ftCall_vddd(i4 | 0, +d1, +d2, +d3);
}

function b37(i1, i2, i5, d6, i7, i8, d9, d10, i11, i12, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 i7 = i7 | 0;
 i8 = i8 | 0;
 d9 = +d9;
 d10 = +d10;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 abort(37);
}

function __ZN12CShotgunAmmo5SpawnEv(i1) {
 i1 = i1 | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 39246 | 0);
 return;
}

function __ZN12CMP5AmmoClip5SpawnEv(i1) {
 i1 = i1 | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 38276 | 0);
 return;
}

function __Z18HUD_SendWeaponAnimiii(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (HEAP32[gb + 92896 >> 2] | i2 | 0) {
  HEAP32[gb + 92904 >> 2] = i3;
  mftCall_vii(HEAP32[gb + 92340 + 264 >> 2] | 0, i3 | 0, i1 | 0);
 }
 return;
}

function mftCall_iii(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((i3 | 0) >= (fb | 0) & (i3 | 0) < (fb + 127 | 0)) return FUNCTION_TABLE_iii[i3 - fb & 127](i1 | 0, i2 | 0) | 0;
 return ftCall_iii(i3 | 0, i1 | 0, i2 | 0) | 0;
}

function __ZN13CHudSpectator14LoadMapSpritesEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if ((HEAP32[i2 + 1484 >> 2] | 0) > 0) i1 = mftCall_ii(HEAP32[gb + 92340 + 356 >> 2] | 0, i2 + 1492 | 0) | 0; else i1 = 0;
 HEAP32[i2 + 4708 >> 2] = i1;
 return;
}

function __ZN11CPythonAmmo5SpawnEv(i1) {
 i1 = i1 | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 38606 | 0);
 return;
}

function __Z7KB_Initv() {
 HEAP32[gb + 94308 >> 2] = 0;
 __Z6KB_AddPKcP9kbutton_s(gb + 42564 | 0, gb + 94296 | 0);
 __Z6KB_AddPKcP9kbutton_s(gb + 42573 | 0, gb + 94008 | 0);
 __Z6KB_AddPKcP9kbutton_s(gb + 42582 | 0, gb + 94032 | 0);
 return;
}

function __ZN5CEgon7HolsterEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAPF32[(HEAP32[i2 + 128 >> 2] | 0) + 612 >> 2] = .5;
 mftCall_viiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 324 >> 2] | 0, i2 | 0, 10, 1, 0);
 __ZN5CEgon9EndAttackEv(i2);
 return;
}

function __ZN10CGlockAmmo5SpawnEv(i1) {
 i1 = i1 | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 39624 | 0);
 return;
}

function __ZN10CGaussAmmo5SpawnEv(i1) {
 i1 = i1 | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 37778 | 0);
 return;
}

function __ZN9CEgonAmmo5SpawnEv(i1) {
 i1 = i1 | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 38481 | 0);
 return;
}

function __ZN12CHudOverview7VidInitEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 20 >> 2] = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, gb + 43340 | 0) | 0;
 HEAP32[i1 + 24 >> 2] = mftCall_ii(HEAP32[gb + 92340 >> 2] | 0, gb + 43357 | 0) | 0;
 return 1;
}

function __ZN8CRpgAmmo5SpawnEv(i1) {
 i1 = i1 | 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0, i1 | 0);
 mftCall_vii(HEAP32[gb + 56972 + 8 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0, gb + 38816 | 0);
 return;
}

function __ZN4CRpg7HolsterEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 188 >> 2] = 0;
 HEAPF32[(HEAP32[i2 + 128 >> 2] | 0) + 612 >> 2] = .5;
 mftCall_viiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 324 >> 2] | 0, i2 | 0, 4, 1, 0);
 return;
}

function mftCall_vii(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((i3 | 0) >= (fb | 0) & (i3 | 0) < (fb + 63 | 0)) {
  FUNCTION_TABLE_vii[i3 - fb & 63](i1 | 0, i2 | 0);
  return;
 }
 ftCall_vii(i3 | 0, i1 | 0, i2 | 0);
}

function _Initialize(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 _memcpy(gb + 92340 | 0, i2 | 0, 536) | 0;
 if ((i1 | 0) == 7) {
  _memcpy(gb + 92340 | 0, i2 | 0, 536) | 0;
  __Z13EV_HookEventsv();
  i1 = 1;
 } else i1 = 0;
 return i1 | 0;
}

function __ZN11CBaseEntity12ReflectGaussEv(i1) {
 i1 = i1 | 0;
 if (!(mftCall_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 140 >> 2] | 0, i1 | 0) | 0)) i1 = 0; else i1 = +HEAPF32[(HEAP32[i1 + 4 >> 2] | 0) + 364 >> 2] == 0.0;
 return i1 & 1 | 0;
}

function __Z20__MsgFunc_WeapPickupPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 i3 = __Z9READ_BYTEv() | 0;
 __ZN15HistoryResource12AddToHistoryEiii(gb + 92140 | 0, 2, i3, 0);
 return 1;
}

function mftCall_dii(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((i3 | 0) >= (fb | 0) & (i3 | 0) < (fb + 3 | 0)) return +FUNCTION_TABLE_dii[i3 - fb & 3](i1 | 0, i2 | 0);
 return +ftCall_dii(i3 | 0, i1 | 0, i2 | 0);
}

function _VectorScale(i1, d3, i2) {
 i1 = i1 | 0;
 d3 = +d3;
 i2 = i2 | 0;
 HEAPF32[i2 >> 2] = +HEAPF32[i1 >> 2] * d3;
 HEAPF32[i2 + 4 >> 2] = +HEAPF32[i1 + 4 >> 2] * d3;
 HEAPF32[i2 + 8 >> 2] = +HEAPF32[i1 + 8 >> 2] * d3;
 return;
}

function mftCall_iid(i3, i1, d2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 if ((i3 | 0) >= (fb | 0) & (i3 | 0) < (fb + 31 | 0)) return FUNCTION_TABLE_iid[i3 - fb & 31](i1 | 0, +d2) | 0;
 return ftCall_iid(i3 | 0, i1 | 0, +d2) | 0;
}

function _Length(i3) {
 i3 = i3 | 0;
 var i1 = 0, d2 = 0.0, d4 = 0.0;
 i1 = 0;
 d2 = 0.0;
 do {
  d4 = +HEAPF32[i3 + (i1 << 2) >> 2];
  d2 = d2 + d4 * d4;
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != 3);
 return +(+Math_sqrt(+d2));
}

function _PM_DropPunchAngle(i1) {
 i1 = i1 | 0;
 var d2 = 0.0;
 d2 = +_VectorNormalize(i1);
 d2 = d2 - (d2 * .5 + 10.0) * +HEAPF32[(HEAP32[gb + 121136 >> 2] | 0) + 16 >> 2];
 _VectorScale(i1, d2 > 0.0 ? d2 : 0.0, i1);
 return;
}

function __ZN11CBasePlayer17AutoaimDeflectionER6Vectorff(i1, i4, i5, d3, d2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d3 = +d3;
 d2 = +d2;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 return;
}

function __Z25StripEndNewlineFromStringPc(i1) {
 i1 = i1 | 0;
 i1 = i1 + ((_strlen(i1 | 0) | 0) + -1) | 0;
 switch (HEAP8[i1 >> 0] | 0) {
 case 13:
 case 10:
  {
   HEAP8[i1 >> 0] = 0;
   break;
  }
 default:
  {}
 }
 return;
}

function __Z11KB_Shutdownv() {
 var i1 = 0, i2 = 0;
 i1 = HEAP32[gb + 94308 >> 2] | 0;
 if (i1 | 0) do {
  i2 = i1;
  i1 = HEAP32[i1 >> 2] | 0;
  _free(i2 | 0);
 } while ((i1 | 0) != 0);
 HEAP32[gb + 94308 >> 2] = 0;
 return;
}

function __Z10MatrixCopyPA4_fS0_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i3 = i1 + 48 | 0;
 do {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 } while ((i1 | 0) < (i3 | 0));
 return;
}

function mftCall_vid(i3, i1, d2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 if ((i3 | 0) >= (fb | 0) & (i3 | 0) < (fb + 3 | 0)) {
  FUNCTION_TABLE_vid[i3 - fb & 3](i1 | 0, +d2);
  return;
 }
 ftCall_vid(i3 | 0, i1 | 0, +d2);
}

function mftCall_vdi(i3, d1, i2) {
 i3 = i3 | 0;
 d1 = +d1;
 i2 = i2 | 0;
 if ((i3 | 0) >= (fb | 0) & (i3 | 0) < (fb + 0 | 0)) {
  FUNCTION_TABLE_vdi[i3 - fb & 0](+d1, i2 | 0);
  return;
 }
 ftCall_vdi(i3 | 0, +d1, i2 | 0);
}

function __ZN17CBasePlayerWeapon7HolsterEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 188 >> 2] = 0;
 HEAP32[gb + 59360 >> 2] = 0;
 HEAP32[(HEAP32[(HEAP32[i2 + 128 >> 2] | 0) + 4 >> 2] | 0) + 188 >> 2] = 0;
 return;
}

function __Z11EV_IsPlayeri(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((i1 | 0) > 0) if ((mftCall_i(HEAP32[gb + 92340 + 144 >> 2] | 0) | 0) < (i1 | 0)) i2 = 3; else i1 = 1; else i2 = 3;
 if ((i2 | 0) == 3) i1 = 0;
 return i1 | 0;
}

function __Z8U_Randomv() {
 var i1 = 0;
 i1 = (HEAP32[gb + 92908 >> 2] | 0) * 69069 | 0;
 i1 = i1 + 1 + (HEAP32[gb + 33916 + ((i1 & 255) << 2) >> 2] | 0) | 0;
 HEAP32[gb + 92908 >> 2] = i1;
 return i1 & 268435455 | 0;
}

function mftCall_vdd(i3, d1, d2) {
 i3 = i3 | 0;
 d1 = +d1;
 d2 = +d2;
 if ((i3 | 0) >= (fb | 0) & (i3 | 0) < (fb + 0 | 0)) {
  FUNCTION_TABLE_vdd[i3 - fb & 0](+d1, +d2);
  return;
 }
 ftCall_vdd(i3 | 0, +d1, +d2);
}

function mftCall_ddd(i3, d1, d2) {
 i3 = i3 | 0;
 d1 = +d1;
 d2 = +d2;
 if ((i3 | 0) >= (fb | 0) & (i3 | 0) < (fb + 0 | 0)) return +FUNCTION_TABLE_ddd[i3 - fb & 0](+d1, +d2);
 return +ftCall_ddd(i3 | 0, +d1, +d2);
}

function __ZN8CCrowbar7HolsterEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAPF32[(HEAP32[i2 + 128 >> 2] | 0) + 612 >> 2] = .5;
 mftCall_viiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 324 >> 2] | 0, i2 | 0, 2, 1, 0);
 return;
}

function __Z16V_DropPunchAnglefPf(d2, i1) {
 d2 = +d2;
 i1 = i1 | 0;
 var d3 = 0.0;
 d3 = +_VectorNormalize(i1);
 _VectorScale(i1, d3 - d2 * (d3 * .5 + 10.0) > 0.0 ? d3 - d2 * (d3 * .5 + 10.0) : 0.0, i1);
 return;
}

function __ZN4CRpg10CanHolsterEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if (!(HEAP32[i1 + 200 >> 2] | 0)) i2 = 3; else if (!(HEAP32[i1 + 204 >> 2] | 0)) i2 = 3; else i1 = 0;
 if ((i2 | 0) == 3) i1 = 1;
 return i1 | 0;
}

function __ZN11CBasePlayer5SpawnEv(i1) {
 i1 = i1 | 0;
 i1 = HEAP32[i1 + 1224 >> 2] | 0;
 if (i1 | 0) mftCall_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 248 >> 2] | 0, i1 | 0) | 0;
 HEAP32[gb + 59360 >> 2] = 0;
 return;
}

function __ZN13CMP5Chainammo7AddAmmoEP11CBaseEntity(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return (mftCall_iiiii(HEAP32[(HEAP32[i1 >> 2] | 0) + 96 >> 2] | 0, i1 | 0, 200, gb + 39421 | 0, 250) | 0) != -1 | 0;
}

function __ZN17CBasePlayerWeapon14PlayEmptySoundEv(i1) {
 i1 = i1 | 0;
 if (HEAP32[i1 + 140 >> 2] | 0) {
  __Z13HUD_PlaySoundPcf(gb + 39176 | 0, .800000011920929);
  HEAP32[i1 + 140 >> 2] = 0;
 }
 return 0;
}

function __ZN15CMP5AmmoGrenade7AddAmmoEP11CBaseEntity(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return (mftCall_iiiii(HEAP32[(HEAP32[i1 >> 2] | 0) + 96 >> 2] | 0, i1 | 0, 2, gb + 38246 | 0, 10) | 0) != -1 | 0;
}

function __ZN6CGauss6DeployEv(i1) {
 i1 = i1 | 0;
 HEAPF32[(HEAP32[i1 + 128 >> 2] | 0) + 1588 >> 2] = 0.0;
 return __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii(i1, gb + 44084 | 0, 0, 8, 0, 0, 0) | 0;
}

function __ZN12CShotgunAmmo7AddAmmoEP11CBaseEntity(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return (mftCall_iiiii(HEAP32[(HEAP32[i1 >> 2] | 0) + 96 >> 2] | 0, i1 | 0, 12, gb + 39080 | 0, 125) | 0) != -1 | 0;
}

function __ZN12CMP5AmmoClip7AddAmmoEP11CBaseEntity(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return (mftCall_iiiii(HEAP32[(HEAP32[i1 >> 2] | 0) + 96 >> 2] | 0, i1 | 0, 50, gb + 39421 | 0, 250) | 0) != -1 | 0;
}

function __DotProduct(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return +(+HEAPF32[i1 >> 2] * +HEAPF32[i2 >> 2] + +HEAPF32[i1 + 4 >> 2] * +HEAPF32[i2 + 4 >> 2] + +HEAPF32[i1 + 8 >> 2] * +HEAPF32[i2 + 8 >> 2]);
}

function mftCall_ii(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if ((i2 | 0) >= (fb | 0) & (i2 | 0) < (fb + 255 | 0)) return FUNCTION_TABLE_ii[i2 - fb & 255](i1 | 0) | 0;
 return ftCall_ii(i2 | 0, i1 | 0) | 0;
}

function __ZN13CCrossbowAmmo7AddAmmoEP11CBaseEntity(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return (mftCall_iiiii(HEAP32[(HEAP32[i1 >> 2] | 0) + 96 >> 2] | 0, i1 | 0, 5, gb + 36618 | 0, 50) | 0) != -1 | 0;
}

function __ZN4CHud16MsgFunc_GameModeEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 HEAP32[i4 + 92 >> 2] = __Z9READ_BYTEv() | 0;
 return 1;
}

function __ZN11CBaseEntity10IsBSPModelEv(i1) {
 i1 = i1 | 0;
 i1 = HEAP32[i1 + 4 >> 2] | 0;
 if ((HEAP32[i1 + 268 >> 2] | 0) == 4) i1 = 1; else i1 = (HEAP32[i1 + 264 >> 2] | 0) == 13;
 return i1 & 1 | 0;
}

function __ZN10CGlockAmmo7AddAmmoEP11CBaseEntity(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return (mftCall_iiiii(HEAP32[(HEAP32[i1 >> 2] | 0) + 96 >> 2] | 0, i1 | 0, 17, gb + 39421 | 0, 250) | 0) != -1 | 0;
}

function __ZN9CTripmine6DeployEv(i1) {
 i1 = i1 | 0;
 HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 276 >> 2] = 0;
 return __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii(i1, gb + 44439 | 0, 0, 6, 0, 0, 0) | 0;
}

function __ZN5CEgon6DeployEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 228 >> 2] = 0;
 HEAP32[i1 + 96 >> 2] = 0;
 return __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii(i1, gb + 44047 | 0, 0, 9, 0, 0, 0) | 0;
}

function __ZN11CPythonAmmo7AddAmmoEP11CBaseEntity(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return (mftCall_iiiii(HEAP32[(HEAP32[i1 >> 2] | 0) + 96 >> 2] | 0, i1 | 0, 6, gb + 38585 | 0, 36) | 0) != -1 | 0;
}

function _CL_CameraOffset(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = HEAP32[gb + 93816 >> 2];
 HEAP32[i1 + 4 >> 2] = HEAP32[gb + 93816 + 4 >> 2];
 HEAP32[i1 + 8 >> 2] = HEAP32[gb + 93816 + 8 >> 2];
 return;
}

function __ZN9CEgonAmmo7AddAmmoEP11CBaseEntity(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return (mftCall_iiiii(HEAP32[(HEAP32[i1 >> 2] | 0) + 96 >> 2] | 0, i1 | 0, 20, gb + 37660 | 0, 100) | 0) != -1 | 0;
}

function __Z14HUD_GetLastOrgPf(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = 0;
 do {
  HEAP32[i2 + (i1 << 2) >> 2] = HEAP32[gb + 59364 + (i1 << 2) >> 2];
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != 3);
 return;
}

function __ZN12CBaseMonster12RadiusDamageE6VectorP9entvars_sS2_fii(i6, i7, i5, i4, d2, i3, i1) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 i1 = i1 | 0;
 return;
}

function mftCall_vi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if ((i2 | 0) >= (fb | 0) & (i2 | 0) < (fb + 255 | 0)) {
  FUNCTION_TABLE_vi[i2 - fb & 255](i1 | 0);
  return;
 }
 ftCall_vi(i2 | 0, i1 | 0);
}

function __ZN12CBaseMonster20PlayScriptedSentenceEPKcfffiP11CBaseEntity(i6, i5, d3, d7, d1, i2, i4) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 d3 = +d3;
 d7 = +d7;
 d1 = +d1;
 i2 = i2 | 0;
 i4 = i4 | 0;
 return;
}

function __ZN4CHud12MsgFunc_LogoEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 HEAP32[i4 + 8 >> 2] = __Z9READ_BYTEv() | 0;
 return 1;
}

function __ZN15CMP5AmmoGrenade8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 38520 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39466 | 0) | 0;
 return;
}

function __Z20__MsgFunc_SecAmmoValPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN17CHudAmmoSecondary18MsgFunc_SecAmmoValEPKciPv(gb + 46040 + 6220 | 0, 0, i1, i2) | 0;
 return 1;
}

function b10(i1, i2, i3, i4, i5, d6, d7, d8, i9, d10) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 d7 = +d7;
 d8 = +d8;
 i9 = i9 | 0;
 d10 = +d10;
 abort(10);
}

function __ZN13CCrossbowAmmo8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 36651 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39466 | 0) | 0;
 return;
}

function __ZN11CBaseEntity6KilledEP9entvars_si(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = (HEAP32[i3 + 4 >> 2] | 0) + 280 | 0;
 HEAP32[i3 >> 2] = HEAP32[i3 >> 2] | 128;
 return;
}

function __Z21__MsgFunc_StatusValuePKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN13CHudStatusBar19MsgFunc_StatusValueEPKciPv(gb + 46040 + 5556 | 0, 0, i1, i2) | 0;
 return 1;
}

function __Z20__MsgFunc_StatusIconPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN15CHudStatusIcons18MsgFunc_StatusIconEPKciPv(gb + 46040 + 6284 | 0, 0, i1, i2) | 0;
 return 1;
}

function __ZN12CShotgunAmmo8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 39246 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39466 | 0) | 0;
 return;
}

function __ZN12CMP5AmmoClip8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 38276 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39466 | 0) | 0;
 return;
}

function __Z20__MsgFunc_FlashlightPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN14CHudFlashlight18MsgFunc_FlashlightEPKciPv(gb + 46040 + 5260 | 0, 0, i1, i2) | 0;
 return 1;
}

function __Z18R_StudioDrawPlayeriP14entity_state_s(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return mftCall_iiii(HEAP32[(HEAP32[gb + 640 >> 2] | 0) + 16 >> 2] | 0, gb + 640 | 0, i1 | 0, i2 | 0) | 0;
}

function mftCall_di(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if ((i2 | 0) >= (fb | 0) & (i2 | 0) < (fb + 7 | 0)) return +FUNCTION_TABLE_di[i2 - fb & 7](i1 | 0);
 return +ftCall_di(i2 | 0, i1 | 0);
}

function __ZN13CHudSpectator15HandleButtonsUpEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (i1 & 24 | 0) HEAPF32[i2 + 4716 >> 2] = 0.0;
 if (i1 & 1536 | 0) HEAPF32[i2 + 4720 >> 2] = 0.0;
 return;
}

function __ZN11CPythonAmmo8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 38606 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39466 | 0) | 0;
 return;
}

function __Z20__MsgFunc_StatusTextPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN13CHudStatusBar18MsgFunc_StatusTextEPKciPv(gb + 46040 + 5556 | 0, 0, i1, i2) | 0;
 return 1;
}

function __ZN10CGlockAmmo8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 39624 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39466 | 0) | 0;
 return;
}

function __ZN10CGaussAmmo8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 37778 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39466 | 0) | 0;
 return;
}

function __Z19__MsgFunc_TeamScorePKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN14CHudScoreboard17MsgFunc_TeamScoreEPKciPv(gb + 46040 + 6496 | 0, 0, i1, i2) | 0;
 return 1;
}

function __Z19__MsgFunc_ScoreInfoPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN14CHudScoreboard17MsgFunc_ScoreInfoEPKciPv(gb + 46040 + 6496 | 0, 0, i1, i2) | 0;
 return 1;
}

function __Z14__MsgFunc_LogoPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z10BEGIN_READPvi(i2, i1);
 i3 = __Z9READ_BYTEv() | 0;
 HEAP32[gb + 46040 + 8 >> 2] = i3;
 return 1;
}

function _IN_ClientLookEvent(d2, d1) {
 d2 = +d2;
 d1 = +d1;
 HEAPF32[gb + 118476 >> 2] = +HEAPF32[gb + 118476 >> 2] + d2;
 HEAPF32[gb + 118480 >> 2] = +HEAPF32[gb + 118480 >> 2] + d1;
 return;
}

function __Z18__MsgFunc_DeathMsgPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN15CHudDeathNotice16MsgFunc_DeathMsgEPKciPv(gb + 46040 + 6132 | 0, 0, i1, i2) | 0;
 return 1;
}

function __VectorCopy(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 return;
}

function __ZN9CEgonAmmo8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 38481 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39466 | 0) | 0;
 return;
}

function __ZN8CHudMOTD5ResetEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 16 >> 2] = HEAP32[i1 + 16 >> 2] & -2;
 HEAP8[i1 + 25 >> 0] = 0;
 HEAP32[i1 + 1564 >> 2] = 0;
 HEAP8[i1 + 24 >> 0] = 0;
 return;
}

function __ZN12CBaseMonster12FTriangulateERK6VectorS2_fP11CBaseEntityPS0_(i4, i6, i5, d1, i3, i2) {
 i4 = i4 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 d1 = +d1;
 i3 = i3 | 0;
 i2 = i2 | 0;
 return 0;
}

function __ZN11CBasePlayer7IsAliveEv(i1) {
 i1 = i1 | 0;
 i1 = HEAP32[i1 + 4 >> 2] | 0;
 if (!(HEAP32[i1 + 368 >> 2] | 0)) i1 = +HEAPF32[i1 + 352 >> 2] > 0.0; else i1 = 0;
 return i1 & 1 | 0;
}

function __Z18__MsgFunc_TeamInfoPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN14CHudScoreboard16MsgFunc_TeamInfoEPKciPv(gb + 46040 + 6496 | 0, 0, i1, i2) | 0;
 return 1;
}

function b34(i1, i2, d3, i4, i5, i6, d7, d8, i9) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 d7 = +d7;
 d8 = +d8;
 i9 = i9 | 0;
 abort(34);
 return 0;
}

function __ZN8CRpgAmmo8PrecacheEv(i1) {
 i1 = i1 | 0;
 mftCall_ii(HEAP32[gb + 56972 >> 2] | 0, gb + 38816 | 0) | 0;
 mftCall_ii(HEAP32[gb + 56972 + 4 >> 2] | 0, gb + 39466 | 0) | 0;
 return;
}

function __ZN12CBaseMonster12ShootAtEnemyERK6Vector(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 return;
}

function __ZN11CBasePlayer11TraceAttackEP9entvars_sf6VectorP11TraceResulti(i5, i3, d2, i6, i4, i1) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 d2 = +d2;
 i6 = i6 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 return;
}

function __ZN15CHudTextMessage26BufferedLocaliseTextStringEPKc(i1) {
 i1 = i1 | 0;
 __ZN15CHudTextMessage18LocaliseTextStringEPKcPci(i1, gb + 131672 | 0, 1024) | 0;
 return gb + 131672 | 0;
}

function __ZN11CBaseEntity10BodyTargetERK6Vector(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 mftCall_vii(HEAP32[(HEAP32[i3 >> 2] | 0) + 200 >> 2] | 0, i1 | 0, i3 | 0);
 return;
}

function __Z11ClientPrintP9entvars_siPKcS2_S2_S2_S2_(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 return;
}

function _VectorInverse(i1) {
 i1 = i1 | 0;
 HEAPF32[i1 >> 2] = -+HEAPF32[i1 >> 2];
 HEAPF32[i1 + 4 >> 2] = -+HEAPF32[i1 + 4 >> 2];
 HEAPF32[i1 + 8 >> 2] = -+HEAPF32[i1 + 8 >> 2];
 return;
}

function __ZN4CMP56ReloadEv(i1) {
 i1 = i1 | 0;
 if ((HEAP32[(HEAP32[i1 + 128 >> 2] | 0) + 48 >> 2] | 0) >= 1) __ZN17CBasePlayerWeapon13DefaultReloadEiifi(i1, 50, 3, 1.5, 0) | 0;
 return;
}

function __Z20__MsgFunc_HideWeaponPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN8CHudAmmo18MsgFunc_HideWeaponEPKciPv(gb + 46040 + 128 | 0, 0, i1, i2) | 0;
 return 1;
}

function __ZN8CHudMenu11InitHUDDataEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 24 >> 2] = 0;
 mftCall_vi(HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] | 0, i1 | 0);
 return;
}

function __ZN12CHandGrenade6DeployEv(i1) {
 i1 = i1 | 0;
 HEAPF32[i1 + 84 >> 2] = -1.0;
 return __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii(i1, gb + 44172 | 0, 0, 7, 0, 0, 0) | 0;
}

function __Z17__MsgFunc_SayTextPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN11CHudSayText15MsgFunc_SayTextEPKciPv(gb + 46040 + 6156 | 0, 0, i1, i2) | 0;
 return 1;
}

function __Z17__MsgFunc_HudTextPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN11CHudMessage15MsgFunc_HudTextEPKciPv(gb + 46040 + 5324 | 0, 0, i1, i2) | 0;
 return 1;
}

function __Z17__MsgFunc_BatteryPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN11CHudBattery15MsgFunc_BatteryEPKciPv(gb + 46040 + 5184 | 0, 0, i1, i2) | 0;
 return 1;
}

function __Z10LoadVModelPcP11CBasePlayer(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 mftCall_iii(HEAP32[gb + 92340 + 240 >> 2] | 0, i2 | 0, (HEAP32[i1 + 4 >> 2] | 0) + 188 | 0) | 0;
 return;
}

function __Z18__MsgFunc_ShowMenuPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN8CHudMenu16MsgFunc_ShowMenuEPKciPv(gb + 46040 + 6184 | 0, 0, i1, i2) | 0;
 return 1;
}

function __ZN11CBasePlayer16GetAutoaimVectorEf(i1, i3, d2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 d2 = +d2;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 return;
}

function __Z16__MsgFunc_HealthPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN10CHudHealth14MsgFunc_HealthEPKciPv(gb + 46040 + 168 | 0, 0, i1, i2) | 0;
 return 1;
}

function __Z16__MsgFunc_DamagePKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN10CHudHealth14MsgFunc_DamageEPKciPv(gb + 46040 + 168 | 0, 0, i1, i2) | 0;
 return 1;
}

function __Z12RadiusDamage6VectorP9entvars_sS1_ffii(i7, i6, i5, d2, d3, i4, i1) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 d2 = +d2;
 d3 = +d3;
 i4 = i4 | 0;
 i1 = i1 | 0;
 return;
}

function __Z19__MsgFunc_CurWeaponPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZN8CHudAmmo17MsgFunc_CurWeaponEPKciPv(gb + 46040 + 128 | 0, 0, i1, i2) | 0;
}

function __Z14__MsgFunc_MOTDPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN8CHudMOTD12MsgFunc_MOTDEPKciPv(gb + 46040 + 6536 | 0, 0, i1, i2) | 0;
 return 1;
}

function __Z14EMIT_SOUND_DYNP7edict_siPKcffii(i3, i2, i6, d7, d1, i4, i5) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 d7 = +d7;
 d1 = +d1;
 i4 = i4 | 0;
 i5 = i5 | 0;
 return;
}

function __ZN4CRpg15SecondaryAttackEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 200 >> 2] = (HEAP32[i1 + 200 >> 2] | 0) == 0 & 1;
 HEAPF32[i1 + 160 >> 2] = .20000000298023224;
 return;
}

function __ZN12CBaseMonster14CheckLocalMoveERK6VectorS2_P11CBaseEntityPf(i3, i5, i4, i1, i2) {
 i3 = i3 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return 0;
}

function __ZN12CBaseMonster12RadiusDamageEP9entvars_sS1_fii(i6, i5, i4, d2, i3, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 i1 = i1 | 0;
 return;
}

function __Z14EV_MuzzleFlashv() {
 var i1 = 0;
 i1 = mftCall_i(HEAP32[gb + 92340 + 208 >> 2] | 0) | 0;
 if (i1 | 0) HEAP32[i1 + 748 >> 2] = HEAP32[i1 + 748 >> 2] | 2;
 return;
}

function __ZN15WeaponsResource9CountAmmoEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if ((i1 | 0) < 0) i1 = 0; else i1 = HEAP32[i2 + 10640 + (i1 << 2) >> 2] | 0;
 return i1 | 0;
}

function __ZN12CBaseMonster20MakeDamageBloodDecalEifP11TraceResultRK6Vector(i4, i1, d2, i3, i5) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 i5 = i5 | 0;
 return;
}

function __Z18__MsgFunc_GameModePKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN4CHud16MsgFunc_GameModeEPKciPv(gb + 46040 | 0, 0, i1, i2) | 0;
 return 1;
}

function __Z18__MsgFunc_ResetHUDPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN4CHud16MsgFunc_ResetHUDEPKciPv(gb + 46040 | 0, 0, 0, 0) | 0;
 return 1;
}

function __Z17__MsgFunc_ConcussPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN4CHud15MsgFunc_ConcussEPKciPv(gb + 46040 | 0, 0, i1, i2) | 0;
 return 1;
}

function b25(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 abort(25);
}

function __ZN8CHudAmmo14UserCmd_Slot10Ev(i1) {
 i1 = i1 | 0;
 if (HEAP32[gb + 46040 + 6204 >> 2] | 0) __ZN8CHudMenu14SelectMenuItemEi(gb + 46040 + 6184 | 0, 10);
 return;
}

function __ZN12CHudOverview4InitEv(i1) {
 i1 = i1 | 0;
 __ZN4CHud10AddHudElemEP8CHudBase(gb + 46040 | 0, i1);
 HEAP32[i1 + 16 >> 2] = HEAP32[i1 + 16 >> 2] | 1;
 return 1;
}

function __ZN11CBaseEntity12IlluminationEv(i1) {
 i1 = i1 | 0;
 return mftCall_ii(HEAP32[gb + 56972 + 60 >> 2] | 0, HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 520 >> 2] | 0) | 0;
}

function __Z17__MsgFunc_TextMsgPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN15CHudTextMessage15MsgFunc_TextMsgEPKciPv(0, 0, i1, i2) | 0;
 return 1;
}

function __Z15EV_CreateTracerPfS_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 mftCall_vii(HEAP32[(HEAP32[gb + 92340 + 332 >> 2] | 0) + 172 >> 2] | 0, i2 | 0, i1 | 0);
 return;
}

function __Z16__MsgFunc_SetFOVPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN4CHud14MsgFunc_SetFOVEPKciPv(gb + 46040 | 0, 0, i1, i2) | 0;
 return 1;
}

function __ZN8CHudAmmo13UserCmd_Slot9Ev(i1) {
 i1 = i1 | 0;
 if (HEAP32[gb + 46040 + 6204 >> 2] | 0) __ZN8CHudMenu14SelectMenuItemEi(gb + 46040 + 6184 | 0, 9);
 return;
}

function __ZN8CHudAmmo13UserCmd_Slot8Ev(i1) {
 i1 = i1 | 0;
 if (HEAP32[gb + 46040 + 6204 >> 2] | 0) __ZN8CHudMenu14SelectMenuItemEi(gb + 46040 + 6184 | 0, 8);
 return;
}

function __ZN8CHudAmmo13UserCmd_Slot7Ev(i1) {
 i1 = i1 | 0;
 if (HEAP32[gb + 46040 + 6204 >> 2] | 0) __ZN8CHudMenu14SelectMenuItemEi(gb + 46040 + 6184 | 0, 7);
 return;
}

function __Z20__MsgFunc_WeaponListPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN8CHudAmmo18MsgFunc_WeaponListEPKciPv(0, 0, i1, i2) | 0;
 return 1;
}

function __Z20__MsgFunc_AmmoPickupPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN8CHudAmmo18MsgFunc_AmmoPickupEPKciPv(0, 0, i1, i2) | 0;
 return 1;
}

function __Z19UTIL_ClientPrintAlliPKcS0_S0_S0_S0_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 return;
}

function __Z10BEGIN_READPvi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[gb + 94368 >> 2] = 0;
 HEAP32[gb + 94372 >> 2] = i2;
 HEAP32[gb + 94376 >> 2] = i1;
 return;
}

function mftCall_i(i1) {
 i1 = i1 | 0;
 if ((i1 | 0) >= (fb | 0) & (i1 | 0) < (fb + 0 | 0)) return FUNCTION_TABLE_i[i1 - fb & 0]() | 0;
 return ftCall_i(i1 | 0) | 0;
}

function __ZN11CBasePlayer14GetGunPositionEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 return;
}

function __Z17__MsgFunc_InitHUDPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN4CHud15MsgFunc_InitHUDEPKciPv(gb + 46040 | 0, 0, 0, 0);
 return 1;
}

function mftCall_v(i1) {
 i1 = i1 | 0;
 if ((i1 | 0) >= (fb | 0) & (i1 | 0) < (fb + 127 | 0)) {
  FUNCTION_TABLE_v[i1 - fb & 127]();
  return;
 }
 ftCall_v(i1 | 0);
}

function b23(i1, i2, i3, i4, d5, d6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 d6 = +d6;
 i7 = i7 | 0;
 i8 = i8 | 0;
 abort(23);
}

function __ZN15CHudDeathNotice7VidInitEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 20 >> 2] = __ZN4CHud14GetSpriteIndexEPKc(gb + 46040 | 0, gb + 40172 | 0) | 0;
 return 1;
}

function __ZN12CBaseMonster15CanPlaySentenceEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return mftCall_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 136 >> 2] | 0, i2 | 0) | 0;
}

function _HUD_Frame(d1) {
 d1 = +d1;
 var i2 = 0;
 i2 = HEAP32[gb + 92340 + 312 >> 2] | 0;
 __Z11HUD_GetRectv() | 0;
 mftCall_vi(i2 | 0, gb + 92880 | 0);
 return;
}

function b0(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 abort(0);
 return 0;
}

function __ZN8CGrenade11DetonateUseEP11CBaseEntityS1_8USE_TYPEf(i3, i1, i2, i4, d5) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 return;
}

function __ZN11CBaseEntity10TraceBleedEf6VectorP11TraceResulti(i4, d2, i5, i3, i1) {
 i4 = i4 | 0;
 d2 = +d2;
 i5 = i5 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 return;
}

function mftCall_d(i1) {
 i1 = i1 | 0;
 if ((i1 | 0) >= (fb | 0) & (i1 | 0) < (fb + 0 | 0)) return +FUNCTION_TABLE_d[i1 - fb & 0]();
 return +ftCall_d(i1 | 0);
}

function __ZN12CBaseMonster4StopEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 376 >> 2] = mftCall_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 300 >> 2] | 0, i1 | 0) | 0;
 return;
}

function __ZN17CBasePlayerWeapon14AddPrimaryAmmoEiPcii(i5, i1, i4, i3, i2) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 return 1;
}

function __Z16IN_MoverightDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94128 | 0);
 __ZN13CHudSpectator17HandleButtonsDownEi(gb + 46040 + 424 | 0, 1024);
 return;
}

function __Z16CAM_ToggleSnaptov() {
 var i1 = 0;
 i1 = (HEAP32[gb + 93772 >> 2] | 0) + 12 | 0;
 HEAPF32[i1 >> 2] = +(+HEAPF32[i1 >> 2] == 0.0 & 1);
 return;
}

function __ZN17CBasePlayerWeapon9AddWeaponEv(i1) {
 i1 = i1 | 0;
 mftCall_iii(HEAP32[(HEAP32[i1 >> 2] | 0) + 304 >> 2] | 0, i1 | 0, i1 | 0) | 0;
 return 1;
}

function __ZN11CBasePlayer10TakeDamageEP9entvars_sS1_fi(i5, i4, i3, d2, i1) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 d2 = +d2;
 i1 = i1 | 0;
 return 0;
}

function __ZN11CBaseEntity10TakeDamageEP9entvars_sS1_fi(i5, i4, i3, d2, i1) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 d2 = +d2;
 i1 = i1 | 0;
 return 1;
}

function __ZN4CHud16MsgFunc_ViewModeEPKciPv(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __Z17CAM_ToFirstPersonv();
 return;
}

function __Z18__MsgFunc_ViewModePKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN4CHud16MsgFunc_ViewModeEPKciPv(0, 0, 0, 0);
 return 1;
}

function __Z15IN_MoveleftDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94116 | 0);
 __ZN13CHudSpectator17HandleButtonsDownEi(gb + 46040 + 424 | 0, 512);
 return;
}

function __Z14IN_Attack2Downv() {
 __Z7KeyDownP9kbutton_s(gb + 94200 | 0);
 __ZN13CHudSpectator17HandleButtonsDownEi(gb + 46040 + 424 | 0, 2048);
 return;
}

function __ZN15CHudStatusIcons5ResetEv(i1) {
 i1 = i1 | 0;
 _memset(i1 + 20 | 0, 0, 192) | 0;
 HEAP32[i1 + 16 >> 2] = HEAP32[i1 + 16 >> 2] & -2;
 return;
}

function __Z10IN_Impulsev() {
 var i1 = 0;
 i1 = _atoi(mftCall_ii(HEAP32[gb + 92340 + 156 >> 2] | 0, 1) | 0) | 0;
 HEAP32[gb + 93932 >> 2] = i1;
 return;
}

function _HUD_UpdateClientData(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 __ZN4CHud16UpdateClientDataEP13client_data_sf(gb + 46040 | 0, i2, 0.0) | 0;
 return 1;
}

function __Z14IN_ForwardDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94068 | 0);
 __ZN13CHudSpectator17HandleButtonsDownEi(gb + 46040 + 424 | 0, 8);
 return;
}

function __ZN8CShotgun6DeployEv(i1) {
 i1 = i1 | 0;
 return __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii(i1, gb + 44356 | 0, 0, 6, 0, 0, 0) | 0;
}

function __ZN8CCrowbar6DeployEv(i1) {
 i1 = i1 | 0;
 return __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii(i1, gb + 44008 | 0, 0, 1, 0, 0, 0) | 0;
}

function __Z17R_StudioDrawModeli(i1) {
 i1 = i1 | 0;
 return mftCall_iii(HEAP32[(HEAP32[gb + 640 >> 2] | 0) + 12 >> 2] | 0, gb + 640 | 0, i1 | 0) | 0;
}

function __Z14IN_MoverightUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94128 | 0);
 __ZN13CHudSpectator15HandleButtonsUpEi(gb + 46040 + 424 | 0, 1024);
 return;
}

function __Z13IN_AttackDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94188 | 0);
 __ZN13CHudSpectator17HandleButtonsDownEi(gb + 46040 + 424 | 0, 1);
 return;
}

function b13(i1, i2, d3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 abort(13);
}

function __ZN12CBaseMonster10BuildRouteERK6VectoriP11CBaseEntity(i3, i4, i1, i2) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return 0;
}

function __Z11IN_BackDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94080 | 0);
 __ZN13CHudSpectator17HandleButtonsDownEi(gb + 46040 + 424 | 0, 16);
 return;
}

function _HUD_DirectorMessage(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZN13CHudSpectator15DirectorMessageEiPv(gb + 46040 + 424 | 0, i1, i2);
 return;
}

function stackAlloc(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + i1 | 0;
 STACKTOP = STACKTOP + 15 & -16;
 return i2 | 0;
}

function __ZN6CGlock6DeployEv(i1) {
 i1 = i1 | 0;
 return __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii(i1, gb + 44127 | 0, 0, 7, 0, 0, 0) | 0;
}

function __Z13IN_MoveleftUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94116 | 0);
 __ZN13CHudSpectator15HandleButtonsUpEi(gb + 46040 + 424 | 0, 512);
 return;
}

function __Z11IN_JumpDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94176 | 0);
 __ZN13CHudSpectator17HandleButtonsDownEi(gb + 46040 + 424 | 0, 2);
 return;
}

function __Z11IN_DuckDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94236 | 0);
 __ZN13CHudSpectator17HandleButtonsDownEi(gb + 46040 + 424 | 0, 4);
 return;
}

function __Z10IN_UseDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94164 | 0);
 __ZN13CHudSpectator17HandleButtonsDownEi(gb + 46040 + 424 | 0, 32);
 return;
}

function __ZN8CHudAmmo9SlotInputEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZN15WeaponsResource10SelectSlotEiii(gb + 81328 | 0, i1, 0, 1);
 return;
}

function __ZN5CHgun6DeployEv(i1) {
 i1 = i1 | 0;
 return __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii(i1, gb + 44211 | 0, 0, 4, 0, 0, 0) | 0;
}

function __ZN12CBaseMonster9FindCoverE6VectorS0_ff(i3, i4, i5, d2, d1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d2 = +d2;
 d1 = +d1;
 return 0;
}

function __ZN4CMP56DeployEv(i1) {
 i1 = i1 | 0;
 return __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii(i1, gb + 44248 | 0, 0, 4, 0, 0, 0) | 0;
}

function __ZN11CBasePlayer13StartSneakingEv(i1) {
 i1 = i1 | 0;
 HEAPF32[i1 + 1168 >> 2] = +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2] + -1.0;
 return;
}

function _Q_log2(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = 0;
 while (1) {
  i1 = i1 >> 1;
  if (!i1) break; else i2 = i2 + 1 | 0;
 }
 return i2 | 0;
}

function __ZN12CBaseMonster11MoveExecuteEP11CBaseEntityRK6Vectorf(i3, i2, i4, d1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 d1 = +d1;
 return;
}

function __ZN11CBasePlayer12StopSneakingEv(i1) {
 i1 = i1 | 0;
 HEAPF32[i1 + 1168 >> 2] = +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2] + 30.0;
 return;
}

function __Z17CAM_ToFirstPersonv() {
 HEAP32[gb + 93828 >> 2] = 0;
 mftCall_vid(HEAP32[gb + 92340 + 148 >> 2] | 0, gb + 42163 | 0, 0.0);
 return;
}

function __Z16__CmdFunc_Slot10v() {
 if (HEAP32[gb + 46040 + 6204 >> 2] | 0) __ZN8CHudMenu14SelectMenuItemEi(gb + 46040 + 6184 | 0, 10);
 return;
}

function __Z12IN_ForwardUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94068 | 0);
 __ZN13CHudSpectator15HandleButtonsUpEi(gb + 46040 + 424 | 0, 8);
 return;
}

function __ZN24CGameStudioModelRendererC2Ev(i1) {
 i1 = i1 | 0;
 __ZN20CStudioModelRendererC2Ev(i1);
 HEAP32[i1 >> 2] = gb + 35100 + 8;
 return;
}

function __Z18DBG_AssertFunctioniPKcS0_iS0_(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 return;
}

function b8(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 abort(8);
 return 0;
}

function b15(i1, i2, d3, d4, d5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 i6 = i6 | 0;
 i7 = i7 | 0;
 abort(15);
}

function __ZN6CGlock15SecondaryAttackEv(i1) {
 i1 = i1 | 0;
 __ZN6CGlock9GlockFireEffi(i1, .10000000149011612, .20000000298023224, 0);
 return;
}

function __Z15__CmdFunc_Slot9v() {
 if (HEAP32[gb + 46040 + 6204 >> 2] | 0) __ZN8CHudMenu14SelectMenuItemEi(gb + 46040 + 6184 | 0, 9);
 return;
}

function __Z15__CmdFunc_Slot8v() {
 if (HEAP32[gb + 46040 + 6204 >> 2] | 0) __ZN8CHudMenu14SelectMenuItemEi(gb + 46040 + 6184 | 0, 8);
 return;
}

function __Z15__CmdFunc_Slot7v() {
 if (HEAP32[gb + 46040 + 6204 >> 2] | 0) __ZN8CHudMenu14SelectMenuItemEi(gb + 46040 + 6184 | 0, 7);
 return;
}

function b20(i1, i2, i3, d4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 i5 = i5 | 0;
 i6 = i6 | 0;
 abort(20);
 return 0;
}

function __ZN6CGlock13PrimaryAttackEv(i1) {
 i1 = i1 | 0;
 __ZN6CGlock9GlockFireEffi(i1, .009999999776482582, .30000001192092896, 1);
 return;
}

function __ZN11CBaseEntity6CreateEPcRK6VectorS3_P7edict_s(i2, i4, i3, i1) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 return 0;
}

function __Z9IN_BackUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94080 | 0);
 __ZN13CHudSpectator15HandleButtonsUpEi(gb + 46040 + 424 | 0, 16);
 return;
}

function __Z15Game_AddObjectsv() {
 if ((HEAP32[gb + 56820 >> 2] | 0) != 0 & (HEAP32[gb + 56824 >> 2] | 0) != 0) __Z11UpdateBeamsv();
 return;
}

function __ZN12CBaseMonster10MoveToNodeE8ActivityfRK6Vector(i3, i2, d4, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 i1 = i1 | 0;
 return 0;
}

function _HUD_ConnectionlessPacket(i2, i1, i3, i4) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 HEAP32[i4 >> 2] = 0;
 return 0;
}

function __ZN17CBasePlayerWeapon16AddSecondaryAmmoEiPci(i4, i1, i3, i2) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 return 1;
}

function __ZN14CBaseAnimating13GetAttachmentEiR6VectorS1_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 return;
}

function __ZN12CBaseMonster12PlaySentenceEPKcfff(i4, i3, d2, d5, d1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 d2 = +d2;
 d5 = +d5;
 d1 = +d1;
 return;
}

function __ZN11CBasePlayer10IsSneakingEv(i1) {
 i1 = i1 | 0;
 return +HEAPF32[i1 + 1168 >> 2] <= +HEAPF32[HEAP32[gb + 57604 >> 2] >> 2] | 0;
}

function __Z10RandomLongii(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return mftCall_iii(HEAP32[gb + 92340 + 272 >> 2] | 0, i1 | 0, i2 | 0) | 0;
}

function __ZN8CGrenade10ShootTimedEP9entvars_s6VectorS2_f(i1, i3, i4, d2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d2 = +d2;
 return 0;
}

function __ZN14CBaseAnimating15GetAutomovementER6VectorS1_f(i4, i3, i1, d2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 return;
}

function __Z10EjectBrassRK6VectorS1_fii(i4, i5, d2, i1, i3) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 d2 = +d2;
 i1 = i1 | 0;
 i3 = i3 | 0;
 return;
}

function __ZN14CBaseAnimating14FindTransitionEiiPi(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return -1;
}

function __ZN12CBaseMonster8DropItemEPcRK6VectorS3_(i2, i1, i4, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 return 0;
}

function __ZN8CSatchel15SecondaryAttackEv(i1) {
 i1 = i1 | 0;
 if ((HEAP32[i1 + 88 >> 2] | 0) != 2) __ZN8CSatchel5ThrowEv(i1);
 return;
}

function __ZN12CBaseMonster20CheckTraceHullAttackEfii(i4, d1, i2, i3) {
 i4 = i4 | 0;
 d1 = +d1;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return 0;
}

function __Z14AddMultiDamageP9entvars_sP11CBaseEntityfi(i4, i3, d2, i1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 d2 = +d2;
 i1 = i1 | 0;
 return;
}

function __ZN8CSatchel12AddDuplicateEP15CBasePlayerItem(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __Z14bIsMultiplayerv() | 0;
 return 0;
}

function __ZN8CHudAmmo13UserCmd_Slot6Ev(i1) {
 i1 = i1 | 0;
 __ZN15WeaponsResource10SelectSlotEiii(gb + 81328 | 0, 5, 0, 1);
 return;
}

function __ZN8CHudAmmo13UserCmd_Slot5Ev(i1) {
 i1 = i1 | 0;
 __ZN15WeaponsResource10SelectSlotEiii(gb + 81328 | 0, 4, 0, 1);
 return;
}

function __ZN8CHudAmmo13UserCmd_Slot4Ev(i1) {
 i1 = i1 | 0;
 __ZN15WeaponsResource10SelectSlotEiii(gb + 81328 | 0, 3, 0, 1);
 return;
}

function __ZN8CHudAmmo13UserCmd_Slot3Ev(i1) {
 i1 = i1 | 0;
 __ZN15WeaponsResource10SelectSlotEiii(gb + 81328 | 0, 2, 0, 1);
 return;
}

function __ZN8CHudAmmo13UserCmd_Slot2Ev(i1) {
 i1 = i1 | 0;
 __ZN15WeaponsResource10SelectSlotEiii(gb + 81328 | 0, 1, 0, 1);
 return;
}

function __ZN8CHudAmmo13UserCmd_Slot1Ev(i1) {
 i1 = i1 | 0;
 __ZN15WeaponsResource10SelectSlotEiii(gb + 81328 | 0, 0, 0, 1);
 return;
}

function __Z15CAM_EndDistancev() {
 HEAP32[gb + 93840 >> 2] = 0;
 HEAP32[gb + 93832 >> 2] = 0;
 HEAP32[gb + 93836 >> 2] = 0;
 return;
}

function __ZN14CSatchelCharge11BounceSoundEv(i1) {
 i1 = i1 | 0;
 mftCall_iii(HEAP32[gb + 56972 + 360 >> 2] | 0, 0, 2) | 0;
 return;
}

function _PM_ResetStuckOffsets(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[gb + 121164 + (i1 << 3) + (i2 << 2) >> 2] = 0;
 return;
}

function b24(i1, i2, i3, i4, i5, d6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 abort(24);
}

function b19(i1, d2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 abort(19);
}

function b11(i1, i2, d3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 abort(11);
}

function _PM_SplineFraction(d2, d1) {
 d2 = +d2;
 d1 = +d1;
 return +(d2 * d1 * d2 * d1 * 3.0 - d2 * d1 * d2 * d1 * d2 * d1 * 2.0);
}

function __ZN9CSoundEnt11InsertSoundEiRK6Vectorif(i2, i4, i3, d1) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 d1 = +d1;
 return;
}

function __ZN11CBasePlayer13SetSuitUpdateEPcii(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function b47(i1, i2, d3, d4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 i5 = i5 | 0;
 i6 = i6 | 0;
 abort(47);
}

function b17(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 abort(17);
 return 0;
}

function __ZN5CEgon12UpdateEffectERK6VectorS2_f(i3, i2, i1, d4) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 d4 = +d4;
 return;
}

function __ZN11CBaseEntity8KeyValueEP14KeyValueData_s(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 + 12 >> 2] = 0;
 return;
}

function __ZN12CBaseMonster7IsAliveEv(i1) {
 i1 = i1 | 0;
 return (HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 368 >> 2] | 0) != 2 | 0;
}

function __ZN11CBaseEntity8GiveAmmoEiPci(i4, i1, i3, i2) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 return -1;
}

function __Z15UTIL_BloodDripsRK6VectorS1_ii(i4, i3, i2, i1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 return;
}

function __ZN8CGrenade12ShootContactEP9entvars_s6VectorS2_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return 0;
}

function __ZN12CBaseMonster9PushEnemyEP11CBaseEntityR6Vector(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 return;
}

function __ZN11CBasePlayer8GiveAmmoEiPci(i4, i1, i3, i2) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 return 0;
}

function __Z23UTIL_FindEntityInSphereP11CBaseEntityRK6Vectorf(i2, i3, d1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d1 = +d1;
 return 0;
}

function __ZN14CSatchelCharge10DeactivateEv(i1) {
 i1 = i1 | 0;
 HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 268 >> 2] = 0;
 return;
}

function __ZN14CHudFlashlight5ResetEv(i1) {
 i1 = i1 | 0;
 HEAPF32[i1 + 56 >> 2] = 0.0;
 HEAP32[i1 + 52 >> 2] = 0;
 return;
}

function _HUD_MobilityInterface(i1) {
 i1 = i1 | 0;
 if ((HEAP32[i1 >> 2] | 0) == 2) HEAP32[gb + 92876 >> 2] = i1;
 return;
}

function b4(i1, i2, i3, d4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 i5 = i5 | 0;
 abort(4);
 return 0;
}

function __ZN6CGauss17GetFullChargeTimeEv(i1) {
 i1 = i1 | 0;
 i1 = __Z14bIsMultiplayerv() | 0;
 return +(i1 ? 1.5 : 4.0);
}

function __Z7U_Srandj(i1) {
 i1 = i1 | 0;
 HEAP32[gb + 92908 >> 2] = HEAP32[gb + 33916 + ((i1 & 255) << 2) >> 2];
 return;
}

function b6(i1, i2, i3, d4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 abort(6);
 return 0;
}

function __ZN5CEgon13PrimaryAttackEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 220 >> 2] = 1;
 __ZN5CEgon6AttackEv(i1);
 return;
}

function __ZN12CBaseMonster12CheckAttacksEP11CBaseEntityf(i3, i2, d1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 d1 = +d1;
 return;
}

function __ZN5CEgon7HasAmmoEv(i1) {
 i1 = i1 | 0;
 return (HEAP32[(HEAP32[i1 + 128 >> 2] | 0) + 68 >> 2] | 0) > 0 | 0;
}

function __ZN11CBaseEntity12ShouldToggleE8USE_TYPEi(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 return 0;
}

function __ZN12CBaseMonster14InsertWaypointE6Vectori(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 return;
}

function __ZN11CBasePlayer13StartObserverE6VectorS0_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return;
}

function __Z12R_StudioInitv() {
 mftCall_vi(HEAP32[(HEAP32[gb + 640 >> 2] | 0) + 8 >> 2] | 0, gb + 640 | 0);
 return;
}

function __ZN8CHudMenu5ResetEv(i1) {
 i1 = i1 | 0;
 HEAP8[gb + 125465 >> 0] = 0;
 HEAP32[i1 + 32 >> 2] = 0;
 return;
}

function __ZN7CSprite12SpriteCreateEPKcRK6Vectori(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 return 0;
}

function __Z11V_PunchAxisif(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 HEAPF32[gb + 116304 + (i1 << 2) >> 2] = d2;
 return;
}

function _HUD_Redraw(d2, i1) {
 d2 = +d2;
 i1 = i1 | 0;
 __ZN4CHud6RedrawEfi(gb + 46040 | 0, d2, i1) | 0;
 return 1;
}

function __ZN12CBaseMonster11MoveToEnemyE8Activityf(i2, i1, d3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 d3 = +d3;
 return 0;
}

function setThrew(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!__THREW__) {
  __THREW__ = i1;
  threwValue = i2;
 }
}

function b1(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 abort(1);
}

function __Z12UTIL_SetSizeP9entvars_sRK6VectorS3_(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 return;
}

function b48(i1, d2, i3, i4, i5) {
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 abort(48);
}

function b31(i1, i2, d3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 i5 = i5 | 0;
 abort(31);
}

function b30(i1, i2, i3, i4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 abort(30);
}

function __ZN15CHudDeathNotice11InitHUDDataEv(i1) {
 i1 = i1 | 0;
 _memset(gb + 92912 | 0, 0, 780) | 0;
 return;
}

function b26(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 abort(26);
 return 0.0;
}

function __ZN14CBaseAnimating11SetBlendingEif(i3, i2, d1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 d1 = +d1;
 return 0.0;
}

function __ZN12CBaseMonster17CheckRangeAttack2Eff(i3, d2, d1) {
 i3 = i3 | 0;
 d2 = +d2;
 d1 = +d1;
 return 0;
}

function __Z9GetEntityi(i1) {
 i1 = i1 | 0;
 return mftCall_ii(HEAP32[gb + 92340 + 212 >> 2] | 0, i1 | 0) | 0;
}

function b41(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 abort(41);
 return 0;
}

function __ZN17CBasePlayerWeapon15ResetEmptySoundEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 140 >> 2] = 1;
 return;
}

function __Z20__CmdFunc_PrevWeaponv() {
 __ZN8CHudAmmo18UserCmd_PrevWeaponEv(gb + 46040 + 128 | 0);
 return;
}

function __Z20__CmdFunc_NextWeaponv() {
 __ZN8CHudAmmo18UserCmd_NextWeaponEv(gb + 46040 + 128 | 0);
 return;
}

function __Z15__CmdFunc_Slot6v() {
 __ZN15WeaponsResource10SelectSlotEiii(gb + 81328 | 0, 5, 0, 1);
 return;
}

function __Z15__CmdFunc_Slot5v() {
 __ZN15WeaponsResource10SelectSlotEiii(gb + 81328 | 0, 4, 0, 1);
 return;
}

function __Z15__CmdFunc_Slot4v() {
 __ZN15WeaponsResource10SelectSlotEiii(gb + 81328 | 0, 3, 0, 1);
 return;
}

function __Z15__CmdFunc_Slot3v() {
 __ZN15WeaponsResource10SelectSlotEiii(gb + 81328 | 0, 2, 0, 1);
 return;
}

function __Z15__CmdFunc_Slot2v() {
 __ZN15WeaponsResource10SelectSlotEiii(gb + 81328 | 0, 1, 0, 1);
 return;
}

function __Z15__CmdFunc_Slot1v() {
 __ZN15WeaponsResource10SelectSlotEiii(gb + 81328 | 0, 0, 0, 1);
 return;
}

function __Z11IN_AttackUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94188 | 0);
 HEAP32[gb + 93936 >> 2] = 0;
 return;
}

function b33(i1, i2, d3, d4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 abort(33);
}

function _anglemod(d1) {
 d1 = +d1;
 return +(+(~~(d1 * 182.04444444444445) & 65535 | 0) * .0054931640625);
}

function __ZN14CHudScoreboard18UserCmd_ShowScoresEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 36 >> 2] = 1;
 return;
}

function __ZN14CHudScoreboard18UserCmd_HideScoresEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 36 >> 2] = 0;
 return;
}

function _weapon_handgrenade(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI12CHandGrenadeEPT_S2_(i1) | 0;
 return;
}

function _ammo_ARgrenades(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI15CMP5AmmoGrenadeEPT_S2_(i1) | 0;
 return;
}

function __ZN8CGrenade7ExplodeE6VectorS0_(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function _HUD_DrawNormalTriangles() {
 __ZN13CHudSpectator12DrawOverviewEv(gb + 46040 + 424 | 0);
 return;
}

function _monster_satchel(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI14CSatchelChargeEPT_S2_(i1) | 0;
 return;
}

function __ZN11CBasePlayer10TakeHealthEfi(i3, d2, i1) {
 i3 = i3 | 0;
 d2 = +d2;
 i1 = i1 | 0;
 return 0;
}

function __ZN11CBaseEntity10TakeHealthEfi(i3, d2, i1) {
 i3 = i3 | 0;
 d2 = +d2;
 i1 = i1 | 0;
 return 1;
}

function __ZN12CHandGrenade10CanHolsterEv(i1) {
 i1 = i1 | 0;
 return +HEAPF32[i1 + 80 >> 2] == 0.0 | 0;
}

function __ZN12CBaseMonster8IsMovingEv(i1) {
 i1 = i1 | 0;
 return (HEAP32[i1 + 532 >> 2] | 0) != 0 | 0;
}

function __ZN11CBasePlayer9AddPointsEii(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 return;
}

function __Z16CAM_EndMouseMovev() {
 HEAP32[gb + 93832 >> 2] = 0;
 HEAP32[gb + 93836 >> 2] = 0;
 return;
}

function _ammo_crossbow(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI13CCrossbowAmmoEPT_S2_(i1) | 0;
 return;
}

function __ZN12CBaseMonster13FLSoundVolumeEP6CSound(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return 0.0;
}

function __Z15__MsgFunc_FeignPKciPv(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return 0;
}

function __Z14bIsMultiplayerv() {
 return (mftCall_i(HEAP32[gb + 92340 + 144 >> 2] | 0) | 0) != 1 | 0;
}

function _ammo_buckshot(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI12CShotgunAmmoEPT_S2_(i1) | 0;
 return;
}

function _ammo_gaussclip(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI10CGaussAmmoEPT_S2_(i1) | 0;
 return;
}

function _ammo_9mmbox(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI13CMP5ChainammoEPT_S2_(i1) | 0;
 return;
}

function __ZN8CCrowbar10SwingAgainEv(i1) {
 i1 = i1 | 0;
 __ZN8CCrowbar5SwingEi(i1, 0) | 0;
 return;
}

function establishStackSpace(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 STACKTOP = i1;
 STACK_MAX = i2;
}

function _weapon_tripmine(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI9CTripmineEPT_S2_(i1) | 0;
 return;
}

function _weapon_crossbow(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI9CCrossbowEPT_S2_(i1) | 0;
 return;
}

function __ZN17CHudAmmoSecondary5ResetEv(i1) {
 i1 = i1 | 0;
 HEAPF32[i1 + 40 >> 2] = 0.0;
 return;
}

function __ZN14CBaseAnimating18StudioFrameAdvanceEf(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 return 0.0;
}

function __ZN12CBaseMonster13FGetNodeRouteE6Vector(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return 1;
}

function __ZN11CBaseToggle14GetToggleStateEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 128 >> 2] | 0;
}

function b49(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 abort(49);
}

function _ammo_9mmclip(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI10CGlockAmmoEPT_S2_(i1) | 0;
 return;
}

function _ammo_9mmAR(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI12CMP5AmmoClipEPT_S2_(i1) | 0;
 return;
}

function _weapon_shotgun(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI8CShotgunEPT_S2_(i1) | 0;
 return;
}

function _weapon_satchel(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI8CSatchelEPT_S2_(i1) | 0;
 return;
}

function _weapon_crowbar(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI8CCrowbarEPT_S2_(i1) | 0;
 return;
}

function _ammo_egonclip(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI9CEgonAmmoEPT_S2_(i1) | 0;
 return;
}

function _PM_InWater() {
 return (HEAP32[(HEAP32[gb + 121136 >> 2] | 0) + 228 >> 2] | 0) > 1 | 0;
}

function _weapon_hornetgun(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI5CHgunEPT_S2_(i1) | 0;
 return;
}

function __ZN12CBaseMonster10BloodColorEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 632 >> 2] | 0;
}

function b42(i1, i2, i3, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 abort(42);
}

function _ammo_rpgclip(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI8CRpgAmmoEPT_S2_(i1) | 0;
 return;
}

function _ammo_357(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI11CPythonAmmoEPT_S2_(i1) | 0;
 return;
}

function __ZN4CMP518SecondaryAmmoIndexEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 172 >> 2] | 0;
}

function __Z10SpawnBlood6Vectorif(i3, i1, d2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 return;
}

function _weapon_snark(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI7CSqueakEPT_S2_(i1) | 0;
 return;
}

function _weapon_glock(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI6CGlockEPT_S2_(i1) | 0;
 return;
}

function _weapon_gauss(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI6CGaussEPT_S2_(i1) | 0;
 return;
}

function __ZN11CBaseToggle8GetDelayEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF32[i1 + 140 >> 2]);
}

function _weapon_357(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI7CPythonEPT_S2_(i1) | 0;
 return;
}

function __Z16UTIL_VecToAnglesRK6Vector(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 _llvm_trap();
}

function b22(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 abort(22);
 return 0;
}

function _weapon_egon(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI5CEgonEPT_S2_(i1) | 0;
 return;
}

function __ZN9CHudTrain7VidInitEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 20 >> 2] = 0;
 return 1;
}

function __ZN4CHud14GetSensitivityEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF32[i1 + 24 >> 2]);
}

function __ZN11CBaseEntity11DamageDecalEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return -1;
}

function __ZN7CSprite6ExpandEff(i3, d2, d1) {
 i3 = i3 | 0;
 d2 = +d2;
 d1 = +d1;
 return;
}

function __ZN12CBaseMonster9ChangeYawEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return 0.0;
}

function __Z13GetViewEntityv() {
 return mftCall_i(HEAP32[gb + 92340 + 208 >> 2] | 0) | 0;
}

function _HUD_PlayerMove(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 _PM_Move(i1, i2);
 return;
}

function _HUD_Key_Event(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return 1;
}

function _weapon_rpg(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI4CRpgEPT_S2_(i1) | 0;
 return;
}

function _weapon_mp5(i1) {
 i1 = i1 | 0;
 __Z11GetClassPtrI4CMP5EPT_S2_(i1) | 0;
 return;
}

function __Z15READ_HIRESANGLEv() {
 return +(+(__Z10READ_SHORTv() | 0) * .0054931640625);
}

function b14(i1, d2, i3) {
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 abort(14);
 return 0;
}

function _HUD_PlayerMoveTexture(i1) {
 i1 = i1 | 0;
 return _PM_FindTextureType(i1) | 0;
}

function __ZN5CEgon16GetPulseIntervalEv(i1) {
 i1 = i1 | 0;
 return .10000000149011612;
}

function __ZN10CBaseDelay4SaveER5CSave(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return 1;
}

function b43(d1, d2, d3, d4) {
 d1 = +d1;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 abort(43);
}

function __Z17CAM_PitchDownDownv() {
 __Z7KeyDownP9kbutton_s(gb + 93872 | 0);
 return;
}

function b12(i1, d2, d3) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 abort(12);
 return 0;
}

function __Z20__CmdFunc_ShowScoresv() {
 HEAP32[gb + 46040 + 6532 >> 2] = 1;
 return;
}

function __Z20__CmdFunc_HideScoresv() {
 HEAP32[gb + 46040 + 6532 >> 2] = 0;
 return;
}

function __Z16CAM_YawRightDownv() {
 __Z7KeyDownP9kbutton_s(gb + 93896 | 0);
 return;
}

function _HUD_Init() {
 __Z9InitInputv();
 __ZN4CHud4InitEv(gb + 46040 | 0);
 return;
}

function __Z15IN_LookdownDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94104 | 0);
 return;
}

function __Z15HUD_SetMaxSpeedPK7edict_sf(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 return;
}

function __Z15CAM_YawLeftDownv() {
 __Z7KeyDownP9kbutton_s(gb + 93884 | 0);
 return;
}

function __Z15CAM_PitchUpDownv() {
 __Z7KeyDownP9kbutton_s(gb + 93860 | 0);
 return;
}

function __ZN12CBaseMonster18HearingSensitivityEv(i1) {
 i1 = i1 | 0;
 return 1.0;
}

function __Z17EV_TFC_IsAllyTeamii(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return 0;
}

function __Z15CAM_PitchDownUpv() {
 __Z5KeyUpP9kbutton_s(gb + 93872 | 0);
 return;
}

function __Z13IN_StrafeDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94140 | 0);
 return;
}

function __Z13IN_ReloadDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94248 | 0);
 return;
}

function __Z13IN_LookupDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94092 | 0);
 return;
}

function __Z14CAM_YawRightUpv() {
 __Z5KeyUpP9kbutton_s(gb + 93896 | 0);
 return;
}

function __Z12IN_SpeedDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94152 | 0);
 return;
}

function __Z12IN_ScoreDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94272 | 0);
 return;
}

function __Z12IN_RightDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94056 | 0);
 return;
}

function __Z12IN_MLookDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94008 | 0);
 return;
}

function __Z12IN_KLookDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94020 | 0);
 return;
}

function __Z12IN_JLookDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94032 | 0);
 return;
}

function __Z12IN_GraphDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94296 | 0);
 return;
}

function __Z12IN_BreakDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94284 | 0);
 return;
}

function b39(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 abort(39);
}

function __ZN12CHudOverview4DrawEf(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 return 1;
}

function __ZN11CBasePlayer6TeamIDEv(i1) {
 i1 = i1 | 0;
 return gb + 132760 | 0;
}

function __Z9CL_IsDeadv() {
 return (HEAP32[gb + 46040 + 188 >> 2] | 0) < 1 | 0;
}

function __Z20stub_NameForFunctionPv(i1) {
 i1 = i1 | 0;
 return gb + 40167 | 0;
}

function __Z13IN_LookdownUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94104 | 0);
 return;
}

function __Z13CAM_YawLeftUpv() {
 __Z5KeyUpP9kbutton_s(gb + 93884 | 0);
 return;
}

function __Z13CAM_PitchUpUpv() {
 __Z5KeyUpP9kbutton_s(gb + 93860 | 0);
 return;
}

function __Z11IN_LeftDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94044 | 0);
 return;
}

function __Z11IN_DownDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94224 | 0);
 return;
}

function __Z11IN_Alt1Downv() {
 __Z7KeyDownP9kbutton_s(gb + 94260 | 0);
 return;
}

function __Z11CAM_OutDownv() {
 __Z7KeyDownP9kbutton_s(gb + 93920 | 0);
 return;
}

function __ZN12CBaseMonster16GetDeathActivityEv(i1) {
 i1 = i1 | 0;
 return 66;
}

function __Z12IN_Attack2Upv() {
 __Z5KeyUpP9kbutton_s(gb + 94200 | 0);
 return;
}

function __Z10CAM_InDownv() {
 __Z7KeyDownP9kbutton_s(gb + 93908 | 0);
 return;
}

function __Z14UTIL_LogPrintfPcz(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __Z11IN_StrafeUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94140 | 0);
 return;
}

function __Z11IN_ReloadUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94248 | 0);
 return;
}

function __Z11IN_LookupUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94092 | 0);
 return;
}

function b28(i1, i2, d3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 abort(28);
}

function b18(i1, d2, i3) {
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 abort(18);
}

function __ZN12CBaseMonster3EatEf(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 return;
}

function __ZN12CBaseMonster11CoverRadiusEv(i1) {
 i1 = i1 | 0;
 return 784.0;
}

function __Z9IN_UpDownv() {
 __Z7KeyDownP9kbutton_s(gb + 94212 | 0);
 return;
}

function __Z10IN_SpeedUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94152 | 0);
 return;
}

function __Z10IN_ScoreUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94272 | 0);
 return;
}

function __Z10IN_RightUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94056 | 0);
 return;
}

function __Z10IN_MLookUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94008 | 0);
 return;
}

function __Z10IN_KLookUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94020 | 0);
 return;
}

function __Z10IN_JLookUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94032 | 0);
 return;
}

function __Z10IN_GraphUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94296 | 0);
 return;
}

function __Z10IN_BreakUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94284 | 0);
 return;
}

function __ZN15CBasePlayerAmmo7RespawnEv(i1) {
 i1 = i1 | 0;
 return i1 | 0;
}

function b36(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 abort(36);
 return 0.0;
}

function __ZN8CHudBase4DrawEf(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 return 0;
}

function __Z9IN_LeftUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94044 | 0);
 return;
}

function __Z9IN_JumpUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94176 | 0);
 return;
}

function __Z9IN_DuckUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94236 | 0);
 return;
}

function __Z9IN_DownUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94224 | 0);
 return;
}

function __Z9IN_Alt1Upv() {
 __Z5KeyUpP9kbutton_s(gb + 94260 | 0);
 return;
}

function __Z9CAM_OutUpv() {
 __Z5KeyUpP9kbutton_s(gb + 93920 | 0);
 return;
}

function __Z10TrainSpeedii(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return 0;
}

function b21(i1, d2, d3) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 abort(21);
}

function __Z8IN_UseUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94164 | 0);
 return;
}

function __Z8CAM_InUpv() {
 __Z5KeyUpP9kbutton_s(gb + 93908 | 0);
 return;
}

function __Z10READ_COORDv() {
 return +(+(__Z10READ_SHORTv() | 0) * .125);
}

function _HUD_VidInit() {
 __ZN4CHud7VidInitEv(gb + 46040 | 0);
 return 1;
}

function b35(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 abort(35);
 return 0;
}

function __ZN8CHudMenuD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1 | 0);
 return;
}

function __Z7IN_UpUpv() {
 __Z5KeyUpP9kbutton_s(gb + 94212 | 0);
 return;
}

function __Z17HUD_GetWeaponAnimv() {
 return HEAP32[gb + 92904 >> 2] | 0;
}

function __Z15V_ResetChaseCamv() {
 HEAP32[gb + 36084 >> 2] = 1;
 return;
}

function _HUD_VoiceStatus(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return;
}

function _HUD_PlayerMoveInit(i1) {
 i1 = i1 | 0;
 _PM_Init(i1);
 return;
}

function b32(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 abort(32);
 return 0;
}

function __ZN11CBaseEntity8GetDelayEv(i1) {
 i1 = i1 | 0;
 return 0.0;
}

function _HUD_Reset() {
 __ZN4CHud7VidInitEv(gb + 46040 | 0);
 return;
}

function b27(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 abort(27);
 return 0.0;
}

function b2(d1, d2, d3) {
 d1 = +d1;
 d2 = +d2;
 d3 = +d3;
 abort(2);
}

function __ZN8CGrenade10BloodColorEv(i1) {
 i1 = i1 | 0;
 return -1;
}

function __Z13EV_HookEventsv() {
 __Z15Game_HookEventsv();
 return;
}

function _HUD_CreateEntities() {
 __Z15Game_AddObjectsv();
 return;
}

function __Z9IN_Cancelv() {
 HEAP32[gb + 93936 >> 2] = 1;
 return;
}

function __ZN7CSqueak9iItemSlotEv(i1) {
 i1 = i1 | 0;
 return 5;
}

function __ZN6CGlock9iItemSlotEv(i1) {
 i1 = i1 | 0;
 return 2;
}

function __ZN4CRpg9iItemSlotEv(i1) {
 i1 = i1 | 0;
 return 4;
}

function __ZN4CMP59iItemSlotEv(i1) {
 i1 = i1 | 0;
 return 3;
}

function b7(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 abort(7);
}

function __Z14ShouldSimplifyi(i1) {
 i1 = i1 | 0;
 return 1;
}

function b46(d1, i2) {
 d1 = +d1;
 i2 = i2 | 0;
 abort(46);
}

function __Z9READ_WORDv() {
 return __Z10READ_SHORTv() | 0;
}

function _HUD_GetUserEntity(i1) {
 i1 = i1 | 0;
 return 0;
}

function stackRestore(i1) {
 i1 = i1 | 0;
 STACKTOP = i1;
}

function b3(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 abort(3);
}

function b29(i1) {
 i1 = i1 | 0;
 abort(29);
 return 0.0;
}

function _HUD_Shutdown() {
 __Z11KB_Shutdownv();
 return;
}

function b44(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 abort(44);
}

function __ZN8CHudBaseD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function b9(i1) {
 i1 = i1 | 0;
 abort(9);
 return 0;
}

function __Z19UTIL_WeaponTimeBasev() {
 return 0.0;
}

function stackSave() {
 return STACKTOP | 0;
}

function b5(i1) {
 i1 = i1 | 0;
 abort(5);
}

function b38() {
 abort(38);
 return 0.0;
}

function b40() {
 abort(40);
 return 0;
}

function _IN_Accumulate() {
 return;
}

function b45() {
 abort(45);
}

// EMSCRIPTEN_END_FUNCS

 var FUNCTION_TABLE_iiiiiiii = [ b0 ];
 var FUNCTION_TABLE_viiiii = [ b1 ];
 var FUNCTION_TABLE_vddd = [ b2 ];
 var FUNCTION_TABLE_vid = [ b3, __ZN12CBaseMonster3EatEf, __Z15HUD_SetMaxSpeedPK7edict_sf, b3 ];
 var FUNCTION_TABLE_iiiidi = [ b4, __ZN11CBaseEntity10TakeDamageEP9entvars_sS1_fi, __ZN11CBasePlayer10TakeDamageEP9entvars_sS1_fi, __ZN11CBasePlayer10TakeDamageEP9entvars_sS1_fi ];
 var FUNCTION_TABLE_vi = [ b5, __ZN9CCrossbow5SpawnEv, __ZN9CCrossbow8PrecacheEv, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN11CBaseEntity5ThinkEv, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN17CBasePlayerWeapon13ItemPostFrameEv, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN17CBasePlayerWeapon15ResetEmptySoundEv, __ZN9CCrossbow13PrimaryAttackEv, __ZN9CCrossbow15SecondaryAttackEv, __ZN9CCrossbow6ReloadEv, __ZN9CCrossbow10WeaponIdleEv, __ZN8CHudBaseD2Ev, __ZN13CCrossbowAmmo5SpawnEv, __ZN13CCrossbowAmmo8PrecacheEv, __ZN8CHudBaseD2Ev, __ZN8CCrowbar5SpawnEv, __ZN8CCrowbar8PrecacheEv, __ZN8CCrowbar13PrimaryAttackEv, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN5CEgon5SpawnEv, __ZN5CEgon8PrecacheEv, __ZN5CEgon13PrimaryAttackEv, __ZN5CEgon10WeaponIdleEv, __ZN9CEgonAmmo5SpawnEv, __ZN9CEgonAmmo8PrecacheEv, __ZN6CGauss5SpawnEv, __ZN6CGauss8PrecacheEv, __ZN6CGauss13PrimaryAttackEv, __ZN6CGauss15SecondaryAttackEv, __ZN6CGauss10WeaponIdleEv, __ZN10CGaussAmmo5SpawnEv, __ZN10CGaussAmmo8PrecacheEv, __ZN12CHandGrenade5SpawnEv, __ZN12CHandGrenade8PrecacheEv, __ZN12CHandGrenade13PrimaryAttackEv, __ZN12CHandGrenade10WeaponIdleEv, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN12CBaseMonster4StopEv, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN11CBasePlayer5SpawnEv, __ZN8CHudBaseD2Ev, __ZN11CBasePlayer13StartSneakingEv, __ZN11CBasePlayer12StopSneakingEv, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, __ZN5CHgun5SpawnEv, __ZN5CHgun8PrecacheEv, __ZN5CHgun13PrimaryAttackEv, __ZN5CHgun15SecondaryAttackEv, __ZN5CHgun6ReloadEv, __ZN5CHgun10WeaponIdleEv, __ZN4CMP55SpawnEv, __ZN4CMP58PrecacheEv, __ZN4CMP513PrimaryAttackEv, __ZN4CMP515SecondaryAttackEv, __ZN4CMP56ReloadEv, __ZN4CMP510WeaponIdleEv, __ZN12CMP5AmmoClip5SpawnEv, __ZN12CMP5AmmoClip8PrecacheEv, __ZN9CEgonAmmo5SpawnEv, __ZN9CEgonAmmo8PrecacheEv, __ZN15CMP5AmmoGrenade5SpawnEv, __ZN15CMP5AmmoGrenade8PrecacheEv, __ZN7CPython5SpawnEv, __ZN7CPython8PrecacheEv, __ZN7CPython13PrimaryAttackEv, __ZN7CPython15SecondaryAttackEv, __ZN7CPython6ReloadEv, __ZN7CPython10WeaponIdleEv, __ZN11CPythonAmmo5SpawnEv, __ZN11CPythonAmmo8PrecacheEv, __ZN4CRpg5SpawnEv, __ZN4CRpg8PrecacheEv, __ZN4CRpg13PrimaryAttackEv, __ZN4CRpg15SecondaryAttackEv, __ZN4CRpg6ReloadEv, __ZN4CRpg10WeaponIdleEv, __ZN8CRpgAmmo5SpawnEv, __ZN8CRpgAmmo8PrecacheEv, __ZN14CSatchelCharge5SpawnEv, __ZN14CSatchelCharge8PrecacheEv, __ZN14CSatchelCharge11BounceSoundEv, __ZN8CSatchel5SpawnEv, __ZN8CSatchel8PrecacheEv, __ZN8CSatchel13PrimaryAttackEv, __ZN8CSatchel15SecondaryAttackEv, __ZN8CSatchel10WeaponIdleEv, __ZN8CShotgun5SpawnEv, __ZN8CShotgun8PrecacheEv, __ZN8CShotgun13PrimaryAttackEv, __ZN8CShotgun15SecondaryAttackEv, __ZN8CShotgun6ReloadEv, __ZN8CShotgun10WeaponIdleEv, __ZN12CShotgunAmmo5SpawnEv, __ZN12CShotgunAmmo8PrecacheEv, __ZN7CSqueak5SpawnEv, __ZN7CSqueak8PrecacheEv, __ZN7CSqueak13PrimaryAttackEv, __ZN8CHudBaseD2Ev, __ZN7CSqueak10WeaponIdleEv, __ZN9CTripmine5SpawnEv, __ZN9CTripmine8PrecacheEv, __ZN9CTripmine21SetObjectCollisionBoxEv, __ZN9CTripmine13PrimaryAttackEv, __ZN9CTripmine10WeaponIdleEv, __ZN6CGlock5SpawnEv, __ZN6CGlock8PrecacheEv, __ZN6CGlock13PrimaryAttackEv, __ZN6CGlock15SecondaryAttackEv, __ZN6CGlock6ReloadEv, __ZN6CGlock10WeaponIdleEv, __ZN10CGlockAmmo5SpawnEv, __ZN10CGlockAmmo8PrecacheEv, __ZN8CHudBaseD2Ev, __ZN8CHudMenuD0Ev, __ZN8CHudAmmo5ThinkEv, __ZN8CHudAmmo5ResetEv, __ZN8CHudBaseD2Ev, __ZN8CHudMenuD0Ev, __ZN8CHudBaseD2Ev, __ZN17CHudAmmoSecondary5ResetEv, __ZN8CHudMenuD0Ev, __ZN8CHudBaseD2Ev, __ZN8CHudMenuD0Ev, __ZN15CHudDeathNotice11InitHUDDataEv, __ZN8CHudMenuD0Ev, __ZN14CHudFlashlight5ResetEv, __ZN8CHudBaseD2Ev, __ZN8CHudMenuD0Ev, __ZN20CStudioModelRenderer4InitEv, __ZN20CStudioModelRenderer16StudioSetupBonesEv, __ZN20CStudioModelRenderer21StudioCalcAttachmentsEv, __ZN20CStudioModelRenderer15StudioSaveBonesEv, __ZN20CStudioModelRenderer17StudioRenderModelEv, __ZN20CStudioModelRenderer17StudioRenderFinalEv, __ZN20CStudioModelRenderer26StudioRenderFinal_SoftwareEv, __ZN20CStudioModelRenderer26StudioRenderFinal_HardwareEv, __ZN8CHudMenuD0Ev, __ZN8CHudMenuD0Ev, __ZN10CHudHealth5ResetEv, __ZN8CHudMenuD0Ev, __ZN13CHudSpectator5ResetEv, __ZN13CHudSpectator11InitHUDDataEv, __ZN8CHudMenuD0Ev, __ZN8CHudMenu5ResetEv, __ZN8CHudMenu11InitHUDDataEv, __ZN8CHudMenuD0Ev, __ZN11CHudMessage5ResetEv, __ZN8CHudMenuD0Ev, __ZN8CHudBaseD2Ev, __ZN8CHudMenuD0Ev, __ZN11CHudSayText11InitHUDDataEv, __ZN8CHudMenuD0Ev, __ZN15CHudStatusIcons5ResetEv, __ZN8CHudMenuD0Ev, __ZN13CHudStatusBar5ResetEv, __ZN8CHudMenuD0Ev, __ZN8CHudMenuD0Ev, __ZN8CHudMenuD0Ev, __ZN8CHudMenuD0Ev, __ZN14CHudScoreboard11InitHUDDataEv, __ZN8CHudMenuD0Ev, __ZN8CHudMOTD5ResetEv, __ZN8CCrowbar10SwingAgainEv, __ZN8CHudBaseD2Ev, __ZN8CHudBaseD2Ev, _EV_FireGlock1, _EV_FireGlock2, _EV_FireShotGunSingle, _EV_FireShotGunDouble, _EV_FireMP5, _EV_FireMP52, _EV_FirePython, _EV_FireGauss, _EV_SpinGauss, _EV_TrainPitchAdjust, _EV_Crowbar, _EV_FireCrossbow, _EV_FireCrossbow2, _EV_FireRpg, _EV_EgonFire, _EV_EgonStop, _EV_HornetGunFire, _EV_TripmineFire, _EV_SnarkFire, __ZN14CSatchelCharge12SatchelThinkEv, __ZN4CHudD2Ev, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5 ];
 var FUNCTION_TABLE_iiiidd = [ b6, __ZN12CBaseMonster9FindCoverE6VectorS0_ff, __ZN12CBaseMonster9FindCoverE6VectorS0_ff, b6 ];
 var FUNCTION_TABLE_vii = [ b7, _HUD_VoiceStatus, _HUD_VoiceStatus, _HUD_VoiceStatus, __ZN11CBaseEntity5TouchEPS_, __ZN11CBaseEntity7BlockedEPS_, __ZN11CBaseEntity6CenterEv, __ZN11CBaseEntity11EyePositionEv, __ZN11CBaseEntity11EyePositionEv, _HUD_VoiceStatus, __ZN9CCrossbow7HolsterEi, _HUD_VoiceStatus, __ZN11CBaseEntity8KeyValueEP14KeyValueData_s, __ZN8CCrowbar7HolsterEi, __ZN5CEgon7HolsterEi, __ZN6CGauss7HolsterEi, __ZN12CHandGrenade7HolsterEi, _HUD_VoiceStatus, _HUD_VoiceStatus, _HUD_VoiceStatus, _HUD_VoiceStatus, _HUD_VoiceStatus, _HUD_VoiceStatus, _HUD_VoiceStatus, _HUD_VoiceStatus, __ZN11CBasePlayer14GetGunPositionEv, _HUD_VoiceStatus, __ZN17CBasePlayerWeapon7HolsterEi, _HUD_VoiceStatus, _HUD_VoiceStatus, __ZN11CBasePlayer14GetGunPositionEv, __ZN5CHgun7HolsterEi, __ZN7CPython7HolsterEi, __ZN4CRpg7HolsterEi, __ZN8CSatchel7HolsterEi, __ZN7CSqueak7HolsterEi, __ZN9CTripmine7HolsterEi, __ZN20CStudioModelRenderer20StudioSetUpTransformEi, __ZN20CStudioModelRenderer16StudioMergeBonesEP7model_s, __ZN20CStudioModelRenderer18StudioEstimateGaitEP14entity_state_s, __ZN20CStudioModelRenderer17StudioProcessGaitEP14entity_state_s, __Z14UTIL_LogPrintfPcz, __ZN14CSatchelCharge12SatchelSlideEP11CBaseEntity, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7 ];
 var FUNCTION_TABLE_iiiiiii = [ b8 ];
 var FUNCTION_TABLE_ii = [ b9, __ZN6CGlock9iItemSlotEv, _HUD_GetUserEntity, __ZN8CGrenade10BloodColorEv, _HUD_GetUserEntity, _HUD_GetUserEntity, _HUD_GetUserEntity, __ZN11CBaseEntity8IsMovingEv, _HUD_GetUserEntity, __ZN11CBasePlayer7IsAliveEv, __ZN11CBaseEntity10IsBSPModelEv, __ZN11CBaseEntity12ReflectGaussEv, __Z14ShouldSimplifyi, _HUD_GetUserEntity, _HUD_GetUserEntity, __ZN11CBasePlayer6TeamIDEv, _HUD_GetUserEntity, _HUD_GetUserEntity, _HUD_GetUserEntity, __ZN11CBaseEntity12IlluminationEv, __ZN17CBasePlayerWeapon9CanDeployEv, __ZN9CCrossbow6DeployEv, __Z14ShouldSimplifyi, __ZN8CGrenade10BloodColorEv, __ZN8CGrenade10BloodColorEv, __ZN15CBasePlayerAmmo7RespawnEv, __ZN4CMP59iItemSlotEv, __ZN17CBasePlayerWeapon9AddWeaponEv, __ZN17CBasePlayerWeapon14PlayEmptySoundEv, __Z14ShouldSimplifyi, _HUD_GetUserEntity, __Z14ShouldSimplifyi, __ZN15CBasePlayerAmmo7RespawnEv, __ZN8CCrowbar6DeployEv, __Z14ShouldSimplifyi, __Z14ShouldSimplifyi, __ZN5CEgon6DeployEv, __ZN4CRpg9iItemSlotEv, __Z14ShouldSimplifyi, __ZN6CGauss6DeployEv, __ZN4CRpg9iItemSlotEv, __Z14ShouldSimplifyi, __ZN12CHandGrenade6DeployEv, __ZN12CHandGrenade10CanHolsterEv, __ZN7CSqueak9iItemSlotEv, __Z14ShouldSimplifyi, _HUD_GetUserEntity, __ZN11CBaseToggle14GetToggleStateEv, __ZN8CGrenade10BloodColorEv, __ZN15CBasePlayerAmmo7RespawnEv, __ZN12CBaseMonster8IsMovingEv, __ZN12CBaseMonster7IsAliveEv, __Z14ShouldSimplifyi, _HUD_GetUserEntity, _HUD_GetUserEntity, __Z14ShouldSimplifyi, _HUD_GetUserEntity, __ZN4CMP59iItemSlotEv, _HUD_GetUserEntity, _HUD_GetUserEntity, _HUD_GetUserEntity, _HUD_GetUserEntity, _HUD_GetUserEntity, _HUD_GetUserEntity, __ZN12CBaseMonster16GetDeathActivityEv, _HUD_GetUserEntity, _HUD_GetUserEntity, __ZN12CBaseMonster10BloodColorEv, __Z14ShouldSimplifyi, _HUD_GetUserEntity, _HUD_GetUserEntity, __Z14ShouldSimplifyi, __ZN8CGrenade10BloodColorEv, __ZN8CGrenade10BloodColorEv, _HUD_GetUserEntity, _HUD_GetUserEntity, _HUD_GetUserEntity, __ZN11CBasePlayer10IsSneakingEv, __ZN11CBasePlayer7IsAliveEv, __Z14ShouldSimplifyi, __Z14ShouldSimplifyi, __ZN11CBasePlayer6TeamIDEv, __Z14ShouldSimplifyi, _HUD_GetUserEntity, _HUD_GetUserEntity, __ZN5CHgun6DeployEv, __ZN4CRpg9iItemSlotEv, __Z14ShouldSimplifyi, __Z14ShouldSimplifyi, __ZN4CMP56DeployEv, __ZN4CMP518SecondaryAmmoIndexEv, __ZN4CMP59iItemSlotEv, __Z14ShouldSimplifyi, __ZN7CPython6DeployEv, __ZN6CGlock9iItemSlotEv, __Z14ShouldSimplifyi, __ZN4CRpg6DeployEv, __ZN4CRpg10CanHolsterEv, __ZN4CRpg9iItemSlotEv, __Z14ShouldSimplifyi, __Z14ShouldSimplifyi, __ZN8CSatchel9IsUseableEv, __ZN8CSatchel6DeployEv, __ZN7CSqueak9iItemSlotEv, __ZN8CSatchel9IsUseableEv, __Z14ShouldSimplifyi, __ZN8CShotgun6DeployEv, __ZN4CMP59iItemSlotEv, __Z14ShouldSimplifyi, __ZN7CSqueak6DeployEv, __ZN7CSqueak9iItemSlotEv, __Z14ShouldSimplifyi, __ZN9CTripmine6DeployEv, __ZN7CSqueak9iItemSlotEv, __Z14ShouldSimplifyi, __ZN6CGlock6DeployEv, __ZN6CGlock9iItemSlotEv, __Z14ShouldSimplifyi, __ZN8CHudAmmo4InitEv, __ZN8CHudAmmo7VidInitEv, __ZN17CHudAmmoSecondary4InitEv, __Z14ShouldSimplifyi, __ZN11CHudBattery4InitEv, __ZN11CHudBattery7VidInitEv, __ZN15CHudDeathNotice4InitEv, __ZN15CHudDeathNotice7VidInitEv, __ZN14CHudFlashlight4InitEv, __ZN14CHudFlashlight7VidInitEv, __Z17R_StudioDrawModeli, __ZN10CHudGeiger4InitEv, __Z14ShouldSimplifyi, __ZN10CHudHealth4InitEv, __ZN10CHudHealth7VidInitEv, __ZN13CHudSpectator4InitEv, __ZN13CHudSpectator7VidInitEv, __ZN8CHudMenu4InitEv, __Z14ShouldSimplifyi, __ZN11CHudMessage4InitEv, __ZN11CHudMessage7VidInitEv, __ZN12CHudOverview4InitEv, __ZN12CHudOverview7VidInitEv, __ZN11CHudSayText4InitEv, __Z14ShouldSimplifyi, __ZN15CHudStatusIcons4InitEv, __Z14ShouldSimplifyi, __ZN13CHudStatusBar4InitEv, __Z14ShouldSimplifyi, __ZN15CHudTextMessage4InitEv, _HUD_GetUserEntity, __ZN9CHudTrain4InitEv, __ZN9CHudTrain7VidInitEv, __ZN14CHudScoreboard4InitEv, __Z14ShouldSimplifyi, __ZN8CHudMOTD4InitEv, __Z14ShouldSimplifyi, _HUD_GetUserEntity, _HUD_GetUserEntity, __Z20stub_NameForFunctionPv, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9 ];
 var FUNCTION_TABLE_viiiiidddid = [ b10 ];
 var FUNCTION_TABLE_viidiii = [ b11, __ZN11CBasePlayer11TraceAttackEP9entvars_sf6VectorP11TraceResulti, __ZN11CBasePlayer11TraceAttackEP9entvars_sf6VectorP11TraceResulti, __ZN11CBasePlayer11TraceAttackEP9entvars_sf6VectorP11TraceResulti ];
 var FUNCTION_TABLE_iidd = [ b12, __ZN12CBaseMonster17CheckRangeAttack2Eff, __ZN12CBaseMonster17CheckRangeAttack2Eff, __ZN12CBaseMonster17CheckRangeAttack2Eff, __ZN12CBaseMonster17CheckRangeAttack2Eff, b12, b12, b12 ];
 var FUNCTION_TABLE_viidiiii = [ b13, __ZN20CStudioModelRenderer23StudioCalcBoneQuaterionEifP13mstudiobone_tP13mstudioanim_tPfS4_, __ZN20CStudioModelRenderer22StudioCalcBonePositionEifP13mstudiobone_tP13mstudioanim_tPfS4_, b13 ];
 var FUNCTION_TABLE_iidi = [ b14, __ZN11CBaseEntity10TakeHealthEfi, __ZN11CBasePlayer10TakeHealthEfi, __ZN11CBasePlayer10TakeHealthEfi ];
 var FUNCTION_TABLE_viidddii = [ b15, __ZN12CBaseMonster20PlayScriptedSentenceEPKcfffiP11CBaseEntity ];
 var FUNCTION_TABLE_iiiidddddidddd = [ b16 ];
 var FUNCTION_TABLE_iiiiii = [ b17, __ZN12CBaseMonster14CheckLocalMoveERK6VectorS2_P11CBaseEntityPf ];
 var FUNCTION_TABLE_vidi = [ b18 ];
 var FUNCTION_TABLE_vidiiii = [ b19, __ZN20CStudioModelRenderer17StudioCalcBoneAdjEfPfPKhS2_h ];
 var FUNCTION_TABLE_iiiidii = [ b20, __ZN12CBaseMonster12FTriangulateERK6VectorS2_fP11CBaseEntityPS0_ ];
 var FUNCTION_TABLE_vidd = [ b21, __Z15EV_BoltCallbackP9tempent_sff ];
 var FUNCTION_TABLE_iiii = [ b22, __Z15__MsgFunc_FeignPKciPv, __ZN20CStudioModelRenderer16StudioDrawPlayerEiP14entity_state_s, __ZN20CStudioModelRenderer13StudioGetAnimEP7model_sP16mstudioseqdesc_t, __Z19__MsgFunc_CurWeaponPKciPv, __Z20__MsgFunc_WeaponListPKciPv, __Z20__MsgFunc_AmmoPickupPKciPv, __Z20__MsgFunc_WeapPickupPKciPv, __Z20__MsgFunc_ItemPickupPKciPv, __Z20__MsgFunc_HideWeaponPKciPv, __Z15__MsgFunc_AmmoXPKciPv, __Z20__MsgFunc_SecAmmoValPKciPv, __Z21__MsgFunc_SecAmmoIconPKciPv, __Z17__MsgFunc_BatteryPKciPv, __Z18__MsgFunc_DeathMsgPKciPv, __Z20__MsgFunc_FlashlightPKciPv, __Z18__MsgFunc_FlashBatPKciPv, __Z16__MsgFunc_GeigerPKciPv, __Z16__MsgFunc_HealthPKciPv, __Z16__MsgFunc_DamagePKciPv, __Z14__MsgFunc_LogoPKciPv, __Z18__MsgFunc_ResetHUDPKciPv, __Z18__MsgFunc_GameModePKciPv, __Z17__MsgFunc_InitHUDPKciPv, __Z18__MsgFunc_ViewModePKciPv, __Z16__MsgFunc_SetFOVPKciPv, __Z17__MsgFunc_ConcussPKciPv, __Z15__MsgFunc_FeignPKciPv, __Z15__MsgFunc_FeignPKciPv, __Z15__MsgFunc_FeignPKciPv, __Z15__MsgFunc_FeignPKciPv, __Z15__MsgFunc_FeignPKciPv, __Z15__MsgFunc_FeignPKciPv, __Z15__MsgFunc_FeignPKciPv, __Z15__MsgFunc_FeignPKciPv, __Z15__MsgFunc_FeignPKciPv, __Z15__MsgFunc_FeignPKciPv, __Z18__MsgFunc_ShowMenuPKciPv, __Z17__MsgFunc_HudTextPKciPv, __Z19__MsgFunc_GameTitlePKciPv, __Z17__MsgFunc_SayTextPKciPv, __Z20__MsgFunc_StatusIconPKciPv, __Z20__MsgFunc_StatusTextPKciPv, __Z21__MsgFunc_StatusValuePKciPv, __Z17__MsgFunc_TextMsgPKciPv, __Z15__MsgFunc_TrainPKciPv, __Z19__MsgFunc_ScoreInfoPKciPv, __Z19__MsgFunc_TeamScorePKciPv, __Z18__MsgFunc_TeamInfoPKciPv, __Z14__MsgFunc_MOTDPKciPv, b22, b22, b22, b22, b22, b22, b22, b22, b22, b22, b22, b22, b22, b22 ];
 var FUNCTION_TABLE_viiiiddii = [ b23 ];
 var FUNCTION_TABLE_viiiiid = [ b24, __ZN20CStudioModelRenderer16StudioSlerpBonesEPA4_fPA3_fS1_S3_f, __ZN20CStudioModelRenderer19StudioCalcRotationsEPA3_fPA4_fP16mstudioseqdesc_tP13mstudioanim_tf, b24 ];
 var FUNCTION_TABLE_viiiiiiii = [ b25 ];
 var FUNCTION_TABLE_diiii = [ b26 ];
 var FUNCTION_TABLE_ddd = [ b27 ];
 var FUNCTION_TABLE_viid = [ b28 ];
 var FUNCTION_TABLE_di = [ b29, __ZN11CBaseEntity8GetDelayEv, __ZN11CBaseToggle8GetDelayEv, __ZN12CBaseMonster11CoverRadiusEv, __ZN12CBaseMonster18HearingSensitivityEv, __ZN20CStudioModelRenderer25StudioEstimateInterpolantEv, b29, b29 ];
 var FUNCTION_TABLE_viiiid = [ b30, __ZN11CBaseEntity3UseEPS_S0_8USE_TYPEf, __ZN8CGrenade11DetonateUseEP11CBaseEntityS1_8USE_TYPEf, b30 ];
 var FUNCTION_TABLE_viidii = [ b31 ];
 var FUNCTION_TABLE_iid = [ b32, __ZN8CHudBase4DrawEf, __ZN8CHudAmmo4DrawEf, __ZN17CHudAmmoSecondary4DrawEf, __ZN11CHudBattery4DrawEf, __ZN15CHudDeathNotice4DrawEf, __ZN14CHudFlashlight4DrawEf, __ZN10CHudGeiger4DrawEf, __ZN10CHudHealth4DrawEf, __ZN13CHudSpectator4DrawEf, __ZN8CHudMenu4DrawEf, __ZN11CHudMessage4DrawEf, __ZN12CHudOverview4DrawEf, __ZN11CHudSayText4DrawEf, __ZN15CHudStatusIcons4DrawEf, __ZN13CHudStatusBar4DrawEf, __ZN8CHudBase4DrawEf, __ZN9CHudTrain4DrawEf, __ZN14CHudScoreboard4DrawEf, __ZN8CHudMOTD4DrawEf, b32, b32, b32, b32, b32, b32, b32, b32, b32, b32, b32, b32 ];
 var FUNCTION_TABLE_viiddd = [ b33, __ZN12CBaseMonster12PlaySentenceEPKcfff ];
 var FUNCTION_TABLE_iiidiiiddi = [ b34 ];
 var FUNCTION_TABLE_iii = [ b35, __ZN10CBaseDelay4SaveER5CSave, __ZN10CBaseDelay4SaveER5CSave, __ZN10CBaseDelay4SaveER5CSave, __Z10TrainSpeedii, __Z10TrainSpeedii, __ZN11CBaseEntity11DamageDecalEi, __Z10TrainSpeedii, __ZN11CBaseEntity9HasTargetEj, __Z10TrainSpeedii, __Z17EV_TFC_IsAllyTeamii, __Z10TrainSpeedii, __Z10TrainSpeedii, __ZN9CCrossbow11GetItemInfoEP8ItemInfo, __Z10TrainSpeedii, __Z10TrainSpeedii, __Z10TrainSpeedii, __ZN10CBaseDelay4SaveER5CSave, __ZN10CBaseDelay4SaveER5CSave, __ZN13CCrossbowAmmo7AddAmmoEP11CBaseEntity, __Z10TrainSpeedii, __ZN8CCrowbar11GetItemInfoEP8ItemInfo, __Z10TrainSpeedii, __ZN5CEgon11GetItemInfoEP8ItemInfo, __ZN9CEgonAmmo7AddAmmoEP11CBaseEntity, __Z10TrainSpeedii, __ZN6CGauss11GetItemInfoEP8ItemInfo, __ZN9CEgonAmmo7AddAmmoEP11CBaseEntity, __ZN12CHandGrenade11GetItemInfoEP8ItemInfo, __ZN10CBaseDelay4SaveER5CSave, __ZN10CBaseDelay4SaveER5CSave, __ZN10CBaseDelay4SaveER5CSave, __ZN10CBaseDelay4SaveER5CSave, __ZN10CBaseDelay4SaveER5CSave, __ZN10CBaseDelay4SaveER5CSave, __ZN10CBaseDelay4SaveER5CSave, __ZN10CBaseDelay4SaveER5CSave, __Z10TrainSpeedii, __Z10TrainSpeedii, __Z10TrainSpeedii, __Z10TrainSpeedii, __Z10TrainSpeedii, __ZN12CBaseMonster15CanPlaySentenceEi, __Z10TrainSpeedii, __ZN12CBaseMonster13FGetNodeRouteE6Vector, __Z10TrainSpeedii, __Z10TrainSpeedii, __ZN10CBaseDelay4SaveER5CSave, __ZN10CBaseDelay4SaveER5CSave, __ZN10CBaseDelay4SaveER5CSave, __Z10TrainSpeedii, __Z10TrainSpeedii, __ZN10CBaseDelay4SaveER5CSave, __Z10TrainSpeedii, __Z10TrainSpeedii, __Z10TrainSpeedii, __Z10TrainSpeedii, __Z10TrainSpeedii, __ZN5CHgun11GetItemInfoEP8ItemInfo, __Z10TrainSpeedii, __ZN4CMP511GetItemInfoEP8ItemInfo, __ZN12CMP5AmmoClip7AddAmmoEP11CBaseEntity, __ZN13CMP5Chainammo7AddAmmoEP11CBaseEntity, __ZN15CMP5AmmoGrenade7AddAmmoEP11CBaseEntity, __Z10TrainSpeedii, __ZN7CPython11GetItemInfoEP8ItemInfo, __ZN11CPythonAmmo7AddAmmoEP11CBaseEntity, __Z10TrainSpeedii, __ZN4CRpg11GetItemInfoEP8ItemInfo, __ZN8CRpgAmmo7AddAmmoEP11CBaseEntity, __ZN8CSatchel11AddToPlayerEP11CBasePlayer, __ZN8CSatchel12AddDuplicateEP15CBasePlayerItem, __ZN8CSatchel11GetItemInfoEP8ItemInfo, __Z10TrainSpeedii, __ZN8CShotgun11GetItemInfoEP8ItemInfo, __ZN12CShotgunAmmo7AddAmmoEP11CBaseEntity, __ZN7CSqueak11GetItemInfoEP8ItemInfo, __ZN9CTripmine11GetItemInfoEP8ItemInfo, __ZN6CGlock11GetItemInfoEP8ItemInfo, __ZN10CGlockAmmo7AddAmmoEP11CBaseEntity, __Z18R_StudioDrawPlayeriP14entity_state_s, __ZN20CStudioModelRenderer15StudioDrawModelEi, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35 ];
 var FUNCTION_TABLE_dii = [ b36, __ZN12CBaseMonster9ChangeYawEi, __ZN20CStudioModelRenderer19StudioEstimateFrameEP16mstudioseqdesc_t, b36 ];
 var FUNCTION_TABLE_viiidiiddiiii = [ b37, __Z17HUD_PlaybackEventiPK7edict_stfPfS2_ffiiii ];
 var FUNCTION_TABLE_d = [ b38 ];
 var FUNCTION_TABLE_viii = [ b39, __ZN11CBaseEntity6KilledEP9entvars_si, __ZN11CBasePlayer9AddPointsEii, __ZN11CBasePlayer9AddPointsEii, __ZN11CBaseEntity10BodyTargetERK6Vector, __ZN8CGrenade7ExplodeE6VectorS0_, __ZN12CBaseMonster10BodyTargetERK6Vector, __ZN11CBasePlayer9AddPointsEii, __ZN11CBasePlayer6KilledEP9entvars_si, __ZN11CBasePlayer9AddPointsEii, __ZN11CBasePlayer9AddPointsEii, __ZN11CBasePlayer10BodyTargetERK6Vector, __ZN20CStudioModelRenderer17StudioFxTransformEP11cl_entity_sPA4_f, __Z12AlertMessage10ALERT_TYPEPcz, b39, b39 ];
 var FUNCTION_TABLE_i = [ b40 ];
 var FUNCTION_TABLE_iiiii = [ b41, __ZN11CBaseEntity8GiveAmmoEiPci, __ZN11CBasePlayer8GiveAmmoEiPci, b41 ];
 var FUNCTION_TABLE_viiid = [ b42, __ZN12CBaseMonster11MoveExecuteEP11CBaseEntityRK6Vectorf ];
 var FUNCTION_TABLE_vdddd = [ b43 ];
 var FUNCTION_TABLE_vdd = [ b44 ];
 var FUNCTION_TABLE_v = [ b45, __Z15__CmdFunc_Slot1v, __Z15__CmdFunc_Slot2v, __Z15__CmdFunc_Slot3v, __Z15__CmdFunc_Slot4v, __Z15__CmdFunc_Slot5v, __Z15__CmdFunc_Slot6v, __Z15__CmdFunc_Slot7v, __Z15__CmdFunc_Slot8v, __Z15__CmdFunc_Slot9v, __Z16__CmdFunc_Slot10v, __Z15__CmdFunc_Closev, __Z20__CmdFunc_NextWeaponv, __Z20__CmdFunc_PrevWeaponv, _IN_Accumulate, _IN_Accumulate, _IN_Accumulate, _IN_Accumulate, _IN_Accumulate, __Z13SpectatorModev, __Z14SpectatorSprayv, __Z13SpectatorHelpv, __Z13SpectatorMenuv, _IN_Accumulate, __Z15CAM_PitchUpDownv, __Z13CAM_PitchUpUpv, __Z17CAM_PitchDownDownv, __Z15CAM_PitchDownUpv, __Z15CAM_YawLeftDownv, __Z13CAM_YawLeftUpv, __Z16CAM_YawRightDownv, __Z14CAM_YawRightUpv, __Z10CAM_InDownv, __Z8CAM_InUpv, __Z11CAM_OutDownv, __Z9CAM_OutUpv, __Z17CAM_ToThirdPersonv, __Z17CAM_ToFirstPersonv, __Z18CAM_StartMouseMovev, __Z16CAM_EndMouseMovev, __Z17CAM_StartDistancev, __Z15CAM_EndDistancev, __Z16CAM_ToggleSnaptov, __Z9IN_UpDownv, __Z7IN_UpUpv, __Z11IN_DownDownv, __Z9IN_DownUpv, __Z11IN_LeftDownv, __Z9IN_LeftUpv, __Z12IN_RightDownv, __Z10IN_RightUpv, __Z14IN_ForwardDownv, __Z12IN_ForwardUpv, __Z11IN_BackDownv, __Z9IN_BackUpv, __Z13IN_LookupDownv, __Z11IN_LookupUpv, __Z15IN_LookdownDownv, __Z13IN_LookdownUpv, __Z13IN_StrafeDownv, __Z11IN_StrafeUpv, __Z15IN_MoveleftDownv, __Z13IN_MoveleftUpv, __Z16IN_MoverightDownv, __Z14IN_MoverightUpv, __Z12IN_SpeedDownv, __Z10IN_SpeedUpv, __Z13IN_AttackDownv, __Z11IN_AttackUpv, __Z14IN_Attack2Downv, __Z12IN_Attack2Upv, __Z10IN_UseDownv, __Z8IN_UseUpv, __Z11IN_JumpDownv, __Z9IN_JumpUpv, __Z10IN_Impulsev, __Z12IN_KLookDownv, __Z10IN_KLookUpv, __Z12IN_MLookDownv, __Z10IN_MLookUpv, __Z12IN_JLookDownv, __Z10IN_JLookUpv, __Z11IN_DuckDownv, __Z9IN_DuckUpv, __Z13IN_ReloadDownv, __Z11IN_ReloadUpv, __Z11IN_Alt1Downv, __Z9IN_Alt1Upv, __Z12IN_GraphDownv, __Z10IN_GraphUpv, __Z12IN_BreakDownv, __Z10IN_BreakUpv, __Z20__CmdFunc_ShowScoresv, __Z20__CmdFunc_HideScoresv, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45 ];
 var FUNCTION_TABLE_vdi = [ b46 ];
 var FUNCTION_TABLE_viiddii = [ b47 ];
 var FUNCTION_TABLE_vidiii = [ b48, __ZN11CBaseEntity10TraceBleedEf6VectorP11TraceResulti ];
 var FUNCTION_TABLE_viiii = [ b49, __ZN17CBasePlayerWeapon14SendWeaponAnimEiii, __ZN20CStudioModelRenderer17StudioPlayerBlendEP16mstudioseqdesc_tPiPf, b49 ];
 return {
  __ZN11CBaseEntity8PrecacheEv: __ZN8CHudBaseD2Ev,
  __ZN8CHudAmmo14UserCmd_Slot10Ev: __ZN8CHudAmmo14UserCmd_Slot10Ev,
  __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii: __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii,
  __ZN17CHudAmmoSecondaryD0Ev: __ZN8CHudMenuD0Ev,
  __ZN4CHud19DrawHudNumberStringEiiiiiii: __ZN4CHud19DrawHudNumberStringEiiiiiii,
  __ZN9CEgonAmmo8PrecacheEv: __ZN9CEgonAmmo8PrecacheEv,
  __ZN15WeaponsResource10SelectSlotEiii: __ZN15WeaponsResource10SelectSlotEiii,
  __ZN11CBasePlayer12GetAmmoIndexEPKc: __ZN8CGrenade10BloodColorEv,
  __Z13GetSpriteListP15client_sprite_sPKcii: __Z13GetSpriteListP15client_sprite_sPKcii,
  __ZN12CBaseMonster12HasAlienGibsEv: _HUD_GetUserEntity,
  __ZN12CBaseMonster11FInViewConeEP6Vector: __Z10TrainSpeedii,
  __Z28V_FindViewModelByWeaponModeli: __Z28V_FindViewModelByWeaponModeli,
  __ZN15WeaponsResource7HasAmmoEP6WEAPON: __ZN15WeaponsResource7HasAmmoEP6WEAPON,
  __ZN12CHudOverviewD0Ev: __ZN8CHudMenuD0Ev,
  __Z18DBG_AssertFunctioniPKcS0_iS0_: __Z18DBG_AssertFunctioniPKcS0_iS0_,
  __ZN14CHudFlashlight5ResetEv: __ZN14CHudFlashlight5ResetEv,
  __ZN7CPython6ReloadEv: __ZN7CPython6ReloadEv,
  __ZN9CCrossbow8PrecacheEv: __ZN9CCrossbow8PrecacheEv,
  __ZN11CBaseEntity16RemovePlayerItemEP15CBasePlayerItem: __Z10TrainSpeedii,
  __ZN11CHudBattery15MsgFunc_BatteryEPKciPv: __ZN11CHudBattery15MsgFunc_BatteryEPKciPv,
  __ZN12CBaseMonster9ChangeYawEi: __ZN12CBaseMonster9ChangeYawEi,
  __Z20stub_NameForFunctionPv: __Z20stub_NameForFunctionPv,
  __ZN11CBasePlayer8GiveAmmoEiPci: __ZN11CBasePlayer8GiveAmmoEiPci,
  __Z13CL_ButtonBitsi: __Z13CL_ButtonBitsi,
  __ZN11CHudMessage9XPositionEfii: __ZN11CHudMessage9XPositionEfii,
  __ZN10CHudHealth4DrawEf: __ZN10CHudHealth4DrawEf,
  __ZN11CBasePlayer10TakeHealthEfi: __ZN11CBasePlayer10TakeHealthEfi,
  __ZN5CHgun9iItemSlotEv: __ZN4CRpg9iItemSlotEv,
  __ZN4CRpg10UpdateSpotEv: __ZN8CHudBaseD2Ev,
  stackSave: stackSave,
  __ZN7CPython11AddToPlayerEP11CBasePlayer: __Z10TrainSpeedii,
  __ZN12CBaseMonster9FlYawDiffEv: __ZN11CBaseEntity8GetDelayEv,
  _PM_AddCorrectGravity: _PM_AddCorrectGravity,
  __ZN4CMP511GetItemInfoEP8ItemInfo: __ZN4CMP511GetItemInfoEP8ItemInfo,
  __ZN11CBasePlayer10SelectItemEPKc: _HUD_VoiceStatus,
  _HUD_UpdateClientData: _HUD_UpdateClientData,
  __ZN12CBaseMonster13FLSoundVolumeEP6CSound: __ZN12CBaseMonster13FLSoundVolumeEP6CSound,
  __ZN15CMP5AmmoGrenade5SpawnEv: __ZN15CMP5AmmoGrenade5SpawnEv,
  __Z14IN_MoverightUpv: __Z14IN_MoverightUpv,
  __ZN4CRpg8PrecacheEv: __ZN4CRpg8PrecacheEv,
  __ZN20CStudioModelRenderer25StudioEstimateInterpolantEv: __ZN20CStudioModelRenderer25StudioEstimateInterpolantEv,
  __ZN11CBaseEntity3UseEPS_S0_8USE_TYPEf: __ZN11CBaseEntity3UseEPS_S0_8USE_TYPEf,
  __ZN20CStudioModelRenderer26StudioRenderFinal_SoftwareEv: __ZN20CStudioModelRenderer26StudioRenderFinal_SoftwareEv,
  __ZN14CHudFlashlightD0Ev: __ZN8CHudMenuD0Ev,
  __ZN12CBaseMonster8KeyValueEP14KeyValueData_s: _HUD_VoiceStatus,
  __Z22UTIL_GunshotDecalTraceP11TraceResulti: _HUD_VoiceStatus,
  __Z10TrainSpeedii: __Z10TrainSpeedii,
  __Z20__MsgFunc_StatusIconPKciPv: __Z20__MsgFunc_StatusIconPKciPv,
  __ZN11CBasePlayer8PrecacheEv: __ZN8CHudBaseD2Ev,
  __ZN12CBaseMonster10FShouldEatEv: __Z14ShouldSimplifyi,
  stackAlloc: stackAlloc,
  _PM_ViewEntity: _PM_ViewEntity,
  __Z16V_GetChaseOriginPfS_fS_: __Z16V_GetChaseOriginPfS_fS_,
  __Z16__MsgFunc_DamagePKciPv: __Z16__MsgFunc_DamagePKciPv,
  __Z15__CmdFunc_Slot1v: __Z15__CmdFunc_Slot1v,
  __Z10RandomLongii: __Z10RandomLongii,
  __ZN14CSatchelCharge12SatchelSlideEP11CBaseEntity: __ZN14CSatchelCharge12SatchelSlideEP11CBaseEntity,
  __ZN11CBasePlayer16PlayerDeathThinkEv: __ZN8CHudBaseD2Ev,
  __ZN8CHudBase4DrawEf: __ZN8CHudBase4DrawEf,
  __ZN8CHudAmmo7VidInitEv: __ZN8CHudAmmo7VidInitEv,
  __Z16V_DropPunchAnglefPf: __Z16V_DropPunchAnglefPf,
  __ZN10CHudHealth4InitEv: __ZN10CHudHealth4InitEv,
  __ZN14CSatchelCharge10DeactivateEv: __ZN14CSatchelCharge10DeactivateEv,
  __Z13EV_HookEventsv: __Z13EV_HookEventsv,
  __ZN11CBasePlayer7RestoreER8CRestore: __Z10TrainSpeedii,
  __ZN7CSprite12SpriteCreateEPKcRK6Vectori: __ZN7CSprite12SpriteCreateEPKcRK6Vectori,
  __Z15IN_MoveleftDownv: __Z15IN_MoveleftDownv,
  _PM_CheckWaterJump: _PM_CheckWaterJump,
  __Z18V_CalcNormalRefdefP12ref_params_s: __Z18V_CalcNormalRefdefP12ref_params_s,
  __ZN13CHudSpectatorD0Ev: __ZN8CHudMenuD0Ev,
  __ZN15WeaponsResource11GetFirstPosEi: __ZN15WeaponsResource11GetFirstPosEi,
  __ZN8CRpgAmmo7AddAmmoEP11CBaseEntity: __ZN8CRpgAmmo7AddAmmoEP11CBaseEntity,
  _weapon_egon: _weapon_egon,
  __Z18__MsgFunc_FlashBatPKciPv: __Z18__MsgFunc_FlashBatPKciPv,
  __Z13IN_LookupDownv: __Z13IN_LookupDownv,
  __ZN12CBaseMonster4MoveEf: __ZN12CBaseMonster3EatEf,
  __ZN12CBaseMonster4SaveER5CSave: __ZN10CBaseDelay4SaveER5CSave,
  __VectorCopy: __VectorCopy,
  __Z19__MsgFunc_ScoreInfoPKciPv: __Z19__MsgFunc_ScoreInfoPKciPv,
  __ZN20CStudioModelRenderer13StudioGetAnimEP7model_sP16mstudioseqdesc_t: __ZN20CStudioModelRenderer13StudioGetAnimEP7model_sP16mstudioseqdesc_t,
  _IN_ActivateMouse: _IN_Accumulate,
  __ZN15CBasePlayerItem7RespawnEv: _HUD_GetUserEntity,
  __Z17__MsgFunc_TextMsgPKciPv: __Z17__MsgFunc_TextMsgPKciPv,
  __ZN14CHudFlashlight4InitEv: __ZN14CHudFlashlight4InitEv,
  __Z21V_GetDoubleTargetsCamP11cl_entity_sS0_PfS1_: __Z21V_GetDoubleTargetsCamP11cl_entity_sS0_PfS1_,
  __ZN20CStudioModelRenderer4InitEv: __ZN20CStudioModelRenderer4InitEv,
  _PM_ShowClipBox: _IN_Accumulate,
  __ZN12CBaseMonster8DropItemEPcRK6VectorS3_: __ZN12CBaseMonster8DropItemEPcRK6VectorS3_,
  __ZN11CBaseEntity10TakeDamageEP9entvars_sS1_fi: __ZN11CBaseEntity10TakeDamageEP9entvars_sS1_fi,
  __Z7IN_MovefP9usercmd_s: __Z7IN_MovefP9usercmd_s,
  __ZN8CCrowbar12UseDecrementEv: __Z14ShouldSimplifyi,
  __ZN7CSqueak7HolsterEi: __ZN7CSqueak7HolsterEi,
  __Z17CAM_ToThirdPersonv: __Z17CAM_ToThirdPersonv,
  __ZN5CHgun9IsUseableEv: __Z14ShouldSimplifyi,
  __ZN4CHud14GetSensitivityEv: __ZN4CHud14GetSensitivityEv,
  __Z10MoveTowardfff: __Z10MoveTowardfff,
  __ZN11CHudBattery4DrawEf: __ZN11CHudBattery4DrawEf,
  __ZN8CSatchel10WeaponIdleEv: __ZN8CSatchel10WeaponIdleEv,
  __ZN7CPython12UseDecrementEv: __Z14ShouldSimplifyi,
  __Z31__CmdFunc_ForceCloseCommandMenuv: _IN_Accumulate,
  __ZN6CGauss9StartFireEv: __ZN6CGauss9StartFireEv,
  __ZN5CEgon8PrecacheEv: __ZN5CEgon8PrecacheEv,
  __ZN11CHudSayText11InitHUDDataEv: __ZN11CHudSayText11InitHUDDataEv,
  __ZN14CBaseAnimating18StudioFrameAdvanceEf: __ZN14CBaseAnimating18StudioFrameAdvanceEf,
  __ZN20CStudioModelRenderer21StudioCalcAttachmentsEv: __ZN20CStudioModelRenderer21StudioCalcAttachmentsEv,
  __ZN15CHudDeathNotice4DrawEf: __ZN15CHudDeathNotice4DrawEf,
  _PM_CatagorizePosition: _PM_CatagorizePosition,
  __ZN12CBaseMonster18ShouldAdvanceRouteEf: __ZN8CHudBase4DrawEf,
  _PM_CheckParamters: _PM_CheckParamters,
  _ammo_ARgrenades: _ammo_ARgrenades,
  __Z16UTIL_VecToAnglesRK6Vector: __Z16UTIL_VecToAnglesRK6Vector,
  __Z15__CmdFunc_Slot8v: __Z15__CmdFunc_Slot8v,
  _HUD_ProcessPlayerState: _HUD_ProcessPlayerState,
  _VectorNormalize: _VectorNormalize,
  __ZN9CTripmine21SetObjectCollisionBoxEv: __ZN9CTripmine21SetObjectCollisionBoxEv,
  __ZN12CBaseMonster22BarnacleVictimReleasedEv: __ZN8CHudBaseD2Ev,
  _EV_EgonStop: _EV_EgonStop,
  __ZN11CBasePlayer5SpawnEv: __ZN11CBasePlayer5SpawnEv,
  __Z10IN_BreakUpv: __Z10IN_BreakUpv,
  __ZN15CBasePlayerItem7RestoreER8CRestore: __ZN10CBaseDelay4SaveER5CSave,
  __Z10EV_IsLocali: __Z10EV_IsLocali,
  __ZN4CHud16MsgFunc_ViewModeEPKciPv: __ZN4CHud16MsgFunc_ViewModeEPKciPv,
  __ZN8CHudAmmo13UserCmd_Slot4Ev: __ZN8CHudAmmo13UserCmd_Slot4Ev,
  __ZN13CHudSpectator15HandleButtonsUpEi: __ZN13CHudSpectator15HandleButtonsUpEi,
  __Z22EV_GetDefaultShellInfoP12event_args_sPfS1_S1_S1_S1_S1_S1_fff: __Z22EV_GetDefaultShellInfoP12event_args_sPfS1_S1_S1_S1_S1_S1_fff,
  _IN_MouseEvent: _IN_MouseEvent,
  __ZN15CBasePlayerItem12GetWeaponPtrEv: _HUD_GetUserEntity,
  __Z19__MsgFunc_GameTitlePKciPv: __Z19__MsgFunc_GameTitlePKciPv,
  __Z13HUD_PlaySoundPcf: __Z13HUD_PlaySoundPcf,
  __Z11GetClassPtrI7CPythonEPT_S2_: __Z11GetClassPtrI7CPythonEPT_S2_,
  __ZN9CCrossbow10WeaponIdleEv: __ZN9CCrossbow10WeaponIdleEv,
  __Z10READ_ANGLEv: __Z10READ_ANGLEv,
  __Z17CAM_PitchDownDownv: __Z17CAM_PitchDownDownv,
  __ZN9CCrossbow14FireSniperBoltEv: __ZN9CCrossbow14FireSniperBoltEv,
  __Z10V_CalcRoll6VectorS_ff: __Z10V_CalcRoll6VectorS_ff,
  __ZN12CBaseMonster3EatEf: __ZN12CBaseMonster3EatEf,
  __Z17__MsgFunc_InitHUDPKciPv: __Z17__MsgFunc_InitHUDPKciPv,
  __ZN11CBaseEntity11EarPositionEv: __ZN11CBaseEntity11EyePositionEv,
  __ZN17CBasePlayerWeapon14UpdateItemInfoEv: __ZN8CHudBaseD2Ev,
  _HUD_DirectorMessage: _HUD_DirectorMessage,
  _weapon_python: _weapon_357,
  _weapon_satchel: _weapon_satchel,
  __Z15Game_AddObjectsv: __Z15Game_AddObjectsv,
  __ZN11CBaseEntity5SpawnEv: __ZN8CHudBaseD2Ev,
  __ZN6CGauss6DeployEv: __ZN6CGauss6DeployEv,
  _PM_DropPunchAngle: _PM_DropPunchAngle,
  __ZN11CBaseEntity6CreateEPcRK6VectorS3_P7edict_s: __ZN11CBaseEntity6CreateEPcRK6VectorS3_P7edict_s,
  __ZN11CBaseEntity10BodyTargetERK6Vector: __ZN11CBaseEntity10BodyTargetERK6Vector,
  __Z19__MsgFunc_CurWeaponPKciPv: __Z19__MsgFunc_CurWeaponPKciPv,
  __ZN7CSqueak15SecondaryAttackEv: __ZN8CHudBaseD2Ev,
  __ZN12CBaseMonster16MovementCompleteEv: __ZN8CHudBaseD2Ev,
  __ZN12CBaseMonster9CheckAmmoEv: __ZN8CHudBaseD2Ev,
  _weapon_crowbar: _weapon_crowbar,
  __ZN8CShotgun13PrimaryAttackEv: __ZN8CShotgun13PrimaryAttackEv,
  __ZN5CEgon13PrimaryAttackEv: __ZN5CEgon13PrimaryAttackEv,
  __ZN15CHudDeathNotice4InitEv: __ZN15CHudDeathNotice4InitEv,
  __Z14ShouldSimplifyi: __Z14ShouldSimplifyi,
  __ZN8CHudBase5ResetEv: __ZN8CHudBaseD2Ev,
  _AngleVectors: _AngleVectors,
  __ZN15WeaponsResource20LoadAllWeaponSpritesEv: __ZN15WeaponsResource20LoadAllWeaponSpritesEv,
  __ZN8CShotgun6DeployEv: __ZN8CShotgun6DeployEv,
  _IN_DeactivateMouse: _IN_Accumulate,
  __ZN15CBasePlayerItem16UpdateClientDataEP11CBasePlayer: __Z10TrainSpeedii,
  __ZN11CBaseEntity12IlluminationEv: __ZN11CBaseEntity12IlluminationEv,
  __Z11GetClassPtrI8CRpgAmmoEPT_S2_: __Z11GetClassPtrI8CRpgAmmoEPT_S2_,
  __ZN15CHudStatusIcons5ResetEv: __ZN15CHudStatusIcons5ResetEv,
  _HUD_DrawNormalTriangles: _HUD_DrawNormalTriangles,
  __ZN17CHudAmmoSecondary18MsgFunc_SecAmmoValEPKciPv: __ZN17CHudAmmoSecondary18MsgFunc_SecAmmoValEPKciPv,
  __ZN11CBasePlayer4SaveER5CSave: __Z10TrainSpeedii,
  __Z19__MsgFunc_TeamNamesPKciPv: __Z15__MsgFunc_FeignPKciPv,
  _ammo_buckshot: _ammo_buckshot,
  __Z20__MsgFunc_SecAmmoValPKciPv: __Z20__MsgFunc_SecAmmoValPKciPv,
  __ZN4CMP512UseDecrementEv: __Z14ShouldSimplifyi,
  __ZN12CBaseMonster14SetEyePositionEv: __ZN8CHudBaseD2Ev,
  __Z12ToggleScoresv: _IN_Accumulate,
  __Z11DrawAmmoBarP6WEAPONiiii: __Z11DrawAmmoBarP6WEAPONiiii,
  __ZN13CMP5Chainammo5SpawnEv: __ZN9CEgonAmmo5SpawnEv,
  _EV_FireCrossbow: _EV_FireCrossbow,
  __ZN9CHudTrainD0Ev: __ZN8CHudMenuD0Ev,
  __ZN15CHudTextMessage12LookupStringEPKcPi: __ZN15CHudTextMessage12LookupStringEPKcPi,
  __Z13SpectatorModev: __Z13SpectatorModev,
  __ZN12CBaseMonster9FindCoverE6VectorS0_ff: __ZN12CBaseMonster9FindCoverE6VectorS0_ff,
  __Z10IN_RightUpv: __Z10IN_RightUpv,
  __ZN7CSqueak6DeployEv: __ZN7CSqueak6DeployEv,
  __ZN12CBaseMonster8VecToYawE6Vector: __ZN12CBaseMonster9ChangeYawEi,
  __ZN9CTripmine5SpawnEv: __ZN9CTripmine5SpawnEv,
  __Z11GetClassPtrI5CHgunEPT_S2_: __Z11GetClassPtrI5CHgunEPT_S2_,
  __ZN12CBaseMonster9IdleSoundEv: __ZN8CHudBaseD2Ev,
  __ZN6CGlock5SpawnEv: __ZN6CGlock5SpawnEv,
  _HUD_MobilityInterface: _HUD_MobilityInterface,
  __Z20FindHullIntersectionRK6VectorR11TraceResultPfS4_P7edict_s: __Z20FindHullIntersectionRK6VectorR11TraceResultPfS4_P7edict_s,
  __ZN20CStudioModelRenderer15StudioDrawModelEi: __ZN20CStudioModelRenderer15StudioDrawModelEi,
  __ZN10CBaseDelay8KeyValueEP14KeyValueData_s: _HUD_VoiceStatus,
  __ZN13CHudSpectator12DrawOverviewEv: __ZN13CHudSpectator12DrawOverviewEv,
  __ZN12CBaseMonster11MonsterInitEv: __ZN8CHudBaseD2Ev,
  __Z11GetClassPtrI7CSqueakEPT_S2_: __Z11GetClassPtrI7CSqueakEPT_S2_,
  __ZN4CMP513PrimaryAttackEv: __ZN4CMP513PrimaryAttackEv,
  __ZN12CShotgunAmmo8PrecacheEv: __ZN12CShotgunAmmo8PrecacheEv,
  __ZN4CHud11GetNumWidthEii: __ZN4CHud11GetNumWidthEii,
  __ZN13CCrossbowAmmo8PrecacheEv: __ZN13CCrossbowAmmo8PrecacheEv,
  __ZN12CBaseMonster15CanPlaySequenceEii: __Z15__MsgFunc_FeignPKciPv,
  __Z7COM_LogPcS_z: __Z7COM_LogPcS_z,
  __Z17UTIL_ParticleLineP11CBasePlayerPfS1_fhhh: __Z17UTIL_ParticleLineP11CBasePlayerPfS1_fhhh,
  __ZN20CStudioModelRenderer18StudioEstimateGaitEP14entity_state_s: __ZN20CStudioModelRenderer18StudioEstimateGaitEP14entity_state_s,
  _VectorScale: _VectorScale,
  __ZN20CStudioModelRenderer16StudioDrawPlayerEiP14entity_state_s: __ZN20CStudioModelRenderer16StudioDrawPlayerEiP14entity_state_s,
  __ZN17CBasePlayerWeapon14PlayEmptySoundEv: __ZN17CBasePlayerWeapon14PlayEmptySoundEv,
  __ZN12CBaseMonster10RouteClearEv: __ZN8CHudBaseD2Ev,
  __Z11IN_Commandsv: _IN_Accumulate,
  __ZN12CBaseMonster14GetGunPositionEv: __ZN11CBasePlayer14GetGunPositionEv,
  _anglemod: _anglemod,
  __ZN11CHudMessage15MessageDrawScanEP20client_textmessage_sf: __ZN11CHudMessage15MessageDrawScanEP20client_textmessage_sf,
  _PM_LadderMove: _PM_LadderMove,
  _PM_NoClip: _PM_NoClip,
  __ZN7CPython15SecondaryAttackEv: __ZN7CPython15SecondaryAttackEv,
  __ZN15CHudStatusIconsD0Ev: __ZN8CHudMenuD0Ev,
  __ZN8CShotgun11AddToPlayerEP11CBasePlayer: __Z10TrainSpeedii,
  __Z11GetClassPtrI12CShotgunAmmoEPT_S2_: __Z11GetClassPtrI12CShotgunAmmoEPT_S2_,
  __Z14SpectatorSprayv: __Z14SpectatorSprayv,
  __ZN14CHudScoreboard17GetAllPlayersInfoEv: __ZN14CHudScoreboard17GetAllPlayersInfoEv,
  __Z17__MsgFunc_DetpackPKciPv: __Z15__MsgFunc_FeignPKciPv,
  __ZN6CGlock8PrecacheEv: __ZN6CGlock8PrecacheEv,
  _PM_DrawRectangle: _PM_DrawRectangle,
  __ZN11CBasePlayer12IlluminationEv: _HUD_GetUserEntity,
  __Z16ConcatTransformsPA4_fS0_S0_: __Z16ConcatTransformsPA4_fS0_S0_,
  __ZN10CBaseDelay4SaveER5CSave: __ZN10CBaseDelay4SaveER5CSave,
  _HUD_VoiceStatus: _HUD_VoiceStatus,
  setThrew: setThrew,
  __ZN5CBeam10BeamCreateEPKci: __Z17EV_TFC_IsAllyTeamii,
  __ZN11CBasePlayer8IsPlayerEv: __Z14ShouldSimplifyi,
  __Z11GetClassPtrI9CEgonAmmoEPT_S2_: __Z11GetClassPtrI9CEgonAmmoEPT_S2_,
  _PM_ReduceTimers: _PM_ReduceTimers,
  __ZN14CBaseAnimating16GetSequenceFlagsEv: _HUD_GetUserEntity,
  __Z11IN_JumpDownv: __Z11IN_JumpDownv,
  __ZN14CHudFlashlight7VidInitEv: __ZN14CHudFlashlight7VidInitEv,
  __ZN15CBasePlayerItem6DeployEv: __Z14ShouldSimplifyi,
  _CAM_Think: _CAM_Think,
  __ZN5CHgun5SpawnEv: __ZN5CHgun5SpawnEv,
  __Z18__MsgFunc_RandomPCPKciPv: __Z15__MsgFunc_FeignPKciPv,
  _PM_WalkMove: _PM_WalkMove,
  __ZN11CBaseEntity7IsAliveEv: __ZN11CBasePlayer7IsAliveEv,
  __Z14__MsgFunc_MOTDPKciPv: __Z14__MsgFunc_MOTDPKciPv,
  __ZN5CEgon20GetDischargeIntervalEv: __ZN5CEgon16GetPulseIntervalEv,
  _Q_log2: _Q_log2,
  _PM_PreventMegaBunnyJumping: _PM_PreventMegaBunnyJumping,
  __Z20__CmdFunc_ShowScoresv: __Z20__CmdFunc_ShowScoresv,
  __ZN11CBaseEntity16MyMonsterPointerEv: _HUD_GetUserEntity,
  __ZN12CBaseMonster17CheckMeleeAttack2Eff: __ZN12CBaseMonster17CheckRangeAttack2Eff,
  __ZN13CMP5Chainammo8PrecacheEv: __ZN9CEgonAmmo8PrecacheEv,
  __ZN11CBaseEntity12ShouldToggleE8USE_TYPEi: __ZN11CBaseEntity12ShouldToggleE8USE_TYPEi,
  _ammo_9mmbox: _ammo_9mmbox,
  __ZN20CStudioModelRenderer19StudioEstimateFrameEP16mstudioseqdesc_t: __ZN20CStudioModelRenderer19StudioEstimateFrameEP16mstudioseqdesc_t,
  __ZN12CBaseMonster15FCheckAITriggerEv: _HUD_GetUserEntity,
  __ZN8CCrowbar8PrecacheEv: __ZN8CCrowbar8PrecacheEv,
  __ZN11CBasePlayer9PlayerUseEv: __ZN8CHudBaseD2Ev,
  __ZN20CStudioModelRenderer26StudioRenderFinal_HardwareEv: __ZN20CStudioModelRenderer26StudioRenderFinal_HardwareEv,
  __Z20__MsgFunc_AmmoPickupPKciPv: __Z20__MsgFunc_AmmoPickupPKciPv,
  __ZN11CBasePlayer7IsAliveEv: __ZN11CBasePlayer7IsAliveEv,
  __ZN11CBasePlayer14FlashlightIsOnEv: _HUD_GetUserEntity,
  _EV_EgonFire: _EV_EgonFire,
  __ZN5CHgun15SecondaryAttackEv: __ZN5CHgun15SecondaryAttackEv,
  _PM_PlayWaterSounds: _PM_PlayWaterSounds,
  __ZN12CHudOverview4InitEv: __ZN12CHudOverview4InitEv,
  __ZN6CGauss13PrimaryAttackEv: __ZN6CGauss13PrimaryAttackEv,
  __ZN12CMP5AmmoClip7AddAmmoEP11CBaseEntity: __ZN12CMP5AmmoClip7AddAmmoEP11CBaseEntity,
  __Z15AngleQuaternionPfS_: __Z15AngleQuaternionPfS_,
  __Z20EV_StopPreviousGaussi: __Z20EV_StopPreviousGaussi,
  __ZN11CBasePlayer11TraceAttackEP9entvars_sf6VectorP11TraceResulti: __ZN11CBasePlayer11TraceAttackEP9entvars_sf6VectorP11TraceResulti,
  __ZN12CBaseMonster12HasHumanGibsEv: _HUD_GetUserEntity,
  __Z17CAM_ToFirstPersonv: __Z17CAM_ToFirstPersonv,
  __Z16__MsgFunc_HealthPKciPv: __Z16__MsgFunc_HealthPKciPv,
  __ZN9CCrossbow12UseDecrementEv: __Z14ShouldSimplifyi,
  __ZN9CCrossbow6ReloadEv: __ZN9CCrossbow6ReloadEv,
  __ZN9CCrossbow7HolsterEi: __ZN9CCrossbow7HolsterEi,
  __ZN12CBaseMonster10PBestScentEv: _HUD_GetUserEntity,
  __ZN9CHudTrain4InitEv: __ZN9CHudTrain4InitEv,
  __Z11GetClassPtrI12CHandGrenadeEPT_S2_: __Z11GetClassPtrI12CHandGrenadeEPT_S2_,
  __ZN4CHud16MsgFunc_ResetHUDEPKciPv: __ZN4CHud16MsgFunc_ResetHUDEPKciPv,
  __Z11IN_BackDownv: __Z11IN_BackDownv,
  __ZN7CSprite6ExpandEff: __ZN7CSprite6ExpandEff,
  __ZN5CEgon11GetItemInfoEP8ItemInfo: __ZN5CEgon11GetItemInfoEP8ItemInfo,
  __Z11GetClassPtrI9CCrossbowEPT_S2_: __Z11GetClassPtrI9CCrossbowEPT_S2_,
  __ZN5CHgun12UseDecrementEv: __Z14ShouldSimplifyi,
  __Z11IN_StrafeUpv: __Z11IN_StrafeUpv,
  __ZN5CHgun13PrimaryAttackEv: __ZN5CHgun13PrimaryAttackEv,
  _PM_FixupGravityVelocity: _PM_FixupGravityVelocity,
  __Z11AngleMatrixPKfPA4_f: _AngleMatrix,
  __ZN8CHudMenu11InitHUDDataEv: __ZN8CHudMenu11InitHUDDataEv,
  __Z20__CmdFunc_HideScoresv: __Z20__CmdFunc_HideScoresv,
  __ZN20CStudioModelRenderer17StudioCalcBoneAdjEfPfPKhS2_h: __ZN20CStudioModelRenderer17StudioCalcBoneAdjEfPfPKhS2_h,
  __Z25__CmdFunc_OpenCommandMenuv: _IN_Accumulate,
  __ZN8CHudAmmo13UserCmd_Slot6Ev: __ZN8CHudAmmo13UserCmd_Slot6Ev,
  _PM_CreateStuckTable: _PM_CreateStuckTable,
  __Z18DeactivateSatchelsP11CBasePlayer: __Z18DeactivateSatchelsP11CBasePlayer,
  __ZN12CBaseMonster11TraceAttackEP9entvars_sf6VectorP11TraceResulti: __ZN11CBasePlayer11TraceAttackEP9entvars_sf6VectorP11TraceResulti,
  __ZN11CBasePlayer17AutoaimDeflectionER6Vectorff: __ZN11CBasePlayer17AutoaimDeflectionER6Vectorff,
  __ZN8CHudAmmo13UserCmd_CloseEv: __ZN8CHudAmmo13UserCmd_CloseEv,
  __ZN12CBaseMonster13ReportAIStateEv: __ZN8CHudBaseD2Ev,
  __ZN12CBaseMonster10BuildRouteERK6VectoriP11CBaseEntity: __ZN12CBaseMonster10BuildRouteERK6VectoriP11CBaseEntity,
  __ZN11CBasePlayer15ImpulseCommandsEv: __ZN8CHudBaseD2Ev,
  __ZN4CHud13DrawHudStringEiiiPciii: __ZN4CHud13DrawHudStringEiiiPciii,
  _AngleVectorsTranspose: _AngleVectorsTranspose,
  _EV_TripmineFire: _EV_TripmineFire,
  __Z17HUD_GetWeaponAnimv: __Z17HUD_GetWeaponAnimv,
  __ZN12CBaseMonster10PBestSoundEv: _HUD_GetUserEntity,
  __ZN15CBasePlayerItem11GetItemInfoEP8ItemInfo: __Z10TrainSpeedii,
  __ZN12CMP5AmmoClip8PrecacheEv: __ZN12CMP5AmmoClip8PrecacheEv,
  __ZN12CBaseMonster17CheckMeleeAttack1Eff: __ZN12CBaseMonster17CheckRangeAttack2Eff,
  __ZN11CHudSayText38EnsureTextFitsInOneLineAndWrapIfHaveToEi: __ZN11CHudSayText38EnsureTextFitsInOneLineAndWrapIfHaveToEi,
  __ZN12CBaseMonster12RadiusDamageE6VectorP9entvars_sS2_fii: __ZN12CBaseMonster12RadiusDamageE6VectorP9entvars_sS2_fii,
  __Z15UTIL_DecalTraceP11TraceResulti: _HUD_VoiceStatus,
  _ammo_9mmclip: _ammo_9mmclip,
  __ZN11CHudMessage4InitEv: __ZN11CHudMessage4InitEv,
  __Z16QuaternionMatrixPfPA4_f: __Z16QuaternionMatrixPfPA4_f,
  __ZN4CRpg11GetItemInfoEP8ItemInfo: __ZN4CRpg11GetItemInfoEP8ItemInfo,
  __ZN12CBaseMonster8RouteNewEv: __ZN8CHudBaseD2Ev,
  __ZN12CBaseMonster5RunAIEv: __ZN8CHudBaseD2Ev,
  __ZN13CHudSpectator20DrawOverviewEntitiesEv: __ZN13CHudSpectator20DrawOverviewEntitiesEv,
  __ZN12CBaseMonster16MonsterInitThinkEv: __ZN8CHudBaseD2Ev,
  __ZN11CBasePlayer13EnableControlEi: _HUD_VoiceStatus,
  __ZN11CBaseEntity8GiveAmmoEiPci: __ZN11CBaseEntity8GiveAmmoEiPci,
  __Z6LengthPKf: _Length,
  __ZN12CBaseMonster16ScheduleFromNameEPKc: __Z10TrainSpeedii,
  __ZN8CGrenade10ShootTimedEP9entvars_s6VectorS2_f: __ZN8CGrenade10ShootTimedEP9entvars_s6VectorS2_f,
  __Z20V_GetSingleTargetCamP11cl_entity_sPfS1_: __Z20V_GetSingleTargetCamP11cl_entity_sPfS1_,
  __ZN11CBasePlayer13AddPlayerItemEP15CBasePlayerItem: __Z10TrainSpeedii,
  _PM_CheckVelocity: _PM_CheckVelocity,
  __ZN14CSatchelCharge11BounceSoundEv: __ZN14CSatchelCharge11BounceSoundEv,
  __ZN24CGameStudioModelRendererD0Ev: __ZN8CHudMenuD0Ev,
  __ZN11CBasePlayer12FBecomeProneEv: __Z14ShouldSimplifyi,
  _PM_SplineFraction: _PM_SplineFraction,
  _HUD_GetUserEntity: _HUD_GetUserEntity,
  __ZN15CBasePlayerItem20AttemptToMaterializeEv: __ZN8CHudBaseD2Ev,
  __ZN11CBaseEntity13StartSneakingEv: __ZN8CHudBaseD2Ev,
  __Z11GetClassPtrI8CSatchelEPT_S2_: __Z11GetClassPtrI8CSatchelEPT_S2_,
  __Z16IN_ToggleButtonsff: __Z16IN_ToggleButtonsff,
  _PM_PlayerMove: _PM_PlayerMove,
  __ZN7CPython8PrecacheEv: __ZN7CPython8PrecacheEv,
  __ZN15CHudTextMessage15MsgFunc_TextMsgEPKciPv: __ZN15CHudTextMessage15MsgFunc_TextMsgEPKciPv,
  _HUD_StudioEvent: _HUD_StudioEvent,
  __ZN8CHudAmmo18MsgFunc_WeaponListEPKciPv: __ZN8CHudAmmo18MsgFunc_WeaponListEPKciPv,
  __ZN8CSatchel8PrecacheEv: __ZN8CSatchel8PrecacheEv,
  __ZN13CHudSpectator8SetModesEii: __ZN13CHudSpectator8SetModesEii,
  __ZN11CBaseEntity9HasTargetEj: __ZN11CBaseEntity9HasTargetEj,
  __ZN12CBaseMonster4LookEi: _HUD_VoiceStatus,
  __ZN9CTripmine10WeaponIdleEv: __ZN9CTripmine10WeaponIdleEv,
  __ZN11CBaseEntity10OnControlsEP9entvars_s: __Z10TrainSpeedii,
  __ZN17CBasePlayerWeapon14SendWeaponAnimEiii: __ZN17CBasePlayerWeapon14SendWeaponAnimEiii,
  __ZN13CHudSpectator15DirectorMessageEiPv: __ZN13CHudSpectator15DirectorMessageEiPv,
  __ZN9CSoundEnt11InsertSoundEiRK6Vectorif: __ZN9CSoundEnt11InsertSoundEiRK6Vectorif,
  __Z18__MsgFunc_TeamInfoPKciPv: __Z18__MsgFunc_TeamInfoPKciPv,
  __ZN12CBaseMonster12MakeIdealYawE6Vector: __Z14UTIL_LogPrintfPcz,
  __ZN8CCrowbar5SpawnEv: __ZN8CCrowbar5SpawnEv,
  _Length: _Length,
  __ZN8CCrowbar5SwingEi: __ZN8CCrowbar5SwingEi,
  __ZN17CHudAmmoSecondary7VidInitEv: __Z14ShouldSimplifyi,
  __Z21V_GetMapChasePositioniPfS_S_: __Z21V_GetMapChasePositioniPfS_S_,
  __ZN12CBaseMonster12AdvanceRouteEf: __ZN12CBaseMonster3EatEf,
  __ZN12CBaseMonster10CheckEnemyEP11CBaseEntity: __Z10TrainSpeedii,
  __Z18stub_PrecacheSoundPc: _HUD_GetUserEntity,
  __Z11IN_LookupUpv: __Z11IN_LookupUpv,
  __Z10IN_Impulsev: __Z10IN_Impulsev,
  __ZN13CHudSpectator13CheckSettingsEv: __ZN13CHudSpectator13CheckSettingsEv,
  _V_CalcRefdef: _V_CalcRefdef,
  __ZN12CBaseMonster17FValidateHintTypeEs: __Z10TrainSpeedii,
  __ZN12CBaseMonster15CorpseFallThinkEv: __ZN8CHudBaseD2Ev,
  _weapon_crossbow: _weapon_crossbow,
  __Z13V_GetChasePosiPfS_S_: __Z13V_GetChasePosiPfS_S_,
  __Z13IN_MoveleftUpv: __Z13IN_MoveleftUpv,
  _ammo_357: _ammo_357,
  _ammo_9mmAR: _ammo_9mmAR,
  _HUD_Redraw: _HUD_Redraw,
  __ZN17CBasePlayerWeapon4SaveER5CSave: __ZN10CBaseDelay4SaveER5CSave,
  __Z15EV_CreateTracerPfS_: __Z15EV_CreateTracerPfS_,
  __ZN8CRpgAmmo5SpawnEv: __ZN8CRpgAmmo5SpawnEv,
  _PM_PlayStepSound: _PM_PlayStepSound,
  __ZN12CBaseMonster9PushEnemyEP11CBaseEntityR6Vector: __ZN12CBaseMonster9PushEnemyEP11CBaseEntityR6Vector,
  __ZN12CBaseMonster7RestoreER8CRestore: __ZN10CBaseDelay4SaveER5CSave,
  __ZN15CHudTextMessage4InitEv: __ZN15CHudTextMessage4InitEv,
  __Z11READ_STRINGv: __Z11READ_STRINGv,
  __ZN5CHgun10WeaponIdleEv: __ZN5CHgun10WeaponIdleEv,
  __ZN14CHudFlashlight18MsgFunc_FlashlightEPKciPv: __ZN14CHudFlashlight18MsgFunc_FlashlightEPKciPv,
  __ZN8CShotgun8PrecacheEv: __ZN8CShotgun8PrecacheEv,
  __Z17CAM_StartDistancev: __Z17CAM_StartDistancev,
  __ZN17CBasePlayerWeapon15ExtractClipAmmoEPS_: __Z10TrainSpeedii,
  __ZN10CHudGeiger4InitEv: __ZN10CHudGeiger4InitEv,
  __ZN12CBaseMonster4StopEv: __ZN12CBaseMonster4StopEv,
  __ZN8CSatchel12UseDecrementEv: __Z14ShouldSimplifyi,
  __Z14CAM_YawRightUpv: __Z14CAM_YawRightUpv,
  __Z14IN_Attack2Downv: __Z14IN_Attack2Downv,
  __Z11IN_Shutdownv: _IN_Accumulate,
  __ZN9CHudTrain13MsgFunc_TrainEPKciPv: __ZN9CHudTrain13MsgFunc_TrainEPKciPv,
  __ZN11CBaseEntity10TraceBleedEf6VectorP11TraceResulti: __ZN11CBaseEntity10TraceBleedEf6VectorP11TraceResulti,
  __Z22UTIL_GetNextBestWeaponP11CBasePlayerP15CBasePlayerItem: __ZN10CBaseDelay4SaveER5CSave,
  __ZN6CGauss17GetFullChargeTimeEv: __ZN6CGauss17GetFullChargeTimeEv,
  __Z12IN_ScoreDownv: __Z12IN_ScoreDownv,
  __ZN4CMP59iItemSlotEv: __ZN4CMP59iItemSlotEv,
  __ZN8CCrowbar6DeployEv: __ZN8CCrowbar6DeployEv,
  __ZN17CBasePlayerWeapon9CanDeployEv: __ZN17CBasePlayerWeapon9CanDeployEv,
  __ZN11CBasePlayer16FlashlightTurnOnEv: __ZN8CHudBaseD2Ev,
  __ZN11CBasePlayer13AmmoInventoryEi: __ZN11CBaseEntity11DamageDecalEi,
  __Z13stub_SetModelP7edict_sPKc: __Z14UTIL_LogPrintfPcz,
  __ZN4CRpg10CanHolsterEv: __ZN4CRpg10CanHolsterEv,
  __ZN8CSatchel15SecondaryAttackEv: __ZN8CSatchel15SecondaryAttackEv,
  __ZN12CBaseMonster13GetIdealStateEv: __ZN4CMP59iItemSlotEv,
  __ZN15CBasePlayerAmmo12DefaultTouchEP11CBaseEntity: _HUD_VoiceStatus,
  _Distance: _Distance,
  __Z10MatrixCopyPA4_fS0_: __Z10MatrixCopyPA4_fS0_,
  __ZN14CBaseAnimating12GetBodygroupEi: __Z10TrainSpeedii,
  __Z29__CmdFunc_ToggleServerBrowserv: _IN_Accumulate,
  __ZN11CBaseEntity11DamageDecalEi: __ZN11CBaseEntity11DamageDecalEi,
  __ZN15CBasePlayerItem12DefaultTouchEP11CBaseEntity: _HUD_VoiceStatus,
  __ZN11CBaseEntity12ReflectGaussEv: __ZN11CBaseEntity12ReflectGaussEv,
  __ZN12CBaseMonster12FindHintNodeEv: __ZN8CGrenade10BloodColorEv,
  __ZN11CBaseEntity11FireBulletsEm6VectorS0_S0_fiiiP9entvars_s: __ZN11CBaseEntity11FireBulletsEm6VectorS0_S0_fiiiP9entvars_s,
  __ZN4CRpg7HolsterEi: __ZN4CRpg7HolsterEi,
  __ZN8CCrowbar10SwingAgainEv: __ZN8CCrowbar10SwingAgainEv,
  __ZN11CBasePlayer12SwitchWeaponEP15CBasePlayerItem: __Z10TrainSpeedii,
  __ZN10CHudGeiger14MsgFunc_GeigerEPKciPv: __ZN10CHudGeiger14MsgFunc_GeigerEPKciPv,
  __ZN7CPython13PrimaryAttackEv: __ZN7CPython13PrimaryAttackEv,
  _PM_AddToTouched: _PM_AddToTouched,
  __ZN11CBasePlayer12StopSneakingEv: __ZN11CBasePlayer12StopSneakingEv,
  __ZN11CHudSayText15MsgFunc_SayTextEPKciPv: __ZN11CHudSayText15MsgFunc_SayTextEPKciPv,
  _IN_ClientMoveEvent: _IN_ClientMoveEvent,
  __Z11UTIL_RemoveP11CBaseEntity: __ZN8CHudBaseD2Ev,
  __Z18CL_ResetButtonBitsi: __Z18CL_ResetButtonBitsi,
  __ZN11CBaseEntity14SetToggleStateEi: _HUD_VoiceStatus,
  __Z12R_StudioInitv: __Z12R_StudioInitv,
  __Z13CAM_YawLeftUpv: __Z13CAM_YawLeftUpv,
  __ZN10CHudHealth14MsgFunc_DamageEPKciPv: __ZN10CHudHealth14MsgFunc_DamageEPKciPv,
  __ZN11CBaseEntity10IsBSPModelEv: __ZN11CBaseEntity10IsBSPModelEv,
  __ZN17CBasePlayerWeapon13ItemPostFrameEv: __ZN17CBasePlayerWeapon13ItemPostFrameEv,
  __Z15__CmdFunc_Closev: __Z15__CmdFunc_Closev,
  __Z9IN_UpDownv: __Z9IN_UpDownv,
  _weapon_9mmAR: _weapon_mp5,
  __ZN6CGauss10WeaponIdleEv: __ZN6CGauss10WeaponIdleEv,
  __ZN12CBaseMonster7RunTaskEP6Task_t: _HUD_VoiceStatus,
  __ZN11CBasePlayer14GetGunPositionEv: __ZN11CBasePlayer14GetGunPositionEv,
  __ZN13CMP5Chainammo7AddAmmoEP11CBaseEntity: __ZN13CMP5Chainammo7AddAmmoEP11CBaseEntity,
  _PM_GetVisEntInfo: _PM_GetVisEntInfo,
  __Z9IN_DuckUpv: __Z9IN_DuckUpv,
  __ZN14CSatchelCharge5SpawnEv: __ZN14CSatchelCharge5SpawnEv,
  __ZN20CStudioModelRenderer16StudioMergeBonesEP7model_s: __ZN20CStudioModelRenderer16StudioMergeBonesEP7model_s,
  __ZN5CHgun6ReloadEv: __ZN5CHgun6ReloadEv,
  __Z17__MsgFunc_BatteryPKciPv: __Z17__MsgFunc_BatteryPKciPv,
  __ZN11CBasePlayer20ForceClientDllUpdateEv: __ZN8CHudBaseD2Ev,
  _VectorMatrix: _VectorMatrix,
  _PM_FixPlayerCrouchStuck: _PM_FixPlayerCrouchStuck,
  __ZN17CBasePlayerWeapon16UpdateClientDataEP11CBasePlayer: __Z10TrainSpeedii,
  __ZN15CBasePlayerItem16PrimaryAmmoIndexEv: __ZN8CGrenade10BloodColorEv,
  __Z11KB_Shutdownv: __Z11KB_Shutdownv,
  __Z10BEGIN_READPvi: __Z10BEGIN_READPvi,
  __Z11GetClassPtrI14CSatchelChargeEPT_S2_: __Z11GetClassPtrI14CSatchelChargeEPT_S2_,
  __ZN12CBaseMonster8GetEnemyEv: _HUD_GetUserEntity,
  __Z18UTIL_IsValidEntityP7edict_s: __Z14ShouldSimplifyi,
  __ZN11CHudMessage15MsgFunc_HudTextEPKciPv: __ZN11CHudMessage15MsgFunc_HudTextEPKciPv,
  __ZN10CGlockAmmo5SpawnEv: __ZN10CGlockAmmo5SpawnEv,
  __ZN12CBaseMonster6ListenEv: __ZN8CHudBaseD2Ev,
  __ZN6CGauss4FireE6VectorS0_f: __ZN6CGauss4FireE6VectorS0_f,
  __ZN8CHudAmmoD0Ev: __ZN8CHudMenuD0Ev,
  _PM_CatagorizeTextureType: _PM_CatagorizeTextureType,
  __Z19UTIL_StringToVectorPfPKc: __Z19UTIL_StringToVectorPfPKc,
  __ZN17CBasePlayerWeapon15SecondaryAttackEv: __ZN8CHudBaseD2Ev,
  __ZN11CHudSayText4DrawEf: __ZN11CHudSayText4DrawEf,
  __ZN4CMP511AddToPlayerEP11CBasePlayer: __Z10TrainSpeedii,
  __ZN11CBaseEntity8IsMovingEv: __ZN11CBaseEntity8IsMovingEv,
  __ZN14CBaseAnimating4SaveER5CSave: __ZN10CBaseDelay4SaveER5CSave,
  _CL_CameraOffset: _CL_CameraOffset,
  __Z17FindEntityForwardP11CBaseEntity: _HUD_GetUserEntity,
  __ZN17CHudAmmoSecondary4InitEv: __ZN17CHudAmmoSecondary4InitEv,
  __ZN11CPythonAmmo8PrecacheEv: __ZN11CPythonAmmo8PrecacheEv,
  __Z10HUD_GetFOVv: __Z10HUD_GetFOVv,
  __ZN20CStudioModelRenderer20StudioSetUpTransformEi: __ZN20CStudioModelRenderer20StudioSetUpTransformEi,
  __ZN12CShotgunAmmo5SpawnEv: __ZN12CShotgunAmmo5SpawnEv,
  _PM_SwapTextures: _PM_SwapTextures,
  __Z17__MsgFunc_BuildStPKciPv: __Z15__MsgFunc_FeignPKciPv,
  __ZN5CEgon9iItemSlotEv: __ZN4CRpg9iItemSlotEv,
  __Z20__MsgFunc_ServerNamePKciPv: __Z15__MsgFunc_FeignPKciPv,
  __Z12IN_Attack2Upv: __Z12IN_Attack2Upv,
  __ZN13CHudSpectator4InitEv: __ZN13CHudSpectator4InitEv,
  __Z17__MsgFunc_HudTextPKciPv: __Z17__MsgFunc_HudTextPKciPv,
  __ZN13CHudStatusBar19MsgFunc_StatusValueEPKciPv: __ZN13CHudStatusBar19MsgFunc_StatusValueEPKciPv,
  __ZN11CBaseEntity9IsDormantEv: _HUD_GetUserEntity,
  __Z20__MsgFunc_WeaponListPKciPv: __Z20__MsgFunc_WeaponListPKciPv,
  _HUD_CreateEntities: _HUD_CreateEntities,
  __ZN12CBaseMonster10MonsterUseEP11CBaseEntityS1_8USE_TYPEf: __ZN8CGrenade11DetonateUseEP11CBaseEntityS1_8USE_TYPEf,
  __Z10READ_COORDv: __Z10READ_COORDv,
  __ZN5CHgun6DeployEv: __ZN5CHgun6DeployEv,
  __ZN9CCrossbow5SpawnEv: __ZN9CCrossbow5SpawnEv,
  __ZN8CCrowbar11GetItemInfoEP8ItemInfo: __ZN8CCrowbar11GetItemInfoEP8ItemInfo,
  __ZN12CBaseMonster15MonsterInitDeadEv: __ZN8CHudBaseD2Ev,
  __Z20__MsgFunc_FlashlightPKciPv: __Z20__MsgFunc_FlashlightPKciPv,
  __ZN10CHudHealth10DrawDamageEf: __ZN10CHudHealth10DrawDamageEf,
  __ZN12CBaseMonster17CheckRangeAttack2Eff: __ZN12CBaseMonster17CheckRangeAttack2Eff,
  __ZN13CCrossbowAmmo7AddAmmoEP11CBaseEntity: __ZN13CCrossbowAmmo7AddAmmoEP11CBaseEntity,
  __ZN14CHudScoreboard16MsgFunc_TeamInfoEPKciPv: __ZN14CHudScoreboard16MsgFunc_TeamInfoEPKciPv,
  __Z11UpdateBeamsv: __Z11UpdateBeamsv,
  __ZN8CHudMOTDD0Ev: __ZN8CHudMenuD0Ev,
  __ZN13CHudSpectator17DrawOverviewLayerEv: __ZN13CHudSpectator17DrawOverviewLayerEv,
  __ZN8CSatchel11AddToPlayerEP11CBasePlayer: __ZN8CSatchel11AddToPlayerEP11CBasePlayer,
  __ZN14CBaseAnimating15GetAutomovementER6VectorS1_f: __ZN14CBaseAnimating15GetAutomovementER6VectorS1_f,
  __Z12IN_SpeedDownv: __Z12IN_SpeedDownv,
  __Z10READ_SHORTv: __Z10READ_SHORTv,
  __Z11GetClassPtrI8CShotgunEPT_S2_: __Z11GetClassPtrI8CShotgunEPT_S2_,
  __ZN12CBaseMonster12StartMonsterEv: __ZN8CHudBaseD2Ev,
  __ZN11CHudMessage19MessageScanNextCharEv: __ZN11CHudMessage19MessageScanNextCharEv,
  __Z16ClearMultiDamagev: _IN_Accumulate,
  __ZN11CBaseEntity6KilledEP9entvars_si: __ZN11CBaseEntity6KilledEP9entvars_si,
  __ZN14CBaseAnimating17ResetSequenceInfoEv: __ZN8CHudBaseD2Ev,
  __Z16__MsgFunc_GeigerPKciPv: __Z16__MsgFunc_GeigerPKciPv,
  _HUD_TxferLocalOverrides: _HUD_TxferLocalOverrides,
  __ZN11CBaseEntity13GetNextTargetEv: _HUD_GetUserEntity,
  __ZN12CBaseMonster18HearingSensitivityEv: __ZN12CBaseMonster18HearingSensitivityEv,
  __ZN20CStudioModelRenderer19StudioCalcRotationsEPA3_fPA4_fP16mstudioseqdesc_tP13mstudioanim_tf: __ZN20CStudioModelRenderer19StudioCalcRotationsEPA3_fPA4_fP16mstudioseqdesc_tP13mstudioanim_tf,
  _EV_FireMP5: _EV_FireMP5,
  __ZN11CHudMessage10MessageAddEPKcf: __ZN11CHudMessage10MessageAddEPKcf,
  __Z15CL_AdjustAnglesfPf: __Z15CL_AdjustAnglesfPf,
  __ZN8CHudMenu4InitEv: __ZN8CHudMenu4InitEv,
  __Z10IN_GraphUpv: __Z10IN_GraphUpv,
  __ZN6CGlock9GlockFireEffi: __ZN6CGlock9GlockFireEffi,
  __ZN6CGauss5SpawnEv: __ZN6CGauss5SpawnEv,
  __ZN11CBasePlayer6KilledEP9entvars_si: __ZN11CBasePlayer6KilledEP9entvars_si,
  __ZN4CMP56DeployEv: __ZN4CMP56DeployEv,
  __Z19EV_HLDM_CheckTraceriPfS_S_S_iiPi: __Z19EV_HLDM_CheckTraceriPfS_S_S_iiPi,
  __ZN9CHudTrain7VidInitEv: __ZN9CHudTrain7VidInitEv,
  __ZN4CRpg13PrimaryAttackEv: __ZN4CRpg13PrimaryAttackEv,
  __ZN11CBasePlayer12ResetAutoaimEv: __ZN8CHudBaseD2Ev,
  _IN_Accumulate: _IN_Accumulate,
  __Z15__CmdFunc_Slot7v: __Z15__CmdFunc_Slot7v,
  __Z17EV_TFC_IsAllyTeamii: __Z17EV_TFC_IsAllyTeamii,
  __ZN12CHandGrenade10CanHolsterEv: __ZN12CHandGrenade10CanHolsterEv,
  __Z19EV_HLDM_FireBulletsiPfS_S_iS_S_fiiPiff: __Z19EV_HLDM_FireBulletsiPfS_S_iS_S_fiiPiff,
  __ZN11CBaseEntity10IntersectsEPS_: __Z10TrainSpeedii,
  __VectorSubtract: __VectorSubtract,
  __Z14V_CalcGunAngleP12ref_params_s: __Z14V_CalcGunAngleP12ref_params_s,
  __ZN10CGaussAmmo7AddAmmoEP11CBaseEntity: __ZN9CEgonAmmo7AddAmmoEP11CBaseEntity,
  __ZN8CHudMOTD4DrawEf: __ZN8CHudMOTD4DrawEf,
  __Z11GetClassPtrI4CRpgEPT_S2_: __Z11GetClassPtrI4CRpgEPT_S2_,
  __ZN12CBaseMonster16BestVisibleEnemyEv: _HUD_GetUserEntity,
  _PM_AirAccelerate: _PM_AirAccelerate,
  __ZN8CRpgAmmo8PrecacheEv: __ZN8CRpgAmmo8PrecacheEv,
  __ZN14CSatchelCharge8PrecacheEv: __ZN14CSatchelCharge8PrecacheEv,
  __ZN6CGauss7HolsterEi: __ZN6CGauss7HolsterEi,
  __ZN11CBasePlayer16GetAutoaimVectorEf: __ZN11CBasePlayer16GetAutoaimVectorEf,
  __Z12UTIL_SetSizeP9entvars_sRK6VectorS3_: __Z12UTIL_SetSizeP9entvars_sRK6VectorS3_,
  _PM_ResetStuckOffsets: _PM_ResetStuckOffsets,
  __ZN12CBaseMonster17SetSequenceByNameEPc: _HUD_VoiceStatus,
  __ZN8CCrowbar5SmackEv: __ZN8CHudBaseD2Ev,
  _Initialize: _Initialize,
  __ZN15HistoryResource15DrawAmmoHistoryEf: __ZN15HistoryResource15DrawAmmoHistoryEf,
  __Z9CL_IsDeadv: __Z9CL_IsDeadv,
  __ZN8CHudMenu16MsgFunc_ShowMenuEPKciPv: __ZN8CHudMenu16MsgFunc_ShowMenuEPKciPv,
  __ZN11CBaseEntity8FVisibleERK6Vector: __Z17EV_TFC_IsAllyTeamii,
  _PM_InitTextureTypes: _PM_InitTextureTypes,
  __ZN4CHud12MsgFunc_LogoEPKciPv: __ZN4CHud12MsgFunc_LogoEPKciPv,
  _PM_WaterMove: _PM_WaterMove,
  __ZN11CBasePlayer17UpdatePlayerSoundEv: __ZN8CHudBaseD2Ev,
  __Z14AddMultiDamageP9entvars_sP11CBaseEntityfi: __Z14AddMultiDamageP9entvars_sP11CBaseEntityfi,
  __ZN13CCrossbowAmmo5SpawnEv: __ZN13CCrossbowAmmo5SpawnEv,
  __ZN8CHudAmmo13UserCmd_Slot3Ev: __ZN8CHudAmmo13UserCmd_Slot3Ev,
  __Z11GetClassPtrI6CGlockEPT_S2_: __Z11GetClassPtrI6CGlockEPT_S2_,
  __ZN12CBaseMonster12FTriangulateERK6VectorS2_fP11CBaseEntityPS0_: __ZN12CBaseMonster12FTriangulateERK6VectorS2_fP11CBaseEntityPS0_,
  __ZN13CHudSpectator4DrawEf: __ZN13CHudSpectator4DrawEf,
  __ZN11CBaseEntity14GetToggleStateEv: _HUD_GetUserEntity,
  _EV_FireRpg: _EV_FireRpg,
  __Z11GetClassPtrI15CMP5AmmoGrenadeEPT_S2_: __Z11GetClassPtrI15CMP5AmmoGrenadeEPT_S2_,
  __ZN11CHudSayTextD0Ev: __ZN8CHudMenuD0Ev,
  __ZN4CHud17DrawDarkRectangleEiiii: __ZN4CHud17DrawDarkRectangleEiiii,
  __Z20__MsgFunc_StatusTextPKciPv: __Z20__MsgFunc_StatusTextPKciPv,
  __ZN9CCrossbow8FireBoltEv: __ZN9CCrossbow8FireBoltEv,
  _PM_Duck: _PM_Duck,
  __ZN8CHudMenu4DrawEf: __ZN8CHudMenu4DrawEf,
  __ZN12CHudOverview11InitHUDDataEv: __ZN8CHudBaseD2Ev,
  __ZN12CBaseMonster11FInViewConeEP11CBaseEntity: __Z10TrainSpeedii,
  _PM_CheckFalling: _PM_CheckFalling,
  __ZN8CSatchel5ThrowEv: __ZN8CSatchel5ThrowEv,
  _Demo_ReadBuffer: _Demo_ReadBuffer,
  __Z26V_GetDirectedChasePositionP11cl_entity_sS0_PfS1_: __Z26V_GetDirectedChasePositionP11cl_entity_sS0_PfS1_,
  __ZN11CBasePlayer10ObjectCapsEv: _HUD_GetUserEntity,
  __ZN11CHudBatteryD0Ev: __ZN8CHudMenuD0Ev,
  _weapon_9mmhandgun: _weapon_glock,
  __ZN10CHudGeiger4DrawEf: __ZN10CHudGeiger4DrawEf,
  __Z16IN_MoverightDownv: __Z16IN_MoverightDownv,
  __ZN6CGauss8PrecacheEv: __ZN6CGauss8PrecacheEv,
  __ZN5CEgon7HolsterEi: __ZN5CEgon7HolsterEi,
  __ZN13CHudSpectator14FindNextPlayerEb: __ZN13CHudSpectator14FindNextPlayerEb,
  __ZN13CHudStatusBar4DrawEf: __ZN13CHudStatusBar4DrawEf,
  __Z9READ_CHARv: __Z9READ_CHARv,
  __Z7DrawBariiiif: __Z7DrawBariiiif,
  __ZN7CSqueak13PrimaryAttackEv: __ZN7CSqueak13PrimaryAttackEv,
  __Z11IN_DuckDownv: __Z11IN_DuckDownv,
  __ZN15CBasePlayerAmmo11MaterializeEv: __ZN8CHudBaseD2Ev,
  __ZN6CGlock10WeaponIdleEv: __ZN6CGlock10WeaponIdleEv,
  __Z20HUD_WeaponsPostThinkP13local_state_sS0_P9usercmd_sdj: __Z20HUD_WeaponsPostThinkP13local_state_sS0_P9usercmd_sdj,
  __ZN11CBaseEntity21MySquadMonsterPointerEv: _HUD_GetUserEntity,
  __ZN5CEgon12UpdateEffectERK6VectorS2_f: __ZN5CEgon12UpdateEffectERK6VectorS2_f,
  __ZN11CBasePlayer6TeamIDEv: __ZN11CBasePlayer6TeamIDEv,
  __ZN11CBasePlayer10RenewItemsEv: __ZN8CHudBaseD2Ev,
  __ZN11CBasePlayer14SelectLastItemEv: __ZN11CBasePlayer14SelectLastItemEv,
  __ZN12CBaseMonster17BuildNearestRouteE6VectorS0_ff: __ZN12CBaseMonster9FindCoverE6VectorS0_ff,
  __ZN10CHudHealth12GetPainColorERiS0_S0_: __ZN10CHudHealth12GetPainColorERiS0_S0_,
  __ZN12CBaseMonster11SetActivityE8Activity: _HUD_VoiceStatus,
  __Z15EV_BoltCallbackP9tempent_sff: __Z15EV_BoltCallbackP9tempent_sff,
  __ZN13CHudStatusBar4InitEv: __ZN13CHudStatusBar4InitEv,
  _PM_FlyMove: _PM_FlyMove,
  __ZN5CEgon7UseAmmoEi: __ZN5CEgon7UseAmmoEi,
  __ZN14CBaseAnimating11SetBlendingEif: __ZN14CBaseAnimating11SetBlendingEif,
  __ZN5CHgun11GetItemInfoEP8ItemInfo: __ZN5CHgun11GetItemInfoEP8ItemInfo,
  __ZN12CBaseMonster14CheckLocalMoveERK6VectorS2_P11CBaseEntityPf: __ZN12CBaseMonster14CheckLocalMoveERK6VectorS2_P11CBaseEntityPf,
  __ZN12CBaseMonster8BBoxFlatEv: __Z14ShouldSimplifyi,
  __ZN9CTripmine8PrecacheEv: __ZN9CTripmine8PrecacheEv,
  __Z8CAM_InUpv: __Z8CAM_InUpv,
  __Z20__CmdFunc_PrevWeaponv: __Z20__CmdFunc_PrevWeaponv,
  __ZN10CHudHealth19CalcDamageDirectionE6Vector: __ZN10CHudHealth19CalcDamageDirectionE6Vector,
  __ZN5CEgon6AttackEv: __ZN5CEgon6AttackEv,
  __ZN4CHud15MsgFunc_InitHUDEPKciPv: __ZN4CHud15MsgFunc_InitHUDEPKciPv,
  _AngleBetweenVectors: _AngleBetweenVectors,
  __Z8IN_UseUpv: __Z8IN_UseUpv,
  __ZN14CBaseAnimating15GetBonePositionEiR6VectorS1_: __ZN14CBaseAnimating13GetAttachmentEiR6VectorS1_,
  __ZN13CHudSpectator14LoadMapSpritesEv: __ZN13CHudSpectator14LoadMapSpritesEv,
  __ZN15WeaponsResource20GetAmmoPicFromWeaponEiR7wrect_s: __ZN15WeaponsResource20GetAmmoPicFromWeaponEiR7wrect_s,
  __ZN8CGrenade7ExplodeEP11TraceResulti: __ZN8CGrenade7ExplodeE6VectorS0_,
  __Z13GetViewEntityv: __Z13GetViewEntityv,
  __ZN4CHud14GetSpriteIndexEPKc: __ZN4CHud14GetSpriteIndexEPKc,
  __Z18stub_PrecacheEventiPKc: __Z10TrainSpeedii,
  __Z11GetClassPtrI5CEgonEPT_S2_: __Z11GetClassPtrI5CEgonEPT_S2_,
  __ZN8CHudMOTD4InitEv: __ZN8CHudMOTD4InitEv,
  __ZN13CHudSpectator23AddOverviewEntityToListEiP11cl_entity_sd: __ZN13CHudSpectator23AddOverviewEntityToListEiP11cl_entity_sd,
  __Z7KB_Initv: __Z7KB_Initv,
  __ZN12CBaseMonster16IgnoreConditionsEv: _HUD_GetUserEntity,
  __Z12COM_FileBasePKcPc: __Z12COM_FileBasePKcPc,
  __ZN11CBasePlayer10BodyTargetERK6Vector: __ZN11CBasePlayer10BodyTargetERK6Vector,
  __ZN12CBaseMonster10AlertSoundEv: __ZN8CHudBaseD2Ev,
  __ZN11CBaseEntity21SetObjectCollisionBoxEv: __ZN8CHudBaseD2Ev,
  __ZN12CHandGrenade11GetItemInfoEP8ItemInfo: __ZN12CHandGrenade11GetItemInfoEP8ItemInfo,
  _HUD_DrawTransparentTriangles: _IN_Accumulate,
  __ZN6CGlock11GetItemInfoEP8ItemInfo: __ZN6CGlock11GetItemInfoEP8ItemInfo,
  __Z11GetClassPtrI8CCrowbarEPT_S2_: __Z11GetClassPtrI8CCrowbarEPT_S2_,
  __Z15__CmdFunc_Slot9v: __Z15__CmdFunc_Slot9v,
  __ZN11CBaseEntity11IsNetClientEv: _HUD_GetUserEntity,
  __ZN6CGauss12UseDecrementEv: __Z14ShouldSimplifyi,
  __ZN12CBaseMonster16MyMonsterPointerEv: __ZN15CBasePlayerAmmo7RespawnEv,
  __Z13CAM_PitchUpUpv: __Z13CAM_PitchUpUpv,
  __ZN5CEgon12CreateEffectEv: __ZN8CHudBaseD2Ev,
  _monster_satchel: _monster_satchel,
  __ZN8CHudAmmo4DrawEf: __ZN8CHudAmmo4DrawEf,
  __ZN11cl_entity_sC2ERKS_: __ZN11cl_entity_sC2ERKS_,
  __Z23UTIL_FindEntityInSphereP11CBaseEntityRK6Vectorf: __Z23UTIL_FindEntityInSphereP11CBaseEntityRK6Vectorf,
  __Z10IN_UseDownv: __Z10IN_UseDownv,
  __ZN17CBasePlayerWeapon16AddSecondaryAmmoEiPci: __ZN17CBasePlayerWeapon16AddSecondaryAmmoEiPci,
  __ZN8CHudAmmo4InitEv: __ZN8CHudAmmo4InitEv,
  __ZN8CShotgun10WeaponIdleEv: __ZN8CShotgun10WeaponIdleEv,
  __ZN8CGrenade6KilledEP9entvars_si: __ZN8CGrenade7ExplodeE6VectorS0_,
  __Z12IN_BreakDownv: __Z12IN_BreakDownv,
  __Z12DecalGunshotP11TraceResulti: _HUD_VoiceStatus,
  __ZN15CHudTextMessage18LocaliseTextStringEPKcPci: __ZN15CHudTextMessage18LocaliseTextStringEPKcPci,
  __ZN11CBasePlayer17FlashlightTurnOffEv: __ZN8CHudBaseD2Ev,
  __ZN15CHudStatusIcons4InitEv: __ZN15CHudStatusIcons4InitEv,
  __ZN17CBasePlayerWeapon10WeaponIdleEv: __ZN8CHudBaseD2Ev,
  __ZN17CBasePlayerWeapon9AddWeaponEv: __ZN17CBasePlayerWeapon9AddWeaponEv,
  _HUD_Frame: _HUD_Frame,
  __Z9IN_BackUpv: __Z9IN_BackUpv,
  __Z11GetClassPtrI4CMP5EPT_S2_: __Z11GetClassPtrI4CMP5EPT_S2_,
  __ZN11CBasePlayer4DuckEv: __ZN8CHudBaseD2Ev,
  _ammo_gaussclip: _ammo_gaussclip,
  _EV_FireGlock1: _EV_FireGlock1,
  __ZN4CRpg9iItemSlotEv: __ZN4CRpg9iItemSlotEv,
  _EV_FireGlock2: _EV_FireGlock2,
  __ZN10CHudHealth7VidInitEv: __ZN10CHudHealth7VidInitEv,
  __ZN11CBaseEntity11UpdateOwnerEv: __ZN8CHudBaseD2Ev,
  _PM_PushEntity: _PM_PushEntity,
  __ZN12CBaseMonster17ShouldFadeOnDeathEv: _HUD_GetUserEntity,
  __ZN11CBasePlayer14RemoveAllItemsEi: _HUD_VoiceStatus,
  _ammo_egonclip: _ammo_egonclip,
  _weapon_gauss: _weapon_gauss,
  __Z20EV_HLDM_DecalGunshotP9pmtrace_si: __Z20EV_HLDM_DecalGunshotP9pmtrace_si,
  __ZN11CBasePlayer20SetCustomDecalFramesEi: _HUD_VoiceStatus,
  __Z10LoadVModelPcP11CBasePlayer: __Z10LoadVModelPcP11CBasePlayer,
  _VectorTransform: _VectorTransform,
  __ZN12CHandGrenade9iItemSlotEv: __ZN7CSqueak9iItemSlotEv,
  __ZN8CGrenade11DetonateUseEP11CBaseEntityS1_8USE_TYPEf: __ZN8CGrenade11DetonateUseEP11CBaseEntityS1_8USE_TYPEf,
  __ZN15CBasePlayerItem7HolsterEi: _HUD_VoiceStatus,
  __Z9IN_DownUpv: __Z9IN_DownUpv,
  __ZN11CBasePlayer4JumpEv: __ZN8CHudBaseD2Ev,
  __Z11IN_DownDownv: __Z11IN_DownDownv,
  __ZN10CHudHealth14MsgFunc_HealthEPKciPv: __ZN10CHudHealth14MsgFunc_HealthEPKciPv,
  __Z16CAM_YawRightDownv: __Z16CAM_YawRightDownv,
  __Z13IN_ReloadDownv: __Z13IN_ReloadDownv,
  __ZN6CGlock13PrimaryAttackEv: __ZN6CGlock13PrimaryAttackEv,
  __ZN17CBasePlayerWeapon14AddPrimaryAmmoEiPcii: __ZN17CBasePlayerWeapon14AddPrimaryAmmoEiPcii,
  __ZN14CBaseAnimating17SetBoneControllerEif: __ZN14CBaseAnimating11SetBlendingEif,
  __ZN15CBasePlayerItem21SetObjectCollisionBoxEv: __ZN8CHudBaseD2Ev,
  __Z15HUD_SetMaxSpeedPK7edict_sf: __Z15HUD_SetMaxSpeedPK7edict_sf,
  __Z8U_Randomv: __Z8U_Randomv,
  _EV_FireCrossbow2: _EV_FireCrossbow2,
  __ZN4CMP58PrecacheEv: __ZN4CMP58PrecacheEv,
  _CL_CreateMove: _CL_CreateMove,
  __ZN12CBaseMonster8PopEnemyEv: _HUD_GetUserEntity,
  __ZN11CBaseEntity7RespawnEv: _HUD_GetUserEntity,
  __Z11GetClassPtrI6CGaussEPT_S2_: __Z11GetClassPtrI6CGaussEPT_S2_,
  __ZN5CBeam12PointEntInitERK6Vectori: __ZN11CBasePlayer9AddPointsEii,
  __Z15IN_LookdownDownv: __Z15IN_LookdownDownv,
  __Z21UTIL_SharedRandomLongjii: __Z21UTIL_SharedRandomLongjii,
  __ZN20CStudioModelRendererD2Ev: __ZN8CHudBaseD2Ev,
  __ZN12CBaseMonster8IsMovingEv: __ZN12CBaseMonster8IsMovingEv,
  __ZN14CHudScoreboard17MsgFunc_TeamScoreEPKciPv: __ZN14CHudScoreboard17MsgFunc_TeamScoreEPKciPv,
  __ZN11CBaseEntity12StopSneakingEv: __ZN8CHudBaseD2Ev,
  __ZN11CHudMessage16MessageScanStartEv: __ZN11CHudMessage16MessageScanStartEv,
  __ZN10CGlockAmmo8PrecacheEv: __ZN10CGlockAmmo8PrecacheEv,
  __ZN11CBasePlayer12ItemPreFrameEv: __ZN8CHudBaseD2Ev,
  __ZN11CBaseToggle4SaveER5CSave: __ZN10CBaseDelay4SaveER5CSave,
  _CL_IsThirdPerson: _CL_IsThirdPerson,
  __ZN11CHudMessage9FadeBlendEffff: __ZN11CHudMessage9FadeBlendEffff,
  __Z15__MsgFunc_FeignPKciPv: __Z15__MsgFunc_FeignPKciPv,
  __ZN11CBaseToggle14GetToggleStateEv: __ZN11CBaseToggle14GetToggleStateEv,
  __ZN12CBaseMonster16PrescheduleThinkEv: __ZN8CHudBaseD2Ev,
  __Z25EV_HLDM_GunshotDecalTraceP9pmtrace_sPc: __Z25EV_HLDM_GunshotDecalTraceP9pmtrace_sPc,
  __ZN8CSatchel11GetItemInfoEP8ItemInfo: __ZN8CSatchel11GetItemInfoEP8ItemInfo,
  __ZN12CBaseMonster12FBecomeProneEv: __Z14ShouldSimplifyi,
  __ZN17CBasePlayerWeapon13PrimaryAttackEv: __ZN8CHudBaseD2Ev,
  __ZN12CBaseMonster11FRouteClearEv: _HUD_GetUserEntity,
  __Z20__MsgFunc_ItemPickupPKciPv: __Z20__MsgFunc_ItemPickupPKciPv,
  __ZN11CHudMessage5ResetEv: __ZN11CHudMessage5ResetEv,
  _HUD_ConnectionlessPacket: _HUD_ConnectionlessPacket,
  _VectorInverse: _VectorInverse,
  __ZN5CEgon16GetPulseIntervalEv: __ZN5CEgon16GetPulseIntervalEv,
  __ZN12CBaseMonster17CheckRangeAttack1Eff: __ZN12CBaseMonster17CheckRangeAttack2Eff,
  __ZN8CHudAmmo18MsgFunc_HideWeaponEPKciPv: __ZN8CHudAmmo18MsgFunc_HideWeaponEPKciPv,
  _HUD_Key_Event: _HUD_Key_Event,
  __Z12IN_KLookDownv: __Z12IN_KLookDownv,
  __ZN8CHudAmmo18MsgFunc_WeapPickupEPKciPv: __ZN8CHudAmmo18MsgFunc_WeapPickupEPKciPv,
  __ZN14CBaseAnimating14LookupActivityEi: __Z10TrainSpeedii,
  __ZN8CHudAmmo13UserCmd_Slot9Ev: __ZN8CHudAmmo13UserCmd_Slot9Ev,
  _VectorCompare: _VectorCompare,
  __ZN11CBasePlayer9PostThinkEv: __ZN8CHudBaseD2Ev,
  __ZN20CStudioModelRenderer17StudioPlayerBlendEP16mstudioseqdesc_tPiPf: __ZN20CStudioModelRenderer17StudioPlayerBlendEP16mstudioseqdesc_tPiPf,
  __ZN4CRpg12UseDecrementEv: __Z14ShouldSimplifyi,
  __ZN5CEgon5SpawnEv: __ZN5CEgon5SpawnEv,
  __ZN11CBasePlayer9WaterMoveEv: __ZN8CHudBaseD2Ev,
  __Z9V_AddIdleP12ref_params_s: __Z9V_AddIdleP12ref_params_s,
  _PM_AirMove: _PM_AirMove,
  __ZN15CBasePlayerItem9FallThinkEv: __ZN8CHudBaseD2Ev,
  __ZN15CMP5AmmoGrenade7AddAmmoEP11CBaseEntity: __ZN15CMP5AmmoGrenade7AddAmmoEP11CBaseEntity,
  __Z10SpawnBlood6Vectorif: __Z10SpawnBlood6Vectorif,
  __ZN12CBaseMonster6KilledEP9entvars_si: __ZN11CBasePlayer9AddPointsEii,
  __ZN12CBaseMonster20CheckTraceHullAttackEfii: __ZN12CBaseMonster20CheckTraceHullAttackEfii,
  __ZN6CGauss11GetItemInfoEP8ItemInfo: __ZN6CGauss11GetItemInfoEP8ItemInfo,
  __ZN8CGrenade10BloodColorEv: __ZN8CGrenade10BloodColorEv,
  __Z9IN_Alt1Upv: __Z9IN_Alt1Upv,
  __Z18__MsgFunc_ShowMenuPKciPv: __Z18__MsgFunc_ShowMenuPKciPv,
  __ZN12CBaseMonster14FValidateCoverERK6Vector: __ZN12CBaseMonster13FGetNodeRouteE6Vector,
  _weapon_hornetgun: _weapon_hornetgun,
  __Z11EV_IsPlayeri: __Z11EV_IsPlayeri,
  __Z21MaxAngleBetweenAnglesPfS_: __Z21MaxAngleBetweenAnglesPfS_,
  __ZN12CMP5AmmoClip5SpawnEv: __ZN12CMP5AmmoClip5SpawnEv,
  __ZN7CSqueak9iItemSlotEv: __ZN7CSqueak9iItemSlotEv,
  __ZN14CBaseAnimating15HandleAnimEventEP14MonsterEvent_t: _HUD_VoiceStatus,
  __ZN20CStudioModelRendererD0Ev: __ZN8CHudMenuD0Ev,
  __ZN11CBaseEntity8ClassifyEv: _HUD_GetUserEntity,
  __ZN7CSqueak10WeaponIdleEv: __ZN7CSqueak10WeaponIdleEv,
  __Z13DBG_EntOfVarsPK9entvars_s: _HUD_GetUserEntity,
  __ZN11CBasePlayer16RemovePlayerItemEP15CBasePlayerItem: __Z10TrainSpeedii,
  __Z10READ_FLOATv: __Z10READ_FLOATv,
  __ZN8CHudBase5ThinkEv: __ZN8CHudBaseD2Ev,
  __Z18__MsgFunc_GameModePKciPv: __Z18__MsgFunc_GameModePKciPv,
  __ZN11CHudBattery4InitEv: __ZN11CHudBattery4InitEv,
  __Z9GetEntityi: __Z9GetEntityi,
  __ZN11CBasePlayer14DropPlayerItemEPc: _HUD_VoiceStatus,
  _VectorAngles: _VectorAngles,
  __Z19EV_HLDM_DamageDecalP9physent_s: __Z19EV_HLDM_DamageDecalP9physent_s,
  __ZN15CBasePlayerItem11MaterializeEv: __ZN8CHudBaseD2Ev,
  __Z20__MsgFunc_HideWeaponPKciPv: __Z20__MsgFunc_HideWeaponPKciPv,
  __Z15__CmdFunc_Slot3v: __Z15__CmdFunc_Slot3v,
  __ZN15CBasePlayerAmmo7RespawnEv: __ZN15CBasePlayerAmmo7RespawnEv,
  __Z19UTIL_ClientPrintAlliPKcS0_S0_S0_S0_: __Z19UTIL_ClientPrintAlliPKcS0_S0_S0_S0_,
  __ZN11CBasePlayer20BarnacleVictimBittenEP9entvars_s: _HUD_VoiceStatus,
  _HUD_PlayerMove: _HUD_PlayerMove,
  __ZN11CBasePlayer13StartObserverE6VectorS0_: __ZN11CBasePlayer13StartObserverE6VectorS0_,
  __ZN11CBasePlayer15CheckSuitUpdateEv: __ZN8CHudBaseD2Ev,
  __Z24V_CalcIntermissionRefdefP12ref_params_s: __Z24V_CalcIntermissionRefdefP12ref_params_s,
  __ZN11CBasePlayer15AddPointsToTeamEii: __ZN11CBasePlayer9AddPointsEii,
  __Z16UTIL_MakeVectorsRK6Vector: __ZN8CHudBaseD2Ev,
  __ZN12CBaseMonster13TaskIsRunningEv: _HUD_GetUserEntity,
  __ZN17CHudAmmoSecondary19MsgFunc_SecAmmoIconEPKciPv: __ZN17CHudAmmoSecondary19MsgFunc_SecAmmoIconEPKciPv,
  _HUD_GetStudioModelInterface: _HUD_GetStudioModelInterface,
  __Z15__CmdFunc_Slot5v: __Z15__CmdFunc_Slot5v,
  __ZN4CHud13DrawHudNumberEiiiiiii: __ZN4CHud13DrawHudNumberEiiiiiii,
  __ZN15CBasePlayerItem12AddDuplicateEPS_: __Z10TrainSpeedii,
  __ZN12CBaseMonster10TakeDamageEP9entvars_sS1_fi: __ZN11CBasePlayer10TakeDamageEP9entvars_sS1_fi,
  __ZN20CStudioModelRenderer17StudioFxTransformEP11cl_entity_sPA4_f: __ZN20CStudioModelRenderer17StudioFxTransformEP11cl_entity_sPA4_f,
  _PM_DrawBBox: _PM_DrawBBox,
  __ZN12CBaseMonster12CheckAttacksEP11CBaseEntityf: __ZN12CBaseMonster12CheckAttacksEP11CBaseEntityf,
  _PM_MapTextureTypeStepType: _PM_MapTextureTypeStepType,
  __ZN11CBaseEntity13OverrideResetEv: __ZN8CHudBaseD2Ev,
  __Z13VectorComparePKfS0_: _VectorCompare,
  __ZN12CBaseMonster13RouteSimplifyEP11CBaseEntity: _HUD_VoiceStatus,
  __ZN11CBaseEntity13AddPlayerItemEP15CBasePlayerItem: __Z10TrainSpeedii,
  __ZN14CHudFlashlight16MsgFunc_FlashBatEPKciPv: __ZN14CHudFlashlight16MsgFunc_FlashBatEPKciPv,
  __ZN12CBaseMonster15OpenDoorAndWaitEP9entvars_s: __ZN12CBaseMonster13FLSoundVolumeEP6CSound,
  __ZN11CBasePlayer8ClassifyEv: _HUD_GetUserEntity,
  __ZN11CBasePlayer14SelectNextItemEi: _HUD_VoiceStatus,
  __Z19UTIL_WeaponTimeBasev: __Z19UTIL_WeaponTimeBasev,
  __ZN4CHud7VidInitEv: __ZN4CHud7VidInitEv,
  __ZN8CSatchel13PrimaryAttackEv: __ZN8CSatchel13PrimaryAttackEv,
  _CrossProduct: _CrossProduct,
  __ZN8CCrowbar7HolsterEi: __ZN8CCrowbar7HolsterEi,
  _EV_FireMP52: _EV_FireMP52,
  __ZN11CBaseEntity7BlockedEPS_: __ZN11CBaseEntity7BlockedEPS_,
  __Z16ApplyMultiDamageP9entvars_sS0_: _HUD_VoiceStatus,
  __ZN12CBaseMonster16FCanCheckAttacksEv: _HUD_GetUserEntity,
  __ZN15CBasePlayerAmmo5SpawnEv: __ZN8CHudBaseD2Ev,
  __Z18__MsgFunc_DeathMsgPKciPv: __Z18__MsgFunc_DeathMsgPKciPv,
  __ZN17CBasePlayerWeapon12UseDecrementEv: _HUD_GetUserEntity,
  __Z21__MsgFunc_StatusValuePKciPv: __Z21__MsgFunc_StatusValuePKciPv,
  __ZN8CShotgun6ReloadEv: __ZN8CShotgun6ReloadEv,
  __Z14__MsgFunc_LogoPKciPv: __Z14__MsgFunc_LogoPKciPv,
  _PM_FindTextureType: _PM_FindTextureType,
  _AngleMatrix: _AngleMatrix,
  __Z20__CmdFunc_NextWeaponv: __Z20__CmdFunc_NextWeaponv,
  __ZN12CBaseMonster12PlaySentenceEPKcfff: __ZN12CBaseMonster12PlaySentenceEPKcfff,
  _ammo_mp5clip: _ammo_9mmAR,
  __ZN12CBaseMonster14ScheduleChangeEv: __ZN8CHudBaseD2Ev,
  __ZN12CBaseMonster20MakeDamageBloodDecalEifP11TraceResultRK6Vector: __ZN12CBaseMonster20MakeDamageBloodDecalEifP11TraceResultRK6Vector,
  __Z14EV_MuzzleFlashv: __Z14EV_MuzzleFlashv,
  __ZN14CBaseAnimating12SetBodygroupEii: __ZN8CGrenade7ExplodeE6VectorS0_,
  __ZN14CHudScoreboard18UserCmd_HideScoresEv: __ZN14CHudScoreboard18UserCmd_HideScoresEv,
  __ZN11CBasePlayer8PreThinkEv: __ZN8CHudBaseD2Ev,
  __ZN11CBasePlayer10TakeDamageEP9entvars_sS1_fi: __ZN11CBasePlayer10TakeDamageEP9entvars_sS1_fi,
  __Z13IN_AttackDownv: __Z13IN_AttackDownv,
  __ZN8CShotgun15SecondaryAttackEv: __ZN8CShotgun15SecondaryAttackEv,
  __ZN12CBaseMonster20PlayScriptedSentenceEPKcfffiP11CBaseEntity: __ZN12CBaseMonster20PlayScriptedSentenceEPKcfffiP11CBaseEntity,
  __ZN5CEgon12UseDecrementEv: __Z14ShouldSimplifyi,
  __Z17EV_GetGunPositionP12event_args_sPfS1_: __Z17EV_GetGunPositionP12event_args_sPfS1_,
  __ZN8CSatchel7HolsterEi: __ZN8CSatchel7HolsterEi,
  __ZN11CBaseEntity5TouchEPS_: __ZN11CBaseEntity5TouchEPS_,
  _HUD_Shutdown: _HUD_Shutdown,
  __ZN8CSatchel12AddDuplicateEP15CBasePlayerItem: __ZN8CSatchel12AddDuplicateEP15CBasePlayerItem,
  __ZN15WeaponsResource17LoadWeaponSpritesEP6WEAPON: __ZN15WeaponsResource17LoadWeaponSpritesEP6WEAPON,
  __ZN4CRpg6ReloadEv: __ZN4CRpg6ReloadEv,
  __ZN8CHudAmmo9SlotInputEi: __ZN8CHudAmmo9SlotInputEi,
  __ZN11CBasePlayer20CheatImpulseCommandsEi: _HUD_VoiceStatus,
  _HUD_AddEntity: _HUD_AddEntity,
  __ZN8CHudMOTD7VidInitEv: __Z14ShouldSimplifyi,
  _PM_AddGravity: _PM_AddGravity,
  __Z11IN_AttackUpv: __Z11IN_AttackUpv,
  __Z14UTIL_TraceLineRK6VectorS1_15IGNORE_MONSTERSP7edict_sP11TraceResult: __Z14UTIL_TraceLineRK6VectorS1_15IGNORE_MONSTERSP7edict_sP11TraceResult,
  __Z11GetClassPtrI13CMP5ChainammoEPT_S2_: __Z11GetClassPtrI13CMP5ChainammoEPT_S2_,
  _PM_ParticleLine: _PM_ParticleLine,
  __ZN12CBaseMonster14InsertWaypointE6Vectori: __ZN12CBaseMonster14InsertWaypointE6Vectori,
  __ZN20CStudioModelRendererC2Ev: __ZN20CStudioModelRendererC2Ev,
  __ZN11CBaseEntity6TeamIDEv: __ZN11CBasePlayer6TeamIDEv,
  __Z7IN_UpUpv: __Z7IN_UpUpv,
  __Z11IN_LeftDownv: __Z11IN_LeftDownv,
  _HUD_TempEntUpdate: _HUD_TempEntUpdate,
  __ZN15HistoryResource12AddToHistoryEiii: __ZN15HistoryResource12AddToHistoryEiii,
  __ZN15CBasePlayerItem4SaveER5CSave: __ZN10CBaseDelay4SaveER5CSave,
  __ZN10CGaussAmmo5SpawnEv: __ZN10CGaussAmmo5SpawnEv,
  __Z12RadiusDamage6VectorP9entvars_sS1_ffii: __Z12RadiusDamage6VectorP9entvars_sS1_ffii,
  __Z10IN_ScoreUpv: __Z10IN_ScoreUpv,
  __Z9CAM_OutUpv: __Z9CAM_OutUpv,
  __Z11GetClassPtrI13CCrossbowAmmoEPT_S2_: __Z11GetClassPtrI13CCrossbowAmmoEPT_S2_,
  __ZN17CBasePlayerWeapon11AddToPlayerEP11CBasePlayer: __Z10TrainSpeedii,
  __ZN15CHudStatusIcons4DrawEf: __ZN15CHudStatusIcons4DrawEf,
  __ZN15CMP5AmmoGrenade8PrecacheEv: __ZN15CMP5AmmoGrenade8PrecacheEv,
  __ZN17CBasePlayerWeapon10PrintStateEv: __ZN17CBasePlayerWeapon10PrintStateEv,
  __ZN12CHudOverview7VidInitEv: __ZN12CHudOverview7VidInitEv,
  _NormalizeAngles: _NormalizeAngles,
  __Z18__MsgFunc_ValClassPKciPv: __Z15__MsgFunc_FeignPKciPv,
  __ZN15CBasePlayerItem9iItemSlotEv: _HUD_GetUserEntity,
  __Z14GetClientColori: __Z14GetClientColori,
  __ZN15CBasePlayerItem8FallInitEv: __ZN8CHudBaseD2Ev,
  __ZN11CBaseEntity11MakeDormantEv: __ZN8CHudBaseD2Ev,
  __ZN12CBaseMonster11MoveExecuteEP11CBaseEntityRK6Vectorf: __ZN12CBaseMonster11MoveExecuteEP11CBaseEntityRK6Vectorf,
  __ZN7CPython9iItemSlotEv: __ZN6CGlock9iItemSlotEv,
  __ZN12CBaseMonster13RouteClassifyEi: __Z10TrainSpeedii,
  __Z16__MsgFunc_SetFOVPKciPv: __Z16__MsgFunc_SetFOVPKciPv,
  __Z12AlertMessage10ALERT_TYPEPcz: __Z12AlertMessage10ALERT_TYPEPcz,
  __ZN4CHud10AddHudElemEP8CHudBase: __ZN4CHud10AddHudElemEP8CHudBase,
  __ZN15CBasePlayerItem18SecondaryAmmoIndexEv: __ZN8CGrenade10BloodColorEv,
  __ZN12CBaseMonster15CanPlaySentenceEi: __ZN12CBaseMonster15CanPlaySentenceEi,
  __ZN17CBasePlayerWeapon12RetireWeaponEv: __ZN8CHudBaseD2Ev,
  __ZN14CHudScoreboard8DeathMsgEii: __ZN14CHudScoreboard8DeathMsgEii,
  __Z12IN_RightDownv: __Z12IN_RightDownv,
  __ZN12CBaseMonster20BarnacleVictimBittenEP9entvars_s: _HUD_VoiceStatus,
  __ZN8CHudAmmo18UserCmd_PrevWeaponEv: __ZN8CHudAmmo18UserCmd_PrevWeaponEv,
  __ZN15CBasePlayerItem13ItemPostFrameEv: __ZN8CHudBaseD2Ev,
  _EV_HornetGunFire: _EV_HornetGunFire,
  __ZN11CBasePlayer13StartSneakingEv: __ZN11CBasePlayer13StartSneakingEv,
  _weapon_handgrenade: _weapon_handgrenade,
  __Z11GetClassPtrI11CPythonAmmoEPT_S2_: __Z11GetClassPtrI11CPythonAmmoEPT_S2_,
  __Z13EV_EjectBrassPfS_fii: __Z13EV_EjectBrassPfS_fii,
  __ZN4CMP510WeaponIdleEv: __ZN4CMP510WeaponIdleEv,
  __Z18HUD_SendWeaponAnimiii: __Z18HUD_SendWeaponAnimiii,
  __ZN5CEgon11AddToPlayerEP11CBasePlayer: __Z10TrainSpeedii,
  __ZN14CHudScoreboard4DrawEf: __ZN14CHudScoreboard4DrawEf,
  __Z14IN_ForwardDownv: __Z14IN_ForwardDownv,
  __ZN11CBaseToggle8KeyValueEP14KeyValueData_s: _HUD_VoiceStatus,
  __ZN11CBasePlayer13HasPlayerItemEP15CBasePlayerItem: __Z10TrainSpeedii,
  __Z19__MsgFunc_SpectatorPKciPv: __Z15__MsgFunc_FeignPKciPv,
  __ZN11CHudMessage17MsgFunc_GameTitleEPKciPv: __ZN11CHudMessage17MsgFunc_GameTitleEPKciPv,
  __Z8CAM_Initv: __Z8CAM_Initv,
  __Z12IN_JLookDownv: __Z12IN_JLookDownv,
  __ZN15CHudDeathNoticeD0Ev: __ZN8CHudMenuD0Ev,
  __ZN15CHudTextMessage26BufferedLocaliseTextStringEPKc: __ZN15CHudTextMessage26BufferedLocaliseTextStringEPKc,
  __Z11ClientPrintP9entvars_siPKcS2_S2_S2_S2_: __Z11ClientPrintP9entvars_siPKcS2_S2_S2_S2_,
  __ZN7CPython11GetItemInfoEP8ItemInfo: __ZN7CPython11GetItemInfoEP8ItemInfo,
  __Z13SpectatorMenuv: __Z13SpectatorMenuv,
  __ZN11CHudSayText7VidInitEv: __Z14ShouldSimplifyi,
  __Z15__MsgFunc_AmmoXPKciPv: __Z15__MsgFunc_AmmoXPKciPv,
  __ZN15WeaponsResource9CountAmmoEi: __ZN15WeaponsResource9CountAmmoEi,
  _EV_FireGauss: _EV_FireGauss,
  __ZN8CHudBaseD2Ev: __ZN8CHudBaseD2Ev,
  _PM_WaterJump: _PM_WaterJump,
  __Z18CAM_StartMouseMovev: __Z18CAM_StartMouseMovev,
  __ZN13CHudSpectator7VidInitEv: __ZN13CHudSpectator7VidInitEv,
  __ZN4CHud16DrawHudStringLenEPc: __ZN4CHud16DrawHudStringLenEPc,
  __Z15QuaternionSlerpPfS_fS_: __Z15QuaternionSlerpPfS_fS_,
  __Z14UTIL_LogPrintfPcz: __Z14UTIL_LogPrintfPcz,
  _PM_GetRandomStuckOffsets: _PM_GetRandomStuckOffsets,
  __ZN20CStudioModelRenderer22StudioCalcBonePositionEifP13mstudiobone_tP13mstudioanim_tPfS4_: __ZN20CStudioModelRenderer22StudioCalcBonePositionEifP13mstudiobone_tP13mstudioanim_tPfS4_,
  __Z18R_StudioDrawPlayeriP14entity_state_s: __Z18R_StudioDrawPlayeriP14entity_state_s,
  __Z5KeyUpP9kbutton_s: __Z5KeyUpP9kbutton_s,
  __ZN4CRpg16ShouldWeaponIdleEv: __Z14ShouldSimplifyi,
  __ZN13CHudSpectator17HandleButtonsDownEi: __ZN13CHudSpectator17HandleButtonsDownEi,
  __ZN4CHud5ThinkEv: __ZN4CHud5ThinkEv,
  __ZN9CEgonAmmo5SpawnEv: __ZN9CEgonAmmo5SpawnEv,
  __ZN14CBaseAnimating19InitBoneControllersEv: __ZN8CHudBaseD2Ev,
  __ZN4CRpg11AddToPlayerEP11CBasePlayer: __Z10TrainSpeedii,
  _HUD_GetHullBounds: _HUD_GetHullBounds,
  __ZN11CPythonAmmo5SpawnEv: __ZN11CPythonAmmo5SpawnEv,
  __Z9IN_JumpUpv: __Z9IN_JumpUpv,
  __ZN15CBasePlayerAmmo7AddAmmoEP11CBaseEntity: __ZN10CBaseDelay4SaveER5CSave,
  __Z19__MsgFunc_TeamScorePKciPv: __Z19__MsgFunc_TeamScorePKciPv,
  _IN_ClearStates: _IN_Accumulate,
  _PM_Move: _PM_Move,
  __Z7KeyDownP9kbutton_s: __Z7KeyDownP9kbutton_s,
  __Z13VectorInversePf: _VectorInverse,
  __ZN17CBasePlayerWeapon7HolsterEi: __ZN17CBasePlayerWeapon7HolsterEi,
  _weapon_shotgun: _weapon_shotgun,
  __Z13V_GetInEyePosiPfS_: __Z13V_GetInEyePosiPfS_,
  __ZN8CHudMOTD5ResetEv: __ZN8CHudMOTD5ResetEv,
  __ZN12CBaseMonster13FRefreshRouteEv: _HUD_GetUserEntity,
  __Z14HUD_GetLastOrgPf: __Z14HUD_GetLastOrgPf,
  __ZN12CBaseMonster10GibMonsterEv: __ZN8CHudBaseD2Ev,
  __ZN6CGlock6ReloadEv: __ZN6CGlock6ReloadEv,
  __Z17__MsgFunc_ConcussPKciPv: __Z17__MsgFunc_ConcussPKciPv,
  __ZN17CBasePlayerWeapon18SecondaryAmmoIndexEv: __ZN8CGrenade10BloodColorEv,
  _weapon_357: _weapon_357,
  __ZN20CStudioModelRenderer17StudioProcessGaitEP14entity_state_s: __ZN20CStudioModelRenderer17StudioProcessGaitEP14entity_state_s,
  __ZN12CBaseMonster12MoveToTargetE8Activityf: __ZN12CBaseMonster11MoveToEnemyE8Activityf,
  __Z20V_GetMapFreePositionPfS_S_: __Z20V_GetMapFreePositionPfS_S_,
  __ZN8CHudAmmo9DrawWListEf: __ZN8CHudAmmo9DrawWListEf,
  __ZN12CBaseMonster13StopFollowingEi: _HUD_VoiceStatus,
  __ZN11CBaseEntity11IsTriggeredEPS_: __ZN10CBaseDelay4SaveER5CSave,
  __ZN13CHudSpectator5ResetEv: __ZN13CHudSpectator5ResetEv,
  __ZN17CBasePlayerWeapon15ResetEmptySoundEv: __ZN17CBasePlayerWeapon15ResetEmptySoundEv,
  __Z13SpectatorHelpv: __Z13SpectatorHelpv,
  __ZN13CHudStatusBar5ResetEv: __ZN13CHudStatusBar5ResetEv,
  __Z11IN_ReloadUpv: __Z11IN_ReloadUpv,
  __ZN10CHudHealth5ResetEv: __ZN10CHudHealth5ResetEv,
  _HUD_TxferPredictionData: _HUD_TxferPredictionData,
  __ZN7CPython6DeployEv: __ZN7CPython6DeployEv,
  __Z15CAM_ClearStatesv: __Z15CAM_ClearStatesv,
  __Z11ScaleColorsRiS_S_i: __Z11ScaleColorsRiS_S_i,
  __ZN11CBaseEntity8KeyValueEP14KeyValueData_s: __ZN11CBaseEntity8KeyValueEP14KeyValueData_s,
  __Z17__MsgFunc_SayTextPKciPv: __Z17__MsgFunc_SayTextPKciPv,
  __ZN14CHudScoreboard17MsgFunc_ScoreInfoEPKciPv: __ZN14CHudScoreboard17MsgFunc_ScoreInfoEPKciPv,
  __ZN9CTripmine9iItemSlotEv: __ZN7CSqueak9iItemSlotEv,
  __ZN15CHudStatusIcons7VidInitEv: __Z14ShouldSimplifyi,
  __ZN11CBaseEntity8FVisibleEPS_: __Z10TrainSpeedii,
  __Z18__MsgFunc_ResetHUDPKciPv: __Z18__MsgFunc_ResetHUDPKciPv,
  __Z18UTIL_PrecacheOtherPKc: __ZN8CHudBaseD2Ev,
  __Z19__MsgFunc_AllowSpecPKciPv: __Z15__MsgFunc_FeignPKciPv,
  __ZN12CBaseMonster16FindLateralCoverERK6VectorS2_: __ZN8CGrenade12ShootContactEP9entvars_s6VectorS2_,
  _PM_SpectatorMove: _PM_SpectatorMove,
  __ZN15CHudStatusIcons10EnableIconEPchhh: __ZN15CHudStatusIcons10EnableIconEPchhh,
  __ZN12CHandGrenade6DeployEv: __ZN12CHandGrenade6DeployEv,
  __ZN8CSatchel5SpawnEv: __ZN8CSatchel5SpawnEv,
  __ZN13CHudSpectator17ParseOverviewFileEv: __ZN13CHudSpectator17ParseOverviewFileEv,
  _AngleIMatrix: _AngleIMatrix,
  __ZN11CBasePlayer19UpdateGeigerCounterEv: __ZN8CHudBaseD2Ev,
  __Z16KB_ConvertStringPcPS_: __Z16KB_ConvertStringPcPS_,
  __ZN7CSqueak8PrecacheEv: __ZN7CSqueak8PrecacheEv,
  __ZN9CCrossbow11AddToPlayerEP11CBasePlayer: __Z10TrainSpeedii,
  __ZN17CBasePlayerWeapon16PrimaryAmmoIndexEv: __ZN8CGrenade10BloodColorEv,
  __ZN11CBasePlayer14SendAmmoUpdateEv: __ZN8CHudBaseD2Ev,
  __ZN12CBaseMonster10ISoundMaskEv: _HUD_GetUserEntity,
  __ZN9CTripmine11GetItemInfoEP8ItemInfo: __ZN9CTripmine11GetItemInfoEP8ItemInfo,
  __ZN4CMP518SecondaryAmmoIndexEv: __ZN4CMP518SecondaryAmmoIndexEv,
  __ZN8CHudMenu5ResetEv: __ZN8CHudMenu5ResetEv,
  __ZN4CRpg10WeaponIdleEv: __ZN4CRpg10WeaponIdleEv,
  __ZN5CEgon9EndAttackEv: __ZN5CEgon9EndAttackEv,
  __ZN15CHudStatusIcons11DisableIconEPc: __ZN15CHudStatusIcons11DisableIconEPc,
  __ZN12CHandGrenade13PrimaryAttackEv: __ZN12CHandGrenade13PrimaryAttackEv,
  __ZN8CHudAmmo13UserCmd_Slot1Ev: __ZN8CHudAmmo13UserCmd_Slot1Ev,
  __Z20UTIL_FindEntityInMapPcPfS0_: __Z20UTIL_FindEntityInMapPcPfS0_,
  __ZN12CHudOverview4DrawEf: __ZN12CHudOverview4DrawEf,
  __Z12IN_ForwardUpv: __Z12IN_ForwardUpv,
  __ZN13CHudSpectator21CheckOverviewEntitiesEv: __ZN13CHudSpectator21CheckOverviewEntitiesEv,
  __ZN12CHandGrenade5SpawnEv: __ZN12CHandGrenade5SpawnEv,
  _weapon_glock: _weapon_glock,
  _PM_UpdateStepSound: _PM_UpdateStepSound,
  __ZN13CHudSpectator14IsActivePlayerEP11cl_entity_s: __ZN13CHudSpectator14IsActivePlayerEP11cl_entity_s,
  __ZN9CCrossbow6DeployEv: __ZN9CCrossbow6DeployEv,
  __ZN4CHud16UpdateClientDataEP13client_data_sf: __ZN4CHud16UpdateClientDataEP13client_data_sf,
  __ZN20CStudioModelRenderer15StudioSaveBonesEv: __ZN20CStudioModelRenderer15StudioSaveBonesEv,
  __ZN12CBaseMonster12MonsterThinkEv: __ZN8CHudBaseD2Ev,
  __ZN7CSqueak5SpawnEv: __ZN7CSqueak5SpawnEv,
  __ZN5CEgon4FireERK6VectorS2_: __ZN5CEgon4FireERK6VectorS2_,
  __ZN12CBaseMonster11SetYawSpeedEv: __ZN8CHudBaseD2Ev,
  __ZN8CCrowbar13PrimaryAttackEv: __ZN8CCrowbar13PrimaryAttackEv,
  __ZN4CHud6RedrawEfi: __ZN4CHud6RedrawEfi,
  __Z26__CmdFunc_CloseCommandMenuv: _IN_Accumulate,
  __ZN12CHandGrenade7HolsterEi: __ZN12CHandGrenade7HolsterEi,
  stackRestore: stackRestore,
  __ZN9CTripmine7HolsterEi: __ZN9CTripmine7HolsterEi,
  __ZN8CSatchel9iItemSlotEv: __ZN7CSqueak9iItemSlotEv,
  __Z18UTIL_ParticleBoxesv: __Z18UTIL_ParticleBoxesv,
  __ZN14CBaseAnimating7RestoreER8CRestore: __ZN10CBaseDelay4SaveER5CSave,
  _InterpolateAngles: _InterpolateAngles,
  __Z9InitInputv: __Z9InitInputv,
  __ZN11CBaseEntity9IsInWorldEv: __Z14ShouldSimplifyi,
  _PM_CalcRoll: _PM_CalcRoll,
  _PM_ClipVelocity: _PM_ClipVelocity,
  __ZN11CBasePlayer10HasWeaponsEv: _HUD_GetUserEntity,
  __Z15__MsgFunc_TrainPKciPv: __Z15__MsgFunc_TrainPKciPv,
  _PM_Ladder: _PM_Ladder,
  __ZN4CHud14MsgFunc_DamageEPKciPv: __ZN4CHud14MsgFunc_DamageEPKciPv,
  __ZN4CHud14MsgFunc_SetFOVEPKciPv: __ZN4CHud14MsgFunc_SetFOVEPKciPv,
  _ammo_glockclip: _ammo_9mmclip,
  __ZN8CHudAmmo13UserCmd_Slot7Ev: __ZN8CHudAmmo13UserCmd_Slot7Ev,
  __ZN9CTripmine13PrimaryAttackEv: __ZN9CTripmine13PrimaryAttackEv,
  __ZN24CGameStudioModelRendererC2Ev: __ZN24CGameStudioModelRendererC2Ev,
  __ZN11CBaseEntity5ThinkEv: __ZN11CBaseEntity5ThinkEv,
  __Z9IN_Cancelv: __Z9IN_Cancelv,
  __ZN4CMP515SecondaryAttackEv: __ZN4CMP515SecondaryAttackEv,
  __Z10HUD_IsGamePKc: __Z10HUD_IsGamePKc,
  __Z21HUD_InitClientWeaponsv: __Z21HUD_InitClientWeaponsv,
  __ZN10CHudHealthD0Ev: __ZN8CHudMenuD0Ev,
  __ZN12CBaseMonster10BloodColorEv: __ZN12CBaseMonster10BloodColorEv,
  __ZN8CShotgun5SpawnEv: __ZN8CShotgun5SpawnEv,
  __ZN12CBaseMonster10MoveToNodeE8ActivityfRK6Vector: __ZN12CBaseMonster10MoveToNodeE8ActivityfRK6Vector,
  __ZN11CBasePlayer16UpdateClientDataEv: __ZN8CHudBaseD2Ev,
  __Z15READ_HIRESANGLEv: __Z15READ_HIRESANGLEv,
  __Z12IN_MLookDownv: __Z12IN_MLookDownv,
  __Z10EjectBrassRK6VectorS1_fii: __Z10EjectBrassRK6VectorS1_fii,
  __Z10IN_SpeedUpv: __Z10IN_SpeedUpv,
  __Z15__CmdFunc_Slot4v: __Z15__CmdFunc_Slot4v,
  __ZN17CBasePlayerWeapon16ShouldWeaponIdleEv: _HUD_GetUserEntity,
  __ZN11CHudMessage7VidInitEv: __ZN11CHudMessage7VidInitEv,
  __ZN11CBaseEntity4SaveER5CSave: __ZN10CBaseDelay4SaveER5CSave,
  __ZN14CHudScoreboard11DrawPlayersEifiPc: __ZN14CHudScoreboard11DrawPlayersEifiPc,
  _PM_CheckWater: _PM_CheckWater,
  __DotProduct: __DotProduct,
  __ZN12CHandGrenade10WeaponIdleEv: __ZN12CHandGrenade10WeaponIdleEv,
  __ZN15WeaponsResource16GetNextActivePosEii: __ZN15WeaponsResource16GetNextActivePosEii,
  __ZN11CBaseEntity17FireBulletsPlayerEm6VectorS0_S0_fiiiP9entvars_si: __ZN11CBaseEntity17FireBulletsPlayerEm6VectorS0_S0_fiiiP9entvars_si,
  __ZN12CBaseMonster12ShootAtEnemyERK6Vector: __ZN12CBaseMonster12ShootAtEnemyERK6Vector,
  __Z21V_CalcSpectatorRefdefP12ref_params_s: __Z21V_CalcSpectatorRefdefP12ref_params_s,
  __Z24EV_HLDM_PlayTextureSoundiP9pmtrace_sPfS1_i: __Z24EV_HLDM_PlayTextureSoundiP9pmtrace_sPfS1_i,
  __ZN11CBasePlayer13ItemPostFrameEv: __ZN8CHudBaseD2Ev,
  __ZN11CBaseEntity11EyePositionEv: __ZN11CBaseEntity11EyePositionEv,
  __ZN8CSatchel9CanDeployEv: __ZN8CSatchel9IsUseableEv,
  __ZN12CBaseMonster11CoverRadiusEv: __ZN12CBaseMonster11CoverRadiusEv,
  __ZN12CShotgunAmmo7AddAmmoEP11CBaseEntity: __ZN12CShotgunAmmo7AddAmmoEP11CBaseEntity,
  __Z18__MsgFunc_ViewModePKciPv: __Z18__MsgFunc_ViewModePKciPv,
  _ammo_crossbow: _ammo_crossbow,
  __Z25StripEndNewlineFromStringPc: __Z25StripEndNewlineFromStringPc,
  __Z6V_Initv: __Z6V_Initv,
  __ZN11CBasePlayer9AddPointsEii: __ZN11CBasePlayer9AddPointsEii,
  __ZN8CGrenade7ExplodeE6VectorS0_: __ZN8CGrenade7ExplodeE6VectorS0_,
  __ZN15CBasePlayerItem11AddToPlayerEP11CBasePlayer: __ZN10CBaseDelay4SaveER5CSave,
  __ZN15CBasePlayerItem12ItemPreFrameEv: __ZN8CHudBaseD2Ev,
  __Z15V_ResetChaseCamv: __Z15V_ResetChaseCamv,
  __ZN13CHudStatusBarD0Ev: __ZN8CHudMenuD0Ev,
  __Z10IN_KLookUpv: __Z10IN_KLookUpv,
  __ZN11CHudSayText4InitEv: __ZN11CHudSayText4InitEv,
  __Z12ScrollTextUpv: __Z12ScrollTextUpv,
  __ZN12CBaseMonster7IsAliveEv: __ZN12CBaseMonster7IsAliveEv,
  __ZN14CHudFlashlight4DrawEf: __ZN14CHudFlashlight4DrawEf,
  __ZN17CHudAmmoSecondary4DrawEf: __ZN17CHudAmmoSecondary4DrawEf,
  __Z16UTIL_ParticleBoxP11CBasePlayerPfS1_fhhh: __Z16UTIL_ParticleBoxP11CBasePlayerPfS1_fhhh,
  __ZN14CHudScoreboard18UserCmd_ShowScoresEv: __ZN14CHudScoreboard18UserCmd_ShowScoresEv,
  __ZN5CEgon13DestroyEffectEv: __ZN8CHudBaseD2Ev,
  __ZN5CHgun7HolsterEi: __ZN5CHgun7HolsterEi,
  __ZN14CHudScoreboardD0Ev: __ZN8CHudMenuD0Ev,
  __Z13IN_StrafeDownv: __Z13IN_StrafeDownv,
  __ZN8CHudAmmo18UserCmd_NextWeaponEv: __ZN8CHudAmmo18UserCmd_NextWeaponEv,
  _EV_FireShotGunDouble: _EV_FireShotGunDouble,
  __ZN13CHudSpectator17AddOverviewEntityEiP11cl_entity_sPKc: __ZN13CHudSpectator17AddOverviewEntityEiP11cl_entity_sPKc,
  __ZN6CGlock12UseDecrementEv: __Z14ShouldSimplifyi,
  __ZN12CBaseMonster11GetScheduleEv: _HUD_GetUserEntity,
  __Z11CL_KeyStateP9kbutton_s: __Z11CL_KeyStateP9kbutton_s,
  __ZN15CHudTextMessageD0Ev: __ZN8CHudMenuD0Ev,
  __Z11V_PunchAxisif: __Z11V_PunchAxisif,
  __ZN11CBasePlayer11IsNetClientEv: __Z14ShouldSimplifyi,
  __ZN12CBaseMonster17GetScheduleOfTypeEi: __Z10TrainSpeedii,
  __Z10IN_JLookUpv: __Z10IN_JLookUpv,
  __ZN17CHudAmmoSecondary5ResetEv: __ZN17CHudAmmoSecondary5ResetEv,
  __Z18__MsgFunc_VGUIMenuPKciPv: __Z15__MsgFunc_FeignPKciPv,
  __Z6KB_AddPKcP9kbutton_s: __Z6KB_AddPKcP9kbutton_s,
  __Z9READ_LONGv: __Z9READ_LONGv,
  __Z14bIsMultiplayerv: __Z14bIsMultiplayerv,
  __ZN11CBasePlayer13SetSuitUpdateEPcii: __ZN11CBasePlayer13SetSuitUpdateEPcii,
  _PM_Init: _PM_Init,
  __ZN8CCrowbar9iItemSlotEv: __Z14ShouldSimplifyi,
  __ZN14CHudScoreboard7VidInitEv: __Z14ShouldSimplifyi,
  __Z16Demo_WriteBufferiiPh: __Z16Demo_WriteBufferiiPh,
  __Z7IN_Initv: __Z7IN_Initv,
  __Z13ShutdownInputv: __Z11KB_Shutdownv,
  __ZN11CBasePlayer22BarnacleVictimReleasedEv: __ZN8CHudBaseD2Ev,
  _HUD_PlayerMoveInit: _HUD_PlayerMoveInit,
  _EV_FirePython: _EV_FirePython,
  __ZN13CHudSpectator11ToggleInsetEb: __ZN13CHudSpectator11ToggleInsetEb,
  __Z17HUD_PlaybackEventiPK7edict_stfPfS2_ffiiii: __Z17HUD_PlaybackEventiPK7edict_stfPfS2_ffiiii,
  __ZN8CHudAmmo18MsgFunc_ItemPickupEPKciPv: __ZN8CHudAmmo18MsgFunc_ItemPickupEPKciPv,
  __ZN8CHudAmmo5ThinkEv: __ZN8CHudAmmo5ThinkEv,
  __ZN12CBaseMonster11FadeMonsterEv: __ZN8CHudBaseD2Ev,
  __ZN4CMP55SpawnEv: __ZN4CMP55SpawnEv,
  _EV_SpinGauss: _EV_SpinGauss,
  __ZN5CHgun11AddToPlayerEP11CBasePlayer: __Z10TrainSpeedii,
  __ZN15CBasePlayerItem14AttachToPlayerEP11CBasePlayer: _HUD_VoiceStatus,
  __ZN11CBasePlayer19PackDeadPlayerItemsEv: __ZN8CHudBaseD2Ev,
  __Z13ConvertCRtoNLPc: __Z13ConvertCRtoNLPc,
  __ZN10CBaseDelay7RestoreER8CRestore: __ZN10CBaseDelay4SaveER5CSave,
  __ZN12CBaseMonster12RadiusDamageEP9entvars_sS1_fii: __ZN12CBaseMonster12RadiusDamageEP9entvars_sS1_fii,
  _EV_TrainPitchAdjust: _EV_TrainPitchAdjust,
  __ZN11CBaseEntity8ActivateEv: __ZN8CHudBaseD2Ev,
  __Z11GetClassPtrI9CTripmineEPT_S2_: __Z11GetClassPtrI9CTripmineEPT_S2_,
  _HUD_Reset: _HUD_Reset,
  __ZN12CBaseMonster10BodyTargetERK6Vector: __ZN12CBaseMonster10BodyTargetERK6Vector,
  __ZN12CBaseMonster10TakeHealthEfi: __ZN11CBasePlayer10TakeHealthEfi,
  __Z15CAM_YawLeftDownv: __Z15CAM_YawLeftDownv,
  __ZN11CPythonAmmo7AddAmmoEP11CBaseEntity: __ZN11CPythonAmmo7AddAmmoEP11CBaseEntity,
  __ZN14CSatchelCharge12SatchelThinkEv: __ZN14CSatchelCharge12SatchelThinkEv,
  _HUD_PostRunCmd: _HUD_PostRunCmd,
  __ZN11CBasePlayer12SetAnimationE11PLAYER_ANIM: _HUD_VoiceStatus,
  __ZN6CGauss15SecondaryAttackEv: __ZN6CGauss15SecondaryAttackEv,
  __ZN7CSqueak12UseDecrementEv: __Z14ShouldSimplifyi,
  __ZN15HistoryResource12AddToHistoryEiPKci: __ZN15HistoryResource12AddToHistoryEiPKci,
  __ZN4CRpg6DeployEv: __ZN4CRpg6DeployEv,
  __ZN8CHudAmmo13UserCmd_Slot2Ev: __ZN8CHudAmmo13UserCmd_Slot2Ev,
  __ZN8CHudBase7VidInitEv: _HUD_GetUserEntity,
  __ZN15CHudDeathNotice7VidInitEv: __ZN15CHudDeathNotice7VidInitEv,
  _weapon_snark: _weapon_snark,
  __ZN5CHgun8PrecacheEv: __ZN5CHgun8PrecacheEv,
  __ZN13CHudStatusBar18MsgFunc_StatusTextEPKciPv: __ZN13CHudStatusBar18MsgFunc_StatusTextEPKciPv,
  __ZN10CGlockAmmo7AddAmmoEP11CBaseEntity: __ZN10CGlockAmmo7AddAmmoEP11CBaseEntity,
  __ZN7CPython10WeaponIdleEv: __ZN7CPython10WeaponIdleEv,
  __ZN4CRpg15SecondaryAttackEv: __ZN4CRpg15SecondaryAttackEv,
  __Z10CAM_InDownv: __Z10CAM_InDownv,
  _PM_GetPhysEntInfo: _PM_GetPhysEntInfo,
  __Z25AddAmmoNameToAmmoRegistryPKc: __ZN8CHudBaseD2Ev,
  __ZN17CBasePlayerWeapon12AddDuplicateEP15CBasePlayerItem: __Z10TrainSpeedii,
  __ZN8CHudAmmo17MsgFunc_CurWeaponEPKciPv: __ZN8CHudAmmo17MsgFunc_CurWeaponEPKciPv,
  __Z12VectorAnglesPKfPf: _VectorAngles,
  __ZN13CHudSpectator12DeathMessageEi: __ZN13CHudSpectator12DeathMessageEi,
  __ZN8CGrenade11BounceSoundEv: __ZN8CHudBaseD2Ev,
  __ZN8CHudAmmo13MsgFunc_AmmoXEPKciPv: __ZN8CHudAmmo13MsgFunc_AmmoXEPKciPv,
  __ZN6CGlock9iItemSlotEv: __ZN6CGlock9iItemSlotEv,
  __ZN13CHudStatusBar7VidInitEv: __Z14ShouldSimplifyi,
  __ZN11CBaseEntity15AddPointsToTeamEii: __ZN11CBasePlayer9AddPointsEii,
  _PM_Physics_Toss: _PM_Physics_Toss,
  __Z14HUD_PrepEntityP11CBaseEntityP11CBasePlayer: __Z14HUD_PrepEntityP11CBaseEntityP11CBasePlayer,
  __Z9READ_WORDv: __Z9READ_WORDv,
  __ZN11CBasePlayer13StartDeathCamEv: __ZN8CHudBaseD2Ev,
  __Z15UTIL_BloodDripsRK6VectorS1_ii: __Z15UTIL_BloodDripsRK6VectorS1_ii,
  __ZN15CBasePlayerItem11DestroyItemEv: __ZN8CHudBaseD2Ev,
  __ZN15CBasePlayerItem12CheckRespawnEv: __ZN8CHudBaseD2Ev,
  __ZN4CHud4InitEv: __ZN4CHud4InitEv,
  __ZN9CCrossbow15SecondaryAttackEv: __ZN9CCrossbow15SecondaryAttackEv,
  __ZN6CGlock6DeployEv: __ZN6CGlock6DeployEv,
  __ZN7CPython7HolsterEi: __ZN7CPython7HolsterEi,
  __ZN11CBaseEntity10IsSneakingEv: _HUD_GetUserEntity,
  __Z11VectorScalePKffPf: _VectorScale,
  __ZN12CBaseMonster15HandleAnimEventEP14MonsterEvent_t: _HUD_VoiceStatus,
  __Z9READ_BYTEv: __Z9READ_BYTEv,
  __Z14UTIL_SetOriginP9entvars_sRK6Vector: __Z14UTIL_LogPrintfPcz,
  __Z18stub_PrecacheModelPc: _HUD_GetUserEntity,
  __Z12IN_GraphDownv: __Z12IN_GraphDownv,
  __ZN15CBasePlayerItem4DropEv: __ZN8CHudBaseD2Ev,
  _HUD_Init: _HUD_Init,
  __ZN9CTripmine6DeployEv: __ZN9CTripmine6DeployEv,
  __ZN15CHudStatusIcons18MsgFunc_StatusIconEPKciPv: __ZN15CHudStatusIcons18MsgFunc_StatusIconEPKciPv,
  __ZN8CShotgun9iItemSlotEv: __ZN4CMP59iItemSlotEv,
  __ZN17CBasePlayerWeapon11ExtractAmmoEPS_: __Z10TrainSpeedii,
  __ZN4CHud15MsgFunc_ConcussEPKciPv: __ZN4CHud15MsgFunc_ConcussEPKciPv,
  __ZN12CHandGrenade8PrecacheEv: __ZN12CHandGrenade8PrecacheEv,
  __ZN14CBaseAnimating14LookupSequenceEPKc: __Z10TrainSpeedii,
  _KB_Find: _KB_Find,
  __Z28__CmdFunc_InputPlayerSpecialv: _IN_Accumulate,
  __Z11GetClassPtrI10CGaussAmmoEPT_S2_: __Z11GetClassPtrI10CGaussAmmoEPT_S2_,
  __ZN11CHudBattery7VidInitEv: __ZN11CHudBattery7VidInitEv,
  __GLOBAL__sub_I_cdll_int_cpp: __GLOBAL__sub_I_cdll_int_cpp,
  __ZN6CGauss11AddToPlayerEP11CBasePlayer: __Z10TrainSpeedii,
  __ZN7CPython5SpawnEv: __ZN7CPython5SpawnEv,
  __ZN11CBaseEntity6CenterEv: __ZN11CBaseEntity6CenterEv,
  __Z12CrossProductPKfS0_Pf: _CrossProduct,
  __ZN10CHudHealth8DrawPainEf: __ZN10CHudHealth8DrawPainEf,
  _ammo_mp5grenades: _ammo_ARgrenades,
  __ZN15CHudDeathNotice11InitHUDDataEv: __ZN15CHudDeathNotice11InitHUDDataEv,
  _PM_CheckStuck: _PM_CheckStuck,
  __ZN6CGauss9iItemSlotEv: __ZN4CRpg9iItemSlotEv,
  _weapon_rpg: _weapon_rpg,
  __Z11HUD_GetRectv: __Z11HUD_GetRectv,
  __ZN12CBaseMonster12SentenceStopEv: __ZN8CHudBaseD2Ev,
  __Z22UTIL_SharedRandomFloatjff: __Z22UTIL_SharedRandomFloatjff,
  __ZN8CGrenade5SpawnEv: __ZN8CHudBaseD2Ev,
  __Z14V_CalcViewRollP12ref_params_s: __Z14V_CalcViewRollP12ref_params_s,
  __Z7U_Srandj: __Z7U_Srandj,
  __ZN8CShotgun11GetItemInfoEP8ItemInfo: __ZN8CShotgun11GetItemInfoEP8ItemInfo,
  __ZN8CHudAmmo18MsgFunc_AmmoPickupEPKciPv: __ZN8CHudAmmo18MsgFunc_AmmoPickupEPKciPv,
  __Z16CAM_ToggleSnaptov: __Z16CAM_ToggleSnaptov,
  __ZN10CHudGeiger7VidInitEv: __Z14ShouldSimplifyi,
  __ZN11CBasePlayer10IsSneakingEv: __ZN11CBasePlayer10IsSneakingEv,
  __ZN11CHudMessage4DrawEf: __ZN11CHudMessage4DrawEf,
  _PM_InWater: _PM_InWater,
  __ZN11CBaseEntity10SUB_RemoveEv: __ZN8CHudBaseD2Ev,
  __ZN13CHudStatusBar17ParseStatusStringEi: __ZN13CHudStatusBar17ParseStatusStringEi,
  __Z15CAM_PitchDownUpv: __Z15CAM_PitchDownUpv,
  _EV_SnarkFire: _EV_SnarkFire,
  __ZN4CHud16MsgFunc_GameModeEPKciPv: __ZN4CHud16MsgFunc_GameModeEPKciPv,
  __Z13DrawUtfStringiiiPciii: __Z13DrawUtfStringiiiPciii,
  runPostSets: runPostSets,
  __ZN11CBaseEntity10BloodColorEv: __ZN8CGrenade10BloodColorEv,
  __Z11CAM_OutDownv: __Z11CAM_OutDownv,
  __ZN12CBaseMonster9PainSoundEv: __ZN8CHudBaseD2Ev,
  __ZN12CBaseMonster13FGetNodeRouteE6Vector: __ZN12CBaseMonster13FGetNodeRouteE6Vector,
  __Z15VectorTransformPKfPA4_fPf: _VectorTransform,
  _IN_ClientLookEvent: _IN_ClientLookEvent,
  __ZN11CBaseEntity9AddPointsEii: __ZN11CBasePlayer9AddPointsEii,
  __ZN8CHudMenu14SelectMenuItemEi: __ZN8CHudMenu14SelectMenuItemEi,
  __ZN8CGrenade12ShootContactEP9entvars_s6VectorS2_: __ZN8CGrenade12ShootContactEP9entvars_s6VectorS2_,
  __ZN11CBaseEntity10ObjectCapsEv: __ZN6CGlock9iItemSlotEv,
  __ZN9CCrossbow13PrimaryAttackEv: __ZN9CCrossbow13PrimaryAttackEv,
  __Z15CAM_EndDistancev: __Z15CAM_EndDistancev,
  __ZN8CHudAmmo5ResetEv: __ZN8CHudAmmo5ResetEv,
  __ZN11CBaseEntity12FBecomeProneEv: _HUD_GetUserEntity,
  __Z15__CmdFunc_Slot6v: __Z15__CmdFunc_Slot6v,
  __ZN15CBasePlayerItem9CanDeployEv: __Z14ShouldSimplifyi,
  __ZN7CSqueak11GetItemInfoEP8ItemInfo: __ZN7CSqueak11GetItemInfoEP8ItemInfo,
  __ZN20CStudioModelRenderer16StudioSetupBonesEv: __ZN20CStudioModelRenderer16StudioSetupBonesEv,
  __ZN11CBasePlayer20GetCustomDecalFramesEv: __ZN8CGrenade10BloodColorEv,
  __ZN11CHudSayText12SayTextPrintEPKcii: __ZN11CHudSayText12SayTextPrintEPKcii,
  __ZN20CStudioModelRenderer16StudioSlerpBonesEPA4_fPA3_fS1_S3_f: __ZN20CStudioModelRenderer16StudioSlerpBonesEPA4_fPA3_fS1_S3_f,
  __Z9IN_LeftUpv: __Z9IN_LeftUpv,
  __ZN14CHudScoreboard11InitHUDDataEv: __ZN14CHudScoreboard11InitHUDDataEv,
  __ZN12CBaseMonster18GetStoppedActivityEv: __Z14ShouldSimplifyi,
  __ZN15CBasePlayerItem10CanHolsterEv: __Z14ShouldSimplifyi,
  __Z8VectorMAPKffS0_Pf: _VectorMA,
  _HUD_VidInit: _HUD_VidInit,
  __ZN9CTripmine12UseDecrementEv: __Z14ShouldSimplifyi,
  __Z16CAM_EndMouseMovev: __Z16CAM_EndMouseMovev,
  __ZN4CHudD2Ev: __ZN4CHudD2Ev,
  __ZN12CHandGrenade12UseDecrementEv: __Z14ShouldSimplifyi,
  __ZN11CBaseToggle7RestoreER8CRestore: __ZN10CBaseDelay4SaveER5CSave,
  __ZN14CBaseAnimating18DispatchAnimEventsEf: __ZN12CBaseMonster3EatEf,
  _weapon_mp5: _weapon_mp5,
  __ZN11CBasePlayer20CheckTimeBasedDamageEv: __ZN8CHudBaseD2Ev,
  __ZN12CBaseMonster11MoveToEnemyE8Activityf: __ZN12CBaseMonster11MoveToEnemyE8Activityf,
  __Z21__MsgFunc_SecAmmoIconPKciPv: __Z21__MsgFunc_SecAmmoIconPKciPv,
  __ZN14CBaseAnimating14FindTransitionEiiPi: __ZN14CBaseAnimating14FindTransitionEiiPi,
  __ZN12CBaseMonster13IRelationshipEP11CBaseEntity: __Z10TrainSpeedii,
  __Z25V_SmoothInterpolateAnglesPfS_S_f: __Z25V_SmoothInterpolateAnglesPfS_S_f,
  __ZN10CGaussAmmo8PrecacheEv: __ZN10CGaussAmmo8PrecacheEv,
  _EV_FireShotGunSingle: _EV_FireShotGunSingle,
  __ZN15CBasePlayerItem4KillEv: __ZN8CHudBaseD2Ev,
  __ZN4CMP56ReloadEv: __ZN4CMP56ReloadEv,
  __ZN5CEgon6DeployEv: __ZN5CEgon6DeployEv,
  establishStackSpace: establishStackSpace,
  __ZN15CHudDeathNotice16MsgFunc_DeathMsgEPKciPv: __ZN15CHudDeathNotice16MsgFunc_DeathMsgEPKciPv,
  __ZN12CBaseMonster10DeathSoundEv: __ZN8CHudBaseD2Ev,
  __Z15__CmdFunc_Slot2v: __Z15__CmdFunc_Slot2v,
  _EV_Crowbar: _EV_Crowbar,
  __ZN13CHudSpectator25SetSpectatorStartPositionEv: __ZN13CHudSpectator25SetSpectatorStartPositionEv,
  __ZN11CBaseEntity11TraceAttackEP9entvars_sf6VectorP11TraceResulti: __ZN11CBasePlayer11TraceAttackEP9entvars_sf6VectorP11TraceResulti,
  __ZN11CBaseToggle8GetDelayEv: __ZN11CBaseToggle8GetDelayEv,
  __ZN8CSatchel6DeployEv: __ZN8CSatchel6DeployEv,
  __ZN14CHudScoreboard4InitEv: __ZN14CHudScoreboard4InitEv,
  __ZN9CCrossbow11GetItemInfoEP8ItemInfo: __ZN9CCrossbow11GetItemInfoEP8ItemInfo,
  __ZN14CBaseAnimating22LookupActivityHeaviestEi: __Z10TrainSpeedii,
  __ZN12CBaseMonster9StartTaskEP6Task_t: _HUD_VoiceStatus,
  _PM_DrawPhysEntBBox: _PM_DrawPhysEntBBox,
  __VectorAdd: __VectorAdd,
  __Z10LoadSpritePKc: __Z10LoadSpritePKc,
  __ZN9CCrossbow9iItemSlotEv: __ZN4CMP59iItemSlotEv,
  __ZN8CShotgun12UseDecrementEv: __Z14ShouldSimplifyi,
  __Z10IN_MLookUpv: __Z10IN_MLookUpv,
  __ZN11CBasePlayer17ShouldFadeOnDeathEv: _HUD_GetUserEntity,
  __ZN9CHudTrain4DrawEf: __ZN9CHudTrain4DrawEf,
  __ZN8CHudMOTD12MsgFunc_MOTDEPKciPv: __ZN8CHudMOTD12MsgFunc_MOTDEPKciPv,
  _HUD_PlayerMoveTexture: _HUD_PlayerMoveTexture,
  __ZN11CHudMessage10MessageAddEP20client_textmessage_s: __ZN11CHudMessage10MessageAddEP20client_textmessage_s,
  __Z11GetClassPtrI10CGlockAmmoEPT_S2_: __Z11GetClassPtrI10CGlockAmmoEPT_S2_,
  __ZN8CHudBase11InitHUDDataEv: __ZN8CHudBaseD2Ev,
  __ZN11CHudMessage9YPositionEfi: __ZN11CHudMessage9YPositionEfi,
  __ZN6CGlock15SecondaryAttackEv: __ZN6CGlock15SecondaryAttackEv,
  __Z15CAM_PitchUpDownv: __Z15CAM_PitchUpDownv,
  __ZN11CBaseEntity10TakeHealthEfi: __ZN11CBaseEntity10TakeHealthEfi,
  __ZN20CStudioModelRenderer17StudioRenderFinalEv: __ZN20CStudioModelRenderer17StudioRenderFinalEv,
  __ZN11CBaseEntity8IsPlayerEv: _HUD_GetUserEntity,
  __ZN20CStudioModelRenderer17StudioRenderModelEv: __ZN20CStudioModelRenderer17StudioRenderModelEv,
  _PM_SortTextures: _PM_SortTextures,
  __Z11GetClassPtrI12CMP5AmmoClipEPT_S2_: __Z11GetClassPtrI12CMP5AmmoClipEPT_S2_,
  _PM_Jump: _PM_Jump,
  __ZN4CHud20DrawHudStringReverseEiiiPciii: __ZN4CHud20DrawHudStringReverseEiiiPciii,
  __ZN12CBaseMonster10BecomeDeadEv: __ZN8CHudBaseD2Ev,
  __ZN11CBasePlayer14SelectPrevItemEi: _HUD_VoiceStatus,
  __ZN14CBaseAnimating13GetAttachmentEiR6VectorS1_: __ZN14CBaseAnimating13GetAttachmentEiR6VectorS1_,
  __ZN11CBaseEntity8GetDelayEv: __ZN11CBaseEntity8GetDelayEv,
  __ZN11CBasePlayer10DeathSoundEv: __ZN8CHudBaseD2Ev,
  __ZN12CBaseMonster14FCanActiveIdleEv: _HUD_GetUserEntity,
  __ZN8CSatchel9IsUseableEv: __ZN8CSatchel9IsUseableEv,
  __ZN12CBaseMonster16GetDeathActivityEv: __ZN12CBaseMonster16GetDeathActivityEv,
  _PM_Accelerate: _PM_Accelerate,
  __ZN12CBaseMonster11FacingIdealEv: _HUD_GetUserEntity,
  __Z11IN_Alt1Downv: __Z11IN_Alt1Downv,
  __ZN11CBaseEntity7RestoreER8CRestore: __ZN10CBaseDelay4SaveER5CSave,
  _PM_Friction: _PM_Friction,
  __ZN20CStudioModelRenderer23StudioCalcBoneQuaterionEifP13mstudiobone_tP13mstudioanim_tPfS4_: __ZN20CStudioModelRenderer23StudioCalcBoneQuaterionEifP13mstudiobone_tP13mstudioanim_tPfS4_,
  __ZN10CHudGeigerD0Ev: __ZN8CHudMenuD0Ev,
  __Z13IN_LookdownUpv: __Z13IN_LookdownUpv,
  __ZN17CBasePlayerWeapon7RestoreER8CRestore: __ZN10CBaseDelay4SaveER5CSave,
  __ZN11CBasePlayer10IsOnLadderEv: _HUD_GetUserEntity,
  _ammo_rpgclip: _ammo_rpgclip,
  __ZN5CEgon7HasAmmoEv: __ZN5CEgon7HasAmmoEv,
  __ZN17CBasePlayerWeapon12GetWeaponPtrEv: __ZN15CBasePlayerAmmo7RespawnEv,
  __Z20__MsgFunc_WeapPickupPKciPv: __Z20__MsgFunc_WeapPickupPKciPv,
  __ZN17CBasePlayerWeapon13DefaultReloadEiifi: __ZN17CBasePlayerWeapon13DefaultReloadEiifi,
  __ZN12CBaseMonster14MoveToLocationE8ActivityfRK6Vector: __ZN12CBaseMonster10MoveToNodeE8ActivityfRK6Vector,
  __ZN9CEgonAmmo7AddAmmoEP11CBaseEntity: __ZN9CEgonAmmo7AddAmmoEP11CBaseEntity,
  __ZN17CBasePlayerWeapon9IsUseableEv: __Z14ShouldSimplifyi,
  __ZN11CHudMessageD0Ev: __ZN8CHudMenuD0Ev,
  __ZN8CHudAmmo13UserCmd_Slot8Ev: __ZN8CHudAmmo13UserCmd_Slot8Ev,
  __Z15VectorNormalizePf: _VectorNormalize,
  _weapon_tripmine: _weapon_tripmine,
  __Z15Game_HookEventsv: __Z15Game_HookEventsv,
  __ZN8CHudAmmo13UserCmd_Slot5Ev: __ZN8CHudAmmo13UserCmd_Slot5Ev,
  __Z14HUD_SetLastOrgv: __Z14HUD_SetLastOrgv,
  __Z9V_CalcBobP12ref_params_s: __Z9V_CalcBobP12ref_params_s,
  __ZN8CHudMenu7VidInitEv: __Z14ShouldSimplifyi,
  __ZN17CBasePlayerWeapon6ReloadEv: __ZN8CHudBaseD2Ev,
  __ZN10CHudHealth11UpdateTilesEfl: __ZN10CHudHealth11UpdateTilesEfl,
  __ZN4CRpg5SpawnEv: __ZN4CRpg5SpawnEv,
  __ZN5CEgon10WeaponIdleEv: __ZN5CEgon10WeaponIdleEv,
  __Z14EMIT_SOUND_DYNP7edict_siPKcffii: __Z14EMIT_SOUND_DYNP7edict_siPKcffii,
  __Z16__CmdFunc_Slot10v: __Z16__CmdFunc_Slot10v,
  __ZN8CHudMenuD0Ev: __ZN8CHudMenuD0Ev,
  __Z11DamageDecalP11CBaseEntityi: __Z10TrainSpeedii,
  __ZN15CBasePlayerItem14UpdateItemInfoEv: __ZN8CHudBaseD2Ev,
  __ZN15HistoryResource17CheckClearHistoryEv: __ZN15HistoryResource17CheckClearHistoryEv,
  _VectorMA: _VectorMA,
  __ZN13CHudSpectator11InitHUDDataEv: __ZN13CHudSpectator11InitHUDDataEv,
  _PM_UnDuck: _PM_UnDuck,
  __ZN11CBaseEntity11DeathNoticeEP9entvars_s: _HUD_VoiceStatus,
  __Z17R_StudioDrawModeli: __Z17R_StudioDrawModeli
 };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
  var __ZN11CBaseEntity8PrecacheEv = Module["__ZN11CBaseEntity8PrecacheEv"] = asm["__ZN11CBaseEntity8PrecacheEv"];
  var __ZN8CHudAmmo14UserCmd_Slot10Ev = Module["__ZN8CHudAmmo14UserCmd_Slot10Ev"] = asm["__ZN8CHudAmmo14UserCmd_Slot10Ev"];
  var _PM_AirAccelerate = Module["_PM_AirAccelerate"] = asm["_PM_AirAccelerate"];
  var __ZN15CHudTextMessage18LocaliseTextStringEPKcPci = Module["__ZN15CHudTextMessage18LocaliseTextStringEPKcPci"] = asm["__ZN15CHudTextMessage18LocaliseTextStringEPKcPci"];
  var __ZN11CBasePlayer17FlashlightTurnOffEv = Module["__ZN11CBasePlayer17FlashlightTurnOffEv"] = asm["__ZN11CBasePlayer17FlashlightTurnOffEv"];
  var __ZN15CHudStatusIcons4InitEv = Module["__ZN15CHudStatusIcons4InitEv"] = asm["__ZN15CHudStatusIcons4InitEv"];
  var __ZN9CCrossbow8FireBoltEv = Module["__ZN9CCrossbow8FireBoltEv"] = asm["__ZN9CCrossbow8FireBoltEv"];
  var __ZN17CBasePlayerWeapon10WeaponIdleEv = Module["__ZN17CBasePlayerWeapon10WeaponIdleEv"] = asm["__ZN17CBasePlayerWeapon10WeaponIdleEv"];
  var __ZN17CBasePlayerWeapon9AddWeaponEv = Module["__ZN17CBasePlayerWeapon9AddWeaponEv"] = asm["__ZN17CBasePlayerWeapon9AddWeaponEv"];
  var __ZN9CEgonAmmo8PrecacheEv = Module["__ZN9CEgonAmmo8PrecacheEv"] = asm["__ZN9CEgonAmmo8PrecacheEv"];
  var __Z9IN_BackUpv = Module["__Z9IN_BackUpv"] = asm["__Z9IN_BackUpv"];
  var __ZN9CSoundEnt11InsertSoundEiRK6Vectorif = Module["__ZN9CSoundEnt11InsertSoundEiRK6Vectorif"] = asm["__ZN9CSoundEnt11InsertSoundEiRK6Vectorif"];
  var __ZN11CBasePlayer12GetAmmoIndexEPKc = Module["__ZN11CBasePlayer12GetAmmoIndexEPKc"] = asm["__ZN11CBasePlayer12GetAmmoIndexEPKc"];
  var _HUD_PostRunCmd = Module["_HUD_PostRunCmd"] = asm["_HUD_PostRunCmd"];
  var __ZN12CBaseMonster12HasAlienGibsEv = Module["__ZN12CBaseMonster12HasAlienGibsEv"] = asm["__ZN12CBaseMonster12HasAlienGibsEv"];
  var __Z11GetClassPtrI4CMP5EPT_S2_ = Module["__Z11GetClassPtrI4CMP5EPT_S2_"] = asm["__Z11GetClassPtrI4CMP5EPT_S2_"];
  var __ZN11CBasePlayer4DuckEv = Module["__ZN11CBasePlayer4DuckEv"] = asm["__ZN11CBasePlayer4DuckEv"];
  var __ZN15WeaponsResource7HasAmmoEP6WEAPON = Module["__ZN15WeaponsResource7HasAmmoEP6WEAPON"] = asm["__ZN15WeaponsResource7HasAmmoEP6WEAPON"];
  var _ammo_gaussclip = Module["_ammo_gaussclip"] = asm["_ammo_gaussclip"];
  var __ZN12CHudOverviewD0Ev = Module["__ZN12CHudOverviewD0Ev"] = asm["__ZN12CHudOverviewD0Ev"];
  var _EV_FireGlock1 = Module["_EV_FireGlock1"] = asm["_EV_FireGlock1"];
  var __ZN4CRpg9iItemSlotEv = Module["__ZN4CRpg9iItemSlotEv"] = asm["__ZN4CRpg9iItemSlotEv"];
  var _EV_FireGlock2 = Module["_EV_FireGlock2"] = asm["_EV_FireGlock2"];
  var __ZN10CHudHealth7VidInitEv = Module["__ZN10CHudHealth7VidInitEv"] = asm["__ZN10CHudHealth7VidInitEv"];
  var __Z18DBG_AssertFunctioniPKcS0_iS0_ = Module["__Z18DBG_AssertFunctioniPKcS0_iS0_"] = asm["__Z18DBG_AssertFunctioniPKcS0_iS0_"];
  var __ZN14CHudFlashlight5ResetEv = Module["__ZN14CHudFlashlight5ResetEv"] = asm["__ZN14CHudFlashlight5ResetEv"];
  var __ZN7CPython6ReloadEv = Module["__ZN7CPython6ReloadEv"] = asm["__ZN7CPython6ReloadEv"];
  var __ZN9CCrossbow8PrecacheEv = Module["__ZN9CCrossbow8PrecacheEv"] = asm["__ZN9CCrossbow8PrecacheEv"];
  var __ZN11CBasePlayer14RemoveAllItemsEi = Module["__ZN11CBasePlayer14RemoveAllItemsEi"] = asm["__ZN11CBasePlayer14RemoveAllItemsEi"];
  var _ammo_egonclip = Module["_ammo_egonclip"] = asm["_ammo_egonclip"];
  var _weapon_gauss = Module["_weapon_gauss"] = asm["_weapon_gauss"];
  var __ZN11CBaseEntity16RemovePlayerItemEP15CBasePlayerItem = Module["__ZN11CBaseEntity16RemovePlayerItemEP15CBasePlayerItem"] = asm["__ZN11CBaseEntity16RemovePlayerItemEP15CBasePlayerItem"];
  var __Z20EV_HLDM_DecalGunshotP9pmtrace_si = Module["__Z20EV_HLDM_DecalGunshotP9pmtrace_si"] = asm["__Z20EV_HLDM_DecalGunshotP9pmtrace_si"];
  var __ZN11CBaseEntity13StartSneakingEv = Module["__ZN11CBaseEntity13StartSneakingEv"] = asm["__ZN11CBaseEntity13StartSneakingEv"];
  var __Z12UTIL_SetSizeP9entvars_sRK6VectorS3_ = Module["__Z12UTIL_SetSizeP9entvars_sRK6VectorS3_"] = asm["__Z12UTIL_SetSizeP9entvars_sRK6VectorS3_"];
  var __ZN11CHudBattery15MsgFunc_BatteryEPKciPv = Module["__ZN11CHudBattery15MsgFunc_BatteryEPKciPv"] = asm["__ZN11CHudBattery15MsgFunc_BatteryEPKciPv"];
  var __ZN11CBasePlayer20SetCustomDecalFramesEi = Module["__ZN11CBasePlayer20SetCustomDecalFramesEi"] = asm["__ZN11CBasePlayer20SetCustomDecalFramesEi"];
  var _HUD_PlayerMove = Module["_HUD_PlayerMove"] = asm["_HUD_PlayerMove"];
  var __ZN14CBaseAnimating22LookupActivityHeaviestEi = Module["__ZN14CBaseAnimating22LookupActivityHeaviestEi"] = asm["__ZN14CBaseAnimating22LookupActivityHeaviestEi"];
  var __ZN12CBaseMonster9ChangeYawEi = Module["__ZN12CBaseMonster9ChangeYawEi"] = asm["__ZN12CBaseMonster9ChangeYawEi"];
  var __Z20stub_NameForFunctionPv = Module["__Z20stub_NameForFunctionPv"] = asm["__Z20stub_NameForFunctionPv"];
  var __ZN15CBasePlayerItem12CheckRespawnEv = Module["__ZN15CBasePlayerItem12CheckRespawnEv"] = asm["__ZN15CBasePlayerItem12CheckRespawnEv"];
  var _VectorTransform = Module["_VectorTransform"] = asm["_VectorTransform"];
  var __ZN11CBasePlayer12SetAnimationE11PLAYER_ANIM = Module["__ZN11CBasePlayer12SetAnimationE11PLAYER_ANIM"] = asm["__ZN11CBasePlayer12SetAnimationE11PLAYER_ANIM"];
  var __ZN12CHandGrenade9iItemSlotEv = Module["__ZN12CHandGrenade9iItemSlotEv"] = asm["__ZN12CHandGrenade9iItemSlotEv"];
  var __Z13CL_ButtonBitsi = Module["__Z13CL_ButtonBitsi"] = asm["__Z13CL_ButtonBitsi"];
  var __ZN11CBasePlayer13HasPlayerItemEP15CBasePlayerItem = Module["__ZN11CBasePlayer13HasPlayerItemEP15CBasePlayerItem"] = asm["__ZN11CBasePlayer13HasPlayerItemEP15CBasePlayerItem"];
  var __ZN11CHudMessage9XPositionEfii = Module["__ZN11CHudMessage9XPositionEfii"] = asm["__ZN11CHudMessage9XPositionEfii"];
  var __ZN11CBasePlayer10TakeHealthEfi = Module["__ZN11CBasePlayer10TakeHealthEfi"] = asm["__ZN11CBasePlayer10TakeHealthEfi"];
  var __ZN8CGrenade11DetonateUseEP11CBaseEntityS1_8USE_TYPEf = Module["__ZN8CGrenade11DetonateUseEP11CBaseEntityS1_8USE_TYPEf"] = asm["__ZN8CGrenade11DetonateUseEP11CBaseEntityS1_8USE_TYPEf"];
  var __ZN12CBaseMonster18ShouldAdvanceRouteEf = Module["__ZN12CBaseMonster18ShouldAdvanceRouteEf"] = asm["__ZN12CBaseMonster18ShouldAdvanceRouteEf"];
  var __ZN5CHgun9iItemSlotEv = Module["__ZN5CHgun9iItemSlotEv"] = asm["__ZN5CHgun9iItemSlotEv"];
  var __ZN11CBasePlayer4JumpEv = Module["__ZN11CBasePlayer4JumpEv"] = asm["__ZN11CBasePlayer4JumpEv"];
  var __Z11IN_DownDownv = Module["__Z11IN_DownDownv"] = asm["__Z11IN_DownDownv"];
  var __ZN12CBaseMonster16ScheduleFromNameEPKc = Module["__ZN12CBaseMonster16ScheduleFromNameEPKc"] = asm["__ZN12CBaseMonster16ScheduleFromNameEPKc"];
  var __Z16CAM_YawRightDownv = Module["__Z16CAM_YawRightDownv"] = asm["__Z16CAM_YawRightDownv"];
  var _HUD_PlayerMoveInit = Module["_HUD_PlayerMoveInit"] = asm["_HUD_PlayerMoveInit"];
  var __Z13IN_ReloadDownv = Module["__Z13IN_ReloadDownv"] = asm["__Z13IN_ReloadDownv"];
  var __ZN12CBaseMonster7RunTaskEP6Task_t = Module["__ZN12CBaseMonster7RunTaskEP6Task_t"] = asm["__ZN12CBaseMonster7RunTaskEP6Task_t"];
  var __Z11EV_IsPlayeri = Module["__Z11EV_IsPlayeri"] = asm["__Z11EV_IsPlayeri"];
  var __ZN17CBasePlayerWeapon14AddPrimaryAmmoEiPcii = Module["__ZN17CBasePlayerWeapon14AddPrimaryAmmoEiPcii"] = asm["__ZN17CBasePlayerWeapon14AddPrimaryAmmoEiPcii"];
  var __ZN14CBaseAnimating17SetBoneControllerEif = Module["__ZN14CBaseAnimating17SetBoneControllerEif"] = asm["__ZN14CBaseAnimating17SetBoneControllerEif"];
  var __ZN15CBasePlayerItem21SetObjectCollisionBoxEv = Module["__ZN15CBasePlayerItem21SetObjectCollisionBoxEv"] = asm["__ZN15CBasePlayerItem21SetObjectCollisionBoxEv"];
  var __ZN7CPython11AddToPlayerEP11CBasePlayer = Module["__ZN7CPython11AddToPlayerEP11CBasePlayer"] = asm["__ZN7CPython11AddToPlayerEP11CBasePlayer"];
  var _HUD_Frame = Module["_HUD_Frame"] = asm["_HUD_Frame"];
  var __ZN12CBaseMonster9FlYawDiffEv = Module["__ZN12CBaseMonster9FlYawDiffEv"] = asm["__ZN12CBaseMonster9FlYawDiffEv"];
  var __Z8U_Randomv = Module["__Z8U_Randomv"] = asm["__Z8U_Randomv"];
  var _PM_AddCorrectGravity = Module["_PM_AddCorrectGravity"] = asm["_PM_AddCorrectGravity"];
  var _EV_FireCrossbow2 = Module["_EV_FireCrossbow2"] = asm["_EV_FireCrossbow2"];
  var __ZN11CBasePlayer20BarnacleVictimBittenEP9entvars_s = Module["__ZN11CBasePlayer20BarnacleVictimBittenEP9entvars_s"] = asm["__ZN11CBasePlayer20BarnacleVictimBittenEP9entvars_s"];
  var __ZN14CBaseAnimating14FindTransitionEiiPi = Module["__ZN14CBaseAnimating14FindTransitionEiiPi"] = asm["__ZN14CBaseAnimating14FindTransitionEiiPi"];
  var __ZN4CMP511GetItemInfoEP8ItemInfo = Module["__ZN4CMP511GetItemInfoEP8ItemInfo"] = asm["__ZN4CMP511GetItemInfoEP8ItemInfo"];
  var _CL_CreateMove = Module["_CL_CreateMove"] = asm["_CL_CreateMove"];
  var __ZN11CBasePlayer10SelectItemEPKc = Module["__ZN11CBasePlayer10SelectItemEPKc"] = asm["__ZN11CBasePlayer10SelectItemEPKc"];
  var _HUD_UpdateClientData = Module["_HUD_UpdateClientData"] = asm["_HUD_UpdateClientData"];
  var __ZN12CBaseMonster13FLSoundVolumeEP6CSound = Module["__ZN12CBaseMonster13FLSoundVolumeEP6CSound"] = asm["__ZN12CBaseMonster13FLSoundVolumeEP6CSound"];
  var __ZN12CBaseMonster8PopEnemyEv = Module["__ZN12CBaseMonster8PopEnemyEv"] = asm["__ZN12CBaseMonster8PopEnemyEv"];
  var __ZN15CHudDeathNoticeD0Ev = Module["__ZN15CHudDeathNoticeD0Ev"] = asm["__ZN15CHudDeathNoticeD0Ev"];
  var __ZN11CBaseEntity7RespawnEv = Module["__ZN11CBaseEntity7RespawnEv"] = asm["__ZN11CBaseEntity7RespawnEv"];
  var __Z11GetClassPtrI6CGaussEPT_S2_ = Module["__Z11GetClassPtrI6CGaussEPT_S2_"] = asm["__Z11GetClassPtrI6CGaussEPT_S2_"];
  var __ZN5CBeam12PointEntInitERK6Vectori = Module["__ZN5CBeam12PointEntInitERK6Vectori"] = asm["__ZN5CBeam12PointEntInitERK6Vectori"];
  var __ZN15CMP5AmmoGrenade5SpawnEv = Module["__ZN15CMP5AmmoGrenade5SpawnEv"] = asm["__ZN15CMP5AmmoGrenade5SpawnEv"];
  var __Z15IN_LookdownDownv = Module["__Z15IN_LookdownDownv"] = asm["__Z15IN_LookdownDownv"];
  var _PM_CheckVelocity = Module["_PM_CheckVelocity"] = asm["_PM_CheckVelocity"];
  var __ZN4CRpg8PrecacheEv = Module["__ZN4CRpg8PrecacheEv"] = asm["__ZN4CRpg8PrecacheEv"];
  var _weapon_9mmAR = Module["_weapon_9mmAR"] = asm["_weapon_9mmAR"];
  var _EV_FireShotGunSingle = Module["_EV_FireShotGunSingle"] = asm["_EV_FireShotGunSingle"];
  var _HUD_ProcessPlayerState = Module["_HUD_ProcessPlayerState"] = asm["_HUD_ProcessPlayerState"];
  var __ZN11CBaseEntity3UseEPS_S0_8USE_TYPEf = Module["__ZN11CBaseEntity3UseEPS_S0_8USE_TYPEf"] = asm["__ZN11CBaseEntity3UseEPS_S0_8USE_TYPEf"];
  var __ZN20CStudioModelRenderer26StudioRenderFinal_SoftwareEv = Module["__ZN20CStudioModelRenderer26StudioRenderFinal_SoftwareEv"] = asm["__ZN20CStudioModelRenderer26StudioRenderFinal_SoftwareEv"];
  var __ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii = Module["__ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii"] = asm["__ZN17CBasePlayerWeapon13DefaultDeployEPcS0_iS0_ii"];
  var __ZN11CBaseEntity12StopSneakingEv = Module["__ZN11CBaseEntity12StopSneakingEv"] = asm["__ZN11CBaseEntity12StopSneakingEv"];
  var __ZN11CHudMessage16MessageScanStartEv = Module["__ZN11CHudMessage16MessageScanStartEv"] = asm["__ZN11CHudMessage16MessageScanStartEv"];
  var __ZN10CGlockAmmo8PrecacheEv = Module["__ZN10CGlockAmmo8PrecacheEv"] = asm["__ZN10CGlockAmmo8PrecacheEv"];
  var _EV_SnarkFire = Module["_EV_SnarkFire"] = asm["_EV_SnarkFire"];
  var __ZN11CBasePlayer17ShouldFadeOnDeathEv = Module["__ZN11CBasePlayer17ShouldFadeOnDeathEv"] = asm["__ZN11CBasePlayer17ShouldFadeOnDeathEv"];
  var __ZN11CBasePlayer12ItemPreFrameEv = Module["__ZN11CBasePlayer12ItemPreFrameEv"] = asm["__ZN11CBasePlayer12ItemPreFrameEv"];
  var __ZN11CBaseToggle4SaveER5CSave = Module["__ZN11CBaseToggle4SaveER5CSave"] = asm["__ZN11CBaseToggle4SaveER5CSave"];
  var __ZN12CBaseMonster8KeyValueEP14KeyValueData_s = Module["__ZN12CBaseMonster8KeyValueEP14KeyValueData_s"] = asm["__ZN12CBaseMonster8KeyValueEP14KeyValueData_s"];
  var _CL_IsThirdPerson = Module["_CL_IsThirdPerson"] = asm["_CL_IsThirdPerson"];
  var __Z12IN_Attack2Upv = Module["__Z12IN_Attack2Upv"] = asm["__Z12IN_Attack2Upv"];
  var __ZN11CHudMessage9FadeBlendEffff = Module["__ZN11CHudMessage9FadeBlendEffff"] = asm["__ZN11CHudMessage9FadeBlendEffff"];
  var __Z22UTIL_GunshotDecalTraceP11TraceResulti = Module["__Z22UTIL_GunshotDecalTraceP11TraceResulti"] = asm["__Z22UTIL_GunshotDecalTraceP11TraceResulti"];
  var __Z10TrainSpeedii = Module["__Z10TrainSpeedii"] = asm["__Z10TrainSpeedii"];
  var __ZN12CBaseMonster11MoveToEnemyE8Activityf = Module["__ZN12CBaseMonster11MoveToEnemyE8Activityf"] = asm["__ZN12CBaseMonster11MoveToEnemyE8Activityf"];
  var __Z20__MsgFunc_StatusIconPKciPv = Module["__Z20__MsgFunc_StatusIconPKciPv"] = asm["__Z20__MsgFunc_StatusIconPKciPv"];
  var __ZN15CBasePlayerItem4DropEv = Module["__ZN15CBasePlayerItem4DropEv"] = asm["__ZN15CBasePlayerItem4DropEv"];
  var __ZN12CBaseMonster8BBoxFlatEv = Module["__ZN12CBaseMonster8BBoxFlatEv"] = asm["__ZN12CBaseMonster8BBoxFlatEv"];
  var __ZN11CBasePlayer8PrecacheEv = Module["__ZN11CBasePlayer8PrecacheEv"] = asm["__ZN11CBasePlayer8PrecacheEv"];
  var __ZN12CBaseMonster10FShouldEatEv = Module["__ZN12CBaseMonster10FShouldEatEv"] = asm["__ZN12CBaseMonster10FShouldEatEv"];
  var __ZN8CHudMenu16MsgFunc_ShowMenuEPKciPv = Module["__ZN8CHudMenu16MsgFunc_ShowMenuEPKciPv"] = asm["__ZN8CHudMenu16MsgFunc_ShowMenuEPKciPv"];
  var __ZN11CBaseToggle14GetToggleStateEv = Module["__ZN11CBaseToggle14GetToggleStateEv"] = asm["__ZN11CBaseToggle14GetToggleStateEv"];
  var __ZN9CTripmine21SetObjectCollisionBoxEv = Module["__ZN9CTripmine21SetObjectCollisionBoxEv"] = asm["__ZN9CTripmine21SetObjectCollisionBoxEv"];
  var __ZN11CBaseEntity8IsMovingEv = Module["__ZN11CBaseEntity8IsMovingEv"] = asm["__ZN11CBaseEntity8IsMovingEv"];
  var __ZN8CShotgun11AddToPlayerEP11CBasePlayer = Module["__ZN8CShotgun11AddToPlayerEP11CBasePlayer"] = asm["__ZN8CShotgun11AddToPlayerEP11CBasePlayer"];
  var __Z16V_GetChaseOriginPfS_fS_ = Module["__Z16V_GetChaseOriginPfS_fS_"] = asm["__Z16V_GetChaseOriginPfS_fS_"];
  var __Z25EV_HLDM_GunshotDecalTraceP9pmtrace_sPc = Module["__Z25EV_HLDM_GunshotDecalTraceP9pmtrace_sPc"] = asm["__Z25EV_HLDM_GunshotDecalTraceP9pmtrace_sPc"];
  var __ZN17CBasePlayerWeapon7RestoreER8CRestore = Module["__ZN17CBasePlayerWeapon7RestoreER8CRestore"] = asm["__ZN17CBasePlayerWeapon7RestoreER8CRestore"];
  var __ZN12CBaseMonster15HandleAnimEventEP14MonsterEvent_t = Module["__ZN12CBaseMonster15HandleAnimEventEP14MonsterEvent_t"] = asm["__ZN12CBaseMonster15HandleAnimEventEP14MonsterEvent_t"];
  var __Z15__CmdFunc_Slot1v = Module["__Z15__CmdFunc_Slot1v"] = asm["__Z15__CmdFunc_Slot1v"];
  var __Z10RandomLongii = Module["__Z10RandomLongii"] = asm["__Z10RandomLongii"];
  var __ZN14CSatchelCharge12SatchelSlideEP11CBaseEntity = Module["__ZN14CSatchelCharge12SatchelSlideEP11CBaseEntity"] = asm["__ZN14CSatchelCharge12SatchelSlideEP11CBaseEntity"];
  var __ZN11CBasePlayer16PlayerDeathThinkEv = Module["__ZN11CBasePlayer16PlayerDeathThinkEv"] = asm["__ZN11CBasePlayer16PlayerDeathThinkEv"];
  var _weapon_snark = Module["_weapon_snark"] = asm["_weapon_snark"];
  var __ZN8CHudAmmo7VidInitEv = Module["__ZN8CHudAmmo7VidInitEv"] = asm["__ZN8CHudAmmo7VidInitEv"];
  var __ZN8CSatchel11GetItemInfoEP8ItemInfo = Module["__ZN8CSatchel11GetItemInfoEP8ItemInfo"] = asm["__ZN8CSatchel11GetItemInfoEP8ItemInfo"];
  var __Z16V_DropPunchAnglefPf = Module["__Z16V_DropPunchAnglefPf"] = asm["__Z16V_DropPunchAnglefPf"];
  var __ZN5CHgun8PrecacheEv = Module["__ZN5CHgun8PrecacheEv"] = asm["__ZN5CHgun8PrecacheEv"];
  var __ZN14CSatchelCharge10DeactivateEv = Module["__ZN14CSatchelCharge10DeactivateEv"] = asm["__ZN14CSatchelCharge10DeactivateEv"];
  var __Z13EV_HookEventsv = Module["__Z13EV_HookEventsv"] = asm["__Z13EV_HookEventsv"];
  var __ZN11CBasePlayer7RestoreER8CRestore = Module["__ZN11CBasePlayer7RestoreER8CRestore"] = asm["__ZN11CBasePlayer7RestoreER8CRestore"];
  var __ZN7CSprite12SpriteCreateEPKcRK6Vectori = Module["__ZN7CSprite12SpriteCreateEPKcRK6Vectori"] = asm["__ZN7CSprite12SpriteCreateEPKcRK6Vectori"];
  var __ZN11CBasePlayer12FBecomeProneEv = Module["__ZN11CBasePlayer12FBecomeProneEv"] = asm["__ZN11CBasePlayer12FBecomeProneEv"];
  var __Z15IN_MoveleftDownv = Module["__Z15IN_MoveleftDownv"] = asm["__Z15IN_MoveleftDownv"];
  var __ZN12CBaseMonster12FBecomeProneEv = Module["__ZN12CBaseMonster12FBecomeProneEv"] = asm["__ZN12CBaseMonster12FBecomeProneEv"];
  var __ZN14CSatchelCharge5SpawnEv = Module["__ZN14CSatchelCharge5SpawnEv"] = asm["__ZN14CSatchelCharge5SpawnEv"];
  var __ZN17CBasePlayerWeapon13PrimaryAttackEv = Module["__ZN17CBasePlayerWeapon13PrimaryAttackEv"] = asm["__ZN17CBasePlayerWeapon13PrimaryAttackEv"];
  var __ZN12CBaseMonster11FRouteClearEv = Module["__ZN12CBaseMonster11FRouteClearEv"] = asm["__ZN12CBaseMonster11FRouteClearEv"];
  var __ZN12CBaseMonster11FacingIdealEv = Module["__ZN12CBaseMonster11FacingIdealEv"] = asm["__ZN12CBaseMonster11FacingIdealEv"];
  var __Z20__MsgFunc_ItemPickupPKciPv = Module["__Z20__MsgFunc_ItemPickupPKciPv"] = asm["__Z20__MsgFunc_ItemPickupPKciPv"];
  var __Z12DecalGunshotP11TraceResulti = Module["__Z12DecalGunshotP11TraceResulti"] = asm["__Z12DecalGunshotP11TraceResulti"];
  var __ZN13CHudSpectatorD0Ev = Module["__ZN13CHudSpectatorD0Ev"] = asm["__ZN13CHudSpectatorD0Ev"];
  var __ZN11CBasePlayer16FlashlightTurnOnEv = Module["__ZN11CBasePlayer16FlashlightTurnOnEv"] = asm["__ZN11CBasePlayer16FlashlightTurnOnEv"];
  var __ZN15WeaponsResource11GetFirstPosEi = Module["__ZN15WeaponsResource11GetFirstPosEi"] = asm["__ZN15WeaponsResource11GetFirstPosEi"];
  var __ZN11CBaseEntity10TraceBleedEf6VectorP11TraceResulti = Module["__ZN11CBaseEntity10TraceBleedEf6VectorP11TraceResulti"] = asm["__ZN11CBaseEntity10TraceBleedEf6VectorP11TraceResulti"];
  var __ZN8CRpgAmmo7AddAmmoEP11CBaseEntity = Module["__ZN8CRpgAmmo7AddAmmoEP11CBaseEntity"] = asm["__ZN8CRpgAmmo7AddAmmoEP11CBaseEntity"];
  var __ZN5CEgon16GetPulseIntervalEv = Module["__ZN5CEgon16GetPulseIntervalEv"] = asm["__ZN5CEgon16GetPulseIntervalEv"];
  var __ZN12CBaseMonster17CheckRangeAttack1Eff = Module["__ZN12CBaseMonster17CheckRangeAttack1Eff"] = asm["__ZN12CBaseMonster17CheckRangeAttack1Eff"];
  var _weapon_egon = Module["_weapon_egon"] = asm["_weapon_egon"];
  var __ZN8CHudAmmo18MsgFunc_HideWeaponEPKciPv = Module["__ZN8CHudAmmo18MsgFunc_HideWeaponEPKciPv"] = asm["__ZN8CHudAmmo18MsgFunc_HideWeaponEPKciPv"];
  var __ZN7CSqueak8PrecacheEv = Module["__ZN7CSqueak8PrecacheEv"] = asm["__ZN7CSqueak8PrecacheEv"];
  var __Z18__MsgFunc_FlashBatPKciPv = Module["__Z18__MsgFunc_FlashBatPKciPv"] = asm["__Z18__MsgFunc_FlashBatPKciPv"];
  var __Z13IN_LookupDownv = Module["__Z13IN_LookupDownv"] = asm["__Z13IN_LookupDownv"];
  var __ZN12CBaseMonster4MoveEf = Module["__ZN12CBaseMonster4MoveEf"] = asm["__ZN12CBaseMonster4MoveEf"];
  var _HUD_Key_Event = Module["_HUD_Key_Event"] = asm["_HUD_Key_Event"];
  var __ZN12CBaseMonster4SaveER5CSave = Module["__ZN12CBaseMonster4SaveER5CSave"] = asm["__ZN12CBaseMonster4SaveER5CSave"];
  var __ZN15CBasePlayerItem11AddToPlayerEP11CBasePlayer = Module["__ZN15CBasePlayerItem11AddToPlayerEP11CBasePlayer"] = asm["__ZN15CBasePlayerItem11AddToPlayerEP11CBasePlayer"];
  var __VectorCopy = Module["__VectorCopy"] = asm["__VectorCopy"];
  var __Z12IN_KLookDownv = Module["__Z12IN_KLookDownv"] = asm["__Z12IN_KLookDownv"];
  var __ZN20CStudioModelRenderer13StudioGetAnimEP7model_sP16mstudioseqdesc_t = Module["__ZN20CStudioModelRenderer13StudioGetAnimEP7model_sP16mstudioseqdesc_t"] = asm["__ZN20CStudioModelRenderer13StudioGetAnimEP7model_sP16mstudioseqdesc_t"];
  var __Z16__MsgFunc_DamagePKciPv = Module["__Z16__MsgFunc_DamagePKciPv"] = asm["__Z16__MsgFunc_DamagePKciPv"];
  var __ZN8CHudAmmo18MsgFunc_WeapPickupEPKciPv = Module["__ZN8CHudAmmo18MsgFunc_WeapPickupEPKciPv"] = asm["__ZN8CHudAmmo18MsgFunc_WeapPickupEPKciPv"];
  var __ZN14CBaseAnimating14LookupActivityEi = Module["__ZN14CBaseAnimating14LookupActivityEi"] = asm["__ZN14CBaseAnimating14LookupActivityEi"];
  var __ZN15CBasePlayerItem7RespawnEv = Module["__ZN15CBasePlayerItem7RespawnEv"] = asm["__ZN15CBasePlayerItem7RespawnEv"];
  var __ZN8CHudAmmo13UserCmd_Slot9Ev = Module["__ZN8CHudAmmo13UserCmd_Slot9Ev"] = asm["__ZN8CHudAmmo13UserCmd_Slot9Ev"];
  var __Z17__MsgFunc_TextMsgPKciPv = Module["__Z17__MsgFunc_TextMsgPKciPv"] = asm["__Z17__MsgFunc_TextMsgPKciPv"];
  var __ZN4CHud19DrawHudNumberStringEiiiiiii = Module["__ZN4CHud19DrawHudNumberStringEiiiiiii"] = asm["__ZN4CHud19DrawHudNumberStringEiiiiiii"];
  var _VectorCompare = Module["_VectorCompare"] = asm["_VectorCompare"];
  var __ZN11CBasePlayer9PostThinkEv = Module["__ZN11CBasePlayer9PostThinkEv"] = asm["__ZN11CBasePlayer9PostThinkEv"];
  var __ZN20CStudioModelRenderer17StudioPlayerBlendEP16mstudioseqdesc_tPiPf = Module["__ZN20CStudioModelRenderer17StudioPlayerBlendEP16mstudioseqdesc_tPiPf"] = asm["__ZN20CStudioModelRenderer17StudioPlayerBlendEP16mstudioseqdesc_tPiPf"];
  var __ZN9CCrossbow9iItemSlotEv = Module["__ZN9CCrossbow9iItemSlotEv"] = asm["__ZN9CCrossbow9iItemSlotEv"];
  var __ZN14CHudFlashlight4InitEv = Module["__ZN14CHudFlashlight4InitEv"] = asm["__ZN14CHudFlashlight4InitEv"];
  var __ZN14CBaseAnimating11SetBlendingEif = Module["__ZN14CBaseAnimating11SetBlendingEif"] = asm["__ZN14CBaseAnimating11SetBlendingEif"];
  var __ZN4CRpg10CanHolsterEv = Module["__ZN4CRpg10CanHolsterEv"] = asm["__ZN4CRpg10CanHolsterEv"];
  var __ZN4CRpg12UseDecrementEv = Module["__ZN4CRpg12UseDecrementEv"] = asm["__ZN4CRpg12UseDecrementEv"];
  var __ZN5CEgon5SpawnEv = Module["__ZN5CEgon5SpawnEv"] = asm["__ZN5CEgon5SpawnEv"];
  var __Z21V_GetDoubleTargetsCamP11cl_entity_sS0_PfS1_ = Module["__Z21V_GetDoubleTargetsCamP11cl_entity_sS0_PfS1_"] = asm["__Z21V_GetDoubleTargetsCamP11cl_entity_sS0_PfS1_"];
  var __ZN11CBaseEntity5ThinkEv = Module["__ZN11CBaseEntity5ThinkEv"] = asm["__ZN11CBaseEntity5ThinkEv"];
  var __Z9V_AddIdleP12ref_params_s = Module["__Z9V_AddIdleP12ref_params_s"] = asm["__Z9V_AddIdleP12ref_params_s"];
  var _EV_FireGauss = Module["_EV_FireGauss"] = asm["_EV_FireGauss"];
  var __ZN12CBaseMonster17ShouldFadeOnDeathEv = Module["__ZN12CBaseMonster17ShouldFadeOnDeathEv"] = asm["__ZN12CBaseMonster17ShouldFadeOnDeathEv"];
  var __ZN15CBasePlayerItem9FallThinkEv = Module["__ZN15CBasePlayerItem9FallThinkEv"] = asm["__ZN15CBasePlayerItem9FallThinkEv"];
  var __ZN15CMP5AmmoGrenade7AddAmmoEP11CBaseEntity = Module["__ZN15CMP5AmmoGrenade7AddAmmoEP11CBaseEntity"] = asm["__ZN15CMP5AmmoGrenade7AddAmmoEP11CBaseEntity"];
  var __ZN12CBaseMonster8DropItemEPcRK6VectorS3_ = Module["__ZN12CBaseMonster8DropItemEPcRK6VectorS3_"] = asm["__ZN12CBaseMonster8DropItemEPcRK6VectorS3_"];
  var __ZN11CBaseEntity10TakeDamageEP9entvars_sS1_fi = Module["__ZN11CBaseEntity10TakeDamageEP9entvars_sS1_fi"] = asm["__ZN11CBaseEntity10TakeDamageEP9entvars_sS1_fi"];
  var __ZN12CBaseMonster6KilledEP9entvars_si = Module["__ZN12CBaseMonster6KilledEP9entvars_si"] = asm["__ZN12CBaseMonster6KilledEP9entvars_si"];
  var __ZN12CBaseMonster20CheckTraceHullAttackEfii = Module["__ZN12CBaseMonster20CheckTraceHullAttackEfii"] = asm["__ZN12CBaseMonster20CheckTraceHullAttackEfii"];
  var __ZN6CGauss11GetItemInfoEP8ItemInfo = Module["__ZN6CGauss11GetItemInfoEP8ItemInfo"] = asm["__ZN6CGauss11GetItemInfoEP8ItemInfo"];
  var __ZN8CGrenade10BloodColorEv = Module["__ZN8CGrenade10BloodColorEv"] = asm["__ZN8CGrenade10BloodColorEv"];
  var __Z9IN_Alt1Upv = Module["__Z9IN_Alt1Upv"] = asm["__Z9IN_Alt1Upv"];
  var __Z18__MsgFunc_ShowMenuPKciPv = Module["__Z18__MsgFunc_ShowMenuPKciPv"] = asm["__Z18__MsgFunc_ShowMenuPKciPv"];
  var __ZN12CBaseMonster14FValidateCoverERK6Vector = Module["__ZN12CBaseMonster14FValidateCoverERK6Vector"] = asm["__ZN12CBaseMonster14FValidateCoverERK6Vector"];
  var __Z7IN_MovefP9usercmd_s = Module["__Z7IN_MovefP9usercmd_s"] = asm["__Z7IN_MovefP9usercmd_s"];
  var __ZN8CCrowbar12UseDecrementEv = Module["__ZN8CCrowbar12UseDecrementEv"] = asm["__ZN8CCrowbar12UseDecrementEv"];
  var __ZN5CHgun6DeployEv = Module["__ZN5CHgun6DeployEv"] = asm["__ZN5CHgun6DeployEv"];
  var _weapon_hornetgun = Module["_weapon_hornetgun"] = asm["_weapon_hornetgun"];
  var __Z17CAM_ToThirdPersonv = Module["__Z17CAM_ToThirdPersonv"] = asm["__Z17CAM_ToThirdPersonv"];
  var _Demo_ReadBuffer = Module["_Demo_ReadBuffer"] = asm["_Demo_ReadBuffer"];
  var __Z21MaxAngleBetweenAnglesPfS_ = Module["__Z21MaxAngleBetweenAnglesPfS_"] = asm["__Z21MaxAngleBetweenAnglesPfS_"];
  var __ZN5CHgun9IsUseableEv = Module["__ZN5CHgun9IsUseableEv"] = asm["__ZN5CHgun9IsUseableEv"];
  var __ZN12CMP5AmmoClip5SpawnEv = Module["__ZN12CMP5AmmoClip5SpawnEv"] = asm["__ZN12CMP5AmmoClip5SpawnEv"];
  var __Z17__MsgFunc_BuildStPKciPv = Module["__Z17__MsgFunc_BuildStPKciPv"] = asm["__Z17__MsgFunc_BuildStPKciPv"];
  var __Z25V_SmoothInterpolateAnglesPfS_S_f = Module["__Z25V_SmoothInterpolateAnglesPfS_S_f"] = asm["__Z25V_SmoothInterpolateAnglesPfS_S_f"];
  var __Z11GetClassPtrI6CGlockEPT_S2_ = Module["__Z11GetClassPtrI6CGlockEPT_S2_"] = asm["__Z11GetClassPtrI6CGlockEPT_S2_"];
  var __ZN4CHud14GetSensitivityEv = Module["__ZN4CHud14GetSensitivityEv"] = asm["__ZN4CHud14GetSensitivityEv"];
  var __ZN4CHud13DrawHudNumberEiiiiiii = Module["__ZN4CHud13DrawHudNumberEiiiiiii"] = asm["__ZN4CHud13DrawHudNumberEiiiiiii"];
  var __Z10MoveTowardfff = Module["__Z10MoveTowardfff"] = asm["__Z10MoveTowardfff"];
  var __ZN11CBaseEntity8ClassifyEv = Module["__ZN11CBaseEntity8ClassifyEv"] = asm["__ZN11CBaseEntity8ClassifyEv"];
  var __ZN7CSqueak10WeaponIdleEv = Module["__ZN7CSqueak10WeaponIdleEv"] = asm["__ZN7CSqueak10WeaponIdleEv"];
  var __ZN8CSatchel10WeaponIdleEv = Module["__ZN8CSatchel10WeaponIdleEv"] = asm["__ZN8CSatchel10WeaponIdleEv"];
  var __Z13DBG_EntOfVarsPK9entvars_s = Module["__Z13DBG_EntOfVarsPK9entvars_s"] = asm["__Z13DBG_EntOfVarsPK9entvars_s"];
  var __ZN7CPython12UseDecrementEv = Module["__ZN7CPython12UseDecrementEv"] = asm["__ZN7CPython12UseDecrementEv"];
  var __ZN11CBasePlayer16RemovePlayerItemEP15CBasePlayerItem = Module["__ZN11CBasePlayer16RemovePlayerItemEP15CBasePlayerItem"] = asm["__ZN11CBasePlayer16RemovePlayerItemEP15CBasePlayerItem"];
  var __Z31__CmdFunc_ForceCloseCommandMenuv = Module["__Z31__CmdFunc_ForceCloseCommandMenuv"] = asm["__Z31__CmdFunc_ForceCloseCommandMenuv"];
  var __Z10READ_FLOATv = Module["__Z10READ_FLOATv"] = asm["__Z10READ_FLOATv"];
  var __ZN5CEgon8PrecacheEv = Module["__ZN5CEgon8PrecacheEv"] = asm["__ZN5CEgon8PrecacheEv"];
  var __Z18__MsgFunc_GameModePKciPv = Module["__Z18__MsgFunc_GameModePKciPv"] = asm["__Z18__MsgFunc_GameModePKciPv"];
  var __ZN11CHudBattery4InitEv = Module["__ZN11CHudBattery4InitEv"] = asm["__ZN11CHudBattery4InitEv"];
  var __Z9GetEntityi = Module["__Z9GetEntityi"] = asm["__Z9GetEntityi"];
  var __ZN4CMP56ReloadEv = Module["__ZN4CMP56ReloadEv"] = asm["__ZN4CMP56ReloadEv"];
  var __ZN14CBaseAnimating18StudioFrameAdvanceEf = Module["__ZN14CBaseAnimating18StudioFrameAdvanceEf"] = asm["__ZN14CBaseAnimating18StudioFrameAdvanceEf"];
  var __ZN11CBasePlayer14DropPlayerItemEPc = Module["__ZN11CBasePlayer14DropPlayerItemEPc"] = asm["__ZN11CBasePlayer14DropPlayerItemEPc"];
  var __ZN4CRpg16ShouldWeaponIdleEv = Module["__ZN4CRpg16ShouldWeaponIdleEv"] = asm["__ZN4CRpg16ShouldWeaponIdleEv"];
  var _VectorAngles = Module["_VectorAngles"] = asm["_VectorAngles"];
  var __ZN12CBaseMonster14CheckLocalMoveERK6VectorS2_P11CBaseEntityPf = Module["__ZN12CBaseMonster14CheckLocalMoveERK6VectorS2_P11CBaseEntityPf"] = asm["__ZN12CBaseMonster14CheckLocalMoveERK6VectorS2_P11CBaseEntityPf"];
  var __Z19EV_HLDM_DamageDecalP9physent_s = Module["__Z19EV_HLDM_DamageDecalP9physent_s"] = asm["__Z19EV_HLDM_DamageDecalP9physent_s"];
  var __ZN15CBasePlayerItem11MaterializeEv = Module["__ZN15CBasePlayerItem11MaterializeEv"] = asm["__ZN15CBasePlayerItem11MaterializeEv"];
  var __ZN15CHudDeathNotice4DrawEf = Module["__ZN15CHudDeathNotice4DrawEf"] = asm["__ZN15CHudDeathNotice4DrawEf"];
  var _PM_CatagorizePosition = Module["_PM_CatagorizePosition"] = asm["_PM_CatagorizePosition"];
  var __Z20__MsgFunc_HideWeaponPKciPv = Module["__Z20__MsgFunc_HideWeaponPKciPv"] = asm["__Z20__MsgFunc_HideWeaponPKciPv"];
  var __ZN15CBasePlayerItem7HolsterEi = Module["__ZN15CBasePlayerItem7HolsterEi"] = asm["__ZN15CBasePlayerItem7HolsterEi"];
  var _PM_CheckParamters = Module["_PM_CheckParamters"] = asm["_PM_CheckParamters"];
  var __ZN15CBasePlayerAmmo7RespawnEv = Module["__ZN15CBasePlayerAmmo7RespawnEv"] = asm["__ZN15CBasePlayerAmmo7RespawnEv"];
  var __Z19UTIL_ClientPrintAlliPKcS0_S0_S0_S0_ = Module["__Z19UTIL_ClientPrintAlliPKcS0_S0_S0_S0_"] = asm["__Z19UTIL_ClientPrintAlliPKcS0_S0_S0_S0_"];
  var _ammo_ARgrenades = Module["_ammo_ARgrenades"] = asm["_ammo_ARgrenades"];
  var __Z16UTIL_VecToAnglesRK6Vector = Module["__Z16UTIL_VecToAnglesRK6Vector"] = asm["__Z16UTIL_VecToAnglesRK6Vector"];
  var __Z15__CmdFunc_Slot8v = Module["__Z15__CmdFunc_Slot8v"] = asm["__Z15__CmdFunc_Slot8v"];
  var __ZN10CHudHealth19CalcDamageDirectionE6Vector = Module["__ZN10CHudHealth19CalcDamageDirectionE6Vector"] = asm["__ZN10CHudHealth19CalcDamageDirectionE6Vector"];
  var __ZN12CBaseMonster8IsMovingEv = Module["__ZN12CBaseMonster8IsMovingEv"] = asm["__ZN12CBaseMonster8IsMovingEv"];
  var __ZN11CBasePlayer15CheckSuitUpdateEv = Module["__ZN11CBasePlayer15CheckSuitUpdateEv"] = asm["__ZN11CBasePlayer15CheckSuitUpdateEv"];
  var _VectorNormalize = Module["_VectorNormalize"] = asm["_VectorNormalize"];
  var __ZN12CBaseMonster16PrescheduleThinkEv = Module["__ZN12CBaseMonster16PrescheduleThinkEv"] = asm["__ZN12CBaseMonster16PrescheduleThinkEv"];
  var _EV_EgonStop = Module["_EV_EgonStop"] = asm["_EV_EgonStop"];
  var __Z24V_CalcIntermissionRefdefP12ref_params_s = Module["__Z24V_CalcIntermissionRefdefP12ref_params_s"] = asm["__Z24V_CalcIntermissionRefdefP12ref_params_s"];
  var __Z20__MsgFunc_FlashlightPKciPv = Module["__Z20__MsgFunc_FlashlightPKciPv"] = asm["__Z20__MsgFunc_FlashlightPKciPv"];
  var __ZN11CBasePlayer5SpawnEv = Module["__ZN11CBasePlayer5SpawnEv"] = asm["__ZN11CBasePlayer5SpawnEv"];
  var __ZN11CBasePlayer15AddPointsToTeamEii = Module["__ZN11CBasePlayer15AddPointsToTeamEii"] = asm["__ZN11CBasePlayer15AddPointsToTeamEii"];
  var __Z16UTIL_MakeVectorsRK6Vector = Module["__Z16UTIL_MakeVectorsRK6Vector"] = asm["__Z16UTIL_MakeVectorsRK6Vector"];
  var __ZN12CBaseMonster13TaskIsRunningEv = Module["__ZN12CBaseMonster13TaskIsRunningEv"] = asm["__ZN12CBaseMonster13TaskIsRunningEv"];
  var __ZN17CHudAmmoSecondary19MsgFunc_SecAmmoIconEPKciPv = Module["__ZN17CHudAmmoSecondary19MsgFunc_SecAmmoIconEPKciPv"] = asm["__ZN17CHudAmmoSecondary19MsgFunc_SecAmmoIconEPKciPv"];
  var __ZN11CBasePlayer13AmmoInventoryEi = Module["__ZN11CBasePlayer13AmmoInventoryEi"] = asm["__ZN11CBasePlayer13AmmoInventoryEi"];
  var _monster_satchel = Module["_monster_satchel"] = asm["_monster_satchel"];
  var __ZN15CBasePlayerItem7RestoreER8CRestore = Module["__ZN15CBasePlayerItem7RestoreER8CRestore"] = asm["__ZN15CBasePlayerItem7RestoreER8CRestore"];
  var _HUD_GetStudioModelInterface = Module["_HUD_GetStudioModelInterface"] = asm["_HUD_GetStudioModelInterface"];
  var __ZN15WeaponsResource20GetAmmoPicFromWeaponEiR7wrect_s = Module["__ZN15WeaponsResource20GetAmmoPicFromWeaponEiR7wrect_s"] = asm["__ZN15WeaponsResource20GetAmmoPicFromWeaponEiR7wrect_s"];
  var __Z15__CmdFunc_Slot5v = Module["__Z15__CmdFunc_Slot5v"] = asm["__Z15__CmdFunc_Slot5v"];
  var __ZN14CBaseAnimating15HandleAnimEventEP14MonsterEvent_t = Module["__ZN14CBaseAnimating15HandleAnimEventEP14MonsterEvent_t"] = asm["__ZN14CBaseAnimating15HandleAnimEventEP14MonsterEvent_t"];
  var __Z10EV_IsLocali = Module["__Z10EV_IsLocali"] = asm["__Z10EV_IsLocali"];
  var __ZN17CBasePlayerWeapon12GetWeaponPtrEv = Module["__ZN17CBasePlayerWeapon12GetWeaponPtrEv"] = asm["__ZN17CBasePlayerWeapon12GetWeaponPtrEv"];
  var __ZN15CBasePlayerItem12AddDuplicateEPS_ = Module["__ZN15CBasePlayerItem12AddDuplicateEPS_"] = asm["__ZN15CBasePlayerItem12AddDuplicateEPS_"];
  var __ZN4CHud16MsgFunc_ViewModeEPKciPv = Module["__ZN4CHud16MsgFunc_ViewModeEPKciPv"] = asm["__ZN4CHud16MsgFunc_ViewModeEPKciPv"];
  var __ZN12CBaseMonster10TakeDamageEP9entvars_sS1_fi = Module["__ZN12CBaseMonster10TakeDamageEP9entvars_sS1_fi"] = asm["__ZN12CBaseMonster10TakeDamageEP9entvars_sS1_fi"];
  var __Z10LoadVModelPcP11CBasePlayer = Module["__Z10LoadVModelPcP11CBasePlayer"] = asm["__Z10LoadVModelPcP11CBasePlayer"];
  var __ZN13CHudSpectator15HandleButtonsUpEi = Module["__ZN13CHudSpectator15HandleButtonsUpEi"] = asm["__ZN13CHudSpectator15HandleButtonsUpEi"];
  var __ZN20CStudioModelRenderer17StudioFxTransformEP11cl_entity_sPA4_f = Module["__ZN20CStudioModelRenderer17StudioFxTransformEP11cl_entity_sPA4_f"] = asm["__ZN20CStudioModelRenderer17StudioFxTransformEP11cl_entity_sPA4_f"];
  var __Z22EV_GetDefaultShellInfoP12event_args_sPfS1_S1_S1_S1_S1_S1_fff = Module["__Z22EV_GetDefaultShellInfoP12event_args_sPfS1_S1_S1_S1_S1_S1_fff"] = asm["__Z22EV_GetDefaultShellInfoP12event_args_sPfS1_S1_S1_S1_S1_S1_fff"];
  var _PM_DrawBBox = Module["_PM_DrawBBox"] = asm["_PM_DrawBBox"];
  var __ZN12CBaseMonster12CheckAttacksEP11CBaseEntityf = Module["__ZN12CBaseMonster12CheckAttacksEP11CBaseEntityf"] = asm["__ZN12CBaseMonster12CheckAttacksEP11CBaseEntityf"];
  var _IN_MouseEvent = Module["_IN_MouseEvent"] = asm["_IN_MouseEvent"];
  var _PM_MapTextureTypeStepType = Module["_PM_MapTextureTypeStepType"] = asm["_PM_MapTextureTypeStepType"];
  var __ZN9CEgonAmmo7AddAmmoEP11CBaseEntity = Module["__ZN9CEgonAmmo7AddAmmoEP11CBaseEntity"] = asm["__ZN9CEgonAmmo7AddAmmoEP11CBaseEntity"];
  var __ZN15CBasePlayerItem12GetWeaponPtrEv = Module["__ZN15CBasePlayerItem12GetWeaponPtrEv"] = asm["__ZN15CBasePlayerItem12GetWeaponPtrEv"];
  var __Z13VectorComparePKfS0_ = Module["__Z13VectorComparePKfS0_"] = asm["__Z13VectorComparePKfS0_"];
  var __ZN12CBaseMonster13RouteSimplifyEP11CBaseEntity = Module["__ZN12CBaseMonster13RouteSimplifyEP11CBaseEntity"] = asm["__ZN12CBaseMonster13RouteSimplifyEP11CBaseEntity"];
  var __ZN11CBaseEntity13AddPlayerItemEP15CBasePlayerItem = Module["__ZN11CBaseEntity13AddPlayerItemEP15CBasePlayerItem"] = asm["__ZN11CBaseEntity13AddPlayerItemEP15CBasePlayerItem"];
  var __Z12IN_MLookDownv = Module["__Z12IN_MLookDownv"] = asm["__Z12IN_MLookDownv"];
  var __ZN14CHudFlashlight16MsgFunc_FlashBatEPKciPv = Module["__ZN14CHudFlashlight16MsgFunc_FlashBatEPKciPv"] = asm["__ZN14CHudFlashlight16MsgFunc_FlashBatEPKciPv"];
  var __ZN12CBaseMonster15OpenDoorAndWaitEP9entvars_s = Module["__ZN12CBaseMonster15OpenDoorAndWaitEP9entvars_s"] = asm["__ZN12CBaseMonster15OpenDoorAndWaitEP9entvars_s"];
  var __ZN11CBasePlayer8ClassifyEv = Module["__ZN11CBasePlayer8ClassifyEv"] = asm["__ZN11CBasePlayer8ClassifyEv"];
  var __ZN11CBasePlayer14SelectNextItemEi = Module["__ZN11CBasePlayer14SelectNextItemEi"] = asm["__ZN11CBasePlayer14SelectNextItemEi"];
  var __Z19UTIL_WeaponTimeBasev = Module["__Z19UTIL_WeaponTimeBasev"] = asm["__Z19UTIL_WeaponTimeBasev"];
  var __Z10EjectBrassRK6VectorS1_fii = Module["__Z10EjectBrassRK6VectorS1_fii"] = asm["__Z10EjectBrassRK6VectorS1_fii"];
  var __ZN8CSatchel13PrimaryAttackEv = Module["__ZN8CSatchel13PrimaryAttackEv"] = asm["__ZN8CSatchel13PrimaryAttackEv"];
  var _CrossProduct = Module["_CrossProduct"] = asm["_CrossProduct"];
  var __Z11GetClassPtrI7CPythonEPT_S2_ = Module["__Z11GetClassPtrI7CPythonEPT_S2_"] = asm["__Z11GetClassPtrI7CPythonEPT_S2_"];
  var __ZN8CCrowbar7HolsterEi = Module["__ZN8CCrowbar7HolsterEi"] = asm["__ZN8CCrowbar7HolsterEi"];
  var _EV_FireMP52 = Module["_EV_FireMP52"] = asm["_EV_FireMP52"];
  var __ZN12CBaseMonster10DeathSoundEv = Module["__ZN12CBaseMonster10DeathSoundEv"] = asm["__ZN12CBaseMonster10DeathSoundEv"];
  var __ZN9CCrossbow10WeaponIdleEv = Module["__ZN9CCrossbow10WeaponIdleEv"] = asm["__ZN9CCrossbow10WeaponIdleEv"];
  var __Z10READ_ANGLEv = Module["__Z10READ_ANGLEv"] = asm["__Z10READ_ANGLEv"];
  var __ZN11CBaseEntity10IsBSPModelEv = Module["__ZN11CBaseEntity10IsBSPModelEv"] = asm["__ZN11CBaseEntity10IsBSPModelEv"];
  var __ZN15CBasePlayerAmmo5SpawnEv = Module["__ZN15CBasePlayerAmmo5SpawnEv"] = asm["__ZN15CBasePlayerAmmo5SpawnEv"];
  var __ZN9CCrossbow14FireSniperBoltEv = Module["__ZN9CCrossbow14FireSniperBoltEv"] = asm["__ZN9CCrossbow14FireSniperBoltEv"];
  var __ZN14CBaseAnimating14LookupSequenceEPKc = Module["__ZN14CBaseAnimating14LookupSequenceEPKc"] = asm["__ZN14CBaseAnimating14LookupSequenceEPKc"];
  var __ZN17CBasePlayerWeapon12UseDecrementEv = Module["__ZN17CBasePlayerWeapon12UseDecrementEv"] = asm["__ZN17CBasePlayerWeapon12UseDecrementEv"];
  var __ZN7CPython8PrecacheEv = Module["__ZN7CPython8PrecacheEv"] = asm["__ZN7CPython8PrecacheEv"];
  var __ZN8CShotgun6ReloadEv = Module["__ZN8CShotgun6ReloadEv"] = asm["__ZN8CShotgun6ReloadEv"];
  var __ZN12CBaseMonster3EatEf = Module["__ZN12CBaseMonster3EatEf"] = asm["__ZN12CBaseMonster3EatEf"];
  var __Z14AddMultiDamageP9entvars_sP11CBaseEntityfi = Module["__Z14AddMultiDamageP9entvars_sP11CBaseEntityfi"] = asm["__Z14AddMultiDamageP9entvars_sP11CBaseEntityfi"];
  var __ZN11CBaseEntity11EarPositionEv = Module["__ZN11CBaseEntity11EarPositionEv"] = asm["__ZN11CBaseEntity11EarPositionEv"];
  var __ZN17CBasePlayerWeapon14UpdateItemInfoEv = Module["__ZN17CBasePlayerWeapon14UpdateItemInfoEv"] = asm["__ZN17CBasePlayerWeapon14UpdateItemInfoEv"];
  var _PM_FindTextureType = Module["_PM_FindTextureType"] = asm["_PM_FindTextureType"];
  var _HUD_DirectorMessage = Module["_HUD_DirectorMessage"] = asm["_HUD_DirectorMessage"];
  var _AngleMatrix = Module["_AngleMatrix"] = asm["_AngleMatrix"];
  var _weapon_python = Module["_weapon_python"] = asm["_weapon_python"];
  var _weapon_satchel = Module["_weapon_satchel"] = asm["_weapon_satchel"];
  var __ZN12CBaseMonster12PlaySentenceEPKcfff = Module["__ZN12CBaseMonster12PlaySentenceEPKcfff"] = asm["__ZN12CBaseMonster12PlaySentenceEPKcfff"];
  var __Z15Game_AddObjectsv = Module["__Z15Game_AddObjectsv"] = asm["__Z15Game_AddObjectsv"];
  var __ZN12CBaseMonster14ScheduleChangeEv = Module["__ZN12CBaseMonster14ScheduleChangeEv"] = asm["__ZN12CBaseMonster14ScheduleChangeEv"];
  var __ZN12CBaseMonster20MakeDamageBloodDecalEifP11TraceResultRK6Vector = Module["__ZN12CBaseMonster20MakeDamageBloodDecalEifP11TraceResultRK6Vector"] = asm["__ZN12CBaseMonster20MakeDamageBloodDecalEifP11TraceResultRK6Vector"];
  var __Z14EV_MuzzleFlashv = Module["__Z14EV_MuzzleFlashv"] = asm["__Z14EV_MuzzleFlashv"];
  var __ZN11CBaseEntity5SpawnEv = Module["__ZN11CBaseEntity5SpawnEv"] = asm["__ZN11CBaseEntity5SpawnEv"];
  var __ZN6CGauss6DeployEv = Module["__ZN6CGauss6DeployEv"] = asm["__ZN6CGauss6DeployEv"];
  var __ZN14CBaseAnimating12SetBodygroupEii = Module["__ZN14CBaseAnimating12SetBodygroupEii"] = asm["__ZN14CBaseAnimating12SetBodygroupEii"];
  var __ZN11CBaseEntity6CreateEPcRK6VectorS3_P7edict_s = Module["__ZN11CBaseEntity6CreateEPcRK6VectorS3_P7edict_s"] = asm["__ZN11CBaseEntity6CreateEPcRK6VectorS3_P7edict_s"];
  var __ZN11CBaseEntity13OverrideResetEv = Module["__ZN11CBaseEntity13OverrideResetEv"] = asm["__ZN11CBaseEntity13OverrideResetEv"];
  var __ZN11CBasePlayer10TakeDamageEP9entvars_sS1_fi = Module["__ZN11CBasePlayer10TakeDamageEP9entvars_sS1_fi"] = asm["__ZN11CBasePlayer10TakeDamageEP9entvars_sS1_fi"];
  var __ZN7CSqueak15SecondaryAttackEv = Module["__ZN7CSqueak15SecondaryAttackEv"] = asm["__ZN7CSqueak15SecondaryAttackEv"];
  var _HUD_StudioEvent = Module["_HUD_StudioEvent"] = asm["_HUD_StudioEvent"];
  var __ZN12CBaseMonster16MovementCompleteEv = Module["__ZN12CBaseMonster16MovementCompleteEv"] = asm["__ZN12CBaseMonster16MovementCompleteEv"];
  var __ZN8CShotgun15SecondaryAttackEv = Module["__ZN8CShotgun15SecondaryAttackEv"] = asm["__ZN8CShotgun15SecondaryAttackEv"];
  var __ZN12CBaseMonster9CheckAmmoEv = Module["__ZN12CBaseMonster9CheckAmmoEv"] = asm["__ZN12CBaseMonster9CheckAmmoEv"];
  var __Z16UTIL_ParticleBoxP11CBasePlayerPfS1_fhhh = Module["__Z16UTIL_ParticleBoxP11CBasePlayerPfS1_fhhh"] = asm["__Z16UTIL_ParticleBoxP11CBasePlayerPfS1_fhhh"];
  var __ZN5CEgon12UseDecrementEv = Module["__ZN5CEgon12UseDecrementEv"] = asm["__ZN5CEgon12UseDecrementEv"];
  var __Z20__CmdFunc_NextWeaponv = Module["__Z20__CmdFunc_NextWeaponv"] = asm["__Z20__CmdFunc_NextWeaponv"];
  var __Z17EV_GetGunPositionP12event_args_sPfS1_ = Module["__Z17EV_GetGunPositionP12event_args_sPfS1_"] = asm["__Z17EV_GetGunPositionP12event_args_sPfS1_"];
  var __Z13HUD_PlaySoundPcf = Module["__Z13HUD_PlaySoundPcf"] = asm["__Z13HUD_PlaySoundPcf"];
  var __ZN5CEgon13PrimaryAttackEv = Module["__ZN5CEgon13PrimaryAttackEv"] = asm["__ZN5CEgon13PrimaryAttackEv"];
  var __ZN8CSatchel7HolsterEi = Module["__ZN8CSatchel7HolsterEi"] = asm["__ZN8CSatchel7HolsterEi"];
  var __ZN11CBaseEntity5TouchEPS_ = Module["__ZN11CBaseEntity5TouchEPS_"] = asm["__ZN11CBaseEntity5TouchEPS_"];
  var _HUD_Shutdown = Module["_HUD_Shutdown"] = asm["_HUD_Shutdown"];
  var __ZN15CHudDeathNotice4InitEv = Module["__ZN15CHudDeathNotice4InitEv"] = asm["__ZN15CHudDeathNotice4InitEv"];
  var __ZN15WeaponsResource17LoadWeaponSpritesEP6WEAPON = Module["__ZN15WeaponsResource17LoadWeaponSpritesEP6WEAPON"] = asm["__ZN15WeaponsResource17LoadWeaponSpritesEP6WEAPON"];
  var __Z14ShouldSimplifyi = Module["__Z14ShouldSimplifyi"] = asm["__Z14ShouldSimplifyi"];
  var __ZN8CHudBase5ResetEv = Module["__ZN8CHudBase5ResetEv"] = asm["__ZN8CHudBase5ResetEv"];
  var __ZN5CHgun5SpawnEv = Module["__ZN5CHgun5SpawnEv"] = asm["__ZN5CHgun5SpawnEv"];
  var __ZN4CRpg6ReloadEv = Module["__ZN4CRpg6ReloadEv"] = asm["__ZN4CRpg6ReloadEv"];
  var __ZN13CHudSpectator8SetModesEii = Module["__ZN13CHudSpectator8SetModesEii"] = asm["__ZN13CHudSpectator8SetModesEii"];
  var __ZN15WeaponsResource20LoadAllWeaponSpritesEv = Module["__ZN15WeaponsResource20LoadAllWeaponSpritesEv"] = asm["__ZN15WeaponsResource20LoadAllWeaponSpritesEv"];
  var __Z13ConvertCRtoNLPc = Module["__Z13ConvertCRtoNLPc"] = asm["__Z13ConvertCRtoNLPc"];
  var __ZN8CHudAmmo9SlotInputEi = Module["__ZN8CHudAmmo9SlotInputEi"] = asm["__ZN8CHudAmmo9SlotInputEi"];
  var __ZN8CShotgun6DeployEv = Module["__ZN8CShotgun6DeployEv"] = asm["__ZN8CShotgun6DeployEv"];
  var __ZN4CRpg10UpdateSpotEv = Module["__ZN4CRpg10UpdateSpotEv"] = asm["__ZN4CRpg10UpdateSpotEv"];
  var _IN_DeactivateMouse = Module["_IN_DeactivateMouse"] = asm["_IN_DeactivateMouse"];
  var __ZN11CBasePlayer20CheatImpulseCommandsEi = Module["__ZN11CBasePlayer20CheatImpulseCommandsEi"] = asm["__ZN11CBasePlayer20CheatImpulseCommandsEi"];
  var __ZN11CBaseEntity9HasTargetEj = Module["__ZN11CBaseEntity9HasTargetEj"] = asm["__ZN11CBaseEntity9HasTargetEj"];
  var __ZN8CHudMOTD7VidInitEv = Module["__ZN8CHudMOTD7VidInitEv"] = asm["__ZN8CHudMOTD7VidInitEv"];
  var __ZN15CBasePlayerItem16UpdateClientDataEP11CBasePlayer = Module["__ZN15CBasePlayerItem16UpdateClientDataEP11CBasePlayer"] = asm["__ZN15CBasePlayerItem16UpdateClientDataEP11CBasePlayer"];
  var _PM_AddGravity = Module["_PM_AddGravity"] = asm["_PM_AddGravity"];
  var __ZN5CHgun6ReloadEv = Module["__ZN5CHgun6ReloadEv"] = asm["__ZN5CHgun6ReloadEv"];
  var __ZN11CBaseEntity12IlluminationEv = Module["__ZN11CBaseEntity12IlluminationEv"] = asm["__ZN11CBaseEntity12IlluminationEv"];
  var __Z11GetClassPtrI8CRpgAmmoEPT_S2_ = Module["__Z11GetClassPtrI8CRpgAmmoEPT_S2_"] = asm["__Z11GetClassPtrI8CRpgAmmoEPT_S2_"];
  var __Z14UTIL_TraceLineRK6VectorS1_15IGNORE_MONSTERSP7edict_sP11TraceResult = Module["__Z14UTIL_TraceLineRK6VectorS1_15IGNORE_MONSTERSP7edict_sP11TraceResult"] = asm["__Z14UTIL_TraceLineRK6VectorS1_15IGNORE_MONSTERSP7edict_sP11TraceResult"];
  var __Z11GetClassPtrI13CMP5ChainammoEPT_S2_ = Module["__Z11GetClassPtrI13CMP5ChainammoEPT_S2_"] = asm["__Z11GetClassPtrI13CMP5ChainammoEPT_S2_"];
  var __ZN15CHudStatusIcons5ResetEv = Module["__ZN15CHudStatusIcons5ResetEv"] = asm["__ZN15CHudStatusIcons5ResetEv"];
  var _HUD_DrawNormalTriangles = Module["_HUD_DrawNormalTriangles"] = asm["_HUD_DrawNormalTriangles"];
  var __ZN12CBaseMonster14InsertWaypointE6Vectori = Module["__ZN12CBaseMonster14InsertWaypointE6Vectori"] = asm["__ZN12CBaseMonster14InsertWaypointE6Vectori"];
  var __ZN12CBaseMonster17CheckMeleeAttack2Eff = Module["__ZN12CBaseMonster17CheckMeleeAttack2Eff"] = asm["__ZN12CBaseMonster17CheckMeleeAttack2Eff"];
  var __ZN20CStudioModelRendererC2Ev = Module["__ZN20CStudioModelRendererC2Ev"] = asm["__ZN20CStudioModelRendererC2Ev"];
  var __ZN11CBaseEntity6TeamIDEv = Module["__ZN11CBaseEntity6TeamIDEv"] = asm["__ZN11CBaseEntity6TeamIDEv"];
  var __ZN12CBaseMonster4LookEi = Module["__ZN12CBaseMonster4LookEi"] = asm["__ZN12CBaseMonster4LookEi"];
  var __Z11IN_LeftDownv = Module["__Z11IN_LeftDownv"] = asm["__Z11IN_LeftDownv"];
  var __Z19__MsgFunc_TeamNamesPKciPv = Module["__Z19__MsgFunc_TeamNamesPKciPv"] = asm["__Z19__MsgFunc_TeamNamesPKciPv"];
  var _HUD_TempEntUpdate = Module["_HUD_TempEntUpdate"] = asm["_HUD_TempEntUpdate"];
  var __ZN15HistoryResource12AddToHistoryEiii = Module["__ZN15HistoryResource12AddToHistoryEiii"] = asm["__ZN15HistoryResource12AddToHistoryEiii"];
  var __ZN15CBasePlayerItem4SaveER5CSave = Module["__ZN15CBasePlayerItem4SaveER5CSave"] = asm["__ZN15CBasePlayerItem4SaveER5CSave"];
  var __ZN10CGaussAmmo5SpawnEv = Module["__ZN10CGaussAmmo5SpawnEv"] = asm["__ZN10CGaussAmmo5SpawnEv"];
  var __Z20__MsgFunc_SecAmmoValPKciPv = Module["__Z20__MsgFunc_SecAmmoValPKciPv"] = asm["__Z20__MsgFunc_SecAmmoValPKciPv"];
  var __ZN4CMP512UseDecrementEv = Module["__ZN4CMP512UseDecrementEv"] = asm["__ZN4CMP512UseDecrementEv"];
  var __ZN14CBaseAnimating19InitBoneControllersEv = Module["__ZN14CBaseAnimating19InitBoneControllersEv"] = asm["__ZN14CBaseAnimating19InitBoneControllersEv"];
  var __Z13SpectatorMenuv = Module["__Z13SpectatorMenuv"] = asm["__Z13SpectatorMenuv"];
  var __Z12RadiusDamage6VectorP9entvars_sS1_ffii = Module["__Z12RadiusDamage6VectorP9entvars_sS1_ffii"] = asm["__Z12RadiusDamage6VectorP9entvars_sS1_ffii"];
  var __Z10IN_ScoreUpv = Module["__Z10IN_ScoreUpv"] = asm["__Z10IN_ScoreUpv"];
  var __ZN12CBaseMonster14SetEyePositionEv = Module["__ZN12CBaseMonster14SetEyePositionEv"] = asm["__ZN12CBaseMonster14SetEyePositionEv"];
  var __ZN11CBaseEntity10OnControlsEP9entvars_s = Module["__ZN11CBaseEntity10OnControlsEP9entvars_s"] = asm["__ZN11CBaseEntity10OnControlsEP9entvars_s"];
  var __Z12ToggleScoresv = Module["__Z12ToggleScoresv"] = asm["__Z12ToggleScoresv"];
  var __Z11GetClassPtrI13CCrossbowAmmoEPT_S2_ = Module["__Z11GetClassPtrI13CCrossbowAmmoEPT_S2_"] = asm["__Z11GetClassPtrI13CCrossbowAmmoEPT_S2_"];
  var __ZN13CMP5Chainammo5SpawnEv = Module["__ZN13CMP5Chainammo5SpawnEv"] = asm["__ZN13CMP5Chainammo5SpawnEv"];
  var _EV_FireCrossbow = Module["_EV_FireCrossbow"] = asm["_EV_FireCrossbow"];
  var __ZN9CHudTrainD0Ev = Module["__ZN9CHudTrainD0Ev"] = asm["__ZN9CHudTrainD0Ev"];
  var __ZN17CBasePlayerWeapon11AddToPlayerEP11CBasePlayer = Module["__ZN17CBasePlayerWeapon11AddToPlayerEP11CBasePlayer"] = asm["__ZN17CBasePlayerWeapon11AddToPlayerEP11CBasePlayer"];
  var __ZN15CHudTextMessage12LookupStringEPKcPi = Module["__ZN15CHudTextMessage12LookupStringEPKcPi"] = asm["__ZN15CHudTextMessage12LookupStringEPKcPi"];
  var __ZN11CBasePlayer20GetCustomDecalFramesEv = Module["__ZN11CBasePlayer20GetCustomDecalFramesEv"] = asm["__ZN11CBasePlayer20GetCustomDecalFramesEv"];
  var __Z13SpectatorModev = Module["__Z13SpectatorModev"] = asm["__Z13SpectatorModev"];
  var __Z19UTIL_StringToVectorPfPKc = Module["__Z19UTIL_StringToVectorPfPKc"] = asm["__Z19UTIL_StringToVectorPfPKc"];
  var __ZN17CBasePlayerWeapon10PrintStateEv = Module["__ZN17CBasePlayerWeapon10PrintStateEv"] = asm["__ZN17CBasePlayerWeapon10PrintStateEv"];
  var __ZN12CHudOverview7VidInitEv = Module["__ZN12CHudOverview7VidInitEv"] = asm["__ZN12CHudOverview7VidInitEv"];
  var __Z10IN_RightUpv = Module["__Z10IN_RightUpv"] = asm["__Z10IN_RightUpv"];
  var __ZN7CSqueak6DeployEv = Module["__ZN7CSqueak6DeployEv"] = asm["__ZN7CSqueak6DeployEv"];
  var __ZN12CBaseMonster8VecToYawE6Vector = Module["__ZN12CBaseMonster8VecToYawE6Vector"] = asm["__ZN12CBaseMonster8VecToYawE6Vector"];
  var __ZN9CTripmine5SpawnEv = Module["__ZN9CTripmine5SpawnEv"] = asm["__ZN9CTripmine5SpawnEv"];
  var __Z11GetClassPtrI5CHgunEPT_S2_ = Module["__Z11GetClassPtrI5CHgunEPT_S2_"] = asm["__Z11GetClassPtrI5CHgunEPT_S2_"];
  var __ZN12CBaseMonster9IdleSoundEv = Module["__ZN12CBaseMonster9IdleSoundEv"] = asm["__ZN12CBaseMonster9IdleSoundEv"];
  var __ZN6CGlock5SpawnEv = Module["__ZN6CGlock5SpawnEv"] = asm["__ZN6CGlock5SpawnEv"];
  var _HUD_MobilityInterface = Module["_HUD_MobilityInterface"] = asm["_HUD_MobilityInterface"];
  var __Z14GetClientColori = Module["__Z14GetClientColori"] = asm["__Z14GetClientColori"];
  var __Z20FindHullIntersectionRK6VectorR11TraceResultPfS4_P7edict_s = Module["__Z20FindHullIntersectionRK6VectorR11TraceResultPfS4_P7edict_s"] = asm["__Z20FindHullIntersectionRK6VectorR11TraceResultPfS4_P7edict_s"];
  var __ZN11CBaseEntity8FVisibleEPS_ = Module["__ZN11CBaseEntity8FVisibleEPS_"] = asm["__ZN11CBaseEntity8FVisibleEPS_"];
  var __ZN13CHudSpectator13CheckSettingsEv = Module["__ZN13CHudSpectator13CheckSettingsEv"] = asm["__ZN13CHudSpectator13CheckSettingsEv"];
  var __ZN15CBasePlayerItem8FallInitEv = Module["__ZN15CBasePlayerItem8FallInitEv"] = asm["__ZN15CBasePlayerItem8FallInitEv"];
  var __ZN4CHud13DrawHudStringEiiiPciii = Module["__ZN4CHud13DrawHudStringEiiiPciii"] = asm["__ZN4CHud13DrawHudStringEiiiPciii"];
  var __ZN11CBaseEntity11MakeDormantEv = Module["__ZN11CBaseEntity11MakeDormantEv"] = asm["__ZN11CBaseEntity11MakeDormantEv"];
  var __Z13IN_MoveleftUpv = Module["__Z13IN_MoveleftUpv"] = asm["__Z13IN_MoveleftUpv"];
  var __ZN12CBaseMonster11MoveExecuteEP11CBaseEntityRK6Vectorf = Module["__ZN12CBaseMonster11MoveExecuteEP11CBaseEntityRK6Vectorf"] = asm["__ZN12CBaseMonster11MoveExecuteEP11CBaseEntityRK6Vectorf"];
  var __ZN7CPython9iItemSlotEv = Module["__ZN7CPython9iItemSlotEv"] = asm["__ZN7CPython9iItemSlotEv"];
  var __ZN20CStudioModelRenderer15StudioDrawModelEi = Module["__ZN20CStudioModelRenderer15StudioDrawModelEi"] = asm["__ZN20CStudioModelRenderer15StudioDrawModelEi"];
  var __ZN12CBaseMonster13RouteClassifyEi = Module["__ZN12CBaseMonster13RouteClassifyEi"] = asm["__ZN12CBaseMonster13RouteClassifyEi"];
  var __Z18__MsgFunc_RandomPCPKciPv = Module["__Z18__MsgFunc_RandomPCPKciPv"] = asm["__Z18__MsgFunc_RandomPCPKciPv"];
  var __ZN10CBaseDelay8KeyValueEP14KeyValueData_s = Module["__ZN10CBaseDelay8KeyValueEP14KeyValueData_s"] = asm["__ZN10CBaseDelay8KeyValueEP14KeyValueData_s"];
  var __ZN13CHudSpectator12DrawOverviewEv = Module["__ZN13CHudSpectator12DrawOverviewEv"] = asm["__ZN13CHudSpectator12DrawOverviewEv"];
  var __Z19__MsgFunc_ScoreInfoPKciPv = Module["__Z19__MsgFunc_ScoreInfoPKciPv"] = asm["__Z19__MsgFunc_ScoreInfoPKciPv"];
  var __ZN12CBaseMonster11MonsterInitEv = Module["__ZN12CBaseMonster11MonsterInitEv"] = asm["__ZN12CBaseMonster11MonsterInitEv"];
  var __Z14__MsgFunc_MOTDPKciPv = Module["__Z14__MsgFunc_MOTDPKciPv"] = asm["__Z14__MsgFunc_MOTDPKciPv"];
  var __ZN8CGrenade5SpawnEv = Module["__ZN8CGrenade5SpawnEv"] = asm["__ZN8CGrenade5SpawnEv"];
  var __Z18__MsgFunc_DeathMsgPKciPv = Module["__Z18__MsgFunc_DeathMsgPKciPv"] = asm["__Z18__MsgFunc_DeathMsgPKciPv"];
  var __ZN12CShotgunAmmo8PrecacheEv = Module["__ZN12CShotgunAmmo8PrecacheEv"] = asm["__ZN12CShotgunAmmo8PrecacheEv"];
  var __ZN4CHud10AddHudElemEP8CHudBase = Module["__ZN4CHud10AddHudElemEP8CHudBase"] = asm["__ZN4CHud10AddHudElemEP8CHudBase"];
  var __ZN15CBasePlayerItem18SecondaryAmmoIndexEv = Module["__ZN15CBasePlayerItem18SecondaryAmmoIndexEv"] = asm["__ZN15CBasePlayerItem18SecondaryAmmoIndexEv"];
  var __ZN12CBaseMonster15CanPlaySentenceEi = Module["__ZN12CBaseMonster15CanPlaySentenceEi"] = asm["__ZN12CBaseMonster15CanPlaySentenceEi"];
  var __ZN17CBasePlayerWeapon12RetireWeaponEv = Module["__ZN17CBasePlayerWeapon12RetireWeaponEv"] = asm["__ZN17CBasePlayerWeapon12RetireWeaponEv"];
  var __ZN4CHud11GetNumWidthEii = Module["__ZN4CHud11GetNumWidthEii"] = asm["__ZN4CHud11GetNumWidthEii"];
  var __ZN13CCrossbowAmmo8PrecacheEv = Module["__ZN13CCrossbowAmmo8PrecacheEv"] = asm["__ZN13CCrossbowAmmo8PrecacheEv"];
  var __ZN11CBasePlayer14SelectLastItemEv = Module["__ZN11CBasePlayer14SelectLastItemEv"] = asm["__ZN11CBasePlayer14SelectLastItemEv"];
  var __Z14EMIT_SOUND_DYNP7edict_siPKcffii = Module["__Z14EMIT_SOUND_DYNP7edict_siPKcffii"] = asm["__Z14EMIT_SOUND_DYNP7edict_siPKcffii"];
  var __Z10LoadSpritePKc = Module["__Z10LoadSpritePKc"] = asm["__Z10LoadSpritePKc"];
  var __ZN12CBaseMonster15CanPlaySequenceEii = Module["__ZN12CBaseMonster15CanPlaySequenceEii"] = asm["__ZN12CBaseMonster15CanPlaySequenceEii"];
  var __Z12IN_RightDownv = Module["__Z12IN_RightDownv"] = asm["__Z12IN_RightDownv"];
  var __Z7COM_LogPcS_z = Module["__Z7COM_LogPcS_z"] = asm["__Z7COM_LogPcS_z"];
  var __ZN12CBaseMonster20BarnacleVictimBittenEP9entvars_s = Module["__ZN12CBaseMonster20BarnacleVictimBittenEP9entvars_s"] = asm["__ZN12CBaseMonster20BarnacleVictimBittenEP9entvars_s"];
  var __ZN8CHudAmmo18UserCmd_PrevWeaponEv = Module["__ZN8CHudAmmo18UserCmd_PrevWeaponEv"] = asm["__ZN8CHudAmmo18UserCmd_PrevWeaponEv"];
  var __ZN15CBasePlayerItem13ItemPostFrameEv = Module["__ZN15CBasePlayerItem13ItemPostFrameEv"] = asm["__ZN15CBasePlayerItem13ItemPostFrameEv"];
  var _EV_HornetGunFire = Module["_EV_HornetGunFire"] = asm["_EV_HornetGunFire"];
  var __ZN8CSatchel5ThrowEv = Module["__ZN8CSatchel5ThrowEv"] = asm["__ZN8CSatchel5ThrowEv"];
  var _weapon_handgrenade = Module["_weapon_handgrenade"] = asm["_weapon_handgrenade"];
  var __ZN20CStudioModelRenderer18StudioEstimateGaitEP14entity_state_s = Module["__ZN20CStudioModelRenderer18StudioEstimateGaitEP14entity_state_s"] = asm["__ZN20CStudioModelRenderer18StudioEstimateGaitEP14entity_state_s"];
  var __Z11GetClassPtrI11CPythonAmmoEPT_S2_ = Module["__Z11GetClassPtrI11CPythonAmmoEPT_S2_"] = asm["__Z11GetClassPtrI11CPythonAmmoEPT_S2_"];
  var __ZN4CMP510WeaponIdleEv = Module["__ZN4CMP510WeaponIdleEv"] = asm["__ZN4CMP510WeaponIdleEv"];
  var __ZN8CCrowbar5SpawnEv = Module["__ZN8CCrowbar5SpawnEv"] = asm["__ZN8CCrowbar5SpawnEv"];
  var __Z18HUD_SendWeaponAnimiii = Module["__Z18HUD_SendWeaponAnimiii"] = asm["__Z18HUD_SendWeaponAnimiii"];
  var __ZN5CEgon11AddToPlayerEP11CBasePlayer = Module["__ZN5CEgon11AddToPlayerEP11CBasePlayer"] = asm["__ZN5CEgon11AddToPlayerEP11CBasePlayer"];
  var __ZN14CHudScoreboard4DrawEf = Module["__ZN14CHudScoreboard4DrawEf"] = asm["__ZN14CHudScoreboard4DrawEf"];
  var _VectorScale = Module["_VectorScale"] = asm["_VectorScale"];
  var __ZN20CStudioModelRenderer16StudioDrawPlayerEiP14entity_state_s = Module["__ZN20CStudioModelRenderer16StudioDrawPlayerEiP14entity_state_s"] = asm["__ZN20CStudioModelRenderer16StudioDrawPlayerEiP14entity_state_s"];
  var __ZN17CBasePlayerWeapon14PlayEmptySoundEv = Module["__ZN17CBasePlayerWeapon14PlayEmptySoundEv"] = asm["__ZN17CBasePlayerWeapon14PlayEmptySoundEv"];
  var __ZN12CBaseMonster10RouteClearEv = Module["__ZN12CBaseMonster10RouteClearEv"] = asm["__ZN12CBaseMonster10RouteClearEv"];
  var __Z14IN_ForwardDownv = Module["__Z14IN_ForwardDownv"] = asm["__Z14IN_ForwardDownv"];
  var __Z11IN_Commandsv = Module["__Z11IN_Commandsv"] = asm["__Z11IN_Commandsv"];
  var __ZN12CBaseMonster14GetGunPositionEv = Module["__ZN12CBaseMonster14GetGunPositionEv"] = asm["__ZN12CBaseMonster14GetGunPositionEv"];
  var _anglemod = Module["_anglemod"] = asm["_anglemod"];
  var __ZN11CBaseToggle8KeyValueEP14KeyValueData_s = Module["__ZN11CBaseToggle8KeyValueEP14KeyValueData_s"] = asm["__ZN11CBaseToggle8KeyValueEP14KeyValueData_s"];
  var __ZN11CHudMessage15MessageDrawScanEP20client_textmessage_sf = Module["__ZN11CHudMessage15MessageDrawScanEP20client_textmessage_sf"] = asm["__ZN11CHudMessage15MessageDrawScanEP20client_textmessage_sf"];
  var __Z19__MsgFunc_SpectatorPKciPv = Module["__Z19__MsgFunc_SpectatorPKciPv"] = asm["__Z19__MsgFunc_SpectatorPKciPv"];
  var __ZN11CBasePlayer13ItemPostFrameEv = Module["__ZN11CBasePlayer13ItemPostFrameEv"] = asm["__ZN11CBasePlayer13ItemPostFrameEv"];
  var __ZN9CCrossbow11GetItemInfoEP8ItemInfo = Module["__ZN9CCrossbow11GetItemInfoEP8ItemInfo"] = asm["__ZN9CCrossbow11GetItemInfoEP8ItemInfo"];
  var __Z8CAM_Initv = Module["__Z8CAM_Initv"] = asm["__Z8CAM_Initv"];
  var __Z12IN_JLookDownv = Module["__Z12IN_JLookDownv"] = asm["__Z12IN_JLookDownv"];
  var _PM_NoClip = Module["_PM_NoClip"] = asm["_PM_NoClip"];
  var __ZN15CHudTextMessage26BufferedLocaliseTextStringEPKc = Module["__ZN15CHudTextMessage26BufferedLocaliseTextStringEPKc"] = asm["__ZN15CHudTextMessage26BufferedLocaliseTextStringEPKc"];
  var __Z11ClientPrintP9entvars_siPKcS2_S2_S2_S2_ = Module["__Z11ClientPrintP9entvars_siPKcS2_S2_S2_S2_"] = asm["__Z11ClientPrintP9entvars_siPKcS2_S2_S2_S2_"];
  var __ZN7CPython11GetItemInfoEP8ItemInfo = Module["__ZN7CPython11GetItemInfoEP8ItemInfo"] = asm["__ZN7CPython11GetItemInfoEP8ItemInfo"];
  var __ZN7CPython15SecondaryAttackEv = Module["__ZN7CPython15SecondaryAttackEv"] = asm["__ZN7CPython15SecondaryAttackEv"];
  var __ZN15CHudStatusIconsD0Ev = Module["__ZN15CHudStatusIconsD0Ev"] = asm["__ZN15CHudStatusIconsD0Ev"];
  var _PM_ViewEntity = Module["_PM_ViewEntity"] = asm["_PM_ViewEntity"];
  var __ZN12CBaseMonster8GetEnemyEv = Module["__ZN12CBaseMonster8GetEnemyEv"] = asm["__ZN12CBaseMonster8GetEnemyEv"];
  var __Z14SpectatorSprayv = Module["__Z14SpectatorSprayv"] = asm["__Z14SpectatorSprayv"];
  var __ZN11CHudSayText7VidInitEv = Module["__ZN11CHudSayText7VidInitEv"] = asm["__ZN11CHudSayText7VidInitEv"];
  var __ZN17CHudAmmoSecondary4InitEv = Module["__ZN17CHudAmmoSecondary4InitEv"] = asm["__ZN17CHudAmmoSecondary4InitEv"];
  var __Z15__MsgFunc_AmmoXPKciPv = Module["__Z15__MsgFunc_AmmoXPKciPv"] = asm["__Z15__MsgFunc_AmmoXPKciPv"];
  var __ZN14CHudScoreboard17GetAllPlayersInfoEv = Module["__ZN14CHudScoreboard17GetAllPlayersInfoEv"] = asm["__ZN14CHudScoreboard17GetAllPlayersInfoEv"];
  var __ZN11CBaseEntity16MyMonsterPointerEv = Module["__ZN11CBaseEntity16MyMonsterPointerEv"] = asm["__ZN11CBaseEntity16MyMonsterPointerEv"];
  var __ZN15WeaponsResource9CountAmmoEi = Module["__ZN15WeaponsResource9CountAmmoEi"] = asm["__ZN15WeaponsResource9CountAmmoEi"];
  var __ZN6CGlock8PrecacheEv = Module["__ZN6CGlock8PrecacheEv"] = asm["__ZN6CGlock8PrecacheEv"];
  var _PM_DrawRectangle = Module["_PM_DrawRectangle"] = asm["_PM_DrawRectangle"];
  var __ZN20CStudioModelRenderer4InitEv = Module["__ZN20CStudioModelRenderer4InitEv"] = asm["__ZN20CStudioModelRenderer4InitEv"];
  var __ZN11CPythonAmmo8PrecacheEv = Module["__ZN11CPythonAmmo8PrecacheEv"] = asm["__ZN11CPythonAmmo8PrecacheEv"];
  var __ZN8CHudBaseD2Ev = Module["__ZN8CHudBaseD2Ev"] = asm["__ZN8CHudBaseD2Ev"];
  var __ZN11CBasePlayer12IlluminationEv = Module["__ZN11CBasePlayer12IlluminationEv"] = asm["__ZN11CBasePlayer12IlluminationEv"];
  var __Z16ConcatTransformsPA4_fS0_S0_ = Module["__Z16ConcatTransformsPA4_fS0_S0_"] = asm["__Z16ConcatTransformsPA4_fS0_S0_"];
  var _PM_WaterJump = Module["_PM_WaterJump"] = asm["_PM_WaterJump"];
  var __ZN10CBaseDelay4SaveER5CSave = Module["__ZN10CBaseDelay4SaveER5CSave"] = asm["__ZN10CBaseDelay4SaveER5CSave"];
  var __Z18CAM_StartMouseMovev = Module["__Z18CAM_StartMouseMovev"] = asm["__Z18CAM_StartMouseMovev"];
  var __ZN17CBasePlayerWeapon15SecondaryAttackEv = Module["__ZN17CBasePlayerWeapon15SecondaryAttackEv"] = asm["__ZN17CBasePlayerWeapon15SecondaryAttackEv"];
  var __ZN13CHudSpectator7VidInitEv = Module["__ZN13CHudSpectator7VidInitEv"] = asm["__ZN13CHudSpectator7VidInitEv"];
  var __ZN4CHud16DrawHudStringLenEPc = Module["__ZN4CHud16DrawHudStringLenEPc"] = asm["__ZN4CHud16DrawHudStringLenEPc"];
  var __Z15QuaternionSlerpPfS_fS_ = Module["__Z15QuaternionSlerpPfS_fS_"] = asm["__Z15QuaternionSlerpPfS_fS_"];
  var __Z14UTIL_LogPrintfPcz = Module["__Z14UTIL_LogPrintfPcz"] = asm["__Z14UTIL_LogPrintfPcz"];
  var __ZN11CBasePlayer8IsPlayerEv = Module["__ZN11CBasePlayer8IsPlayerEv"] = asm["__ZN11CBasePlayer8IsPlayerEv"];
  var __Z11GetClassPtrI9CEgonAmmoEPT_S2_ = Module["__Z11GetClassPtrI9CEgonAmmoEPT_S2_"] = asm["__Z11GetClassPtrI9CEgonAmmoEPT_S2_"];
  var __ZN13CMP5Chainammo8PrecacheEv = Module["__ZN13CMP5Chainammo8PrecacheEv"] = asm["__ZN13CMP5Chainammo8PrecacheEv"];
  var _PM_GetRandomStuckOffsets = Module["_PM_GetRandomStuckOffsets"] = asm["_PM_GetRandomStuckOffsets"];
  var __ZN11CBaseEntity12ShouldToggleE8USE_TYPEi = Module["__ZN11CBaseEntity12ShouldToggleE8USE_TYPEi"] = asm["__ZN11CBaseEntity12ShouldToggleE8USE_TYPEi"];
  var __ZN20CStudioModelRenderer22StudioCalcBonePositionEifP13mstudiobone_tP13mstudioanim_tPfS4_ = Module["__ZN20CStudioModelRenderer22StudioCalcBonePositionEifP13mstudiobone_tP13mstudioanim_tPfS4_"] = asm["__ZN20CStudioModelRenderer22StudioCalcBonePositionEifP13mstudiobone_tP13mstudioanim_tPfS4_"];
  var __Z11IN_JumpDownv = Module["__Z11IN_JumpDownv"] = asm["__Z11IN_JumpDownv"];
  var __ZN14CHudFlashlight7VidInitEv = Module["__ZN14CHudFlashlight7VidInitEv"] = asm["__ZN14CHudFlashlight7VidInitEv"];
  var __Z18R_StudioDrawPlayeriP14entity_state_s = Module["__Z18R_StudioDrawPlayeriP14entity_state_s"] = asm["__Z18R_StudioDrawPlayeriP14entity_state_s"];
  var __ZN15CBasePlayerItem6DeployEv = Module["__ZN15CBasePlayerItem6DeployEv"] = asm["__ZN15CBasePlayerItem6DeployEv"];
  var __Z5KeyUpP9kbutton_s = Module["__Z5KeyUpP9kbutton_s"] = asm["__Z5KeyUpP9kbutton_s"];
  var _AngleVectors = Module["_AngleVectors"] = asm["_AngleVectors"];
  var _weapon_crowbar = Module["_weapon_crowbar"] = asm["_weapon_crowbar"];
  var __Z9IN_DownUpv = Module["__Z9IN_DownUpv"] = asm["__Z9IN_DownUpv"];
  var _PM_WalkMove = Module["_PM_WalkMove"] = asm["_PM_WalkMove"];
  var __ZN13CHudSpectator17HandleButtonsDownEi = Module["__ZN13CHudSpectator17HandleButtonsDownEi"] = asm["__ZN13CHudSpectator17HandleButtonsDownEi"];
  var __ZN4CHud5ThinkEv = Module["__ZN4CHud5ThinkEv"] = asm["__ZN4CHud5ThinkEv"];
  var _ammo_mp5clip = Module["_ammo_mp5clip"] = asm["_ammo_mp5clip"];
  var __ZN11CBaseEntity7IsAliveEv = Module["__ZN11CBaseEntity7IsAliveEv"] = asm["__ZN11CBaseEntity7IsAliveEv"];
  var __ZN9CEgonAmmo5SpawnEv = Module["__ZN9CEgonAmmo5SpawnEv"] = asm["__ZN9CEgonAmmo5SpawnEv"];
  var __ZN7CPython7HolsterEi = Module["__ZN7CPython7HolsterEi"] = asm["__ZN7CPython7HolsterEi"];
  var __ZN4CRpg11AddToPlayerEP11CBasePlayer = Module["__ZN4CRpg11AddToPlayerEP11CBasePlayer"] = asm["__ZN4CRpg11AddToPlayerEP11CBasePlayer"];
  var _HUD_GetHullBounds = Module["_HUD_GetHullBounds"] = asm["_HUD_GetHullBounds"];
  var __Z11GetClassPtrI7CSqueakEPT_S2_ = Module["__Z11GetClassPtrI7CSqueakEPT_S2_"] = asm["__Z11GetClassPtrI7CSqueakEPT_S2_"];
  var __ZN5CEgon20GetDischargeIntervalEv = Module["__ZN5CEgon20GetDischargeIntervalEv"] = asm["__ZN5CEgon20GetDischargeIntervalEv"];
  var _Q_log2 = Module["_Q_log2"] = asm["_Q_log2"];
  var __ZN11CPythonAmmo5SpawnEv = Module["__ZN11CPythonAmmo5SpawnEv"] = asm["__ZN11CPythonAmmo5SpawnEv"];
  var __Z9IN_JumpUpv = Module["__Z9IN_JumpUpv"] = asm["__Z9IN_JumpUpv"];
  var __Z20__CmdFunc_ShowScoresv = Module["__Z20__CmdFunc_ShowScoresv"] = asm["__Z20__CmdFunc_ShowScoresv"];
  var __ZN15CBasePlayerAmmo7AddAmmoEP11CBaseEntity = Module["__ZN15CBasePlayerAmmo7AddAmmoEP11CBaseEntity"] = asm["__ZN15CBasePlayerAmmo7AddAmmoEP11CBaseEntity"];
  var __Z9READ_CHARv = Module["__Z9READ_CHARv"] = asm["__Z9READ_CHARv"];
  var __ZN12CBaseMonster17BuildNearestRouteE6VectorS0_ff = Module["__ZN12CBaseMonster17BuildNearestRouteE6VectorS0_ff"] = asm["__ZN12CBaseMonster17BuildNearestRouteE6VectorS0_ff"];
  var __Z17__MsgFunc_DetpackPKciPv = Module["__Z17__MsgFunc_DetpackPKciPv"] = asm["__Z17__MsgFunc_DetpackPKciPv"];
  var _IN_ClearStates = Module["_IN_ClearStates"] = asm["_IN_ClearStates"];
  var _PM_Move = Module["_PM_Move"] = asm["_PM_Move"];
  var __Z7KeyDownP9kbutton_s = Module["__Z7KeyDownP9kbutton_s"] = asm["__Z7KeyDownP9kbutton_s"];
  var __ZN14CBaseAnimating16GetSequenceFlagsEv = Module["__ZN14CBaseAnimating16GetSequenceFlagsEv"] = asm["__ZN14CBaseAnimating16GetSequenceFlagsEv"];
  var _ammo_9mmbox = Module["_ammo_9mmbox"] = asm["_ammo_9mmbox"];
  var __Z11GetClassPtrI8CShotgunEPT_S2_ = Module["__Z11GetClassPtrI8CShotgunEPT_S2_"] = asm["__Z11GetClassPtrI8CShotgunEPT_S2_"];
  var __Z13VectorInversePf = Module["__Z13VectorInversePf"] = asm["__Z13VectorInversePf"];
  var __ZN17CBasePlayerWeapon7HolsterEi = Module["__ZN17CBasePlayerWeapon7HolsterEi"] = asm["__ZN17CBasePlayerWeapon7HolsterEi"];
  var _PM_DropPunchAngle = Module["_PM_DropPunchAngle"] = asm["_PM_DropPunchAngle"];
  var __Z15CAM_YawLeftDownv = Module["__Z15CAM_YawLeftDownv"] = asm["__Z15CAM_YawLeftDownv"];
  var __ZN14CHudScoreboard18UserCmd_HideScoresEv = Module["__ZN14CHudScoreboard18UserCmd_HideScoresEv"] = asm["__ZN14CHudScoreboard18UserCmd_HideScoresEv"];
  var _weapon_shotgun = Module["_weapon_shotgun"] = asm["_weapon_shotgun"];
  var __ZN12CBaseMonster15FCheckAITriggerEv = Module["__ZN12CBaseMonster15FCheckAITriggerEv"] = asm["__ZN12CBaseMonster15FCheckAITriggerEv"];
  var __ZN8CHudMOTD5ResetEv = Module["__ZN8CHudMOTD5ResetEv"] = asm["__ZN8CHudMOTD5ResetEv"];
  var __Z14UTIL_SetOriginP9entvars_sRK6Vector = Module["__Z14UTIL_SetOriginP9entvars_sRK6Vector"] = asm["__Z14UTIL_SetOriginP9entvars_sRK6Vector"];
  var __ZN11CBasePlayer9PlayerUseEv = Module["__ZN11CBasePlayer9PlayerUseEv"] = asm["__ZN11CBasePlayer9PlayerUseEv"];
  var __ZN20CStudioModelRenderer26StudioRenderFinal_HardwareEv = Module["__ZN20CStudioModelRenderer26StudioRenderFinal_HardwareEv"] = asm["__ZN20CStudioModelRenderer26StudioRenderFinal_HardwareEv"];
  var __ZN12CBaseMonster13FRefreshRouteEv = Module["__ZN12CBaseMonster13FRefreshRouteEv"] = asm["__ZN12CBaseMonster13FRefreshRouteEv"];
  var __Z14HUD_GetLastOrgPf = Module["__Z14HUD_GetLastOrgPf"] = asm["__Z14HUD_GetLastOrgPf"];
  var __ZN12CBaseMonster10GibMonsterEv = Module["__ZN12CBaseMonster10GibMonsterEv"] = asm["__ZN12CBaseMonster10GibMonsterEv"];
  var __Z20__MsgFunc_AmmoPickupPKciPv = Module["__Z20__MsgFunc_AmmoPickupPKciPv"] = asm["__Z20__MsgFunc_AmmoPickupPKciPv"];
  var __ZN6CGlock6ReloadEv = Module["__ZN6CGlock6ReloadEv"] = asm["__ZN6CGlock6ReloadEv"];
  var __Z17__MsgFunc_ConcussPKciPv = Module["__Z17__MsgFunc_ConcussPKciPv"] = asm["__Z17__MsgFunc_ConcussPKciPv"];
  var __ZN20CStudioModelRendererD2Ev = Module["__ZN20CStudioModelRendererD2Ev"] = asm["__ZN20CStudioModelRendererD2Ev"];
  var __ZN17CBasePlayerWeapon18SecondaryAmmoIndexEv = Module["__ZN17CBasePlayerWeapon18SecondaryAmmoIndexEv"] = asm["__ZN17CBasePlayerWeapon18SecondaryAmmoIndexEv"];
  var _weapon_357 = Module["_weapon_357"] = asm["_weapon_357"];
  var __ZN20CStudioModelRenderer17StudioProcessGaitEP14entity_state_s = Module["__ZN20CStudioModelRenderer17StudioProcessGaitEP14entity_state_s"] = asm["__ZN20CStudioModelRenderer17StudioProcessGaitEP14entity_state_s"];
  var __ZN12CBaseMonster12MoveToTargetE8Activityf = Module["__ZN12CBaseMonster12MoveToTargetE8Activityf"] = asm["__ZN12CBaseMonster12MoveToTargetE8Activityf"];
  var _EV_EgonFire = Module["_EV_EgonFire"] = asm["_EV_EgonFire"];
  var __Z20V_GetMapFreePositionPfS_S_ = Module["__Z20V_GetMapFreePositionPfS_S_"] = asm["__Z20V_GetMapFreePositionPfS_S_"];
  var __ZN8CHudAmmo9DrawWListEf = Module["__ZN8CHudAmmo9DrawWListEf"] = asm["__ZN8CHudAmmo9DrawWListEf"];
  var __ZN12CBaseMonster13StopFollowingEi = Module["__ZN12CBaseMonster13StopFollowingEi"] = asm["__ZN12CBaseMonster13StopFollowingEi"];
  var __Z21UTIL_SharedRandomLongjii = Module["__Z21UTIL_SharedRandomLongjii"] = asm["__Z21UTIL_SharedRandomLongjii"];
  var __ZN11CBaseEntity11IsTriggeredEPS_ = Module["__ZN11CBaseEntity11IsTriggeredEPS_"] = asm["__ZN11CBaseEntity11IsTriggeredEPS_"];
  var __ZN13CHudSpectator5ResetEv = Module["__ZN13CHudSpectator5ResetEv"] = asm["__ZN13CHudSpectator5ResetEv"];
  var __ZN12CHudOverview4InitEv = Module["__ZN12CHudOverview4InitEv"] = asm["__ZN12CHudOverview4InitEv"];
  var __ZN17CBasePlayerWeapon15ResetEmptySoundEv = Module["__ZN17CBasePlayerWeapon15ResetEmptySoundEv"] = asm["__ZN17CBasePlayerWeapon15ResetEmptySoundEv"];
  var __ZN6CGauss13PrimaryAttackEv = Module["__ZN6CGauss13PrimaryAttackEv"] = asm["__ZN6CGauss13PrimaryAttackEv"];
  var __ZN12CMP5AmmoClip7AddAmmoEP11CBaseEntity = Module["__ZN12CMP5AmmoClip7AddAmmoEP11CBaseEntity"] = asm["__ZN12CMP5AmmoClip7AddAmmoEP11CBaseEntity"];
  var _HUD_Init = Module["_HUD_Init"] = asm["_HUD_Init"];
  var _ammo_mp5grenades = Module["_ammo_mp5grenades"] = asm["_ammo_mp5grenades"];
  var __Z15AngleQuaternionPfS_ = Module["__Z15AngleQuaternionPfS_"] = asm["__Z15AngleQuaternionPfS_"];
  var __ZN9CTripmine6DeployEv = Module["__ZN9CTripmine6DeployEv"] = asm["__ZN9CTripmine6DeployEv"];
  var __ZN11CBasePlayer11TraceAttackEP9entvars_sf6VectorP11TraceResulti = Module["__ZN11CBasePlayer11TraceAttackEP9entvars_sf6VectorP11TraceResulti"] = asm["__ZN11CBasePlayer11TraceAttackEP9entvars_sf6VectorP11TraceResulti"];
  var __ZN14CHudScoreboard17MsgFunc_TeamScoreEPKciPv = Module["__ZN14CHudScoreboard17MsgFunc_TeamScoreEPKciPv"] = asm["__ZN14CHudScoreboard17MsgFunc_TeamScoreEPKciPv"];
  var __Z17CAM_ToFirstPersonv = Module["__Z17CAM_ToFirstPersonv"] = asm["__Z17CAM_ToFirstPersonv"];
  var __ZN15WeaponsResource10SelectSlotEiii = Module["__ZN15WeaponsResource10SelectSlotEiii"] = asm["__ZN15WeaponsResource10SelectSlotEiii"];
  var __Z16__MsgFunc_HealthPKciPv = Module["__Z16__MsgFunc_HealthPKciPv"] = asm["__Z16__MsgFunc_HealthPKciPv"];
  var __ZN9CCrossbow12UseDecrementEv = Module["__ZN9CCrossbow12UseDecrementEv"] = asm["__ZN9CCrossbow12UseDecrementEv"];
  var __ZN9CCrossbow6ReloadEv = Module["__ZN9CCrossbow6ReloadEv"] = asm["__ZN9CCrossbow6ReloadEv"];
  var __ZN10CHudHealth5ResetEv = Module["__ZN10CHudHealth5ResetEv"] = asm["__ZN10CHudHealth5ResetEv"];
  var __ZN8CHudBase11InitHUDDataEv = Module["__ZN8CHudBase11InitHUDDataEv"] = asm["__ZN8CHudBase11InitHUDDataEv"];
  var __ZN7CPython6DeployEv = Module["__ZN7CPython6DeployEv"] = asm["__ZN7CPython6DeployEv"];
  var __ZN9CCrossbow7HolsterEi = Module["__ZN9CCrossbow7HolsterEi"] = asm["__ZN9CCrossbow7HolsterEi"];
  var __Z15CAM_ClearStatesv = Module["__Z15CAM_ClearStatesv"] = asm["__Z15CAM_ClearStatesv"];
  var __ZN12CBaseMonster20PlayScriptedSentenceEPKcfffiP11CBaseEntity = Module["__ZN12CBaseMonster20PlayScriptedSentenceEPKcfffiP11CBaseEntity"] = asm["__ZN12CBaseMonster20PlayScriptedSentenceEPKcfffiP11CBaseEntity"];
  var __ZN12CBaseMonster10PBestScentEv = Module["__ZN12CBaseMonster10PBestScentEv"] = asm["__ZN12CBaseMonster10PBestScentEv"];
  var __ZN11CBaseEntity8KeyValueEP14KeyValueData_s = Module["__ZN11CBaseEntity8KeyValueEP14KeyValueData_s"] = asm["__ZN11CBaseEntity8KeyValueEP14KeyValueData_s"];
  var __Z11GetClassPtrI12CHandGrenadeEPT_S2_ = Module["__Z11GetClassPtrI12CHandGrenadeEPT_S2_"] = asm["__Z11GetClassPtrI12CHandGrenadeEPT_S2_"];
  var __ZN4CHud16MsgFunc_ResetHUDEPKciPv = Module["__ZN4CHud16MsgFunc_ResetHUDEPKciPv"] = asm["__ZN4CHud16MsgFunc_ResetHUDEPKciPv"];
  var __Z11IN_BackDownv = Module["__Z11IN_BackDownv"] = asm["__Z11IN_BackDownv"];
  var __Z17__MsgFunc_SayTextPKciPv = Module["__Z17__MsgFunc_SayTextPKciPv"] = asm["__Z17__MsgFunc_SayTextPKciPv"];
  var __ZN14CHudScoreboard17MsgFunc_ScoreInfoEPKciPv = Module["__ZN14CHudScoreboard17MsgFunc_ScoreInfoEPKciPv"] = asm["__ZN14CHudScoreboard17MsgFunc_ScoreInfoEPKciPv"];
  var __ZN9CTripmine9iItemSlotEv = Module["__ZN9CTripmine9iItemSlotEv"] = asm["__ZN9CTripmine9iItemSlotEv"];
  var __ZN5CEgon11GetItemInfoEP8ItemInfo = Module["__ZN5CEgon11GetItemInfoEP8ItemInfo"] = asm["__ZN5CEgon11GetItemInfoEP8ItemInfo"];
  var __Z11GetClassPtrI9CCrossbowEPT_S2_ = Module["__Z11GetClassPtrI9CCrossbowEPT_S2_"] = asm["__Z11GetClassPtrI9CCrossbowEPT_S2_"];
  var __ZN7CSqueak9iItemSlotEv = Module["__ZN7CSqueak9iItemSlotEv"] = asm["__ZN7CSqueak9iItemSlotEv"];
  var __Z18__MsgFunc_ResetHUDPKciPv = Module["__Z18__MsgFunc_ResetHUDPKciPv"] = asm["__Z18__MsgFunc_ResetHUDPKciPv"];
  var __ZN5CHgun12UseDecrementEv = Module["__ZN5CHgun12UseDecrementEv"] = asm["__ZN5CHgun12UseDecrementEv"];
  var __Z18UTIL_PrecacheOtherPKc = Module["__Z18UTIL_PrecacheOtherPKc"] = asm["__Z18UTIL_PrecacheOtherPKc"];
  var __ZN5CHgun13PrimaryAttackEv = Module["__ZN5CHgun13PrimaryAttackEv"] = asm["__ZN5CHgun13PrimaryAttackEv"];
  var __Z19__MsgFunc_AllowSpecPKciPv = Module["__Z19__MsgFunc_AllowSpecPKciPv"] = asm["__Z19__MsgFunc_AllowSpecPKciPv"];
  var __ZN12CBaseMonster16FindLateralCoverERK6VectorS2_ = Module["__ZN12CBaseMonster16FindLateralCoverERK6VectorS2_"] = asm["__ZN12CBaseMonster16FindLateralCoverERK6VectorS2_"];
  var _PM_FixupGravityVelocity = Module["_PM_FixupGravityVelocity"] = asm["_PM_FixupGravityVelocity"];
  var _PM_SpectatorMove = Module["_PM_SpectatorMove"] = asm["_PM_SpectatorMove"];
  var __ZN15CHudStatusIcons10EnableIconEPchhh = Module["__ZN15CHudStatusIcons10EnableIconEPchhh"] = asm["__ZN15CHudStatusIcons10EnableIconEPchhh"];
  var __Z11AngleMatrixPKfPA4_f = Module["__Z11AngleMatrixPKfPA4_f"] = asm["__Z11AngleMatrixPKfPA4_f"];
  var __ZN12CHandGrenade6DeployEv = Module["__ZN12CHandGrenade6DeployEv"] = asm["__ZN12CHandGrenade6DeployEv"];
  var __ZN8CSatchel5SpawnEv = Module["__ZN8CSatchel5SpawnEv"] = asm["__ZN8CSatchel5SpawnEv"];
  var __Z19__MsgFunc_GameTitlePKciPv = Module["__Z19__MsgFunc_GameTitlePKciPv"] = asm["__Z19__MsgFunc_GameTitlePKciPv"];
  var __ZN13CHudSpectator17ParseOverviewFileEv = Module["__ZN13CHudSpectator17ParseOverviewFileEv"] = asm["__ZN13CHudSpectator17ParseOverviewFileEv"];
  var _AngleIMatrix = Module["_AngleIMatrix"] = asm["_AngleIMatrix"];
  var __ZN8CHudMenu11InitHUDDataEv = Module["__ZN8CHudMenu11InitHUDDataEv"] = asm["__ZN8CHudMenu11InitHUDDataEv"];
  var __Z16KB_ConvertStringPcPS_ = Module["__Z16KB_ConvertStringPcPS_"] = asm["__Z16KB_ConvertStringPcPS_"];
  var __ZN11CBasePlayer7IsAliveEv = Module["__ZN11CBasePlayer7IsAliveEv"] = asm["__ZN11CBasePlayer7IsAliveEv"];
  var __Z20__CmdFunc_HideScoresv = Module["__Z20__CmdFunc_HideScoresv"] = asm["__Z20__CmdFunc_HideScoresv"];
  var __ZN9CCrossbow11AddToPlayerEP11CBasePlayer = Module["__ZN9CCrossbow11AddToPlayerEP11CBasePlayer"] = asm["__ZN9CCrossbow11AddToPlayerEP11CBasePlayer"];
  var __ZN17CBasePlayerWeapon16PrimaryAmmoIndexEv = Module["__ZN17CBasePlayerWeapon16PrimaryAmmoIndexEv"] = asm["__ZN17CBasePlayerWeapon16PrimaryAmmoIndexEv"];
  var __ZN7CPython13PrimaryAttackEv = Module["__ZN7CPython13PrimaryAttackEv"] = asm["__ZN7CPython13PrimaryAttackEv"];
  var __ZN11CBasePlayer14SendAmmoUpdateEv = Module["__ZN11CBasePlayer14SendAmmoUpdateEv"] = asm["__ZN11CBasePlayer14SendAmmoUpdateEv"];
  var __ZN20CStudioModelRenderer17StudioCalcBoneAdjEfPfPKhS2_h = Module["__ZN20CStudioModelRenderer17StudioCalcBoneAdjEfPfPKhS2_h"] = asm["__ZN20CStudioModelRenderer17StudioCalcBoneAdjEfPfPKhS2_h"];
  var _weapon_crossbow = Module["_weapon_crossbow"] = asm["_weapon_crossbow"];
  var __ZN9CTripmine11GetItemInfoEP8ItemInfo = Module["__ZN9CTripmine11GetItemInfoEP8ItemInfo"] = asm["__ZN9CTripmine11GetItemInfoEP8ItemInfo"];
  var __ZN4CMP518SecondaryAmmoIndexEv = Module["__ZN4CMP518SecondaryAmmoIndexEv"] = asm["__ZN4CMP518SecondaryAmmoIndexEv"];
  var __Z25__CmdFunc_OpenCommandMenuv = Module["__Z25__CmdFunc_OpenCommandMenuv"] = asm["__Z25__CmdFunc_OpenCommandMenuv"];
  var __ZN8CHudAmmo13UserCmd_Slot6Ev = Module["__ZN8CHudAmmo13UserCmd_Slot6Ev"] = asm["__ZN8CHudAmmo13UserCmd_Slot6Ev"];
  var __ZN8CHudMenu5ResetEv = Module["__ZN8CHudMenu5ResetEv"] = asm["__ZN8CHudMenu5ResetEv"];
  var __Z18DeactivateSatchelsP11CBasePlayer = Module["__Z18DeactivateSatchelsP11CBasePlayer"] = asm["__Z18DeactivateSatchelsP11CBasePlayer"];
  var __ZN12CBaseMonster11TraceAttackEP9entvars_sf6VectorP11TraceResulti = Module["__ZN12CBaseMonster11TraceAttackEP9entvars_sf6VectorP11TraceResulti"] = asm["__ZN12CBaseMonster11TraceAttackEP9entvars_sf6VectorP11TraceResulti"];
  var __ZN5CEgon9EndAttackEv = Module["__ZN5CEgon9EndAttackEv"] = asm["__ZN5CEgon9EndAttackEv"];
  var __ZN11CBasePlayer17AutoaimDeflectionER6Vectorff = Module["__ZN11CBasePlayer17AutoaimDeflectionER6Vectorff"] = asm["__ZN11CBasePlayer17AutoaimDeflectionER6Vectorff"];
  var __ZN15CHudStatusIcons11DisableIconEPc = Module["__ZN15CHudStatusIcons11DisableIconEPc"] = asm["__ZN15CHudStatusIcons11DisableIconEPc"];
  var __ZN12CHandGrenade13PrimaryAttackEv = Module["__ZN12CHandGrenade13PrimaryAttackEv"] = asm["__ZN12CHandGrenade13PrimaryAttackEv"];
  var __ZN12CBaseMonster13ReportAIStateEv = Module["__ZN12CBaseMonster13ReportAIStateEv"] = asm["__ZN12CBaseMonster13ReportAIStateEv"];
  var __ZN12CBaseMonster10BuildRouteERK6VectoriP11CBaseEntity = Module["__ZN12CBaseMonster10BuildRouteERK6VectoriP11CBaseEntity"] = asm["__ZN12CBaseMonster10BuildRouteERK6VectoriP11CBaseEntity"];
  var __ZN11CBasePlayer15ImpulseCommandsEv = Module["__ZN11CBasePlayer15ImpulseCommandsEv"] = asm["__ZN11CBasePlayer15ImpulseCommandsEv"];
  var __ZN12CHudOverview4DrawEf = Module["__ZN12CHudOverview4DrawEf"] = asm["__ZN12CHudOverview4DrawEf"];
  var __Z12IN_ForwardUpv = Module["__Z12IN_ForwardUpv"] = asm["__Z12IN_ForwardUpv"];
  var __ZN13CHudSpectator21CheckOverviewEntitiesEv = Module["__ZN13CHudSpectator21CheckOverviewEntitiesEv"] = asm["__ZN13CHudSpectator21CheckOverviewEntitiesEv"];
  var __ZN12CHandGrenade5SpawnEv = Module["__ZN12CHandGrenade5SpawnEv"] = asm["__ZN12CHandGrenade5SpawnEv"];
  var _weapon_glock = Module["_weapon_glock"] = asm["_weapon_glock"];
  var _PM_UpdateStepSound = Module["_PM_UpdateStepSound"] = asm["_PM_UpdateStepSound"];
  var __ZN13CHudSpectator14IsActivePlayerEP11cl_entity_s = Module["__ZN13CHudSpectator14IsActivePlayerEP11cl_entity_s"] = asm["__ZN13CHudSpectator14IsActivePlayerEP11cl_entity_s"];
  var __ZN11CBasePlayer14FlashlightIsOnEv = Module["__ZN11CBasePlayer14FlashlightIsOnEv"] = asm["__ZN11CBasePlayer14FlashlightIsOnEv"];
  var _EV_TripmineFire = Module["_EV_TripmineFire"] = asm["_EV_TripmineFire"];
  var __Z17HUD_GetWeaponAnimv = Module["__Z17HUD_GetWeaponAnimv"] = asm["__Z17HUD_GetWeaponAnimv"];
  var __ZN20CStudioModelRenderer15StudioSaveBonesEv = Module["__ZN20CStudioModelRenderer15StudioSaveBonesEv"] = asm["__ZN20CStudioModelRenderer15StudioSaveBonesEv"];
  var __ZN12CBaseMonster10PBestSoundEv = Module["__ZN12CBaseMonster10PBestSoundEv"] = asm["__ZN12CBaseMonster10PBestSoundEv"];
  var __ZN12CBaseMonster12MonsterThinkEv = Module["__ZN12CBaseMonster12MonsterThinkEv"] = asm["__ZN12CBaseMonster12MonsterThinkEv"];
  var __ZN15CBasePlayerItem11GetItemInfoEP8ItemInfo = Module["__ZN15CBasePlayerItem11GetItemInfoEP8ItemInfo"] = asm["__ZN15CBasePlayerItem11GetItemInfoEP8ItemInfo"];
  var __ZN12CMP5AmmoClip8PrecacheEv = Module["__ZN12CMP5AmmoClip8PrecacheEv"] = asm["__ZN12CMP5AmmoClip8PrecacheEv"];
  var __ZN5CEgon4FireERK6VectorS2_ = Module["__ZN5CEgon4FireERK6VectorS2_"] = asm["__ZN5CEgon4FireERK6VectorS2_"];
  var __ZN12CBaseMonster12HasHumanGibsEv = Module["__ZN12CBaseMonster12HasHumanGibsEv"] = asm["__ZN12CBaseMonster12HasHumanGibsEv"];
  var __ZN8CCrowbar13PrimaryAttackEv = Module["__ZN8CCrowbar13PrimaryAttackEv"] = asm["__ZN8CCrowbar13PrimaryAttackEv"];
  var __ZN11CHudSayText38EnsureTextFitsInOneLineAndWrapIfHaveToEi = Module["__ZN11CHudSayText38EnsureTextFitsInOneLineAndWrapIfHaveToEi"] = asm["__ZN11CHudSayText38EnsureTextFitsInOneLineAndWrapIfHaveToEi"];
  var __Z28__CmdFunc_InputPlayerSpecialv = Module["__Z28__CmdFunc_InputPlayerSpecialv"] = asm["__Z28__CmdFunc_InputPlayerSpecialv"];
  var __ZN12CBaseMonster12RadiusDamageE6VectorP9entvars_sS2_fii = Module["__ZN12CBaseMonster12RadiusDamageE6VectorP9entvars_sS2_fii"] = asm["__ZN12CBaseMonster12RadiusDamageE6VectorP9entvars_sS2_fii"];
  var __Z15UTIL_DecalTraceP11TraceResulti = Module["__Z15UTIL_DecalTraceP11TraceResulti"] = asm["__Z15UTIL_DecalTraceP11TraceResulti"];
  var __ZN12CHandGrenade7HolsterEi = Module["__ZN12CHandGrenade7HolsterEi"] = asm["__ZN12CHandGrenade7HolsterEi"];
  var __Z9IN_Cancelv = Module["__Z9IN_Cancelv"] = asm["__Z9IN_Cancelv"];
  var _ammo_9mmclip = Module["_ammo_9mmclip"] = asm["_ammo_9mmclip"];
  var __ZN11CHudMessage4InitEv = Module["__ZN11CHudMessage4InitEv"] = asm["__ZN11CHudMessage4InitEv"];
  var __Z18UTIL_ParticleBoxesv = Module["__Z18UTIL_ParticleBoxesv"] = asm["__Z18UTIL_ParticleBoxesv"];
  var __Z16QuaternionMatrixPfPA4_f = Module["__Z16QuaternionMatrixPfPA4_f"] = asm["__Z16QuaternionMatrixPfPA4_f"];
  var __ZN14CBaseAnimating7RestoreER8CRestore = Module["__ZN14CBaseAnimating7RestoreER8CRestore"] = asm["__ZN14CBaseAnimating7RestoreER8CRestore"];
  var _InterpolateAngles = Module["_InterpolateAngles"] = asm["_InterpolateAngles"];
  var __Z9InitInputv = Module["__Z9InitInputv"] = asm["__Z9InitInputv"];
  var __ZN12CBaseMonster5RunAIEv = Module["__ZN12CBaseMonster5RunAIEv"] = asm["__ZN12CBaseMonster5RunAIEv"];
  var __ZN11CBaseEntity9IsInWorldEv = Module["__ZN11CBaseEntity9IsInWorldEv"] = asm["__ZN11CBaseEntity9IsInWorldEv"];
  var __ZN14CHudFlashlight4DrawEf = Module["__ZN14CHudFlashlight4DrawEf"] = asm["__ZN14CHudFlashlight4DrawEf"];
  var __ZN6CGlock15SecondaryAttackEv = Module["__ZN6CGlock15SecondaryAttackEv"] = asm["__ZN6CGlock15SecondaryAttackEv"];
  var __ZN14CBaseAnimating4SaveER5CSave = Module["__ZN14CBaseAnimating4SaveER5CSave"] = asm["__ZN14CBaseAnimating4SaveER5CSave"];
  var __ZN12CBaseMonster16MonsterInitThinkEv = Module["__ZN12CBaseMonster16MonsterInitThinkEv"] = asm["__ZN12CBaseMonster16MonsterInitThinkEv"];
  var __ZN11CBasePlayer13EnableControlEi = Module["__ZN11CBasePlayer13EnableControlEi"] = asm["__ZN11CBasePlayer13EnableControlEi"];
  var __ZN11CBaseEntity8GiveAmmoEiPci = Module["__ZN11CBaseEntity8GiveAmmoEiPci"] = asm["__ZN11CBaseEntity8GiveAmmoEiPci"];
  var __Z6LengthPKf = Module["__Z6LengthPKf"] = asm["__Z6LengthPKf"];
  var __ZN11CBasePlayer10HasWeaponsEv = Module["__ZN11CBasePlayer10HasWeaponsEv"] = asm["__ZN11CBasePlayer10HasWeaponsEv"];
  var __ZN10CHudHealth14MsgFunc_HealthEPKciPv = Module["__ZN10CHudHealth14MsgFunc_HealthEPKciPv"] = asm["__ZN10CHudHealth14MsgFunc_HealthEPKciPv"];
  var __ZN5CBeam10BeamCreateEPKci = Module["__ZN5CBeam10BeamCreateEPKci"] = asm["__ZN5CBeam10BeamCreateEPKci"];
  var __Z15__MsgFunc_TrainPKciPv = Module["__Z15__MsgFunc_TrainPKciPv"] = asm["__Z15__MsgFunc_TrainPKciPv"];
  var __ZN8CGrenade10ShootTimedEP9entvars_s6VectorS2_f = Module["__ZN8CGrenade10ShootTimedEP9entvars_s6VectorS2_f"] = asm["__ZN8CGrenade10ShootTimedEP9entvars_s6VectorS2_f"];
  var _PM_Ladder = Module["_PM_Ladder"] = asm["_PM_Ladder"];
  var __ZN11CBasePlayer13AddPlayerItemEP15CBasePlayerItem = Module["__ZN11CBasePlayer13AddPlayerItemEP15CBasePlayerItem"] = asm["__ZN11CBasePlayer13AddPlayerItemEP15CBasePlayerItem"];
  var __ZN10CHudHealth4DrawEf = Module["__ZN10CHudHealth4DrawEf"] = asm["__ZN10CHudHealth4DrawEf"];
  var __ZN4CHud14MsgFunc_DamageEPKciPv = Module["__ZN4CHud14MsgFunc_DamageEPKciPv"] = asm["__ZN4CHud14MsgFunc_DamageEPKciPv"];
  var __ZN4CHud14MsgFunc_SetFOVEPKciPv = Module["__ZN4CHud14MsgFunc_SetFOVEPKciPv"] = asm["__ZN4CHud14MsgFunc_SetFOVEPKciPv"];
  var _ammo_glockclip = Module["_ammo_glockclip"] = asm["_ammo_glockclip"];
  var __Z28V_FindViewModelByWeaponModeli = Module["__Z28V_FindViewModelByWeaponModeli"] = asm["__Z28V_FindViewModelByWeaponModeli"];
  var __ZN24CGameStudioModelRendererD0Ev = Module["__ZN24CGameStudioModelRendererD0Ev"] = asm["__ZN24CGameStudioModelRendererD0Ev"];
  var __ZN11CBasePlayer17UpdatePlayerSoundEv = Module["__ZN11CBasePlayer17UpdatePlayerSoundEv"] = asm["__ZN11CBasePlayer17UpdatePlayerSoundEv"];
  var __ZN12CBaseMonster16IgnoreConditionsEv = Module["__ZN12CBaseMonster16IgnoreConditionsEv"] = asm["__ZN12CBaseMonster16IgnoreConditionsEv"];
  var __ZN8CHudAmmo13UserCmd_Slot7Ev = Module["__ZN8CHudAmmo13UserCmd_Slot7Ev"] = asm["__ZN8CHudAmmo13UserCmd_Slot7Ev"];
  var __ZN9CTripmine13PrimaryAttackEv = Module["__ZN9CTripmine13PrimaryAttackEv"] = asm["__ZN9CTripmine13PrimaryAttackEv"];
  var __ZN24CGameStudioModelRendererC2Ev = Module["__ZN24CGameStudioModelRendererC2Ev"] = asm["__ZN24CGameStudioModelRendererC2Ev"];
  var _PM_SplineFraction = Module["_PM_SplineFraction"] = asm["_PM_SplineFraction"];
  var __ZN11CBasePlayer9WaterMoveEv = Module["__ZN11CBasePlayer9WaterMoveEv"] = asm["__ZN11CBasePlayer9WaterMoveEv"];
  var _PM_AirMove = Module["_PM_AirMove"] = asm["_PM_AirMove"];
  var __ZN8CCrowbar5SmackEv = Module["__ZN8CCrowbar5SmackEv"] = asm["__ZN8CCrowbar5SmackEv"];
  var _HUD_GetUserEntity = Module["_HUD_GetUserEntity"] = asm["_HUD_GetUserEntity"];
  var __ZN4CMP515SecondaryAttackEv = Module["__ZN4CMP515SecondaryAttackEv"] = asm["__ZN4CMP515SecondaryAttackEv"];
  var __Z10HUD_IsGamePKc = Module["__Z10HUD_IsGamePKc"] = asm["__Z10HUD_IsGamePKc"];
  var __Z21HUD_InitClientWeaponsv = Module["__Z21HUD_InitClientWeaponsv"] = asm["__Z21HUD_InitClientWeaponsv"];
  var __ZN15CBasePlayerItem20AttemptToMaterializeEv = Module["__ZN15CBasePlayerItem20AttemptToMaterializeEv"] = asm["__ZN15CBasePlayerItem20AttemptToMaterializeEv"];
  var __ZN10CHudHealthD0Ev = Module["__ZN10CHudHealthD0Ev"] = asm["__ZN10CHudHealthD0Ev"];
  var __ZN17CBasePlayerWeapon9IsUseableEv = Module["__ZN17CBasePlayerWeapon9IsUseableEv"] = asm["__ZN17CBasePlayerWeapon9IsUseableEv"];
  var __ZN12CBaseMonster10BloodColorEv = Module["__ZN12CBaseMonster10BloodColorEv"] = asm["__ZN12CBaseMonster10BloodColorEv"];
  var __ZN8CShotgun5SpawnEv = Module["__ZN8CShotgun5SpawnEv"] = asm["__ZN8CShotgun5SpawnEv"];
  var __ZN12CBaseMonster10MoveToNodeE8ActivityfRK6Vector = Module["__ZN12CBaseMonster10MoveToNodeE8ActivityfRK6Vector"] = asm["__ZN12CBaseMonster10MoveToNodeE8ActivityfRK6Vector"];
  var __Z11GetClassPtrI8CSatchelEPT_S2_ = Module["__Z11GetClassPtrI8CSatchelEPT_S2_"] = asm["__Z11GetClassPtrI8CSatchelEPT_S2_"];
  var __ZN11CBasePlayer16UpdateClientDataEv = Module["__ZN11CBasePlayer16UpdateClientDataEv"] = asm["__ZN11CBasePlayer16UpdateClientDataEv"];
  var __Z15READ_HIRESANGLEv = Module["__Z15READ_HIRESANGLEv"] = asm["__Z15READ_HIRESANGLEv"];
  var __Z16IN_ToggleButtonsff = Module["__Z16IN_ToggleButtonsff"] = asm["__Z16IN_ToggleButtonsff"];
  var __ZN4CHud7VidInitEv = Module["__ZN4CHud7VidInitEv"] = asm["__ZN4CHud7VidInitEv"];
  var _PM_PlayWaterSounds = Module["_PM_PlayWaterSounds"] = asm["_PM_PlayWaterSounds"];
  var __Z21__MsgFunc_StatusValuePKciPv = Module["__Z21__MsgFunc_StatusValuePKciPv"] = asm["__Z21__MsgFunc_StatusValuePKciPv"];
  var __Z10IN_SpeedUpv = Module["__Z10IN_SpeedUpv"] = asm["__Z10IN_SpeedUpv"];
  var __Z15__CmdFunc_Slot4v = Module["__Z15__CmdFunc_Slot4v"] = asm["__Z15__CmdFunc_Slot4v"];
  var __ZN15CHudTextMessage15MsgFunc_TextMsgEPKciPv = Module["__ZN15CHudTextMessage15MsgFunc_TextMsgEPKciPv"] = asm["__ZN15CHudTextMessage15MsgFunc_TextMsgEPKciPv"];
  var __ZN11CBasePlayer19PackDeadPlayerItemsEv = Module["__ZN11CBasePlayer19PackDeadPlayerItemsEv"] = asm["__ZN11CBasePlayer19PackDeadPlayerItemsEv"];
  var __ZN8CHudAmmo18MsgFunc_WeaponListEPKciPv = Module["__ZN8CHudAmmo18MsgFunc_WeaponListEPKciPv"] = asm["__ZN8CHudAmmo18MsgFunc_WeaponListEPKciPv"];
  var __ZN11CBasePlayer14SelectPrevItemEi = Module["__ZN11CBasePlayer14SelectPrevItemEi"] = asm["__ZN11CBasePlayer14SelectPrevItemEi"];
  var __ZN8CSatchel8PrecacheEv = Module["__ZN8CSatchel8PrecacheEv"] = asm["__ZN8CSatchel8PrecacheEv"];
  var __ZN11CHudMessage7VidInitEv = Module["__ZN11CHudMessage7VidInitEv"] = asm["__ZN11CHudMessage7VidInitEv"];
  var __ZN11CBaseEntity4SaveER5CSave = Module["__ZN11CBaseEntity4SaveER5CSave"] = asm["__ZN11CBaseEntity4SaveER5CSave"];
  var _HUD_AddEntity = Module["_HUD_AddEntity"] = asm["_HUD_AddEntity"];
  var __Z7IN_UpUpv = Module["__Z7IN_UpUpv"] = asm["__Z7IN_UpUpv"];
  var __ZN9CTripmine10WeaponIdleEv = Module["__ZN9CTripmine10WeaponIdleEv"] = asm["__ZN9CTripmine10WeaponIdleEv"];
  var __DotProduct = Module["__DotProduct"] = asm["__DotProduct"];
  var __ZN12CHandGrenade10WeaponIdleEv = Module["__ZN12CHandGrenade10WeaponIdleEv"] = asm["__ZN12CHandGrenade10WeaponIdleEv"];
  var __ZN17CBasePlayerWeapon14SendWeaponAnimEiii = Module["__ZN17CBasePlayerWeapon14SendWeaponAnimEiii"] = asm["__ZN17CBasePlayerWeapon14SendWeaponAnimEiii"];
  var __ZN15WeaponsResource16GetNextActivePosEii = Module["__ZN15WeaponsResource16GetNextActivePosEii"] = asm["__ZN15WeaponsResource16GetNextActivePosEii"];
  var __ZN13CHudSpectator15DirectorMessageEiPv = Module["__ZN13CHudSpectator15DirectorMessageEiPv"] = asm["__ZN13CHudSpectator15DirectorMessageEiPv"];
  var __ZN11CBaseEntity17FireBulletsPlayerEm6VectorS0_S0_fiiiP9entvars_si = Module["__ZN11CBaseEntity17FireBulletsPlayerEm6VectorS0_S0_fiiiP9entvars_si"] = asm["__ZN11CBaseEntity17FireBulletsPlayerEm6VectorS0_S0_fiiiP9entvars_si"];
  var __ZN12CBaseMonster12ShootAtEnemyERK6Vector = Module["__ZN12CBaseMonster12ShootAtEnemyERK6Vector"] = asm["__ZN12CBaseMonster12ShootAtEnemyERK6Vector"];
  var __Z21V_CalcSpectatorRefdefP12ref_params_s = Module["__Z21V_CalcSpectatorRefdefP12ref_params_s"] = asm["__Z21V_CalcSpectatorRefdefP12ref_params_s"];
  var __ZN12CBaseMonster11SetActivityE8Activity = Module["__ZN12CBaseMonster11SetActivityE8Activity"] = asm["__ZN12CBaseMonster11SetActivityE8Activity"];
  var __ZN12CBaseMonster12MakeIdealYawE6Vector = Module["__ZN12CBaseMonster12MakeIdealYawE6Vector"] = asm["__ZN12CBaseMonster12MakeIdealYawE6Vector"];
  var __Z24EV_HLDM_PlayTextureSoundiP9pmtrace_sPfS1_i = Module["__Z24EV_HLDM_PlayTextureSoundiP9pmtrace_sPfS1_i"] = asm["__Z24EV_HLDM_PlayTextureSoundiP9pmtrace_sPfS1_i"];
  var __ZN11CHudMessage17MsgFunc_GameTitleEPKciPv = Module["__ZN11CHudMessage17MsgFunc_GameTitleEPKciPv"] = asm["__ZN11CHudMessage17MsgFunc_GameTitleEPKciPv"];
  var __ZN11CBaseEntity11EyePositionEv = Module["__ZN11CBaseEntity11EyePositionEv"] = asm["__ZN11CBaseEntity11EyePositionEv"];
  var _Length = Module["_Length"] = asm["_Length"];
  var __ZN8CCrowbar5SwingEi = Module["__ZN8CCrowbar5SwingEi"] = asm["__ZN8CCrowbar5SwingEi"];
  var __ZN17CHudAmmoSecondary7VidInitEv = Module["__ZN17CHudAmmoSecondary7VidInitEv"] = asm["__ZN17CHudAmmoSecondary7VidInitEv"];
  var __Z21V_GetMapChasePositioniPfS_S_ = Module["__Z21V_GetMapChasePositioniPfS_S_"] = asm["__Z21V_GetMapChasePositioniPfS_S_"];
  var __ZN8CSatchel9CanDeployEv = Module["__ZN8CSatchel9CanDeployEv"] = asm["__ZN8CSatchel9CanDeployEv"];
  var __ZN12CBaseMonster12AdvanceRouteEf = Module["__ZN12CBaseMonster12AdvanceRouteEf"] = asm["__ZN12CBaseMonster12AdvanceRouteEf"];
  var __Z14__MsgFunc_LogoPKciPv = Module["__Z14__MsgFunc_LogoPKciPv"] = asm["__Z14__MsgFunc_LogoPKciPv"];
  var __ZN12CBaseMonster10CheckEnemyEP11CBaseEntity = Module["__ZN12CBaseMonster10CheckEnemyEP11CBaseEntity"] = asm["__ZN12CBaseMonster10CheckEnemyEP11CBaseEntity"];
  var __ZN12CBaseMonster11CoverRadiusEv = Module["__ZN12CBaseMonster11CoverRadiusEv"] = asm["__ZN12CBaseMonster11CoverRadiusEv"];
  var __ZN12CShotgunAmmo7AddAmmoEP11CBaseEntity = Module["__ZN12CShotgunAmmo7AddAmmoEP11CBaseEntity"] = asm["__ZN12CShotgunAmmo7AddAmmoEP11CBaseEntity"];
  var __Z18stub_PrecacheSoundPc = Module["__Z18stub_PrecacheSoundPc"] = asm["__Z18stub_PrecacheSoundPc"];
  var __Z11IN_LookupUpv = Module["__Z11IN_LookupUpv"] = asm["__Z11IN_LookupUpv"];
  var __Z18__MsgFunc_ViewModePKciPv = Module["__Z18__MsgFunc_ViewModePKciPv"] = asm["__Z18__MsgFunc_ViewModePKciPv"];
  var __Z10IN_Impulsev = Module["__Z10IN_Impulsev"] = asm["__Z10IN_Impulsev"];
  var __ZN5CHgun7HolsterEi = Module["__ZN5CHgun7HolsterEi"] = asm["__ZN5CHgun7HolsterEi"];
  var __ZN13CHudStatusBar5ResetEv = Module["__ZN13CHudStatusBar5ResetEv"] = asm["__ZN13CHudStatusBar5ResetEv"];
  var _V_CalcRefdef = Module["_V_CalcRefdef"] = asm["_V_CalcRefdef"];
  var _ammo_crossbow = Module["_ammo_crossbow"] = asm["_ammo_crossbow"];
  var __ZN12CBaseMonster17FValidateHintTypeEs = Module["__ZN12CBaseMonster17FValidateHintTypeEs"] = asm["__ZN12CBaseMonster17FValidateHintTypeEs"];
  var __ZN12CBaseMonster15CorpseFallThinkEv = Module["__ZN12CBaseMonster15CorpseFallThinkEv"] = asm["__ZN12CBaseMonster15CorpseFallThinkEv"];
  var __ZN13CHudStatusBar4InitEv = Module["__ZN13CHudStatusBar4InitEv"] = asm["__ZN13CHudStatusBar4InitEv"];
  var __Z6V_Initv = Module["__Z6V_Initv"] = asm["__Z6V_Initv"];
  var __ZN11CBasePlayer9AddPointsEii = Module["__ZN11CBasePlayer9AddPointsEii"] = asm["__ZN11CBasePlayer9AddPointsEii"];
  var __ZN8CGrenade7ExplodeE6VectorS0_ = Module["__ZN8CGrenade7ExplodeE6VectorS0_"] = asm["__ZN8CGrenade7ExplodeE6VectorS0_"];
  var __ZN8CShotgun13PrimaryAttackEv = Module["__ZN8CShotgun13PrimaryAttackEv"] = asm["__ZN8CShotgun13PrimaryAttackEv"];
  var __Z13V_GetChasePosiPfS_S_ = Module["__Z13V_GetChasePosiPfS_S_"] = asm["__Z13V_GetChasePosiPfS_S_"];
  var __ZN11CBasePlayer19UpdateGeigerCounterEv = Module["__ZN11CBasePlayer19UpdateGeigerCounterEv"] = asm["__ZN11CBasePlayer19UpdateGeigerCounterEv"];
  var __Z15V_ResetChaseCamv = Module["__Z15V_ResetChaseCamv"] = asm["__Z15V_ResetChaseCamv"];
  var __ZN13CHudStatusBarD0Ev = Module["__ZN13CHudStatusBarD0Ev"] = asm["__ZN13CHudStatusBarD0Ev"];
  var __Z10IN_KLookUpv = Module["__Z10IN_KLookUpv"] = asm["__Z10IN_KLookUpv"];
  var __ZN11CHudSayText4InitEv = Module["__ZN11CHudSayText4InitEv"] = asm["__ZN11CHudSayText4InitEv"];
  var _ammo_357 = Module["_ammo_357"] = asm["_ammo_357"];
  var __Z12ScrollTextUpv = Module["__Z12ScrollTextUpv"] = asm["__Z12ScrollTextUpv"];
  var _ammo_9mmAR = Module["_ammo_9mmAR"] = asm["_ammo_9mmAR"];
  var __Z13IN_AttackDownv = Module["__Z13IN_AttackDownv"] = asm["__Z13IN_AttackDownv"];
  var __Z11IN_ReloadUpv = Module["__Z11IN_ReloadUpv"] = asm["__Z11IN_ReloadUpv"];
  var _PM_CalcRoll = Module["_PM_CalcRoll"] = asm["_PM_CalcRoll"];
  var __ZN17CHudAmmoSecondary4DrawEf = Module["__ZN17CHudAmmoSecondary4DrawEf"] = asm["__ZN17CHudAmmoSecondary4DrawEf"];
  var __ZN13CHudSpectator23AddOverviewEntityToListEiP11cl_entity_sd = Module["__ZN13CHudSpectator23AddOverviewEntityToListEiP11cl_entity_sd"] = asm["__ZN13CHudSpectator23AddOverviewEntityToListEiP11cl_entity_sd"];
  var _HUD_Redraw = Module["_HUD_Redraw"] = asm["_HUD_Redraw"];
  var __ZN17CBasePlayerWeapon4SaveER5CSave = Module["__ZN17CBasePlayerWeapon4SaveER5CSave"] = asm["__ZN17CBasePlayerWeapon4SaveER5CSave"];
  var __ZN9CTripmine7HolsterEi = Module["__ZN9CTripmine7HolsterEi"] = asm["__ZN9CTripmine7HolsterEi"];
  var __ZN13CHudSpectator17DrawOverviewLayerEv = Module["__ZN13CHudSpectator17DrawOverviewLayerEv"] = asm["__ZN13CHudSpectator17DrawOverviewLayerEv"];
  var _weapon_9mmhandgun = Module["_weapon_9mmhandgun"] = asm["_weapon_9mmhandgun"];
  var __Z20__MsgFunc_WeapPickupPKciPv = Module["__Z20__MsgFunc_WeapPickupPKciPv"] = asm["__Z20__MsgFunc_WeapPickupPKciPv"];
  var __Z15UTIL_BloodDripsRK6VectorS1_ii = Module["__Z15UTIL_BloodDripsRK6VectorS1_ii"] = asm["__Z15UTIL_BloodDripsRK6VectorS1_ii"];
  var __ZN5CEgon13DestroyEffectEv = Module["__ZN5CEgon13DestroyEffectEv"] = asm["__ZN5CEgon13DestroyEffectEv"];
  var __Z15EV_CreateTracerPfS_ = Module["__Z15EV_CreateTracerPfS_"] = asm["__Z15EV_CreateTracerPfS_"];
  var __ZN8CRpgAmmo5SpawnEv = Module["__ZN8CRpgAmmo5SpawnEv"] = asm["__ZN8CRpgAmmo5SpawnEv"];
  var __ZN14CHudScoreboardD0Ev = Module["__ZN14CHudScoreboardD0Ev"] = asm["__ZN14CHudScoreboardD0Ev"];
  var __ZN10CHudHealth14MsgFunc_DamageEPKciPv = Module["__ZN10CHudHealth14MsgFunc_DamageEPKciPv"] = asm["__ZN10CHudHealth14MsgFunc_DamageEPKciPv"];
  var __Z13IN_StrafeDownv = Module["__Z13IN_StrafeDownv"] = asm["__Z13IN_StrafeDownv"];
  var _PM_PlayStepSound = Module["_PM_PlayStepSound"] = asm["_PM_PlayStepSound"];
  var __ZN6CGlock13PrimaryAttackEv = Module["__ZN6CGlock13PrimaryAttackEv"] = asm["__ZN6CGlock13PrimaryAttackEv"];
  var __ZN8CHudAmmo18UserCmd_NextWeaponEv = Module["__ZN8CHudAmmo18UserCmd_NextWeaponEv"] = asm["__ZN8CHudAmmo18UserCmd_NextWeaponEv"];
  var _EV_FireShotGunDouble = Module["_EV_FireShotGunDouble"] = asm["_EV_FireShotGunDouble"];
  var __ZN12CBaseMonster9PushEnemyEP11CBaseEntityR6Vector = Module["__ZN12CBaseMonster9PushEnemyEP11CBaseEntityR6Vector"] = asm["__ZN12CBaseMonster9PushEnemyEP11CBaseEntityR6Vector"];
  var __ZN12CBaseMonster7RestoreER8CRestore = Module["__ZN12CBaseMonster7RestoreER8CRestore"] = asm["__ZN12CBaseMonster7RestoreER8CRestore"];
  var __Z11IN_AttackUpv = Module["__Z11IN_AttackUpv"] = asm["__Z11IN_AttackUpv"];
  var __ZN15CHudTextMessage4InitEv = Module["__ZN15CHudTextMessage4InitEv"] = asm["__ZN15CHudTextMessage4InitEv"];
  var __Z11READ_STRINGv = Module["__Z11READ_STRINGv"] = asm["__Z11READ_STRINGv"];
  var __ZN13CHudSpectator17AddOverviewEntityEiP11cl_entity_sPKc = Module["__ZN13CHudSpectator17AddOverviewEntityEiP11cl_entity_sPKc"] = asm["__ZN13CHudSpectator17AddOverviewEntityEiP11cl_entity_sPKc"];
  var __ZN6CGlock12UseDecrementEv = Module["__ZN6CGlock12UseDecrementEv"] = asm["__ZN6CGlock12UseDecrementEv"];
  var __ZN12CBaseMonster12SentenceStopEv = Module["__ZN12CBaseMonster12SentenceStopEv"] = asm["__ZN12CBaseMonster12SentenceStopEv"];
  var __ZN12CBaseMonster11GetScheduleEv = Module["__ZN12CBaseMonster11GetScheduleEv"] = asm["__ZN12CBaseMonster11GetScheduleEv"];
  var __ZN14CHudFlashlight18MsgFunc_FlashlightEPKciPv = Module["__ZN14CHudFlashlight18MsgFunc_FlashlightEPKciPv"] = asm["__ZN14CHudFlashlight18MsgFunc_FlashlightEPKciPv"];
  var __ZN8CShotgun8PrecacheEv = Module["__ZN8CShotgun8PrecacheEv"] = asm["__ZN8CShotgun8PrecacheEv"];
  var __Z17CAM_StartDistancev = Module["__Z17CAM_StartDistancev"] = asm["__Z17CAM_StartDistancev"];
  var _PM_ParticleLine = Module["_PM_ParticleLine"] = asm["_PM_ParticleLine"];
  var __ZN10CHudGeiger4InitEv = Module["__ZN10CHudGeiger4InitEv"] = asm["__ZN10CHudGeiger4InitEv"];
  var __ZN12CBaseMonster4StopEv = Module["__ZN12CBaseMonster4StopEv"] = asm["__ZN12CBaseMonster4StopEv"];
  var __ZN8CSatchel12UseDecrementEv = Module["__ZN8CSatchel12UseDecrementEv"] = asm["__ZN8CSatchel12UseDecrementEv"];
  var __Z14CAM_YawRightUpv = Module["__Z14CAM_YawRightUpv"] = asm["__Z14CAM_YawRightUpv"];
  var __ZN11CBasePlayer11IsNetClientEv = Module["__ZN11CBasePlayer11IsNetClientEv"] = asm["__ZN11CBasePlayer11IsNetClientEv"];
  var __ZN5CEgon7UseAmmoEi = Module["__ZN5CEgon7UseAmmoEi"] = asm["__ZN5CEgon7UseAmmoEi"];
  var __Z22UTIL_SharedRandomFloatjff = Module["__Z22UTIL_SharedRandomFloatjff"] = asm["__Z22UTIL_SharedRandomFloatjff"];
  var __ZN17CHudAmmoSecondary5ResetEv = Module["__ZN17CHudAmmoSecondary5ResetEv"] = asm["__ZN17CHudAmmoSecondary5ResetEv"];
  var __ZN15CBasePlayerItem12DefaultTouchEP11CBaseEntity = Module["__ZN15CBasePlayerItem12DefaultTouchEP11CBaseEntity"] = asm["__ZN15CBasePlayerItem12DefaultTouchEP11CBaseEntity"];
  var __ZN11CBasePlayer13StartObserverE6VectorS0_ = Module["__ZN11CBasePlayer13StartObserverE6VectorS0_"] = asm["__ZN11CBasePlayer13StartObserverE6VectorS0_"];
  var __ZN5CEgon7HolsterEi = Module["__ZN5CEgon7HolsterEi"] = asm["__ZN5CEgon7HolsterEi"];
  var __Z18__MsgFunc_VGUIMenuPKciPv = Module["__Z18__MsgFunc_VGUIMenuPKciPv"] = asm["__Z18__MsgFunc_VGUIMenuPKciPv"];
  var __Z6KB_AddPKcP9kbutton_s = Module["__Z6KB_AddPKcP9kbutton_s"] = asm["__Z6KB_AddPKcP9kbutton_s"];
  var __Z9READ_LONGv = Module["__Z9READ_LONGv"] = asm["__Z9READ_LONGv"];
  var __ZN9CHudTrain13MsgFunc_TrainEPKciPv = Module["__ZN9CHudTrain13MsgFunc_TrainEPKciPv"] = asm["__ZN9CHudTrain13MsgFunc_TrainEPKciPv"];
  var __Z14bIsMultiplayerv = Module["__Z14bIsMultiplayerv"] = asm["__Z14bIsMultiplayerv"];
  var __Z22UTIL_GetNextBestWeaponP11CBasePlayerP15CBasePlayerItem = Module["__Z22UTIL_GetNextBestWeaponP11CBasePlayerP15CBasePlayerItem"] = asm["__Z22UTIL_GetNextBestWeaponP11CBasePlayerP15CBasePlayerItem"];
  var __ZN6CGauss17GetFullChargeTimeEv = Module["__ZN6CGauss17GetFullChargeTimeEv"] = asm["__ZN6CGauss17GetFullChargeTimeEv"];
  var __ZN8CCrowbar9iItemSlotEv = Module["__ZN8CCrowbar9iItemSlotEv"] = asm["__ZN8CCrowbar9iItemSlotEv"];
  var __ZN11CBaseEntity8GetDelayEv = Module["__ZN11CBaseEntity8GetDelayEv"] = asm["__ZN11CBaseEntity8GetDelayEv"];
  var __ZN14CHudScoreboard7VidInitEv = Module["__ZN14CHudScoreboard7VidInitEv"] = asm["__ZN14CHudScoreboard7VidInitEv"];
  var __Z16Demo_WriteBufferiiPh = Module["__Z16Demo_WriteBufferiiPh"] = asm["__Z16Demo_WriteBufferiiPh"];
  var __Z16ApplyMultiDamageP9entvars_sS0_ = Module["__Z16ApplyMultiDamageP9entvars_sS0_"] = asm["__Z16ApplyMultiDamageP9entvars_sS0_"];
  var __Z12IN_ScoreDownv = Module["__Z12IN_ScoreDownv"] = asm["__Z12IN_ScoreDownv"];
  var __ZN4CMP59iItemSlotEv = Module["__ZN4CMP59iItemSlotEv"] = asm["__ZN4CMP59iItemSlotEv"];
  var __ZN8CCrowbar6DeployEv = Module["__ZN8CCrowbar6DeployEv"] = asm["__ZN8CCrowbar6DeployEv"];
  var __Z7IN_Initv = Module["__Z7IN_Initv"] = asm["__Z7IN_Initv"];
  var __ZN20CStudioModelRendererD0Ev = Module["__ZN20CStudioModelRendererD0Ev"] = asm["__ZN20CStudioModelRendererD0Ev"];
  var _PM_CheckWaterJump = Module["_PM_CheckWaterJump"] = asm["_PM_CheckWaterJump"];
  var __Z13ShutdownInputv = Module["__Z13ShutdownInputv"] = asm["__Z13ShutdownInputv"];
  var __Z17HUD_PlaybackEventiPK7edict_stfPfS2_ffiiii = Module["__Z17HUD_PlaybackEventiPK7edict_stfPfS2_ffiiii"] = asm["__Z17HUD_PlaybackEventiPK7edict_stfPfS2_ffiiii"];
  var __ZN11CBasePlayer22BarnacleVictimReleasedEv = Module["__ZN11CBasePlayer22BarnacleVictimReleasedEv"] = asm["__ZN11CBasePlayer22BarnacleVictimReleasedEv"];
  var __Z17EV_TFC_IsAllyTeamii = Module["__Z17EV_TFC_IsAllyTeamii"] = asm["__Z17EV_TFC_IsAllyTeamii"];
  var __ZN17CHudAmmoSecondary18MsgFunc_SecAmmoValEPKciPv = Module["__ZN17CHudAmmoSecondary18MsgFunc_SecAmmoValEPKciPv"] = asm["__ZN17CHudAmmoSecondary18MsgFunc_SecAmmoValEPKciPv"];
  var __ZN4CHud16MsgFunc_GameModeEPKciPv = Module["__ZN4CHud16MsgFunc_GameModeEPKciPv"] = asm["__ZN4CHud16MsgFunc_GameModeEPKciPv"];
  var _EV_FirePython = Module["_EV_FirePython"] = asm["_EV_FirePython"];
  var __ZN8CSatchel15SecondaryAttackEv = Module["__ZN8CSatchel15SecondaryAttackEv"] = asm["__ZN8CSatchel15SecondaryAttackEv"];
  var __Z11ScaleColorsRiS_S_i = Module["__Z11ScaleColorsRiS_S_i"] = asm["__Z11ScaleColorsRiS_S_i"];
  var __ZN15CBasePlayerAmmo12DefaultTouchEP11CBaseEntity = Module["__ZN15CBasePlayerAmmo12DefaultTouchEP11CBaseEntity"] = asm["__ZN15CBasePlayerAmmo12DefaultTouchEP11CBaseEntity"];
  var __ZN11CBasePlayer4SaveER5CSave = Module["__ZN11CBasePlayer4SaveER5CSave"] = asm["__ZN11CBasePlayer4SaveER5CSave"];
  var __ZN5CHgun15SecondaryAttackEv = Module["__ZN5CHgun15SecondaryAttackEv"] = asm["__ZN5CHgun15SecondaryAttackEv"];
  var __Z18V_CalcNormalRefdefP12ref_params_s = Module["__Z18V_CalcNormalRefdefP12ref_params_s"] = asm["__Z18V_CalcNormalRefdefP12ref_params_s"];
  var __ZN20CStudioModelRenderer19StudioEstimateFrameEP16mstudioseqdesc_t = Module["__ZN20CStudioModelRenderer19StudioEstimateFrameEP16mstudioseqdesc_t"] = asm["__ZN20CStudioModelRenderer19StudioEstimateFrameEP16mstudioseqdesc_t"];
  var __Z10MatrixCopyPA4_fS0_ = Module["__Z10MatrixCopyPA4_fS0_"] = asm["__Z10MatrixCopyPA4_fS0_"];
  var __ZN14CBaseAnimating12GetBodygroupEi = Module["__ZN14CBaseAnimating12GetBodygroupEi"] = asm["__ZN14CBaseAnimating12GetBodygroupEi"];
  var __ZN11CBasePlayer10BodyTargetERK6Vector = Module["__ZN11CBasePlayer10BodyTargetERK6Vector"] = asm["__ZN11CBasePlayer10BodyTargetERK6Vector"];
  var __ZN9CHudTrain4InitEv = Module["__ZN9CHudTrain4InitEv"] = asm["__ZN9CHudTrain4InitEv"];
  var __Z29__CmdFunc_ToggleServerBrowserv = Module["__Z29__CmdFunc_ToggleServerBrowserv"] = asm["__Z29__CmdFunc_ToggleServerBrowserv"];
  var __ZN7CSqueak7HolsterEi = Module["__ZN7CSqueak7HolsterEi"] = asm["__ZN7CSqueak7HolsterEi"];
  var __ZN8CHudAmmo18MsgFunc_ItemPickupEPKciPv = Module["__ZN8CHudAmmo18MsgFunc_ItemPickupEPKciPv"] = asm["__ZN8CHudAmmo18MsgFunc_ItemPickupEPKciPv"];
  var __ZN8CHudAmmo5ThinkEv = Module["__ZN8CHudAmmo5ThinkEv"] = asm["__ZN8CHudAmmo5ThinkEv"];
  var __ZN12CBaseMonster11FadeMonsterEv = Module["__ZN12CBaseMonster11FadeMonsterEv"] = asm["__ZN12CBaseMonster11FadeMonsterEv"];
  var __Z11GetClassPtrI12CShotgunAmmoEPT_S2_ = Module["__Z11GetClassPtrI12CShotgunAmmoEPT_S2_"] = asm["__Z11GetClassPtrI12CShotgunAmmoEPT_S2_"];
  var __ZN8CHudMOTD12MsgFunc_MOTDEPKciPv = Module["__ZN8CHudMOTD12MsgFunc_MOTDEPKciPv"] = asm["__ZN8CHudMOTD12MsgFunc_MOTDEPKciPv"];
  var __ZN11CBaseEntity12ReflectGaussEv = Module["__ZN11CBaseEntity12ReflectGaussEv"] = asm["__ZN11CBaseEntity12ReflectGaussEv"];
  var _ammo_buckshot = Module["_ammo_buckshot"] = asm["_ammo_buckshot"];
  var __ZN15CBasePlayerItem14AttachToPlayerEP11CBasePlayer = Module["__ZN15CBasePlayerItem14AttachToPlayerEP11CBasePlayer"] = asm["__ZN15CBasePlayerItem14AttachToPlayerEP11CBasePlayer"];
  var __ZN11CBaseEntity11FireBulletsEm6VectorS0_S0_fiiiP9entvars_s = Module["__ZN11CBaseEntity11FireBulletsEm6VectorS0_S0_fiiiP9entvars_s"] = asm["__ZN11CBaseEntity11FireBulletsEm6VectorS0_S0_fiiiP9entvars_s"];
  var __ZN11CHudMessage9YPositionEfi = Module["__ZN11CHudMessage9YPositionEfi"] = asm["__ZN11CHudMessage9YPositionEfi"];
  var __Z16__MsgFunc_GeigerPKciPv = Module["__Z16__MsgFunc_GeigerPKciPv"] = asm["__Z16__MsgFunc_GeigerPKciPv"];
  var __ZN17CBasePlayerWeapon15ExtractClipAmmoEPS_ = Module["__ZN17CBasePlayerWeapon15ExtractClipAmmoEPS_"] = asm["__ZN17CBasePlayerWeapon15ExtractClipAmmoEPS_"];
  var __ZN8CCrowbar10SwingAgainEv = Module["__ZN8CCrowbar10SwingAgainEv"] = asm["__ZN8CCrowbar10SwingAgainEv"];
  var __ZN11CBasePlayer12SwitchWeaponEP15CBasePlayerItem = Module["__ZN11CBasePlayer12SwitchWeaponEP15CBasePlayerItem"] = asm["__ZN11CBasePlayer12SwitchWeaponEP15CBasePlayerItem"];
  var __ZN12CBaseMonster11SetYawSpeedEv = Module["__ZN12CBaseMonster11SetYawSpeedEv"] = asm["__ZN12CBaseMonster11SetYawSpeedEv"];
  var __ZN12CBaseMonster12RadiusDamageEP9entvars_sS1_fii = Module["__ZN12CBaseMonster12RadiusDamageEP9entvars_sS1_fii"] = asm["__ZN12CBaseMonster12RadiusDamageEP9entvars_sS1_fii"];
  var _EV_TrainPitchAdjust = Module["_EV_TrainPitchAdjust"] = asm["_EV_TrainPitchAdjust"];
  var _PM_AddToTouched = Module["_PM_AddToTouched"] = asm["_PM_AddToTouched"];
  var _PM_PreventMegaBunnyJumping = Module["_PM_PreventMegaBunnyJumping"] = asm["_PM_PreventMegaBunnyJumping"];
  var __ZN8CSatchel9IsUseableEv = Module["__ZN8CSatchel9IsUseableEv"] = asm["__ZN8CSatchel9IsUseableEv"];
  var __ZN11CBasePlayer12StopSneakingEv = Module["__ZN11CBasePlayer12StopSneakingEv"] = asm["__ZN11CBasePlayer12StopSneakingEv"];
  var __ZN11CHudMessage5ResetEv = Module["__ZN11CHudMessage5ResetEv"] = asm["__ZN11CHudMessage5ResetEv"];
  var __Z15HUD_SetMaxSpeedPK7edict_sf = Module["__Z15HUD_SetMaxSpeedPK7edict_sf"] = asm["__Z15HUD_SetMaxSpeedPK7edict_sf"];
  var _HUD_Reset = Module["_HUD_Reset"] = asm["_HUD_Reset"];
  var __ZN12CBaseMonster10BodyTargetERK6Vector = Module["__ZN12CBaseMonster10BodyTargetERK6Vector"] = asm["__ZN12CBaseMonster10BodyTargetERK6Vector"];
  var __Z18CL_ResetButtonBitsi = Module["__Z18CL_ResetButtonBitsi"] = asm["__Z18CL_ResetButtonBitsi"];
  var __ZN12CBaseMonster10TakeHealthEfi = Module["__ZN12CBaseMonster10TakeHealthEfi"] = asm["__ZN12CBaseMonster10TakeHealthEfi"];
  var _HUD_TxferLocalOverrides = Module["_HUD_TxferLocalOverrides"] = asm["_HUD_TxferLocalOverrides"];
  var _HUD_ConnectionlessPacket = Module["_HUD_ConnectionlessPacket"] = asm["_HUD_ConnectionlessPacket"];
  var __ZN7CSprite6ExpandEff = Module["__ZN7CSprite6ExpandEff"] = asm["__ZN7CSprite6ExpandEff"];
  var _weapon_mp5 = Module["_weapon_mp5"] = asm["_weapon_mp5"];
  var __ZN14CSatchelCharge12SatchelThinkEv = Module["__ZN14CSatchelCharge12SatchelThinkEv"] = asm["__ZN14CSatchelCharge12SatchelThinkEv"];
  var __Z13GetSpriteListP15client_sprite_sPKcii = Module["__Z13GetSpriteListP15client_sprite_sPKcii"] = asm["__Z13GetSpriteListP15client_sprite_sPKcii"];
  var __ZN12CBaseMonster11FInViewConeEP6Vector = Module["__ZN12CBaseMonster11FInViewConeEP6Vector"] = asm["__ZN12CBaseMonster11FInViewConeEP6Vector"];
  var __ZN17CBasePlayerWeapon13ItemPostFrameEv = Module["__ZN17CBasePlayerWeapon13ItemPostFrameEv"] = asm["__ZN17CBasePlayerWeapon13ItemPostFrameEv"];
  var __Z15__CmdFunc_Closev = Module["__Z15__CmdFunc_Closev"] = asm["__Z15__CmdFunc_Closev"];
  var __Z11V_PunchAxisif = Module["__Z11V_PunchAxisif"] = asm["__Z11V_PunchAxisif"];
  var __Z9IN_UpDownv = Module["__Z9IN_UpDownv"] = asm["__Z9IN_UpDownv"];
  var __ZN11CBasePlayer8GiveAmmoEiPci = Module["__ZN11CBasePlayer8GiveAmmoEiPci"] = asm["__ZN11CBasePlayer8GiveAmmoEiPci"];
  var _AngleVectorsTranspose = Module["_AngleVectorsTranspose"] = asm["_AngleVectorsTranspose"];
  var __ZN6CGauss10WeaponIdleEv = Module["__ZN6CGauss10WeaponIdleEv"] = asm["__ZN6CGauss10WeaponIdleEv"];
  var __Z21__MsgFunc_SecAmmoIconPKciPv = Module["__Z21__MsgFunc_SecAmmoIconPKciPv"] = asm["__Z21__MsgFunc_SecAmmoIconPKciPv"];
  var __ZN6CGauss15SecondaryAttackEv = Module["__ZN6CGauss15SecondaryAttackEv"] = asm["__ZN6CGauss15SecondaryAttackEv"];
  var __ZN7CSqueak12UseDecrementEv = Module["__ZN7CSqueak12UseDecrementEv"] = asm["__ZN7CSqueak12UseDecrementEv"];
  var __ZN11CBasePlayer14GetGunPositionEv = Module["__ZN11CBasePlayer14GetGunPositionEv"] = asm["__ZN11CBasePlayer14GetGunPositionEv"];
  var __ZN13CMP5Chainammo7AddAmmoEP11CBaseEntity = Module["__ZN13CMP5Chainammo7AddAmmoEP11CBaseEntity"] = asm["__ZN13CMP5Chainammo7AddAmmoEP11CBaseEntity"];
  var __ZN15HistoryResource12AddToHistoryEiPKci = Module["__ZN15HistoryResource12AddToHistoryEiPKci"] = asm["__ZN15HistoryResource12AddToHistoryEiPKci"];
  var __ZN15CHudStatusIcons7VidInitEv = Module["__ZN15CHudStatusIcons7VidInitEv"] = asm["__ZN15CHudStatusIcons7VidInitEv"];
  var __ZN4CRpg6DeployEv = Module["__ZN4CRpg6DeployEv"] = asm["__ZN4CRpg6DeployEv"];
  var _PM_PlayerMove = Module["_PM_PlayerMove"] = asm["_PM_PlayerMove"];
  var __ZN8CHudAmmo13UserCmd_Slot2Ev = Module["__ZN8CHudAmmo13UserCmd_Slot2Ev"] = asm["__ZN8CHudAmmo13UserCmd_Slot2Ev"];
  var _PM_GetVisEntInfo = Module["_PM_GetVisEntInfo"] = asm["_PM_GetVisEntInfo"];
  var __ZN15CHudDeathNotice7VidInitEv = Module["__ZN15CHudDeathNotice7VidInitEv"] = asm["__ZN15CHudDeathNotice7VidInitEv"];
  var __Z8VectorMAPKffS0_Pf = Module["__Z8VectorMAPKffS0_Pf"] = asm["__Z8VectorMAPKffS0_Pf"];
  var __ZN8CHudBase4DrawEf = Module["__ZN8CHudBase4DrawEf"] = asm["__ZN8CHudBase4DrawEf"];
  var __ZN10CHudHealth4InitEv = Module["__ZN10CHudHealth4InitEv"] = asm["__ZN10CHudHealth4InitEv"];
  var __ZN13CHudStatusBar18MsgFunc_StatusTextEPKciPv = Module["__ZN13CHudStatusBar18MsgFunc_StatusTextEPKciPv"] = asm["__ZN13CHudStatusBar18MsgFunc_StatusTextEPKciPv"];
  var __ZN20CStudioModelRenderer16StudioMergeBonesEP7model_s = Module["__ZN20CStudioModelRenderer16StudioMergeBonesEP7model_s"] = asm["__ZN20CStudioModelRenderer16StudioMergeBonesEP7model_s"];
  var __ZN10CGlockAmmo7AddAmmoEP11CBaseEntity = Module["__ZN10CGlockAmmo7AddAmmoEP11CBaseEntity"] = asm["__ZN10CGlockAmmo7AddAmmoEP11CBaseEntity"];
  var __Z17__MsgFunc_BatteryPKciPv = Module["__Z17__MsgFunc_BatteryPKciPv"] = asm["__Z17__MsgFunc_BatteryPKciPv"];
  var __ZN11CBasePlayer20ForceClientDllUpdateEv = Module["__ZN11CBasePlayer20ForceClientDllUpdateEv"] = asm["__ZN11CBasePlayer20ForceClientDllUpdateEv"];
  var _VectorMatrix = Module["_VectorMatrix"] = asm["_VectorMatrix"];
  var __ZN7CPython10WeaponIdleEv = Module["__ZN7CPython10WeaponIdleEv"] = asm["__ZN7CPython10WeaponIdleEv"];
  var __ZN4CRpg10WeaponIdleEv = Module["__ZN4CRpg10WeaponIdleEv"] = asm["__ZN4CRpg10WeaponIdleEv"];
  var __ZN4CRpg15SecondaryAttackEv = Module["__ZN4CRpg15SecondaryAttackEv"] = asm["__ZN4CRpg15SecondaryAttackEv"];
  var __Z20__CmdFunc_PrevWeaponv = Module["__Z20__CmdFunc_PrevWeaponv"] = asm["__Z20__CmdFunc_PrevWeaponv"];
  var __GLOBAL__sub_I_cdll_int_cpp = Module["__GLOBAL__sub_I_cdll_int_cpp"] = asm["__GLOBAL__sub_I_cdll_int_cpp"];
  var _ammo_rpgclip = Module["_ammo_rpgclip"] = asm["_ammo_rpgclip"];
  var _PM_FixPlayerCrouchStuck = Module["_PM_FixPlayerCrouchStuck"] = asm["_PM_FixPlayerCrouchStuck"];
  var __Z11IN_StrafeUpv = Module["__Z11IN_StrafeUpv"] = asm["__Z11IN_StrafeUpv"];
  var _PM_GetPhysEntInfo = Module["_PM_GetPhysEntInfo"] = asm["_PM_GetPhysEntInfo"];
  var __Z13V_GetInEyePosiPfS_ = Module["__Z13V_GetInEyePosiPfS_"] = asm["__Z13V_GetInEyePosiPfS_"];
  var __ZN17CBasePlayerWeapon16UpdateClientDataEP11CBasePlayer = Module["__ZN17CBasePlayerWeapon16UpdateClientDataEP11CBasePlayer"] = asm["__ZN17CBasePlayerWeapon16UpdateClientDataEP11CBasePlayer"];
  var __ZN17CBasePlayerWeapon11ExtractAmmoEPS_ = Module["__ZN17CBasePlayerWeapon11ExtractAmmoEPS_"] = asm["__ZN17CBasePlayerWeapon11ExtractAmmoEPS_"];
  var __ZN12CBaseMonster13IRelationshipEP11CBaseEntity = Module["__ZN12CBaseMonster13IRelationshipEP11CBaseEntity"] = asm["__ZN12CBaseMonster13IRelationshipEP11CBaseEntity"];
  var __ZN15CBasePlayerItem16PrimaryAmmoIndexEv = Module["__ZN15CBasePlayerItem16PrimaryAmmoIndexEv"] = asm["__ZN15CBasePlayerItem16PrimaryAmmoIndexEv"];
  var __ZN17CBasePlayerWeapon12AddDuplicateEP15CBasePlayerItem = Module["__ZN17CBasePlayerWeapon12AddDuplicateEP15CBasePlayerItem"] = asm["__ZN17CBasePlayerWeapon12AddDuplicateEP15CBasePlayerItem"];
  var __ZN8CHudAmmo17MsgFunc_CurWeaponEPKciPv = Module["__ZN8CHudAmmo17MsgFunc_CurWeaponEPKciPv"] = asm["__ZN8CHudAmmo17MsgFunc_CurWeaponEPKciPv"];
  var __Z11KB_Shutdownv = Module["__Z11KB_Shutdownv"] = asm["__Z11KB_Shutdownv"];
  var __Z10BEGIN_READPvi = Module["__Z10BEGIN_READPvi"] = asm["__Z10BEGIN_READPvi"];
  var __Z12VectorAnglesPKfPf = Module["__Z12VectorAnglesPKfPf"] = asm["__Z12VectorAnglesPKfPf"];
  var __ZN13CHudSpectator12DeathMessageEi = Module["__ZN13CHudSpectator12DeathMessageEi"] = asm["__ZN13CHudSpectator12DeathMessageEi"];
  var __ZN8CShotgun12UseDecrementEv = Module["__ZN8CShotgun12UseDecrementEv"] = asm["__ZN8CShotgun12UseDecrementEv"];
  var __ZN8CHudAmmo13MsgFunc_AmmoXEPKciPv = Module["__ZN8CHudAmmo13MsgFunc_AmmoXEPKciPv"] = asm["__ZN8CHudAmmo13MsgFunc_AmmoXEPKciPv"];
  var __Z11GetClassPtrI14CSatchelChargeEPT_S2_ = Module["__Z11GetClassPtrI14CSatchelChargeEPT_S2_"] = asm["__Z11GetClassPtrI14CSatchelChargeEPT_S2_"];
  var __ZN6CGlock9iItemSlotEv = Module["__ZN6CGlock9iItemSlotEv"] = asm["__ZN6CGlock9iItemSlotEv"];
  var __ZN13CHudStatusBar7VidInitEv = Module["__ZN13CHudStatusBar7VidInitEv"] = asm["__ZN13CHudStatusBar7VidInitEv"];
  var __ZN11CBaseEntity15AddPointsToTeamEii = Module["__ZN11CBaseEntity15AddPointsToTeamEii"] = asm["__ZN11CBaseEntity15AddPointsToTeamEii"];
  var _PM_Physics_Toss = Module["_PM_Physics_Toss"] = asm["_PM_Physics_Toss"];
  var __ZN10CHudGeigerD0Ev = Module["__ZN10CHudGeigerD0Ev"] = asm["__ZN10CHudGeigerD0Ev"];
  var __Z14HUD_PrepEntityP11CBaseEntityP11CBasePlayer = Module["__Z14HUD_PrepEntityP11CBaseEntityP11CBasePlayer"] = asm["__Z14HUD_PrepEntityP11CBaseEntityP11CBasePlayer"];
  var __Z18UTIL_IsValidEntityP7edict_s = Module["__Z18UTIL_IsValidEntityP7edict_s"] = asm["__Z18UTIL_IsValidEntityP7edict_s"];
  var __ZN11CHudMessage15MsgFunc_HudTextEPKciPv = Module["__ZN11CHudMessage15MsgFunc_HudTextEPKciPv"] = asm["__ZN11CHudMessage15MsgFunc_HudTextEPKciPv"];
  var _PM_CreateStuckTable = Module["_PM_CreateStuckTable"] = asm["_PM_CreateStuckTable"];
  var __Z9READ_WORDv = Module["__Z9READ_WORDv"] = asm["__Z9READ_WORDv"];
  var __ZN10CHudHealth8DrawPainEf = Module["__ZN10CHudHealth8DrawPainEf"] = asm["__ZN10CHudHealth8DrawPainEf"];
  var __ZN12CBaseMonster6ListenEv = Module["__ZN12CBaseMonster6ListenEv"] = asm["__ZN12CBaseMonster6ListenEv"];
  var __ZN6CGauss4FireE6VectorS0_f = Module["__ZN6CGauss4FireE6VectorS0_f"] = asm["__ZN6CGauss4FireE6VectorS0_f"];
  var __Z9CAM_OutUpv = Module["__Z9CAM_OutUpv"] = asm["__Z9CAM_OutUpv"];
  var __ZN8CHudAmmoD0Ev = Module["__ZN8CHudAmmoD0Ev"] = asm["__ZN8CHudAmmoD0Ev"];
  var __Z10IN_JLookUpv = Module["__Z10IN_JLookUpv"] = asm["__Z10IN_JLookUpv"];
  var _PM_CatagorizeTextureType = Module["_PM_CatagorizeTextureType"] = asm["_PM_CatagorizeTextureType"];
  var __ZN8CHudBase5ThinkEv = Module["__ZN8CHudBase5ThinkEv"] = asm["__ZN8CHudBase5ThinkEv"];
  var __ZN11CBasePlayer13StartDeathCamEv = Module["__ZN11CBasePlayer13StartDeathCamEv"] = asm["__ZN11CBasePlayer13StartDeathCamEv"];
  var __ZN12CBaseMonster17GetScheduleOfTypeEi = Module["__ZN12CBaseMonster17GetScheduleOfTypeEi"] = asm["__ZN12CBaseMonster17GetScheduleOfTypeEi"];
  var __ZN4CMP58PrecacheEv = Module["__ZN4CMP58PrecacheEv"] = asm["__ZN4CMP58PrecacheEv"];
  var __ZN12CBaseMonster8RouteNewEv = Module["__ZN12CBaseMonster8RouteNewEv"] = asm["__ZN12CBaseMonster8RouteNewEv"];
  var __ZN11CHudSayText4DrawEf = Module["__ZN11CHudSayText4DrawEf"] = asm["__ZN11CHudSayText4DrawEf"];
  var __ZN15CBasePlayerItem11DestroyItemEv = Module["__ZN15CBasePlayerItem11DestroyItemEv"] = asm["__ZN15CBasePlayerItem11DestroyItemEv"];
  var __ZN4CMP511AddToPlayerEP11CBasePlayer = Module["__ZN4CMP511AddToPlayerEP11CBasePlayer"] = asm["__ZN4CMP511AddToPlayerEP11CBasePlayer"];
  var __ZN4CMP513PrimaryAttackEv = Module["__ZN4CMP513PrimaryAttackEv"] = asm["__ZN4CMP513PrimaryAttackEv"];
  var __ZN4CHud4InitEv = Module["__ZN4CHud4InitEv"] = asm["__ZN4CHud4InitEv"];
  var __ZN11CBasePlayer13SetSuitUpdateEPcii = Module["__ZN11CBasePlayer13SetSuitUpdateEPcii"] = asm["__ZN11CBasePlayer13SetSuitUpdateEPcii"];
  var __ZN8CGrenade11BounceSoundEv = Module["__ZN8CGrenade11BounceSoundEv"] = asm["__ZN8CGrenade11BounceSoundEv"];
  var _CL_CameraOffset = Module["_CL_CameraOffset"] = asm["_CL_CameraOffset"];
  var _PM_Init = Module["_PM_Init"] = asm["_PM_Init"];
  var __Z17FindEntityForwardP11CBaseEntity = Module["__Z17FindEntityForwardP11CBaseEntity"] = asm["__Z17FindEntityForwardP11CBaseEntity"];
  var __Z10HUD_GetFOVv = Module["__Z10HUD_GetFOVv"] = asm["__Z10HUD_GetFOVv"];
  var __ZN9CCrossbow15SecondaryAttackEv = Module["__ZN9CCrossbow15SecondaryAttackEv"] = asm["__ZN9CCrossbow15SecondaryAttackEv"];
  var __ZN6CGlock6DeployEv = Module["__ZN6CGlock6DeployEv"] = asm["__ZN6CGlock6DeployEv"];
  var __ZN17CHudAmmoSecondaryD0Ev = Module["__ZN17CHudAmmoSecondaryD0Ev"] = asm["__ZN17CHudAmmoSecondaryD0Ev"];
  var __ZN5CEgon6AttackEv = Module["__ZN5CEgon6AttackEv"] = asm["__ZN5CEgon6AttackEv"];
  var __ZN11CBaseEntity10IsSneakingEv = Module["__ZN11CBaseEntity10IsSneakingEv"] = asm["__ZN11CBaseEntity10IsSneakingEv"];
  var __ZN12CShotgunAmmo5SpawnEv = Module["__ZN12CShotgunAmmo5SpawnEv"] = asm["__ZN12CShotgunAmmo5SpawnEv"];
  var __Z11VectorScalePKffPf = Module["__Z11VectorScalePKffPf"] = asm["__Z11VectorScalePKffPf"];
  var __ZN4CHud15MsgFunc_InitHUDEPKciPv = Module["__ZN4CHud15MsgFunc_InitHUDEPKciPv"] = asm["__ZN4CHud15MsgFunc_InitHUDEPKciPv"];
  var _PM_SwapTextures = Module["_PM_SwapTextures"] = asm["_PM_SwapTextures"];
  var __Z9READ_BYTEv = Module["__Z9READ_BYTEv"] = asm["__Z9READ_BYTEv"];
  var __ZN8CCrowbar8PrecacheEv = Module["__ZN8CCrowbar8PrecacheEv"] = asm["__ZN8CCrowbar8PrecacheEv"];
  var __Z18stub_PrecacheModelPc = Module["__Z18stub_PrecacheModelPc"] = asm["__Z18stub_PrecacheModelPc"];
  var __Z12IN_GraphDownv = Module["__Z12IN_GraphDownv"] = asm["__Z12IN_GraphDownv"];
  var __ZN11CBaseEntity11UpdateOwnerEv = Module["__ZN11CBaseEntity11UpdateOwnerEv"] = asm["__ZN11CBaseEntity11UpdateOwnerEv"];
  var __ZN5CEgon9iItemSlotEv = Module["__ZN5CEgon9iItemSlotEv"] = asm["__ZN5CEgon9iItemSlotEv"];
  var __Z20__MsgFunc_ServerNamePKciPv = Module["__Z20__MsgFunc_ServerNamePKciPv"] = asm["__Z20__MsgFunc_ServerNamePKciPv"];
  var __ZN15CHudStatusIcons4DrawEf = Module["__ZN15CHudStatusIcons4DrawEf"] = asm["__ZN15CHudStatusIcons4DrawEf"];
  var _VectorInverse = Module["_VectorInverse"] = asm["_VectorInverse"];
  var __ZN13CHudSpectator4InitEv = Module["__ZN13CHudSpectator4InitEv"] = asm["__ZN13CHudSpectator4InitEv"];
  var __Z17__MsgFunc_HudTextPKciPv = Module["__Z17__MsgFunc_HudTextPKciPv"] = asm["__Z17__MsgFunc_HudTextPKciPv"];
  var __ZN8CShotgun9iItemSlotEv = Module["__ZN8CShotgun9iItemSlotEv"] = asm["__ZN8CShotgun9iItemSlotEv"];
  var __ZN13CHudStatusBar19MsgFunc_StatusValueEPKciPv = Module["__ZN13CHudStatusBar19MsgFunc_StatusValueEPKciPv"] = asm["__ZN13CHudStatusBar19MsgFunc_StatusValueEPKciPv"];
  var __ZN20CStudioModelRenderer16StudioSlerpBonesEPA4_fPA3_fS1_S3_f = Module["__ZN20CStudioModelRenderer16StudioSlerpBonesEPA4_fPA3_fS1_S3_f"] = asm["__ZN20CStudioModelRenderer16StudioSlerpBonesEPA4_fPA3_fS1_S3_f"];
  var runPostSets = Module["runPostSets"] = asm["runPostSets"];
  var __Z15EV_BoltCallbackP9tempent_sff = Module["__Z15EV_BoltCallbackP9tempent_sff"] = asm["__Z15EV_BoltCallbackP9tempent_sff"];
  var __ZN11CBaseEntity9IsDormantEv = Module["__ZN11CBaseEntity9IsDormantEv"] = asm["__ZN11CBaseEntity9IsDormantEv"];
  var __ZN4CHud15MsgFunc_ConcussEPKciPv = Module["__ZN4CHud15MsgFunc_ConcussEPKciPv"] = asm["__ZN4CHud15MsgFunc_ConcussEPKciPv"];
  var __ZN12CHandGrenade8PrecacheEv = Module["__ZN12CHandGrenade8PrecacheEv"] = asm["__ZN12CHandGrenade8PrecacheEv"];
  var __Z20__MsgFunc_WeaponListPKciPv = Module["__Z20__MsgFunc_WeaponListPKciPv"] = asm["__Z20__MsgFunc_WeaponListPKciPv"];
  var _HUD_CreateEntities = Module["_HUD_CreateEntities"] = asm["_HUD_CreateEntities"];
  var __ZN12CBaseMonster10MonsterUseEP11CBaseEntityS1_8USE_TYPEf = Module["__ZN12CBaseMonster10MonsterUseEP11CBaseEntityS1_8USE_TYPEf"] = asm["__ZN12CBaseMonster10MonsterUseEP11CBaseEntityS1_8USE_TYPEf"];
  var __Z10READ_COORDv = Module["__Z10READ_COORDv"] = asm["__Z10READ_COORDv"];
  var _KB_Find = Module["_KB_Find"] = asm["_KB_Find"];
  var _CAM_Think = Module["_CAM_Think"] = asm["_CAM_Think"];
  var __Z11GetClassPtrI10CGaussAmmoEPT_S2_ = Module["__Z11GetClassPtrI10CGaussAmmoEPT_S2_"] = asm["__Z11GetClassPtrI10CGaussAmmoEPT_S2_"];
  var __ZN11CHudBattery7VidInitEv = Module["__ZN11CHudBattery7VidInitEv"] = asm["__ZN11CHudBattery7VidInitEv"];
  var __Z20V_GetSingleTargetCamP11cl_entity_sPfS1_ = Module["__Z20V_GetSingleTargetCamP11cl_entity_sPfS1_"] = asm["__Z20V_GetSingleTargetCamP11cl_entity_sPfS1_"];
  var __ZN6CGauss11AddToPlayerEP11CBasePlayer = Module["__ZN6CGauss11AddToPlayerEP11CBasePlayer"] = asm["__ZN6CGauss11AddToPlayerEP11CBasePlayer"];
  var __ZN7CPython5SpawnEv = Module["__ZN7CPython5SpawnEv"] = asm["__ZN7CPython5SpawnEv"];
  var __ZN4CMP55SpawnEv = Module["__ZN4CMP55SpawnEv"] = asm["__ZN4CMP55SpawnEv"];
  var __ZN11CBaseEntity6CenterEv = Module["__ZN11CBaseEntity6CenterEv"] = asm["__ZN11CBaseEntity6CenterEv"];
  var __Z12CrossProductPKfS0_Pf = Module["__Z12CrossProductPKfS0_Pf"] = asm["__Z12CrossProductPKfS0_Pf"];
  var __ZN15CMP5AmmoGrenade8PrecacheEv = Module["__ZN15CMP5AmmoGrenade8PrecacheEv"] = asm["__ZN15CMP5AmmoGrenade8PrecacheEv"];
  var __ZN8CCrowbar11GetItemInfoEP8ItemInfo = Module["__ZN8CCrowbar11GetItemInfoEP8ItemInfo"] = asm["__ZN8CCrowbar11GetItemInfoEP8ItemInfo"];
  var __ZN12CBaseMonster15MonsterInitDeadEv = Module["__ZN12CBaseMonster15MonsterInitDeadEv"] = asm["__ZN12CBaseMonster15MonsterInitDeadEv"];
  var __ZN11CHudBattery4DrawEf = Module["__ZN11CHudBattery4DrawEf"] = asm["__ZN11CHudBattery4DrawEf"];
  var __ZN14CBaseAnimating18DispatchAnimEventsEf = Module["__ZN14CBaseAnimating18DispatchAnimEventsEf"] = asm["__ZN14CBaseAnimating18DispatchAnimEventsEf"];
  var __ZN10CHudHealth10DrawDamageEf = Module["__ZN10CHudHealth10DrawDamageEf"] = asm["__ZN10CHudHealth10DrawDamageEf"];
  var __ZN12CBaseMonster17CheckRangeAttack2Eff = Module["__ZN12CBaseMonster17CheckRangeAttack2Eff"] = asm["__ZN12CBaseMonster17CheckRangeAttack2Eff"];
  var __ZN15CHudDeathNotice11InitHUDDataEv = Module["__ZN15CHudDeathNotice11InitHUDDataEv"] = asm["__ZN15CHudDeathNotice11InitHUDDataEv"];
  var __ZN13CCrossbowAmmo7AddAmmoEP11CBaseEntity = Module["__ZN13CCrossbowAmmo7AddAmmoEP11CBaseEntity"] = asm["__ZN13CCrossbowAmmo7AddAmmoEP11CBaseEntity"];
  var __ZN14CHudScoreboard16MsgFunc_TeamInfoEPKciPv = Module["__ZN14CHudScoreboard16MsgFunc_TeamInfoEPKciPv"] = asm["__ZN14CHudScoreboard16MsgFunc_TeamInfoEPKciPv"];
  var __Z11UpdateBeamsv = Module["__Z11UpdateBeamsv"] = asm["__Z11UpdateBeamsv"];
  var __ZN6CGauss9iItemSlotEv = Module["__ZN6CGauss9iItemSlotEv"] = asm["__ZN6CGauss9iItemSlotEv"];
  var _weapon_rpg = Module["_weapon_rpg"] = asm["_weapon_rpg"];
  var __ZN14CSatchelCharge11BounceSoundEv = Module["__ZN14CSatchelCharge11BounceSoundEv"] = asm["__ZN14CSatchelCharge11BounceSoundEv"];
  var __Z11HUD_GetRectv = Module["__Z11HUD_GetRectv"] = asm["__Z11HUD_GetRectv"];
  var __ZN12CBaseMonster9FindCoverE6VectorS0_ff = Module["__ZN12CBaseMonster9FindCoverE6VectorS0_ff"] = asm["__ZN12CBaseMonster9FindCoverE6VectorS0_ff"];
  var __ZN14CBaseAnimating15GetAutomovementER6VectorS1_f = Module["__ZN14CBaseAnimating15GetAutomovementER6VectorS1_f"] = asm["__ZN14CBaseAnimating15GetAutomovementER6VectorS1_f"];
  var __ZN5CHgun10WeaponIdleEv = Module["__ZN5CHgun10WeaponIdleEv"] = asm["__ZN5CHgun10WeaponIdleEv"];
  var __Z10READ_SHORTv = Module["__Z10READ_SHORTv"] = asm["__Z10READ_SHORTv"];
  var __Z11IN_Shutdownv = Module["__Z11IN_Shutdownv"] = asm["__Z11IN_Shutdownv"];
  var __ZN12CBaseMonster12StartMonsterEv = Module["__ZN12CBaseMonster12StartMonsterEv"] = asm["__ZN12CBaseMonster12StartMonsterEv"];
  var __ZN11CHudMessage19MessageScanNextCharEv = Module["__ZN11CHudMessage19MessageScanNextCharEv"] = asm["__ZN11CHudMessage19MessageScanNextCharEv"];
  var __Z16ClearMultiDamagev = Module["__Z16ClearMultiDamagev"] = asm["__Z16ClearMultiDamagev"];
  var __Z17CAM_PitchDownDownv = Module["__Z17CAM_PitchDownDownv"] = asm["__Z17CAM_PitchDownDownv"];
  var __ZN6CGlock9GlockFireEffi = Module["__ZN6CGlock9GlockFireEffi"] = asm["__ZN6CGlock9GlockFireEffi"];
  var __ZN14CBaseAnimating17ResetSequenceInfoEv = Module["__ZN14CBaseAnimating17ResetSequenceInfoEv"] = asm["__ZN14CBaseAnimating17ResetSequenceInfoEv"];
  var __ZN12CBaseMonster11FInViewConeEP11CBaseEntity = Module["__ZN12CBaseMonster11FInViewConeEP11CBaseEntity"] = asm["__ZN12CBaseMonster11FInViewConeEP11CBaseEntity"];
  var __Z14V_CalcViewRollP12ref_params_s = Module["__Z14V_CalcViewRollP12ref_params_s"] = asm["__Z14V_CalcViewRollP12ref_params_s"];
  var __ZN15CHudTextMessageD0Ev = Module["__ZN15CHudTextMessageD0Ev"] = asm["__ZN15CHudTextMessageD0Ev"];
  var __Z12R_StudioInitv = Module["__Z12R_StudioInitv"] = asm["__Z12R_StudioInitv"];
  var __Z7U_Srandj = Module["__Z7U_Srandj"] = asm["__Z7U_Srandj"];
  var __ZN11CBaseEntity13GetNextTargetEv = Module["__ZN11CBaseEntity13GetNextTargetEv"] = asm["__ZN11CBaseEntity13GetNextTargetEv"];
  var __Z13stub_SetModelP7edict_sPKc = Module["__Z13stub_SetModelP7edict_sPKc"] = asm["__Z13stub_SetModelP7edict_sPKc"];
  var __ZN12CBaseMonster10ISoundMaskEv = Module["__ZN12CBaseMonster10ISoundMaskEv"] = asm["__ZN12CBaseMonster10ISoundMaskEv"];
  var __ZN12CBaseMonster18HearingSensitivityEv = Module["__ZN12CBaseMonster18HearingSensitivityEv"] = asm["__ZN12CBaseMonster18HearingSensitivityEv"];
  var __ZN8CShotgun11GetItemInfoEP8ItemInfo = Module["__ZN8CShotgun11GetItemInfoEP8ItemInfo"] = asm["__ZN8CShotgun11GetItemInfoEP8ItemInfo"];
  var __ZN8CHudAmmo18MsgFunc_AmmoPickupEPKciPv = Module["__ZN8CHudAmmo18MsgFunc_AmmoPickupEPKciPv"] = asm["__ZN8CHudAmmo18MsgFunc_AmmoPickupEPKciPv"];
  var __Z16CAM_ToggleSnaptov = Module["__Z16CAM_ToggleSnaptov"] = asm["__Z16CAM_ToggleSnaptov"];
  var __ZN20CStudioModelRenderer19StudioCalcRotationsEPA3_fPA4_fP16mstudioseqdesc_tP13mstudioanim_tf = Module["__ZN20CStudioModelRenderer19StudioCalcRotationsEPA3_fPA4_fP16mstudioseqdesc_tP13mstudioanim_tf"] = asm["__ZN20CStudioModelRenderer19StudioCalcRotationsEPA3_fPA4_fP16mstudioseqdesc_tP13mstudioanim_tf"];
  var _EV_FireMP5 = Module["_EV_FireMP5"] = asm["_EV_FireMP5"];
  var __ZN11CBasePlayer10IsSneakingEv = Module["__ZN11CBasePlayer10IsSneakingEv"] = asm["__ZN11CBasePlayer10IsSneakingEv"];
  var __ZN11CHudMessage10MessageAddEPKcf = Module["__ZN11CHudMessage10MessageAddEPKcf"] = asm["__ZN11CHudMessage10MessageAddEPKcf"];
  var _PM_InWater = Module["_PM_InWater"] = asm["_PM_InWater"];
  var __Z15CL_AdjustAnglesfPf = Module["__Z15CL_AdjustAnglesfPf"] = asm["__Z15CL_AdjustAnglesfPf"];
  var __Z15__CmdFunc_Slot3v = Module["__Z15__CmdFunc_Slot3v"] = asm["__Z15__CmdFunc_Slot3v"];
  var __Z18stub_PrecacheEventiPKc = Module["__Z18stub_PrecacheEventiPKc"] = asm["__Z18stub_PrecacheEventiPKc"];
  var __ZN11CBaseEntity10SUB_RemoveEv = Module["__ZN11CBaseEntity10SUB_RemoveEv"] = asm["__ZN11CBaseEntity10SUB_RemoveEv"];
  var __Z10IN_GraphUpv = Module["__Z10IN_GraphUpv"] = asm["__Z10IN_GraphUpv"];
  var __ZN13CHudStatusBar17ParseStatusStringEi = Module["__ZN13CHudStatusBar17ParseStatusStringEi"] = asm["__ZN13CHudStatusBar17ParseStatusStringEi"];
  var __Z15CAM_PitchDownUpv = Module["__Z15CAM_PitchDownUpv"] = asm["__Z15CAM_PitchDownUpv"];
  var __ZN15CBasePlayerItem9iItemSlotEv = Module["__ZN15CBasePlayerItem9iItemSlotEv"] = asm["__ZN15CBasePlayerItem9iItemSlotEv"];
  var __ZN20CStudioModelRenderer21StudioCalcAttachmentsEv = Module["__ZN20CStudioModelRenderer21StudioCalcAttachmentsEv"] = asm["__ZN20CStudioModelRenderer21StudioCalcAttachmentsEv"];
  var __ZN6CGauss5SpawnEv = Module["__ZN6CGauss5SpawnEv"] = asm["__ZN6CGauss5SpawnEv"];
  var __Z13DrawUtfStringiiiPciii = Module["__Z13DrawUtfStringiiiPciii"] = asm["__Z13DrawUtfStringiiiPciii"];
  var __Z20HUD_WeaponsPostThinkP13local_state_sS0_P9usercmd_sdj = Module["__Z20HUD_WeaponsPostThinkP13local_state_sS0_P9usercmd_sdj"] = asm["__Z20HUD_WeaponsPostThinkP13local_state_sS0_P9usercmd_sdj"];
  var __ZN11CBasePlayer6KilledEP9entvars_si = Module["__ZN11CBasePlayer6KilledEP9entvars_si"] = asm["__ZN11CBasePlayer6KilledEP9entvars_si"];
  var __ZN11CBaseEntity10BloodColorEv = Module["__ZN11CBaseEntity10BloodColorEv"] = asm["__ZN11CBaseEntity10BloodColorEv"];
  var __ZN4CMP56DeployEv = Module["__ZN4CMP56DeployEv"] = asm["__ZN4CMP56DeployEv"];
  var __Z7KB_Initv = Module["__Z7KB_Initv"] = asm["__Z7KB_Initv"];
  var __Z19EV_HLDM_CheckTraceriPfS_S_S_iiPi = Module["__Z19EV_HLDM_CheckTraceriPfS_S_S_iiPi"] = asm["__Z19EV_HLDM_CheckTraceriPfS_S_S_iiPi"];
  var __ZN12CBaseMonster13GetIdealStateEv = Module["__ZN12CBaseMonster13GetIdealStateEv"] = asm["__ZN12CBaseMonster13GetIdealStateEv"];
  var _weapon_tripmine = Module["_weapon_tripmine"] = asm["_weapon_tripmine"];
  var __ZN9CCrossbow5SpawnEv = Module["__ZN9CCrossbow5SpawnEv"] = asm["__ZN9CCrossbow5SpawnEv"];
  var __Z11CAM_OutDownv = Module["__Z11CAM_OutDownv"] = asm["__Z11CAM_OutDownv"];
  var __Z15VectorTransformPKfPA4_fPf = Module["__Z15VectorTransformPKfPA4_fPf"] = asm["__Z15VectorTransformPKfPA4_fPf"];
  var _IN_ClientLookEvent = Module["_IN_ClientLookEvent"] = asm["_IN_ClientLookEvent"];
  var __ZN9CHudTrain7VidInitEv = Module["__ZN9CHudTrain7VidInitEv"] = asm["__ZN9CHudTrain7VidInitEv"];
  var __ZN4CRpg13PrimaryAttackEv = Module["__ZN4CRpg13PrimaryAttackEv"] = asm["__ZN4CRpg13PrimaryAttackEv"];
  var __ZN11CBasePlayer12ResetAutoaimEv = Module["__ZN11CBasePlayer12ResetAutoaimEv"] = asm["__ZN11CBasePlayer12ResetAutoaimEv"];
  var _IN_Accumulate = Module["_IN_Accumulate"] = asm["_IN_Accumulate"];
  var __Z15__CmdFunc_Slot7v = Module["__Z15__CmdFunc_Slot7v"] = asm["__Z15__CmdFunc_Slot7v"];
  var __ZN14CBaseAnimating15GetBonePositionEiR6VectorS1_ = Module["__ZN14CBaseAnimating15GetBonePositionEiR6VectorS1_"] = asm["__ZN14CBaseAnimating15GetBonePositionEiR6VectorS1_"];
  var __ZN8CGrenade12ShootContactEP9entvars_s6VectorS2_ = Module["__ZN8CGrenade12ShootContactEP9entvars_s6VectorS2_"] = asm["__ZN8CGrenade12ShootContactEP9entvars_s6VectorS2_"];
  var __ZN8CHudBase7VidInitEv = Module["__ZN8CHudBase7VidInitEv"] = asm["__ZN8CHudBase7VidInitEv"];
  var __ZN11CBaseEntity10ObjectCapsEv = Module["__ZN11CBaseEntity10ObjectCapsEv"] = asm["__ZN11CBaseEntity10ObjectCapsEv"];
  var __Z12COM_FileBasePKcPc = Module["__Z12COM_FileBasePKcPc"] = asm["__Z12COM_FileBasePKcPc"];
  var __ZN12CHandGrenade10CanHolsterEv = Module["__ZN12CHandGrenade10CanHolsterEv"] = asm["__ZN12CHandGrenade10CanHolsterEv"];
  var __Z19EV_HLDM_FireBulletsiPfS_S_iS_S_fiiPiff = Module["__Z19EV_HLDM_FireBulletsiPfS_S_iS_S_fiiPiff"] = asm["__Z19EV_HLDM_FireBulletsiPfS_S_iS_S_fiiPiff"];
  var _Distance = Module["_Distance"] = asm["_Distance"];
  var __ZN11CBaseEntity10IntersectsEPS_ = Module["__ZN11CBaseEntity10IntersectsEPS_"] = asm["__ZN11CBaseEntity10IntersectsEPS_"];
  var __VectorSubtract = Module["__VectorSubtract"] = asm["__VectorSubtract"];
  var __ZN9CCrossbow13PrimaryAttackEv = Module["__ZN9CCrossbow13PrimaryAttackEv"] = asm["__ZN9CCrossbow13PrimaryAttackEv"];
  var __Z15CAM_EndDistancev = Module["__Z15CAM_EndDistancev"] = asm["__Z15CAM_EndDistancev"];
  var __Z19__MsgFunc_CurWeaponPKciPv = Module["__Z19__MsgFunc_CurWeaponPKciPv"] = asm["__Z19__MsgFunc_CurWeaponPKciPv"];
  var __Z8IN_UseUpv = Module["__Z8IN_UseUpv"] = asm["__Z8IN_UseUpv"];
  var __Z14V_CalcGunAngleP12ref_params_s = Module["__Z14V_CalcGunAngleP12ref_params_s"] = asm["__Z14V_CalcGunAngleP12ref_params_s"];
  var __ZN11CBaseEntity12FBecomeProneEv = Module["__ZN11CBaseEntity12FBecomeProneEv"] = asm["__ZN11CBaseEntity12FBecomeProneEv"];
  var __Z10CAM_InDownv = Module["__Z10CAM_InDownv"] = asm["__Z10CAM_InDownv"];
  var __ZN11CHudSayText15MsgFunc_SayTextEPKciPv = Module["__ZN11CHudSayText15MsgFunc_SayTextEPKciPv"] = asm["__ZN11CHudSayText15MsgFunc_SayTextEPKciPv"];
  var __Z11DamageDecalP11CBaseEntityi = Module["__Z11DamageDecalP11CBaseEntityi"] = asm["__Z11DamageDecalP11CBaseEntityi"];
  var __ZN10CGaussAmmo7AddAmmoEP11CBaseEntity = Module["__ZN10CGaussAmmo7AddAmmoEP11CBaseEntity"] = asm["__ZN10CGaussAmmo7AddAmmoEP11CBaseEntity"];
  var __ZN12CBaseMonster10AlertSoundEv = Module["__ZN12CBaseMonster10AlertSoundEv"] = asm["__ZN12CBaseMonster10AlertSoundEv"];
  var __ZN8CHudMOTD4DrawEf = Module["__ZN8CHudMOTD4DrawEf"] = asm["__ZN8CHudMOTD4DrawEf"];
  var __Z11DrawAmmoBarP6WEAPONiiii = Module["__Z11DrawAmmoBarP6WEAPONiiii"] = asm["__Z11DrawAmmoBarP6WEAPONiiii"];
  var _NormalizeAngles = Module["_NormalizeAngles"] = asm["_NormalizeAngles"];
  var __ZN12CBaseMonster9PainSoundEv = Module["__ZN12CBaseMonster9PainSoundEv"] = asm["__ZN12CBaseMonster9PainSoundEv"];
  var __ZN15CBasePlayerItem9CanDeployEv = Module["__ZN15CBasePlayerItem9CanDeployEv"] = asm["__ZN15CBasePlayerItem9CanDeployEv"];
  var __ZN7CSqueak11GetItemInfoEP8ItemInfo = Module["__ZN7CSqueak11GetItemInfoEP8ItemInfo"] = asm["__ZN7CSqueak11GetItemInfoEP8ItemInfo"];
  var _PM_ReduceTimers = Module["_PM_ReduceTimers"] = asm["_PM_ReduceTimers"];
  var __ZN20CStudioModelRenderer16StudioSetupBonesEv = Module["__ZN20CStudioModelRenderer16StudioSetupBonesEv"] = asm["__ZN20CStudioModelRenderer16StudioSetupBonesEv"];
  var __ZN12CBaseMonster16BestVisibleEnemyEv = Module["__ZN12CBaseMonster16BestVisibleEnemyEv"] = asm["__ZN12CBaseMonster16BestVisibleEnemyEv"];
  var __ZN11CHudSayText12SayTextPrintEPKcii = Module["__ZN11CHudSayText12SayTextPrintEPKcii"] = asm["__ZN11CHudSayText12SayTextPrintEPKcii"];
  var _PM_ShowClipBox = Module["_PM_ShowClipBox"] = asm["_PM_ShowClipBox"];
  var __ZN20CStudioModelRenderer20StudioSetUpTransformEi = Module["__ZN20CStudioModelRenderer20StudioSetUpTransformEi"] = asm["__ZN20CStudioModelRenderer20StudioSetUpTransformEi"];
  var __ZN8CHudAmmo13UserCmd_CloseEv = Module["__ZN8CHudAmmo13UserCmd_CloseEv"] = asm["__ZN8CHudAmmo13UserCmd_CloseEv"];
  var __ZN14CHudScoreboard11InitHUDDataEv = Module["__ZN14CHudScoreboard11InitHUDDataEv"] = asm["__ZN14CHudScoreboard11InitHUDDataEv"];
  var __ZN14CSatchelCharge8PrecacheEv = Module["__ZN14CSatchelCharge8PrecacheEv"] = asm["__ZN14CSatchelCharge8PrecacheEv"];
  var __ZN15CBasePlayerItem10CanHolsterEv = Module["__ZN15CBasePlayerItem10CanHolsterEv"] = asm["__ZN15CBasePlayerItem10CanHolsterEv"];
  var __ZN6CGauss7HolsterEi = Module["__ZN6CGauss7HolsterEi"] = asm["__ZN6CGauss7HolsterEi"];
  var __ZN15CBasePlayerItem12ItemPreFrameEv = Module["__ZN15CBasePlayerItem12ItemPreFrameEv"] = asm["__ZN15CBasePlayerItem12ItemPreFrameEv"];
  var __ZN12CBaseMonster13FGetNodeRouteE6Vector = Module["__ZN12CBaseMonster13FGetNodeRouteE6Vector"] = asm["__ZN12CBaseMonster13FGetNodeRouteE6Vector"];
  var _HUD_VidInit = Module["_HUD_VidInit"] = asm["_HUD_VidInit"];
  var __Z10SpawnBlood6Vectorif = Module["__Z10SpawnBlood6Vectorif"] = asm["__Z10SpawnBlood6Vectorif"];
  var _PM_ResetStuckOffsets = Module["_PM_ResetStuckOffsets"] = asm["_PM_ResetStuckOffsets"];
  var __ZN12CBaseMonster17SetSequenceByNameEPc = Module["__ZN12CBaseMonster17SetSequenceByNameEPc"] = asm["__ZN12CBaseMonster17SetSequenceByNameEPc"];
  var __ZN20CStudioModelRenderer17StudioRenderModelEv = Module["__ZN20CStudioModelRenderer17StudioRenderModelEv"] = asm["__ZN20CStudioModelRenderer17StudioRenderModelEv"];
  var __ZN13CHudSpectator11ToggleInsetEb = Module["__ZN13CHudSpectator11ToggleInsetEb"] = asm["__ZN13CHudSpectator11ToggleInsetEb"];
  var __ZN9CTripmine12UseDecrementEv = Module["__ZN9CTripmine12UseDecrementEv"] = asm["__ZN9CTripmine12UseDecrementEv"];
  var _Initialize = Module["_Initialize"] = asm["_Initialize"];
  var __Z16CAM_EndMouseMovev = Module["__Z16CAM_EndMouseMovev"] = asm["__Z16CAM_EndMouseMovev"];
  var __ZN15HistoryResource15DrawAmmoHistoryEf = Module["__ZN15HistoryResource15DrawAmmoHistoryEf"] = asm["__ZN15HistoryResource15DrawAmmoHistoryEf"];
  var __ZN4CHudD2Ev = Module["__ZN4CHudD2Ev"] = asm["__ZN4CHudD2Ev"];
  var __ZN12CHandGrenade12UseDecrementEv = Module["__ZN12CHandGrenade12UseDecrementEv"] = asm["__ZN12CHandGrenade12UseDecrementEv"];
  var __ZN11CBaseToggle7RestoreER8CRestore = Module["__ZN11CBaseToggle7RestoreER8CRestore"] = asm["__ZN11CBaseToggle7RestoreER8CRestore"];
  var __Z9CL_IsDeadv = Module["__Z9CL_IsDeadv"] = asm["__Z9CL_IsDeadv"];
  var __Z15__MsgFunc_FeignPKciPv = Module["__Z15__MsgFunc_FeignPKciPv"] = asm["__Z15__MsgFunc_FeignPKciPv"];
  var __ZN17CBasePlayerWeapon16AddSecondaryAmmoEiPci = Module["__ZN17CBasePlayerWeapon16AddSecondaryAmmoEiPci"] = asm["__ZN17CBasePlayerWeapon16AddSecondaryAmmoEiPci"];
  var __ZN11CBasePlayer20CheckTimeBasedDamageEv = Module["__ZN11CBasePlayer20CheckTimeBasedDamageEv"] = asm["__ZN11CBasePlayer20CheckTimeBasedDamageEv"];
  var __ZN11CBaseEntity11DamageDecalEi = Module["__ZN11CBaseEntity11DamageDecalEi"] = asm["__ZN11CBaseEntity11DamageDecalEi"];
  var __ZN8CHudMOTDD0Ev = Module["__ZN8CHudMOTDD0Ev"] = asm["__ZN8CHudMOTDD0Ev"];
  var __Z20UTIL_FindEntityInMapPcPfS0_ = Module["__Z20UTIL_FindEntityInMapPcPfS0_"] = asm["__Z20UTIL_FindEntityInMapPcPfS0_"];
  var __ZN11CBaseEntity8FVisibleERK6Vector = Module["__ZN11CBaseEntity8FVisibleERK6Vector"] = asm["__ZN11CBaseEntity8FVisibleERK6Vector"];
  var __Z25AddAmmoNameToAmmoRegistryPKc = Module["__Z25AddAmmoNameToAmmoRegistryPKc"] = asm["__Z25AddAmmoNameToAmmoRegistryPKc"];
  var _PM_InitTextureTypes = Module["_PM_InitTextureTypes"] = asm["_PM_InitTextureTypes"];
  var __ZN8CHudAmmo13UserCmd_Slot5Ev = Module["__ZN8CHudAmmo13UserCmd_Slot5Ev"] = asm["__ZN8CHudAmmo13UserCmd_Slot5Ev"];
  var __ZN12CHandGrenade11GetItemInfoEP8ItemInfo = Module["__ZN12CHandGrenade11GetItemInfoEP8ItemInfo"] = asm["__ZN12CHandGrenade11GetItemInfoEP8ItemInfo"];
  var __ZN4CHud12MsgFunc_LogoEPKciPv = Module["__ZN4CHud12MsgFunc_LogoEPKciPv"] = asm["__ZN4CHud12MsgFunc_LogoEPKciPv"];
  var _PM_WaterMove = Module["_PM_WaterMove"] = asm["_PM_WaterMove"];
  var __Z17__MsgFunc_InitHUDPKciPv = Module["__Z17__MsgFunc_InitHUDPKciPv"] = asm["__Z17__MsgFunc_InitHUDPKciPv"];
  var __ZN13CCrossbowAmmo5SpawnEv = Module["__ZN13CCrossbowAmmo5SpawnEv"] = asm["__ZN13CCrossbowAmmo5SpawnEv"];
  var __ZN8CHudAmmo13UserCmd_Slot3Ev = Module["__ZN8CHudAmmo13UserCmd_Slot3Ev"] = asm["__ZN8CHudAmmo13UserCmd_Slot3Ev"];
  var __ZN10CGaussAmmo8PrecacheEv = Module["__ZN10CGaussAmmo8PrecacheEv"] = asm["__ZN10CGaussAmmo8PrecacheEv"];
  var __ZN12CBaseMonster7IsAliveEv = Module["__ZN12CBaseMonster7IsAliveEv"] = asm["__ZN12CBaseMonster7IsAliveEv"];
  var __ZN12CBaseMonster12FTriangulateERK6VectorS2_fP11CBaseEntityPS0_ = Module["__ZN12CBaseMonster12FTriangulateERK6VectorS2_fP11CBaseEntityPS0_"] = asm["__ZN12CBaseMonster12FTriangulateERK6VectorS2_fP11CBaseEntityPS0_"];
  var __ZN15CBasePlayerItem4KillEv = Module["__ZN15CBasePlayerItem4KillEv"] = asm["__ZN15CBasePlayerItem4KillEv"];
  var __Z12AlertMessage10ALERT_TYPEPcz = Module["__Z12AlertMessage10ALERT_TYPEPcz"] = asm["__Z12AlertMessage10ALERT_TYPEPcz"];
  var __Z9IN_DuckUpv = Module["__Z9IN_DuckUpv"] = asm["__Z9IN_DuckUpv"];
  var __ZN5CEgon6DeployEv = Module["__ZN5CEgon6DeployEv"] = asm["__ZN5CEgon6DeployEv"];
  var __ZN13CHudSpectator4DrawEf = Module["__ZN13CHudSpectator4DrawEf"] = asm["__ZN13CHudSpectator4DrawEf"];
  var __ZN11CBasePlayer8PreThinkEv = Module["__ZN11CBasePlayer8PreThinkEv"] = asm["__ZN11CBasePlayer8PreThinkEv"];
  var __ZN11CBaseEntity14GetToggleStateEv = Module["__ZN11CBaseEntity14GetToggleStateEv"] = asm["__ZN11CBaseEntity14GetToggleStateEv"];
  var _PM_CheckStuck = Module["_PM_CheckStuck"] = asm["_PM_CheckStuck"];
  var _EV_FireRpg = Module["_EV_FireRpg"] = asm["_EV_FireRpg"];
  var __ZN15CHudDeathNotice16MsgFunc_DeathMsgEPKciPv = Module["__ZN15CHudDeathNotice16MsgFunc_DeathMsgEPKciPv"] = asm["__ZN15CHudDeathNotice16MsgFunc_DeathMsgEPKciPv"];
  var __Z11GetClassPtrI15CMP5AmmoGrenadeEPT_S2_ = Module["__Z11GetClassPtrI15CMP5AmmoGrenadeEPT_S2_"] = asm["__Z11GetClassPtrI15CMP5AmmoGrenadeEPT_S2_"];
  var __ZN11CHudSayTextD0Ev = Module["__ZN11CHudSayTextD0Ev"] = asm["__ZN11CHudSayTextD0Ev"];
  var __ZN11CBaseEntity7BlockedEPS_ = Module["__ZN11CBaseEntity7BlockedEPS_"] = asm["__ZN11CBaseEntity7BlockedEPS_"];
  var __Z13SpectatorHelpv = Module["__Z13SpectatorHelpv"] = asm["__Z13SpectatorHelpv"];
  var __Z11GetClassPtrI5CEgonEPT_S2_ = Module["__Z11GetClassPtrI5CEgonEPT_S2_"] = asm["__Z11GetClassPtrI5CEgonEPT_S2_"];
  var __Z15__CmdFunc_Slot2v = Module["__Z15__CmdFunc_Slot2v"] = asm["__Z15__CmdFunc_Slot2v"];
  var __ZN8CHudMenu14SelectMenuItemEi = Module["__ZN8CHudMenu14SelectMenuItemEi"] = asm["__ZN8CHudMenu14SelectMenuItemEi"];
  var _EV_Crowbar = Module["_EV_Crowbar"] = asm["_EV_Crowbar"];
  var __ZN13CHudSpectator25SetSpectatorStartPositionEv = Module["__ZN13CHudSpectator25SetSpectatorStartPositionEv"] = asm["__ZN13CHudSpectator25SetSpectatorStartPositionEv"];
  var __ZN11CBaseEntity11TraceAttackEP9entvars_sf6VectorP11TraceResulti = Module["__ZN11CBaseEntity11TraceAttackEP9entvars_sf6VectorP11TraceResulti"] = asm["__ZN11CBaseEntity11TraceAttackEP9entvars_sf6VectorP11TraceResulti"];
  var __ZN4CHud17DrawDarkRectangleEiiii = Module["__ZN4CHud17DrawDarkRectangleEiiii"] = asm["__ZN4CHud17DrawDarkRectangleEiiii"];
  var __Z11GetClassPtrI8CCrowbarEPT_S2_ = Module["__Z11GetClassPtrI8CCrowbarEPT_S2_"] = asm["__Z11GetClassPtrI8CCrowbarEPT_S2_"];
  var __Z20__MsgFunc_StatusTextPKciPv = Module["__Z20__MsgFunc_StatusTextPKciPv"] = asm["__Z20__MsgFunc_StatusTextPKciPv"];
  var _IN_ClientMoveEvent = Module["_IN_ClientMoveEvent"] = asm["_IN_ClientMoveEvent"];
  var __ZN11CBaseToggle8GetDelayEv = Module["__ZN11CBaseToggle8GetDelayEv"] = asm["__ZN11CBaseToggle8GetDelayEv"];
  var __ZN10CHudHealth11UpdateTilesEfl = Module["__ZN10CHudHealth11UpdateTilesEfl"] = asm["__ZN10CHudHealth11UpdateTilesEfl"];
  var __ZN8CSatchel6DeployEv = Module["__ZN8CSatchel6DeployEv"] = asm["__ZN8CSatchel6DeployEv"];
  var _PM_Duck = Module["_PM_Duck"] = asm["_PM_Duck"];
  var __ZN14CHudScoreboard4InitEv = Module["__ZN14CHudScoreboard4InitEv"] = asm["__ZN14CHudScoreboard4InitEv"];
  var __ZN8CHudMenu4DrawEf = Module["__ZN8CHudMenu4DrawEf"] = asm["__ZN8CHudMenu4DrawEf"];
  var __ZN13CHudSpectator20DrawOverviewEntitiesEv = Module["__ZN13CHudSpectator20DrawOverviewEntitiesEv"] = asm["__ZN13CHudSpectator20DrawOverviewEntitiesEv"];
  var __ZN12CHudOverview11InitHUDDataEv = Module["__ZN12CHudOverview11InitHUDDataEv"] = asm["__ZN12CHudOverview11InitHUDDataEv"];
  var __ZN12CBaseMonster9StartTaskEP6Task_t = Module["__ZN12CBaseMonster9StartTaskEP6Task_t"] = asm["__ZN12CBaseMonster9StartTaskEP6Task_t"];
  var _PM_DrawPhysEntBBox = Module["_PM_DrawPhysEntBBox"] = asm["_PM_DrawPhysEntBBox"];
  var __ZN11CHudMessage4DrawEf = Module["__ZN11CHudMessage4DrawEf"] = asm["__ZN11CHudMessage4DrawEf"];
  var __VectorAdd = Module["__VectorAdd"] = asm["__VectorAdd"];
  var __Z11GetClassPtrI12CMP5AmmoClipEPT_S2_ = Module["__Z11GetClassPtrI12CMP5AmmoClipEPT_S2_"] = asm["__Z11GetClassPtrI12CMP5AmmoClipEPT_S2_"];
  var _PM_CheckFalling = Module["_PM_CheckFalling"] = asm["_PM_CheckFalling"];
  var __ZN11CBasePlayer13StartSneakingEv = Module["__ZN11CBasePlayer13StartSneakingEv"] = asm["__ZN11CBasePlayer13StartSneakingEv"];
  var __Z13EV_EjectBrassPfS_fii = Module["__Z13EV_EjectBrassPfS_fii"] = asm["__Z13EV_EjectBrassPfS_fii"];
  var __ZN8CHudMenu4InitEv = Module["__ZN8CHudMenu4InitEv"] = asm["__ZN8CHudMenu4InitEv"];
  var __Z26V_GetDirectedChasePositionP11cl_entity_sS0_PfS1_ = Module["__Z26V_GetDirectedChasePositionP11cl_entity_sS0_PfS1_"] = asm["__Z26V_GetDirectedChasePositionP11cl_entity_sS0_PfS1_"];
  var __ZN11CBasePlayer10ObjectCapsEv = Module["__ZN11CBasePlayer10ObjectCapsEv"] = asm["__ZN11CBasePlayer10ObjectCapsEv"];
  var __ZN11CHudBatteryD0Ev = Module["__ZN11CHudBatteryD0Ev"] = asm["__ZN11CHudBatteryD0Ev"];
  var __Z10IN_MLookUpv = Module["__Z10IN_MLookUpv"] = asm["__Z10IN_MLookUpv"];
  var __ZN9CCrossbow6DeployEv = Module["__ZN9CCrossbow6DeployEv"] = asm["__ZN9CCrossbow6DeployEv"];
  var _PM_LadderMove = Module["_PM_LadderMove"] = asm["_PM_LadderMove"];
  var __ZN9CHudTrain4DrawEf = Module["__ZN9CHudTrain4DrawEf"] = asm["__ZN9CHudTrain4DrawEf"];
  var __Z16IN_MoverightDownv = Module["__Z16IN_MoverightDownv"] = asm["__Z16IN_MoverightDownv"];
  var _EV_SpinGauss = Module["_EV_SpinGauss"] = asm["_EV_SpinGauss"];
  var __ZN4CRpg5SpawnEv = Module["__ZN4CRpg5SpawnEv"] = asm["__ZN4CRpg5SpawnEv"];
  var __ZN6CGauss8PrecacheEv = Module["__ZN6CGauss8PrecacheEv"] = asm["__ZN6CGauss8PrecacheEv"];
  var _PM_PushEntity = Module["_PM_PushEntity"] = asm["_PM_PushEntity"];
  var __ZN13CHudSpectator14FindNextPlayerEb = Module["__ZN13CHudSpectator14FindNextPlayerEb"] = asm["__ZN13CHudSpectator14FindNextPlayerEb"];
  var __ZN13CHudStatusBar4DrawEf = Module["__ZN13CHudStatusBar4DrawEf"] = asm["__ZN13CHudStatusBar4DrawEf"];
  var __ZN4CHud16UpdateClientDataEP13client_data_sf = Module["__ZN4CHud16UpdateClientDataEP13client_data_sf"] = asm["__ZN4CHud16UpdateClientDataEP13client_data_sf"];
  var __ZN10CHudGeiger7VidInitEv = Module["__ZN10CHudGeiger7VidInitEv"] = asm["__ZN10CHudGeiger7VidInitEv"];
  var __ZN5CHgun11AddToPlayerEP11CBasePlayer = Module["__ZN5CHgun11AddToPlayerEP11CBasePlayer"] = asm["__ZN5CHgun11AddToPlayerEP11CBasePlayer"];
  var __ZN11CBasePlayer16GetAutoaimVectorEf = Module["__ZN11CBasePlayer16GetAutoaimVectorEf"] = asm["__ZN11CBasePlayer16GetAutoaimVectorEf"];
  var __ZN11CHudMessage10MessageAddEP20client_textmessage_s = Module["__ZN11CHudMessage10MessageAddEP20client_textmessage_s"] = asm["__ZN11CHudMessage10MessageAddEP20client_textmessage_s"];
  var __ZN11CBaseEntity8IsPlayerEv = Module["__ZN11CBaseEntity8IsPlayerEv"] = asm["__ZN11CBaseEntity8IsPlayerEv"];
  var __Z13CAM_YawLeftUpv = Module["__Z13CAM_YawLeftUpv"] = asm["__Z13CAM_YawLeftUpv"];
  var __Z11GetClassPtrI10CGlockAmmoEPT_S2_ = Module["__Z11GetClassPtrI10CGlockAmmoEPT_S2_"] = asm["__Z11GetClassPtrI10CGlockAmmoEPT_S2_"];
  var __Z7DrawBariiiif = Module["__Z7DrawBariiiif"] = asm["__Z7DrawBariiiif"];
  var _HUD_TxferPredictionData = Module["_HUD_TxferPredictionData"] = asm["_HUD_TxferPredictionData"];
  var __ZN7CSqueak13PrimaryAttackEv = Module["__ZN7CSqueak13PrimaryAttackEv"] = asm["__ZN7CSqueak13PrimaryAttackEv"];
  var __ZN8CHudAmmo4DrawEf = Module["__ZN8CHudAmmo4DrawEf"] = asm["__ZN8CHudAmmo4DrawEf"];
  var __Z20EV_StopPreviousGaussi = Module["__Z20EV_StopPreviousGaussi"] = asm["__Z20EV_StopPreviousGaussi"];
  var __Z11IN_DuckDownv = Module["__Z11IN_DuckDownv"] = asm["__Z11IN_DuckDownv"];
  var __ZN15CBasePlayerAmmo11MaterializeEv = Module["__ZN15CBasePlayerAmmo11MaterializeEv"] = asm["__ZN15CBasePlayerAmmo11MaterializeEv"];
  var __ZN11CBaseEntity10BodyTargetERK6Vector = Module["__ZN11CBaseEntity10BodyTargetERK6Vector"] = asm["__ZN11CBaseEntity10BodyTargetERK6Vector"];
  var __ZN6CGlock10WeaponIdleEv = Module["__ZN6CGlock10WeaponIdleEv"] = asm["__ZN6CGlock10WeaponIdleEv"];
  var __ZN8CSatchel12AddDuplicateEP15CBasePlayerItem = Module["__ZN8CSatchel12AddDuplicateEP15CBasePlayerItem"] = asm["__ZN8CSatchel12AddDuplicateEP15CBasePlayerItem"];
  var __ZN11CBaseEntity21MySquadMonsterPointerEv = Module["__ZN11CBaseEntity21MySquadMonsterPointerEv"] = asm["__ZN11CBaseEntity21MySquadMonsterPointerEv"];
  var __ZN14CHudScoreboard8DeathMsgEii = Module["__ZN14CHudScoreboard8DeathMsgEii"] = asm["__ZN14CHudScoreboard8DeathMsgEii"];
  var __ZN5CEgon12UpdateEffectERK6VectorS2_f = Module["__ZN5CEgon12UpdateEffectERK6VectorS2_f"] = asm["__ZN5CEgon12UpdateEffectERK6VectorS2_f"];
  var __Z14IN_MoverightUpv = Module["__Z14IN_MoverightUpv"] = asm["__Z14IN_MoverightUpv"];
  var _PM_ClipVelocity = Module["_PM_ClipVelocity"] = asm["_PM_ClipVelocity"];
  var __Z15CAM_PitchUpDownv = Module["__Z15CAM_PitchUpDownv"] = asm["__Z15CAM_PitchUpDownv"];
  var __ZN11CBasePlayer10RenewItemsEv = Module["__ZN11CBasePlayer10RenewItemsEv"] = asm["__ZN11CBasePlayer10RenewItemsEv"];
  var __ZN11CBaseEntity10TakeHealthEfi = Module["__ZN11CBaseEntity10TakeHealthEfi"] = asm["__ZN11CBaseEntity10TakeHealthEfi"];
  var __ZN20CStudioModelRenderer17StudioRenderFinalEv = Module["__ZN20CStudioModelRenderer17StudioRenderFinalEv"] = asm["__ZN20CStudioModelRenderer17StudioRenderFinalEv"];
  var __ZN8CHudAmmo5ResetEv = Module["__ZN8CHudAmmo5ResetEv"] = asm["__ZN8CHudAmmo5ResetEv"];
  var __ZN4CRpg7HolsterEi = Module["__ZN4CRpg7HolsterEi"] = asm["__ZN4CRpg7HolsterEi"];
  var __ZN14CHudScoreboard11DrawPlayersEifiPc = Module["__ZN14CHudScoreboard11DrawPlayersEifiPc"] = asm["__ZN14CHudScoreboard11DrawPlayersEifiPc"];
  var __ZN12CBaseMonster12FindHintNodeEv = Module["__ZN12CBaseMonster12FindHintNodeEv"] = asm["__ZN12CBaseMonster12FindHintNodeEv"];
  var __ZN10CHudHealth12GetPainColorERiS0_S0_ = Module["__ZN10CHudHealth12GetPainColorERiS0_S0_"] = asm["__ZN10CHudHealth12GetPainColorERiS0_S0_"];
  var __ZN11CBaseEntity6KilledEP9entvars_si = Module["__ZN11CBaseEntity6KilledEP9entvars_si"] = asm["__ZN11CBaseEntity6KilledEP9entvars_si"];
  var __Z10IN_BreakUpv = Module["__Z10IN_BreakUpv"] = asm["__Z10IN_BreakUpv"];
  var _PM_SortTextures = Module["_PM_SortTextures"] = asm["_PM_SortTextures"];
  var __ZN12CBaseMonster17CheckMeleeAttack1Eff = Module["__ZN12CBaseMonster17CheckMeleeAttack1Eff"] = asm["__ZN12CBaseMonster17CheckMeleeAttack1Eff"];
  var _PM_Jump = Module["_PM_Jump"] = asm["_PM_Jump"];
  var __Z25StripEndNewlineFromStringPc = Module["__Z25StripEndNewlineFromStringPc"] = asm["__Z25StripEndNewlineFromStringPc"];
  var __Z12IN_SpeedDownv = Module["__Z12IN_SpeedDownv"] = asm["__Z12IN_SpeedDownv"];
  var __ZN11CHudSayText11InitHUDDataEv = Module["__ZN11CHudSayText11InitHUDDataEv"] = asm["__ZN11CHudSayText11InitHUDDataEv"];
  var __ZN5CEgon12CreateEffectEv = Module["__ZN5CEgon12CreateEffectEv"] = asm["__ZN5CEgon12CreateEffectEv"];
  var __ZN12CBaseMonster10BecomeDeadEv = Module["__ZN12CBaseMonster10BecomeDeadEv"] = asm["__ZN12CBaseMonster10BecomeDeadEv"];
  var __ZN8CHudAmmo13UserCmd_Slot1Ev = Module["__ZN8CHudAmmo13UserCmd_Slot1Ev"] = asm["__ZN8CHudAmmo13UserCmd_Slot1Ev"];
  var _PM_FlyMove = Module["_PM_FlyMove"] = asm["_PM_FlyMove"];
  var __ZN14CHudScoreboard18UserCmd_ShowScoresEv = Module["__ZN14CHudScoreboard18UserCmd_ShowScoresEv"] = asm["__ZN14CHudScoreboard18UserCmd_ShowScoresEv"];
  var __ZN14CBaseAnimating13GetAttachmentEiR6VectorS1_ = Module["__ZN14CBaseAnimating13GetAttachmentEiR6VectorS1_"] = asm["__ZN14CBaseAnimating13GetAttachmentEiR6VectorS1_"];
  var _IN_ActivateMouse = Module["_IN_ActivateMouse"] = asm["_IN_ActivateMouse"];
  var __ZN8CSatchel11AddToPlayerEP11CBasePlayer = Module["__ZN8CSatchel11AddToPlayerEP11CBasePlayer"] = asm["__ZN8CSatchel11AddToPlayerEP11CBasePlayer"];
  var __ZN10CHudGeiger14MsgFunc_GeigerEPKciPv = Module["__ZN10CHudGeiger14MsgFunc_GeigerEPKciPv"] = asm["__ZN10CHudGeiger14MsgFunc_GeigerEPKciPv"];
  var __ZN12CBaseMonster18GetStoppedActivityEv = Module["__ZN12CBaseMonster18GetStoppedActivityEv"] = asm["__ZN12CBaseMonster18GetStoppedActivityEv"];
  var __ZN5CHgun11GetItemInfoEP8ItemInfo = Module["__ZN5CHgun11GetItemInfoEP8ItemInfo"] = asm["__ZN5CHgun11GetItemInfoEP8ItemInfo"];
  var __ZN10CGlockAmmo5SpawnEv = Module["__ZN10CGlockAmmo5SpawnEv"] = asm["__ZN10CGlockAmmo5SpawnEv"];
  var __Z14HUD_SetLastOrgv = Module["__Z14HUD_SetLastOrgv"] = asm["__Z14HUD_SetLastOrgv"];
  var __ZN15CHudStatusIcons18MsgFunc_StatusIconEPKciPv = Module["__ZN15CHudStatusIcons18MsgFunc_StatusIconEPKciPv"] = asm["__ZN15CHudStatusIcons18MsgFunc_StatusIconEPKciPv"];
  var __ZN11CBaseEntity8ActivateEv = Module["__ZN11CBaseEntity8ActivateEv"] = asm["__ZN11CBaseEntity8ActivateEv"];
  var __ZN17CBasePlayerWeapon9CanDeployEv = Module["__ZN17CBasePlayerWeapon9CanDeployEv"] = asm["__ZN17CBasePlayerWeapon9CanDeployEv"];
  var __ZN4CHud6RedrawEfi = Module["__ZN4CHud6RedrawEfi"] = asm["__ZN4CHud6RedrawEfi"];
  var __ZN12CBaseMonster14FCanActiveIdleEv = Module["__ZN12CBaseMonster14FCanActiveIdleEv"] = asm["__ZN12CBaseMonster14FCanActiveIdleEv"];
  var __Z11GetClassPtrI9CTripmineEPT_S2_ = Module["__Z11GetClassPtrI9CTripmineEPT_S2_"] = asm["__Z11GetClassPtrI9CTripmineEPT_S2_"];
  var __Z9IN_LeftUpv = Module["__Z9IN_LeftUpv"] = asm["__Z9IN_LeftUpv"];
  var __ZN9CTripmine8PrecacheEv = Module["__ZN9CTripmine8PrecacheEv"] = asm["__ZN9CTripmine8PrecacheEv"];
  var __ZN12CBaseMonster16GetDeathActivityEv = Module["__ZN12CBaseMonster16GetDeathActivityEv"] = asm["__ZN12CBaseMonster16GetDeathActivityEv"];
  var __Z26__CmdFunc_CloseCommandMenuv = Module["__Z26__CmdFunc_CloseCommandMenuv"] = asm["__Z26__CmdFunc_CloseCommandMenuv"];
  var _PM_Accelerate = Module["_PM_Accelerate"] = asm["_PM_Accelerate"];
  var __Z17UTIL_ParticleLineP11CBasePlayerPfS1_fhhh = Module["__Z17UTIL_ParticleLineP11CBasePlayerPfS1_fhhh"] = asm["__Z17UTIL_ParticleLineP11CBasePlayerPfS1_fhhh"];
  var __ZN14CHudFlashlightD0Ev = Module["__ZN14CHudFlashlightD0Ev"] = asm["__ZN14CHudFlashlightD0Ev"];
  var __Z8CAM_InUpv = Module["__Z8CAM_InUpv"] = asm["__Z8CAM_InUpv"];
  var __Z11IN_Alt1Downv = Module["__Z11IN_Alt1Downv"] = asm["__Z11IN_Alt1Downv"];
  var __ZN11CBaseEntity7RestoreER8CRestore = Module["__ZN11CBaseEntity7RestoreER8CRestore"] = asm["__ZN11CBaseEntity7RestoreER8CRestore"];
  var _PM_Friction = Module["_PM_Friction"] = asm["_PM_Friction"];
  var __ZN20CStudioModelRenderer23StudioCalcBoneQuaterionEifP13mstudiobone_tP13mstudioanim_tPfS4_ = Module["__ZN20CStudioModelRenderer23StudioCalcBoneQuaterionEifP13mstudiobone_tP13mstudioanim_tPfS4_"] = asm["__ZN20CStudioModelRenderer23StudioCalcBoneQuaterionEifP13mstudiobone_tP13mstudioanim_tPfS4_"];
  var __ZN8CRpgAmmo8PrecacheEv = Module["__ZN8CRpgAmmo8PrecacheEv"] = asm["__ZN8CRpgAmmo8PrecacheEv"];
  var __ZN8CHudAmmo13UserCmd_Slot4Ev = Module["__ZN8CHudAmmo13UserCmd_Slot4Ev"] = asm["__ZN8CHudAmmo13UserCmd_Slot4Ev"];
  var __Z13IN_LookdownUpv = Module["__Z13IN_LookdownUpv"] = asm["__Z13IN_LookdownUpv"];
  var __ZN12CBaseMonster22BarnacleVictimReleasedEv = Module["__ZN12CBaseMonster22BarnacleVictimReleasedEv"] = asm["__ZN12CBaseMonster22BarnacleVictimReleasedEv"];
  var __ZN11CBasePlayer10IsOnLadderEv = Module["__ZN11CBasePlayer10IsOnLadderEv"] = asm["__ZN11CBasePlayer10IsOnLadderEv"];
  var __ZN7CSqueak5SpawnEv = Module["__ZN7CSqueak5SpawnEv"] = asm["__ZN7CSqueak5SpawnEv"];
  var __ZN5CEgon7HasAmmoEv = Module["__ZN5CEgon7HasAmmoEv"] = asm["__ZN5CEgon7HasAmmoEv"];
  var _AngleBetweenVectors = Module["_AngleBetweenVectors"] = asm["_AngleBetweenVectors"];
  var __Z19__MsgFunc_TeamScorePKciPv = Module["__Z19__MsgFunc_TeamScorePKciPv"] = asm["__Z19__MsgFunc_TeamScorePKciPv"];
  var __ZN17CBasePlayerWeapon13DefaultReloadEiifi = Module["__ZN17CBasePlayerWeapon13DefaultReloadEiifi"] = asm["__ZN17CBasePlayerWeapon13DefaultReloadEiifi"];
  var __ZN12CBaseMonster14MoveToLocationE8ActivityfRK6Vector = Module["__ZN12CBaseMonster14MoveToLocationE8ActivityfRK6Vector"] = asm["__ZN12CBaseMonster14MoveToLocationE8ActivityfRK6Vector"];
  var __ZN13CHudSpectator14LoadMapSpritesEv = Module["__ZN13CHudSpectator14LoadMapSpritesEv"] = asm["__ZN13CHudSpectator14LoadMapSpritesEv"];
  var __ZN10CBaseDelay7RestoreER8CRestore = Module["__ZN10CBaseDelay7RestoreER8CRestore"] = asm["__ZN10CBaseDelay7RestoreER8CRestore"];
  var __Z18__MsgFunc_TeamInfoPKciPv = Module["__Z18__MsgFunc_TeamInfoPKciPv"] = asm["__Z18__MsgFunc_TeamInfoPKciPv"];
  var __Z14IN_Attack2Downv = Module["__Z14IN_Attack2Downv"] = asm["__Z14IN_Attack2Downv"];
  var __ZN8CGrenade7ExplodeEP11TraceResulti = Module["__ZN8CGrenade7ExplodeEP11TraceResulti"] = asm["__ZN8CGrenade7ExplodeEP11TraceResulti"];
  var __Z13GetViewEntityv = Module["__Z13GetViewEntityv"] = asm["__Z13GetViewEntityv"];
  var __Z11GetClassPtrI4CRpgEPT_S2_ = Module["__Z11GetClassPtrI4CRpgEPT_S2_"] = asm["__Z11GetClassPtrI4CRpgEPT_S2_"];
  var __ZN4CHud14GetSpriteIndexEPKc = Module["__ZN4CHud14GetSpriteIndexEPKc"] = asm["__ZN4CHud14GetSpriteIndexEPKc"];
  var __ZN11CHudMessageD0Ev = Module["__ZN11CHudMessageD0Ev"] = asm["__ZN11CHudMessageD0Ev"];
  var __ZN12CBaseMonster16FCanCheckAttacksEv = Module["__ZN12CBaseMonster16FCanCheckAttacksEv"] = asm["__ZN12CBaseMonster16FCanCheckAttacksEv"];
  var __ZN20CStudioModelRenderer25StudioEstimateInterpolantEv = Module["__ZN20CStudioModelRenderer25StudioEstimateInterpolantEv"] = asm["__ZN20CStudioModelRenderer25StudioEstimateInterpolantEv"];
  var __ZN8CHudMOTD4InitEv = Module["__ZN8CHudMOTD4InitEv"] = asm["__ZN8CHudMOTD4InitEv"];
  var __ZN8CHudAmmo13UserCmd_Slot8Ev = Module["__ZN8CHudAmmo13UserCmd_Slot8Ev"] = asm["__ZN8CHudAmmo13UserCmd_Slot8Ev"];
  var __Z15VectorNormalizePf = Module["__Z15VectorNormalizePf"] = asm["__Z15VectorNormalizePf"];
  var __Z11CL_KeyStateP9kbutton_s = Module["__Z11CL_KeyStateP9kbutton_s"] = asm["__Z11CL_KeyStateP9kbutton_s"];
  var __ZN11CBaseEntity9AddPointsEii = Module["__ZN11CBaseEntity9AddPointsEii"] = asm["__ZN11CBaseEntity9AddPointsEii"];
  var __Z15Game_HookEventsv = Module["__Z15Game_HookEventsv"] = asm["__Z15Game_HookEventsv"];
  var __ZN8CGrenade6KilledEP9entvars_si = Module["__ZN8CGrenade6KilledEP9entvars_si"] = asm["__ZN8CGrenade6KilledEP9entvars_si"];
  var __ZN6CGauss9StartFireEv = Module["__ZN6CGauss9StartFireEv"] = asm["__ZN6CGauss9StartFireEv"];
  var __Z15__CmdFunc_Slot6v = Module["__Z15__CmdFunc_Slot6v"] = asm["__Z15__CmdFunc_Slot6v"];
  var __ZN8CSatchel9iItemSlotEv = Module["__ZN8CSatchel9iItemSlotEv"] = asm["__ZN8CSatchel9iItemSlotEv"];
  var __ZN17CBasePlayerWeapon16ShouldWeaponIdleEv = Module["__ZN17CBasePlayerWeapon16ShouldWeaponIdleEv"] = asm["__ZN17CBasePlayerWeapon16ShouldWeaponIdleEv"];
  var __Z10V_CalcRoll6VectorS_ff = Module["__Z10V_CalcRoll6VectorS_ff"] = asm["__Z10V_CalcRoll6VectorS_ff"];
  var __Z11UTIL_RemoveP11CBaseEntity = Module["__Z11UTIL_RemoveP11CBaseEntity"] = asm["__Z11UTIL_RemoveP11CBaseEntity"];
  var __ZN11CBaseEntity21SetObjectCollisionBoxEv = Module["__ZN11CBaseEntity21SetObjectCollisionBoxEv"] = asm["__ZN11CBaseEntity21SetObjectCollisionBoxEv"];
  var __ZN8CHudMenu7VidInitEv = Module["__ZN8CHudMenu7VidInitEv"] = asm["__ZN8CHudMenu7VidInitEv"];
  var __ZN11CBasePlayer10DeathSoundEv = Module["__ZN11CBasePlayer10DeathSoundEv"] = asm["__ZN11CBasePlayer10DeathSoundEv"];
  var __ZN17CBasePlayerWeapon6ReloadEv = Module["__ZN17CBasePlayerWeapon6ReloadEv"] = asm["__ZN17CBasePlayerWeapon6ReloadEv"];
  var _HUD_DrawTransparentTriangles = Module["_HUD_DrawTransparentTriangles"] = asm["_HUD_DrawTransparentTriangles"];
  var __Z16__MsgFunc_SetFOVPKciPv = Module["__Z16__MsgFunc_SetFOVPKciPv"] = asm["__Z16__MsgFunc_SetFOVPKciPv"];
  var __ZN10CHudGeiger4DrawEf = Module["__ZN10CHudGeiger4DrawEf"] = asm["__ZN10CHudGeiger4DrawEf"];
  var __ZN6CGlock11GetItemInfoEP8ItemInfo = Module["__ZN6CGlock11GetItemInfoEP8ItemInfo"] = asm["__ZN6CGlock11GetItemInfoEP8ItemInfo"];
  var _HUD_PlayerMoveTexture = Module["_HUD_PlayerMoveTexture"] = asm["_HUD_PlayerMoveTexture"];
  var __ZN4CRpg11GetItemInfoEP8ItemInfo = Module["__ZN4CRpg11GetItemInfoEP8ItemInfo"] = asm["__ZN4CRpg11GetItemInfoEP8ItemInfo"];
  var __ZN5CEgon10WeaponIdleEv = Module["__ZN5CEgon10WeaponIdleEv"] = asm["__ZN5CEgon10WeaponIdleEv"];
  var __Z15__CmdFunc_Slot9v = Module["__Z15__CmdFunc_Slot9v"] = asm["__Z15__CmdFunc_Slot9v"];
  var __ZN11CBaseEntity11IsNetClientEv = Module["__ZN11CBaseEntity11IsNetClientEv"] = asm["__ZN11CBaseEntity11IsNetClientEv"];
  var __ZN6CGauss12UseDecrementEv = Module["__ZN6CGauss12UseDecrementEv"] = asm["__ZN6CGauss12UseDecrementEv"];
  var __Z16__CmdFunc_Slot10v = Module["__Z16__CmdFunc_Slot10v"] = asm["__Z16__CmdFunc_Slot10v"];
  var __ZN12CBaseMonster16MyMonsterPointerEv = Module["__ZN12CBaseMonster16MyMonsterPointerEv"] = asm["__ZN12CBaseMonster16MyMonsterPointerEv"];
  var __ZN8CHudMenuD0Ev = Module["__ZN8CHudMenuD0Ev"] = asm["__ZN8CHudMenuD0Ev"];
  var __Z18__MsgFunc_ValClassPKciPv = Module["__Z18__MsgFunc_ValClassPKciPv"] = asm["__Z18__MsgFunc_ValClassPKciPv"];
  var __Z13CAM_PitchUpUpv = Module["__Z13CAM_PitchUpUpv"] = asm["__Z13CAM_PitchUpUpv"];
  var __ZN4CHud20DrawHudStringReverseEiiiPciii = Module["__ZN4CHud20DrawHudStringReverseEiiiPciii"] = asm["__ZN4CHud20DrawHudStringReverseEiiiPciii"];
  var __ZN15CBasePlayerItem14UpdateItemInfoEv = Module["__ZN15CBasePlayerItem14UpdateItemInfoEv"] = asm["__ZN15CBasePlayerItem14UpdateItemInfoEv"];
  var __ZN15HistoryResource17CheckClearHistoryEv = Module["__ZN15HistoryResource17CheckClearHistoryEv"] = asm["__ZN15HistoryResource17CheckClearHistoryEv"];
  var __ZN11CBaseEntity14SetToggleStateEi = Module["__ZN11CBaseEntity14SetToggleStateEi"] = asm["__ZN11CBaseEntity14SetToggleStateEi"];
  var _PM_CheckWater = Module["_PM_CheckWater"] = asm["_PM_CheckWater"];
  var _VectorMA = Module["_VectorMA"] = asm["_VectorMA"];
  var __ZN11cl_entity_sC2ERKS_ = Module["__ZN11cl_entity_sC2ERKS_"] = asm["__ZN11cl_entity_sC2ERKS_"];
  var __Z23UTIL_FindEntityInSphereP11CBaseEntityRK6Vectorf = Module["__Z23UTIL_FindEntityInSphereP11CBaseEntityRK6Vectorf"] = asm["__Z23UTIL_FindEntityInSphereP11CBaseEntityRK6Vectorf"];
  var __ZN13CHudSpectator11InitHUDDataEv = Module["__ZN13CHudSpectator11InitHUDDataEv"] = asm["__ZN13CHudSpectator11InitHUDDataEv"];
  var __ZN11CBasePlayer6TeamIDEv = Module["__ZN11CBasePlayer6TeamIDEv"] = asm["__ZN11CBasePlayer6TeamIDEv"];
  var __Z10IN_UseDownv = Module["__Z10IN_UseDownv"] = asm["__Z10IN_UseDownv"];
  var _PM_UnDuck = Module["_PM_UnDuck"] = asm["_PM_UnDuck"];
  var __ZN11CBaseEntity11DeathNoticeEP9entvars_s = Module["__ZN11CBaseEntity11DeathNoticeEP9entvars_s"] = asm["__ZN11CBaseEntity11DeathNoticeEP9entvars_s"];
  var __Z9V_CalcBobP12ref_params_s = Module["__Z9V_CalcBobP12ref_params_s"] = asm["__Z9V_CalcBobP12ref_params_s"];
  var __ZN8CHudAmmo4InitEv = Module["__ZN8CHudAmmo4InitEv"] = asm["__ZN8CHudAmmo4InitEv"];
  var __ZN8CShotgun10WeaponIdleEv = Module["__ZN8CShotgun10WeaponIdleEv"] = asm["__ZN8CShotgun10WeaponIdleEv"];
  var _HUD_VoiceStatus = Module["_HUD_VoiceStatus"] = asm["_HUD_VoiceStatus"];
  var __Z12IN_BreakDownv = Module["__Z12IN_BreakDownv"] = asm["__Z12IN_BreakDownv"];
  var __Z17R_StudioDrawModeli = Module["__Z17R_StudioDrawModeli"] = asm["__Z17R_StudioDrawModeli"];
  var __ZN11CPythonAmmo7AddAmmoEP11CBaseEntity = Module["__ZN11CPythonAmmo7AddAmmoEP11CBaseEntity"] = asm["__ZN11CPythonAmmo7AddAmmoEP11CBaseEntity"];
  function b0(p0, p1, p2, p3, p4, p5, p6) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   p3 = p3 | 0;
   p4 = p4 | 0;
   p5 = p5 | 0;
   p6 = p6 | 0;
   abort(0);
   return 0;
  }
  function b1(p0, p1, p2, p3, p4) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   p3 = p3 | 0;
   p4 = p4 | 0;
   abort(1);
  }
  function b2(p0, p1, p2) {
   p0 = +p0;
   p1 = +p1;
   p2 = +p2;
   abort(2);
  }
  function b3(p0, p1) {
   p0 = p0 | 0;
   p1 = +p1;
   abort(3);
  }
  function b4(p0, p1, p2, p3, p4) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   p3 = +p3;
   p4 = p4 | 0;
   abort(4);
   return 0;
  }
  function b5(p0) {
   p0 = p0 | 0;
   abort(5);
  }
  function b6(p0, p1, p2, p3, p4) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   p3 = +p3;
   p4 = +p4;
   abort(6);
   return 0;
  }
  function b7(p0, p1) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   abort(7);
  }
  function b8(p0, p1, p2, p3, p4, p5) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   p3 = p3 | 0;
   p4 = p4 | 0;
   p5 = p5 | 0;
   abort(8);
   return 0;
  }
  function b9(p0) {
   p0 = p0 | 0;
   abort(9);
   return 0;
  }
  function b10(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   p3 = p3 | 0;
   p4 = p4 | 0;
   p5 = +p5;
   p6 = +p6;
   p7 = +p7;
   p8 = p8 | 0;
   p9 = +p9;
   abort(10);
  }
  function b11(p0, p1, p2, p3, p4, p5) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = +p2;
   p3 = p3 | 0;
   p4 = p4 | 0;
   p5 = p5 | 0;
   abort(11);
  }
  function b12(p0, p1, p2) {
   p0 = p0 | 0;
   p1 = +p1;
   p2 = +p2;
   abort(12);
   return 0;
  }
  function b13(p0, p1, p2, p3, p4, p5, p6) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = +p2;
   p3 = p3 | 0;
   p4 = p4 | 0;
   p5 = p5 | 0;
   p6 = p6 | 0;
   abort(13);
  }
  function b14(p0, p1, p2) {
   p0 = p0 | 0;
   p1 = +p1;
   p2 = p2 | 0;
   abort(14);
   return 0;
  }
  function b15(p0, p1, p2, p3, p4, p5, p6) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = +p2;
   p3 = +p3;
   p4 = +p4;
   p5 = p5 | 0;
   p6 = p6 | 0;
   abort(15);
  }
  function b16(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   p3 = +p3;
   p4 = +p4;
   p5 = +p5;
   p6 = +p6;
   p7 = +p7;
   p8 = p8 | 0;
   p9 = +p9;
   p10 = +p10;
   p11 = +p11;
   p12 = +p12;
   abort(16);
   return 0;
  }
  function b17(p0, p1, p2, p3, p4) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   p3 = p3 | 0;
   p4 = p4 | 0;
   abort(17);
   return 0;
  }
  function b18(p0, p1, p2) {
   p0 = p0 | 0;
   p1 = +p1;
   p2 = p2 | 0;
   abort(18);
  }
  function b19(p0, p1, p2, p3, p4, p5) {
   p0 = p0 | 0;
   p1 = +p1;
   p2 = p2 | 0;
   p3 = p3 | 0;
   p4 = p4 | 0;
   p5 = p5 | 0;
   abort(19);
  }
  function b20(p0, p1, p2, p3, p4, p5) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   p3 = +p3;
   p4 = p4 | 0;
   p5 = p5 | 0;
   abort(20);
   return 0;
  }
  function b21(p0, p1, p2) {
   p0 = p0 | 0;
   p1 = +p1;
   p2 = +p2;
   abort(21);
  }
  function b22(p0, p1, p2) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   abort(22);
   return 0;
  }
  function b23(p0, p1, p2, p3, p4, p5, p6, p7) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   p3 = p3 | 0;
   p4 = +p4;
   p5 = +p5;
   p6 = p6 | 0;
   p7 = p7 | 0;
   abort(23);
  }
  function b24(p0, p1, p2, p3, p4, p5) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   p3 = p3 | 0;
   p4 = p4 | 0;
   p5 = +p5;
   abort(24);
  }
  function b25(p0, p1, p2, p3, p4, p5, p6, p7) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   p3 = p3 | 0;
   p4 = p4 | 0;
   p5 = p5 | 0;
   p6 = p6 | 0;
   p7 = p7 | 0;
   abort(25);
  }
  function b26(p0, p1, p2, p3) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   p3 = p3 | 0;
   abort(26);
   return +0;
  }
  function b27(p0, p1) {
   p0 = +p0;
   p1 = +p1;
   abort(27);
   return +0;
  }
  function b28(p0, p1, p2) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = +p2;
   abort(28);
  }
  function b29(p0) {
   p0 = p0 | 0;
   abort(29);
   return +0;
  }
  function b30(p0, p1, p2, p3, p4) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   p3 = p3 | 0;
   p4 = +p4;
   abort(30);
  }
  function b31(p0, p1, p2, p3, p4) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = +p2;
   p3 = p3 | 0;
   p4 = p4 | 0;
   abort(31);
  }
  function b32(p0, p1) {
   p0 = p0 | 0;
   p1 = +p1;
   abort(32);
   return 0;
  }
  function b33(p0, p1, p2, p3, p4) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = +p2;
   p3 = +p3;
   p4 = +p4;
   abort(33);
  }
  function b34(p0, p1, p2, p3, p4, p5, p6, p7, p8) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = +p2;
   p3 = p3 | 0;
   p4 = p4 | 0;
   p5 = p5 | 0;
   p6 = +p6;
   p7 = +p7;
   p8 = p8 | 0;
   abort(34);
   return 0;
  }
  function b35(p0, p1) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   abort(35);
   return 0;
  }
  function b36(p0, p1) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   abort(36);
   return +0;
  }
  function b37(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   p3 = +p3;
   p4 = p4 | 0;
   p5 = p5 | 0;
   p6 = +p6;
   p7 = +p7;
   p8 = p8 | 0;
   p9 = p9 | 0;
   p10 = p10 | 0;
   p11 = p11 | 0;
   abort(37);
  }
  function b38() {
   abort(38);
   return +0;
  }
  function b39(p0, p1, p2) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   abort(39);
  }
  function b40() {
   abort(40);
   return 0;
  }
  function b41(p0, p1, p2, p3) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   p3 = p3 | 0;
   abort(41);
   return 0;
  }
  function b42(p0, p1, p2, p3) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   p3 = +p3;
   abort(42);
  }
  function b43(p0, p1, p2, p3) {
   p0 = +p0;
   p1 = +p1;
   p2 = +p2;
   p3 = +p3;
   abort(43);
  }
  function b44(p0, p1) {
   p0 = +p0;
   p1 = +p1;
   abort(44);
  }
  function b45() {
   abort(45);
  }
  function b46(p0, p1) {
   p0 = +p0;
   p1 = p1 | 0;
   abort(46);
  }
  function b47(p0, p1, p2, p3, p4, p5) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = +p2;
   p3 = +p3;
   p4 = p4 | 0;
   p5 = p5 | 0;
   abort(47);
  }
  function b48(p0, p1, p2, p3, p4) {
   p0 = p0 | 0;
   p1 = +p1;
   p2 = p2 | 0;
   p3 = p3 | 0;
   p4 = p4 | 0;
   abort(48);
  }
  function b49(p0, p1, p2, p3) {
   p0 = p0 | 0;
   p1 = p1 | 0;
   p2 = p2 | 0;
   p3 = p3 | 0;
   abort(49);
  }
  var SIDE_FUNCTION_TABLE_iiiiiiii = [ b0 ];
  var SIDE_FUNCTION_TABLE_viiiii = [ b1 ];
  var SIDE_FUNCTION_TABLE_vddd = [ b2 ];
  var SIDE_FUNCTION_TABLE_vid = [ b3, asm["__ZN12CBaseMonster4MoveEf"], asm["__Z15HUD_SetMaxSpeedPK7edict_sf"], b3 ];
  var SIDE_FUNCTION_TABLE_iiiidi = [ b4, asm["__ZN11CBaseEntity10TakeDamageEP9entvars_sS1_fi"], asm["__ZN12CBaseMonster10TakeDamageEP9entvars_sS1_fi"], asm["__ZN11CBasePlayer10TakeDamageEP9entvars_sS1_fi"] ];
  var SIDE_FUNCTION_TABLE_vi = [ b5, asm["__ZN9CCrossbow5SpawnEv"], asm["__ZN9CCrossbow8PrecacheEv"], asm["__ZN11CBaseEntity8ActivateEv"], asm["__ZN15CBasePlayerItem21SetObjectCollisionBoxEv"], asm["__ZN11CBaseEntity13OverrideResetEv"], asm["__ZN11CBaseEntity13StartSneakingEv"], asm["__ZN11CBaseEntity12StopSneakingEv"], asm["__ZN11CBaseEntity5ThinkEv"], asm["__ZN11CBaseEntity11UpdateOwnerEv"], asm["__ZN17CBasePlayerWeapon14UpdateItemInfoEv"], asm["__ZN15CBasePlayerItem12ItemPreFrameEv"], asm["__ZN17CBasePlayerWeapon13ItemPostFrameEv"], asm["__ZN15CBasePlayerItem4DropEv"], asm["__ZN15CBasePlayerItem4KillEv"], asm["__ZN17CBasePlayerWeapon15ResetEmptySoundEv"], asm["__ZN9CCrossbow13PrimaryAttackEv"], asm["__ZN9CCrossbow15SecondaryAttackEv"], asm["__ZN9CCrossbow6ReloadEv"], asm["__ZN9CCrossbow10WeaponIdleEv"], asm["__ZN17CBasePlayerWeapon12RetireWeaponEv"], asm["__ZN13CCrossbowAmmo5SpawnEv"], asm["__ZN13CCrossbowAmmo8PrecacheEv"], asm["__ZN11CBaseEntity21SetObjectCollisionBoxEv"], asm["__ZN8CCrowbar5SpawnEv"], asm["__ZN8CCrowbar8PrecacheEv"], asm["__ZN8CCrowbar13PrimaryAttackEv"], asm["__ZN17CBasePlayerWeapon15SecondaryAttackEv"], asm["__ZN17CBasePlayerWeapon6ReloadEv"], asm["__ZN17CBasePlayerWeapon10WeaponIdleEv"], asm["__ZN5CEgon5SpawnEv"], asm["__ZN5CEgon8PrecacheEv"], asm["__ZN5CEgon13PrimaryAttackEv"], asm["__ZN5CEgon10WeaponIdleEv"], asm["__ZN9CEgonAmmo5SpawnEv"], asm["__ZN9CEgonAmmo8PrecacheEv"], asm["__ZN6CGauss5SpawnEv"], asm["__ZN6CGauss8PrecacheEv"], asm["__ZN6CGauss13PrimaryAttackEv"], asm["__ZN6CGauss15SecondaryAttackEv"], asm["__ZN6CGauss10WeaponIdleEv"], asm["__ZN10CGaussAmmo5SpawnEv"], asm["__ZN10CGaussAmmo8PrecacheEv"], asm["__ZN12CHandGrenade5SpawnEv"], asm["__ZN12CHandGrenade8PrecacheEv"], asm["__ZN12CHandGrenade13PrimaryAttackEv"], asm["__ZN12CHandGrenade10WeaponIdleEv"], asm["__ZN11CBaseEntity5SpawnEv"], asm["__ZN11CBaseEntity8PrecacheEv"], asm["__ZN8CGrenade5SpawnEv"], asm["__ZN12CBaseMonster5RunAIEv"], asm["__ZN12CBaseMonster12MonsterThinkEv"], asm["__ZN12CBaseMonster11MonsterInitEv"], asm["__ZN12CBaseMonster15MonsterInitDeadEv"], asm["__ZN12CBaseMonster10BecomeDeadEv"], asm["__ZN12CBaseMonster12StartMonsterEv"], asm["__ZN12CBaseMonster4StopEv"], asm["__ZN12CBaseMonster14ScheduleChangeEv"], asm["__ZN12CBaseMonster12SentenceStopEv"], asm["__ZN12CBaseMonster13ReportAIStateEv"], asm["__ZN12CBaseMonster11SetYawSpeedEv"], asm["__ZN12CBaseMonster9CheckAmmoEv"], asm["__ZN12CBaseMonster22BarnacleVictimReleasedEv"], asm["__ZN12CBaseMonster16PrescheduleThinkEv"], asm["__ZN12CBaseMonster10GibMonsterEv"], asm["__ZN12CBaseMonster11FadeMonsterEv"], asm["__ZN12CBaseMonster10DeathSoundEv"], asm["__ZN12CBaseMonster10AlertSoundEv"], asm["__ZN12CBaseMonster9IdleSoundEv"], asm["__ZN12CBaseMonster9PainSoundEv"], asm["__ZN8CGrenade11BounceSoundEv"], asm["__ZN17CBasePlayerWeapon13PrimaryAttackEv"], asm["__ZN15CBasePlayerItem14UpdateItemInfoEv"], asm["__ZN15CBasePlayerItem13ItemPostFrameEv"], asm["__ZN15CBasePlayerAmmo5SpawnEv"], asm["__ZN11CBasePlayer5SpawnEv"], asm["__ZN11CBasePlayer8PrecacheEv"], asm["__ZN11CBasePlayer13StartSneakingEv"], asm["__ZN11CBasePlayer12StopSneakingEv"], asm["__ZN11CBasePlayer22BarnacleVictimReleasedEv"], asm["__ZN11CBasePlayer10DeathSoundEv"], asm["__ZN11CBasePlayer4JumpEv"], asm["__ZN11CBasePlayer4DuckEv"], asm["__ZN11CBasePlayer8PreThinkEv"], asm["__ZN11CBasePlayer9PostThinkEv"], asm["__ZN11CBasePlayer16UpdateClientDataEv"], asm["__ZN11CBasePlayer15ImpulseCommandsEv"], asm["__ZN5CHgun5SpawnEv"], asm["__ZN5CHgun8PrecacheEv"], asm["__ZN5CHgun13PrimaryAttackEv"], asm["__ZN5CHgun15SecondaryAttackEv"], asm["__ZN5CHgun6ReloadEv"], asm["__ZN5CHgun10WeaponIdleEv"], asm["__ZN4CMP55SpawnEv"], asm["__ZN4CMP58PrecacheEv"], asm["__ZN4CMP513PrimaryAttackEv"], asm["__ZN4CMP515SecondaryAttackEv"], asm["__ZN4CMP56ReloadEv"], asm["__ZN4CMP510WeaponIdleEv"], asm["__ZN12CMP5AmmoClip5SpawnEv"], asm["__ZN12CMP5AmmoClip8PrecacheEv"], asm["__ZN13CMP5Chainammo5SpawnEv"], asm["__ZN13CMP5Chainammo8PrecacheEv"], asm["__ZN15CMP5AmmoGrenade5SpawnEv"], asm["__ZN15CMP5AmmoGrenade8PrecacheEv"], asm["__ZN7CPython5SpawnEv"], asm["__ZN7CPython8PrecacheEv"], asm["__ZN7CPython13PrimaryAttackEv"], asm["__ZN7CPython15SecondaryAttackEv"], asm["__ZN7CPython6ReloadEv"], asm["__ZN7CPython10WeaponIdleEv"], asm["__ZN11CPythonAmmo5SpawnEv"], asm["__ZN11CPythonAmmo8PrecacheEv"], asm["__ZN4CRpg5SpawnEv"], asm["__ZN4CRpg8PrecacheEv"], asm["__ZN4CRpg13PrimaryAttackEv"], asm["__ZN4CRpg15SecondaryAttackEv"], asm["__ZN4CRpg6ReloadEv"], asm["__ZN4CRpg10WeaponIdleEv"], asm["__ZN8CRpgAmmo5SpawnEv"], asm["__ZN8CRpgAmmo8PrecacheEv"], asm["__ZN14CSatchelCharge5SpawnEv"], asm["__ZN14CSatchelCharge8PrecacheEv"], asm["__ZN14CSatchelCharge11BounceSoundEv"], asm["__ZN8CSatchel5SpawnEv"], asm["__ZN8CSatchel8PrecacheEv"], asm["__ZN8CSatchel13PrimaryAttackEv"], asm["__ZN8CSatchel15SecondaryAttackEv"], asm["__ZN8CSatchel10WeaponIdleEv"], asm["__ZN8CShotgun5SpawnEv"], asm["__ZN8CShotgun8PrecacheEv"], asm["__ZN8CShotgun13PrimaryAttackEv"], asm["__ZN8CShotgun15SecondaryAttackEv"], asm["__ZN8CShotgun6ReloadEv"], asm["__ZN8CShotgun10WeaponIdleEv"], asm["__ZN12CShotgunAmmo5SpawnEv"], asm["__ZN12CShotgunAmmo8PrecacheEv"], asm["__ZN7CSqueak5SpawnEv"], asm["__ZN7CSqueak8PrecacheEv"], asm["__ZN7CSqueak13PrimaryAttackEv"], asm["__ZN7CSqueak15SecondaryAttackEv"], asm["__ZN7CSqueak10WeaponIdleEv"], asm["__ZN9CTripmine5SpawnEv"], asm["__ZN9CTripmine8PrecacheEv"], asm["__ZN9CTripmine21SetObjectCollisionBoxEv"], asm["__ZN9CTripmine13PrimaryAttackEv"], asm["__ZN9CTripmine10WeaponIdleEv"], asm["__ZN6CGlock5SpawnEv"], asm["__ZN6CGlock8PrecacheEv"], asm["__ZN6CGlock13PrimaryAttackEv"], asm["__ZN6CGlock15SecondaryAttackEv"], asm["__ZN6CGlock6ReloadEv"], asm["__ZN6CGlock10WeaponIdleEv"], asm["__ZN10CGlockAmmo5SpawnEv"], asm["__ZN10CGlockAmmo8PrecacheEv"], asm["__ZN8CHudBaseD2Ev"], asm["__ZN8CHudAmmoD0Ev"], asm["__ZN8CHudAmmo5ThinkEv"], asm["__ZN8CHudAmmo5ResetEv"], asm["__ZN8CHudBase11InitHUDDataEv"], asm["__ZN17CHudAmmoSecondaryD0Ev"], asm["__ZN8CHudBase5ThinkEv"], asm["__ZN17CHudAmmoSecondary5ResetEv"], asm["__ZN11CHudBatteryD0Ev"], asm["__ZN8CHudBase5ResetEv"], asm["__ZN15CHudDeathNoticeD0Ev"], asm["__ZN15CHudDeathNotice11InitHUDDataEv"], asm["__ZN14CHudFlashlightD0Ev"], asm["__ZN14CHudFlashlight5ResetEv"], asm["__ZN20CStudioModelRendererD2Ev"], asm["__ZN24CGameStudioModelRendererD0Ev"], asm["__ZN20CStudioModelRenderer4InitEv"], asm["__ZN20CStudioModelRenderer16StudioSetupBonesEv"], asm["__ZN20CStudioModelRenderer21StudioCalcAttachmentsEv"], asm["__ZN20CStudioModelRenderer15StudioSaveBonesEv"], asm["__ZN20CStudioModelRenderer17StudioRenderModelEv"], asm["__ZN20CStudioModelRenderer17StudioRenderFinalEv"], asm["__ZN20CStudioModelRenderer26StudioRenderFinal_SoftwareEv"], asm["__ZN20CStudioModelRenderer26StudioRenderFinal_HardwareEv"], asm["__ZN10CHudGeigerD0Ev"], asm["__ZN10CHudHealthD0Ev"], asm["__ZN10CHudHealth5ResetEv"], asm["__ZN13CHudSpectatorD0Ev"], asm["__ZN13CHudSpectator5ResetEv"], asm["__ZN13CHudSpectator11InitHUDDataEv"], asm["__ZN8CHudMenuD0Ev"], asm["__ZN8CHudMenu5ResetEv"], asm["__ZN8CHudMenu11InitHUDDataEv"], asm["__ZN11CHudMessageD0Ev"], asm["__ZN11CHudMessage5ResetEv"], asm["__ZN12CHudOverviewD0Ev"], asm["__ZN12CHudOverview11InitHUDDataEv"], asm["__ZN11CHudSayTextD0Ev"], asm["__ZN11CHudSayText11InitHUDDataEv"], asm["__ZN15CHudStatusIconsD0Ev"], asm["__ZN15CHudStatusIcons5ResetEv"], asm["__ZN13CHudStatusBarD0Ev"], asm["__ZN13CHudStatusBar5ResetEv"], asm["__ZN20CStudioModelRendererD0Ev"], asm["__ZN15CHudTextMessageD0Ev"], asm["__ZN9CHudTrainD0Ev"], asm["__ZN14CHudScoreboardD0Ev"], asm["__ZN14CHudScoreboard11InitHUDDataEv"], asm["__ZN8CHudMOTDD0Ev"], asm["__ZN8CHudMOTD5ResetEv"], asm["__ZN8CCrowbar10SwingAgainEv"], asm["__ZN8CCrowbar5SmackEv"], asm["__ZN15CBasePlayerItem11DestroyItemEv"], asm["_EV_FireGlock1"], asm["_EV_FireGlock2"], asm["_EV_FireShotGunSingle"], asm["_EV_FireShotGunDouble"], asm["_EV_FireMP5"], asm["_EV_FireMP52"], asm["_EV_FirePython"], asm["_EV_FireGauss"], asm["_EV_SpinGauss"], asm["_EV_TrainPitchAdjust"], asm["_EV_Crowbar"], asm["_EV_FireCrossbow"], asm["_EV_FireCrossbow2"], asm["_EV_FireRpg"], asm["_EV_EgonFire"], asm["_EV_EgonStop"], asm["_EV_HornetGunFire"], asm["_EV_TripmineFire"], asm["_EV_SnarkFire"], asm["__ZN14CSatchelCharge12SatchelThinkEv"], asm["__ZN4CHudD2Ev"], b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5, b5 ];
  var SIDE_FUNCTION_TABLE_iiiidd = [ b6, asm["__ZN12CBaseMonster17BuildNearestRouteE6VectorS0_ff"], asm["__ZN12CBaseMonster9FindCoverE6VectorS0_ff"], b6 ];
  var SIDE_FUNCTION_TABLE_vii = [ b7, asm["__ZN10CBaseDelay8KeyValueEP14KeyValueData_s"], asm["__ZN11CBaseEntity11DeathNoticeEP9entvars_s"], asm["__ZN11CBaseEntity14SetToggleStateEi"], asm["__ZN11CBaseEntity5TouchEPS_"], asm["__ZN11CBaseEntity7BlockedEPS_"], asm["__ZN11CBaseEntity6CenterEv"], asm["__ZN11CBaseEntity11EyePositionEv"], asm["__ZN11CBaseEntity11EarPositionEv"], asm["__ZN14CBaseAnimating15HandleAnimEventEP14MonsterEvent_t"], asm["__ZN9CCrossbow7HolsterEi"], asm["__ZN15CBasePlayerItem14AttachToPlayerEP11CBasePlayer"], asm["__ZN11CBaseEntity8KeyValueEP14KeyValueData_s"], asm["__ZN8CCrowbar7HolsterEi"], asm["__ZN5CEgon7HolsterEi"], asm["__ZN6CGauss7HolsterEi"], asm["__ZN12CHandGrenade7HolsterEi"], asm["__ZN11CBaseToggle8KeyValueEP14KeyValueData_s"], asm["__ZN12CBaseMonster8KeyValueEP14KeyValueData_s"], asm["__ZN12CBaseMonster15HandleAnimEventEP14MonsterEvent_t"], asm["__ZN12CBaseMonster4LookEi"], asm["__ZN12CBaseMonster9StartTaskEP6Task_t"], asm["__ZN12CBaseMonster7RunTaskEP6Task_t"], asm["__ZN12CBaseMonster11SetActivityE8Activity"], asm["__ZN12CBaseMonster20BarnacleVictimBittenEP9entvars_s"], asm["__ZN12CBaseMonster14GetGunPositionEv"], asm["__ZN12CBaseMonster13StopFollowingEi"], asm["__ZN17CBasePlayerWeapon7HolsterEi"], asm["__ZN15CBasePlayerItem7HolsterEi"], asm["__ZN11CBasePlayer20BarnacleVictimBittenEP9entvars_s"], asm["__ZN11CBasePlayer14GetGunPositionEv"], asm["__ZN5CHgun7HolsterEi"], asm["__ZN7CPython7HolsterEi"], asm["__ZN4CRpg7HolsterEi"], asm["__ZN8CSatchel7HolsterEi"], asm["__ZN7CSqueak7HolsterEi"], asm["__ZN9CTripmine7HolsterEi"], asm["__ZN20CStudioModelRenderer20StudioSetUpTransformEi"], asm["__ZN20CStudioModelRenderer16StudioMergeBonesEP7model_s"], asm["__ZN20CStudioModelRenderer18StudioEstimateGaitEP14entity_state_s"], asm["__ZN20CStudioModelRenderer17StudioProcessGaitEP14entity_state_s"], asm["__Z13stub_SetModelP7edict_sPKc"], asm["__ZN14CSatchelCharge12SatchelSlideEP11CBaseEntity"], b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7, b7 ];
  var SIDE_FUNCTION_TABLE_iiiiiii = [ b8 ];
  var SIDE_FUNCTION_TABLE_ii = [ b9, asm["__ZN11CBaseEntity10ObjectCapsEv"], asm["__ZN11CBaseEntity8ClassifyEv"], asm["__ZN11CBaseEntity10BloodColorEv"], asm["__ZN11CBaseEntity16MyMonsterPointerEv"], asm["__ZN11CBaseEntity21MySquadMonsterPointerEv"], asm["__ZN11CBaseEntity14GetToggleStateEv"], asm["__ZN11CBaseEntity8IsMovingEv"], asm["__ZN11CBaseEntity10IsSneakingEv"], asm["__ZN11CBaseEntity7IsAliveEv"], asm["__ZN11CBaseEntity10IsBSPModelEv"], asm["__ZN11CBaseEntity12ReflectGaussEv"], asm["__ZN11CBaseEntity9IsInWorldEv"], asm["__ZN11CBaseEntity8IsPlayerEv"], asm["__ZN11CBaseEntity11IsNetClientEv"], asm["__ZN11CBaseEntity6TeamIDEv"], asm["__ZN11CBaseEntity13GetNextTargetEv"], asm["__ZN15CBasePlayerItem7RespawnEv"], asm["__ZN11CBaseEntity12FBecomeProneEv"], asm["__ZN11CBaseEntity12IlluminationEv"], asm["__ZN17CBasePlayerWeapon9CanDeployEv"], asm["__ZN9CCrossbow6DeployEv"], asm["__ZN15CBasePlayerItem10CanHolsterEv"], asm["__ZN17CBasePlayerWeapon16PrimaryAmmoIndexEv"], asm["__ZN17CBasePlayerWeapon18SecondaryAmmoIndexEv"], asm["__ZN17CBasePlayerWeapon12GetWeaponPtrEv"], asm["__ZN9CCrossbow9iItemSlotEv"], asm["__ZN17CBasePlayerWeapon9AddWeaponEv"], asm["__ZN17CBasePlayerWeapon14PlayEmptySoundEv"], asm["__ZN17CBasePlayerWeapon9IsUseableEv"], asm["__ZN17CBasePlayerWeapon16ShouldWeaponIdleEv"], asm["__ZN9CCrossbow12UseDecrementEv"], asm["__ZN15CBasePlayerAmmo7RespawnEv"], asm["__ZN8CCrowbar6DeployEv"], asm["__ZN8CCrowbar9iItemSlotEv"], asm["__ZN8CCrowbar12UseDecrementEv"], asm["__ZN5CEgon6DeployEv"], asm["__ZN5CEgon9iItemSlotEv"], asm["__ZN5CEgon12UseDecrementEv"], asm["__ZN6CGauss6DeployEv"], asm["__ZN6CGauss9iItemSlotEv"], asm["__ZN6CGauss12UseDecrementEv"], asm["__ZN12CHandGrenade6DeployEv"], asm["__ZN12CHandGrenade10CanHolsterEv"], asm["__ZN12CHandGrenade9iItemSlotEv"], asm["__ZN12CHandGrenade12UseDecrementEv"], asm["__ZN11CBaseEntity7RespawnEv"], asm["__ZN11CBaseToggle14GetToggleStateEv"], asm["__ZN8CGrenade10BloodColorEv"], asm["__ZN12CBaseMonster16MyMonsterPointerEv"], asm["__ZN12CBaseMonster8IsMovingEv"], asm["__ZN12CBaseMonster7IsAliveEv"], asm["__ZN12CBaseMonster12FBecomeProneEv"], asm["__ZN12CBaseMonster17ShouldFadeOnDeathEv"], asm["__ZN12CBaseMonster16BestVisibleEnemyEv"], asm["__ZN12CBaseMonster18GetStoppedActivityEv"], asm["__ZN12CBaseMonster11GetScheduleEv"], asm["__ZN12CBaseMonster13GetIdealStateEv"], asm["__ZN12CBaseMonster16FCanCheckAttacksEv"], asm["__ZN12CBaseMonster16IgnoreConditionsEv"], asm["__ZN12CBaseMonster14FCanActiveIdleEv"], asm["__ZN12CBaseMonster10ISoundMaskEv"], asm["__ZN12CBaseMonster10PBestSoundEv"], asm["__ZN12CBaseMonster10PBestScentEv"], asm["__ZN12CBaseMonster16GetDeathActivityEv"], asm["__ZN12CBaseMonster12HasHumanGibsEv"], asm["__ZN12CBaseMonster12HasAlienGibsEv"], asm["__ZN12CBaseMonster10BloodColorEv"], asm["__ZN15CBasePlayerItem6DeployEv"], asm["__ZN15CBasePlayerItem9iItemSlotEv"], asm["__ZN17CBasePlayerWeapon12UseDecrementEv"], asm["__ZN15CBasePlayerItem9CanDeployEv"], asm["__ZN15CBasePlayerItem16PrimaryAmmoIndexEv"], asm["__ZN15CBasePlayerItem18SecondaryAmmoIndexEv"], asm["__ZN15CBasePlayerItem12GetWeaponPtrEv"], asm["__ZN11CBasePlayer10ObjectCapsEv"], asm["__ZN11CBasePlayer8ClassifyEv"], asm["__ZN11CBasePlayer10IsSneakingEv"], asm["__ZN11CBasePlayer7IsAliveEv"], asm["__ZN11CBasePlayer8IsPlayerEv"], asm["__ZN11CBasePlayer11IsNetClientEv"], asm["__ZN11CBasePlayer6TeamIDEv"], asm["__ZN11CBasePlayer12FBecomeProneEv"], asm["__ZN11CBasePlayer12IlluminationEv"], asm["__ZN11CBasePlayer17ShouldFadeOnDeathEv"], asm["__ZN5CHgun6DeployEv"], asm["__ZN5CHgun9iItemSlotEv"], asm["__ZN5CHgun9IsUseableEv"], asm["__ZN5CHgun12UseDecrementEv"], asm["__ZN4CMP56DeployEv"], asm["__ZN4CMP518SecondaryAmmoIndexEv"], asm["__ZN4CMP59iItemSlotEv"], asm["__ZN4CMP512UseDecrementEv"], asm["__ZN7CPython6DeployEv"], asm["__ZN7CPython9iItemSlotEv"], asm["__ZN7CPython12UseDecrementEv"], asm["__ZN4CRpg6DeployEv"], asm["__ZN4CRpg10CanHolsterEv"], asm["__ZN4CRpg9iItemSlotEv"], asm["__ZN4CRpg16ShouldWeaponIdleEv"], asm["__ZN4CRpg12UseDecrementEv"], asm["__ZN8CSatchel9CanDeployEv"], asm["__ZN8CSatchel6DeployEv"], asm["__ZN8CSatchel9iItemSlotEv"], asm["__ZN8CSatchel9IsUseableEv"], asm["__ZN8CSatchel12UseDecrementEv"], asm["__ZN8CShotgun6DeployEv"], asm["__ZN8CShotgun9iItemSlotEv"], asm["__ZN8CShotgun12UseDecrementEv"], asm["__ZN7CSqueak6DeployEv"], asm["__ZN7CSqueak9iItemSlotEv"], asm["__ZN7CSqueak12UseDecrementEv"], asm["__ZN9CTripmine6DeployEv"], asm["__ZN9CTripmine9iItemSlotEv"], asm["__ZN9CTripmine12UseDecrementEv"], asm["__ZN6CGlock6DeployEv"], asm["__ZN6CGlock9iItemSlotEv"], asm["__ZN6CGlock12UseDecrementEv"], asm["__ZN8CHudAmmo4InitEv"], asm["__ZN8CHudAmmo7VidInitEv"], asm["__ZN17CHudAmmoSecondary4InitEv"], asm["__ZN17CHudAmmoSecondary7VidInitEv"], asm["__ZN11CHudBattery4InitEv"], asm["__ZN11CHudBattery7VidInitEv"], asm["__ZN15CHudDeathNotice4InitEv"], asm["__ZN15CHudDeathNotice7VidInitEv"], asm["__ZN14CHudFlashlight4InitEv"], asm["__ZN14CHudFlashlight7VidInitEv"], asm["__Z17R_StudioDrawModeli"], asm["__ZN10CHudGeiger4InitEv"], asm["__ZN10CHudGeiger7VidInitEv"], asm["__ZN10CHudHealth4InitEv"], asm["__ZN10CHudHealth7VidInitEv"], asm["__ZN13CHudSpectator4InitEv"], asm["__ZN13CHudSpectator7VidInitEv"], asm["__ZN8CHudMenu4InitEv"], asm["__ZN8CHudMenu7VidInitEv"], asm["__ZN11CHudMessage4InitEv"], asm["__ZN11CHudMessage7VidInitEv"], asm["__ZN12CHudOverview4InitEv"], asm["__ZN12CHudOverview7VidInitEv"], asm["__ZN11CHudSayText4InitEv"], asm["__ZN11CHudSayText7VidInitEv"], asm["__ZN15CHudStatusIcons4InitEv"], asm["__ZN15CHudStatusIcons7VidInitEv"], asm["__ZN13CHudStatusBar4InitEv"], asm["__ZN13CHudStatusBar7VidInitEv"], asm["__ZN15CHudTextMessage4InitEv"], asm["__ZN8CHudBase7VidInitEv"], asm["__ZN9CHudTrain4InitEv"], asm["__ZN9CHudTrain7VidInitEv"], asm["__ZN14CHudScoreboard4InitEv"], asm["__ZN14CHudScoreboard7VidInitEv"], asm["__ZN8CHudMOTD4InitEv"], asm["__ZN8CHudMOTD7VidInitEv"], asm["__Z18stub_PrecacheModelPc"], asm["__Z18stub_PrecacheSoundPc"], asm["__Z20stub_NameForFunctionPv"], b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9, b9 ];
  var SIDE_FUNCTION_TABLE_viiiiidddid = [ b10 ];
  var SIDE_FUNCTION_TABLE_viidiii = [ b11, asm["__ZN11CBaseEntity11TraceAttackEP9entvars_sf6VectorP11TraceResulti"], asm["__ZN12CBaseMonster11TraceAttackEP9entvars_sf6VectorP11TraceResulti"], asm["__ZN11CBasePlayer11TraceAttackEP9entvars_sf6VectorP11TraceResulti"] ];
  var SIDE_FUNCTION_TABLE_iidd = [ b12, asm["__ZN12CBaseMonster17CheckRangeAttack1Eff"], asm["__ZN12CBaseMonster17CheckRangeAttack2Eff"], asm["__ZN12CBaseMonster17CheckMeleeAttack1Eff"], asm["__ZN12CBaseMonster17CheckMeleeAttack2Eff"], b12, b12, b12 ];
  var SIDE_FUNCTION_TABLE_viidiiii = [ b13, asm["__ZN20CStudioModelRenderer23StudioCalcBoneQuaterionEifP13mstudiobone_tP13mstudioanim_tPfS4_"], asm["__ZN20CStudioModelRenderer22StudioCalcBonePositionEifP13mstudiobone_tP13mstudioanim_tPfS4_"], b13 ];
  var SIDE_FUNCTION_TABLE_iidi = [ b14, asm["__ZN11CBaseEntity10TakeHealthEfi"], asm["__ZN12CBaseMonster10TakeHealthEfi"], asm["__ZN11CBasePlayer10TakeHealthEfi"] ];
  var SIDE_FUNCTION_TABLE_viidddii = [ b15, asm["__ZN12CBaseMonster20PlayScriptedSentenceEPKcfffiP11CBaseEntity"] ];
  var SIDE_FUNCTION_TABLE_iiiidddddidddd = [ b16 ];
  var SIDE_FUNCTION_TABLE_iiiiii = [ b17, asm["__ZN12CBaseMonster14CheckLocalMoveERK6VectorS2_P11CBaseEntityPf"] ];
  var SIDE_FUNCTION_TABLE_vidi = [ b18 ];
  var SIDE_FUNCTION_TABLE_vidiiii = [ b19, asm["__ZN20CStudioModelRenderer17StudioCalcBoneAdjEfPfPKhS2_h"] ];
  var SIDE_FUNCTION_TABLE_iiiidii = [ b20, asm["__ZN12CBaseMonster12FTriangulateERK6VectorS2_fP11CBaseEntityPS0_"] ];
  var SIDE_FUNCTION_TABLE_vidd = [ b21, asm["__Z15EV_BoltCallbackP9tempent_sff"] ];
  var SIDE_FUNCTION_TABLE_iiii = [ b22, asm["__ZN12CBaseMonster15CanPlaySequenceEii"], asm["__ZN20CStudioModelRenderer16StudioDrawPlayerEiP14entity_state_s"], asm["__ZN20CStudioModelRenderer13StudioGetAnimEP7model_sP16mstudioseqdesc_t"], asm["__Z19__MsgFunc_CurWeaponPKciPv"], asm["__Z20__MsgFunc_WeaponListPKciPv"], asm["__Z20__MsgFunc_AmmoPickupPKciPv"], asm["__Z20__MsgFunc_WeapPickupPKciPv"], asm["__Z20__MsgFunc_ItemPickupPKciPv"], asm["__Z20__MsgFunc_HideWeaponPKciPv"], asm["__Z15__MsgFunc_AmmoXPKciPv"], asm["__Z20__MsgFunc_SecAmmoValPKciPv"], asm["__Z21__MsgFunc_SecAmmoIconPKciPv"], asm["__Z17__MsgFunc_BatteryPKciPv"], asm["__Z18__MsgFunc_DeathMsgPKciPv"], asm["__Z20__MsgFunc_FlashlightPKciPv"], asm["__Z18__MsgFunc_FlashBatPKciPv"], asm["__Z16__MsgFunc_GeigerPKciPv"], asm["__Z16__MsgFunc_HealthPKciPv"], asm["__Z16__MsgFunc_DamagePKciPv"], asm["__Z14__MsgFunc_LogoPKciPv"], asm["__Z18__MsgFunc_ResetHUDPKciPv"], asm["__Z18__MsgFunc_GameModePKciPv"], asm["__Z17__MsgFunc_InitHUDPKciPv"], asm["__Z18__MsgFunc_ViewModePKciPv"], asm["__Z16__MsgFunc_SetFOVPKciPv"], asm["__Z17__MsgFunc_ConcussPKciPv"], asm["__Z18__MsgFunc_ValClassPKciPv"], asm["__Z19__MsgFunc_TeamNamesPKciPv"], asm["__Z15__MsgFunc_FeignPKciPv"], asm["__Z17__MsgFunc_DetpackPKciPv"], asm["__Z17__MsgFunc_BuildStPKciPv"], asm["__Z18__MsgFunc_RandomPCPKciPv"], asm["__Z20__MsgFunc_ServerNamePKciPv"], asm["__Z19__MsgFunc_SpectatorPKciPv"], asm["__Z19__MsgFunc_AllowSpecPKciPv"], asm["__Z18__MsgFunc_VGUIMenuPKciPv"], asm["__Z18__MsgFunc_ShowMenuPKciPv"], asm["__Z17__MsgFunc_HudTextPKciPv"], asm["__Z19__MsgFunc_GameTitlePKciPv"], asm["__Z17__MsgFunc_SayTextPKciPv"], asm["__Z20__MsgFunc_StatusIconPKciPv"], asm["__Z20__MsgFunc_StatusTextPKciPv"], asm["__Z21__MsgFunc_StatusValuePKciPv"], asm["__Z17__MsgFunc_TextMsgPKciPv"], asm["__Z15__MsgFunc_TrainPKciPv"], asm["__Z19__MsgFunc_ScoreInfoPKciPv"], asm["__Z19__MsgFunc_TeamScorePKciPv"], asm["__Z18__MsgFunc_TeamInfoPKciPv"], asm["__Z14__MsgFunc_MOTDPKciPv"], b22, b22, b22, b22, b22, b22, b22, b22, b22, b22, b22, b22, b22, b22 ];
  var SIDE_FUNCTION_TABLE_viiiiddii = [ b23 ];
  var SIDE_FUNCTION_TABLE_viiiiid = [ b24, asm["__ZN20CStudioModelRenderer16StudioSlerpBonesEPA4_fPA3_fS1_S3_f"], asm["__ZN20CStudioModelRenderer19StudioCalcRotationsEPA3_fPA4_fP16mstudioseqdesc_tP13mstudioanim_tf"], b24 ];
  var SIDE_FUNCTION_TABLE_viiiiiiii = [ b25 ];
  var SIDE_FUNCTION_TABLE_diiii = [ b26 ];
  var SIDE_FUNCTION_TABLE_ddd = [ b27 ];
  var SIDE_FUNCTION_TABLE_viid = [ b28 ];
  var SIDE_FUNCTION_TABLE_di = [ b29, asm["__ZN11CBaseEntity8GetDelayEv"], asm["__ZN11CBaseToggle8GetDelayEv"], asm["__ZN12CBaseMonster11CoverRadiusEv"], asm["__ZN12CBaseMonster18HearingSensitivityEv"], asm["__ZN20CStudioModelRenderer25StudioEstimateInterpolantEv"], b29, b29 ];
  var SIDE_FUNCTION_TABLE_viiiid = [ b30, asm["__ZN11CBaseEntity3UseEPS_S0_8USE_TYPEf"], asm["__ZN8CGrenade11DetonateUseEP11CBaseEntityS1_8USE_TYPEf"], b30 ];
  var SIDE_FUNCTION_TABLE_viidii = [ b31 ];
  var SIDE_FUNCTION_TABLE_iid = [ b32, asm["__ZN12CBaseMonster18ShouldAdvanceRouteEf"], asm["__ZN8CHudAmmo4DrawEf"], asm["__ZN17CHudAmmoSecondary4DrawEf"], asm["__ZN11CHudBattery4DrawEf"], asm["__ZN15CHudDeathNotice4DrawEf"], asm["__ZN14CHudFlashlight4DrawEf"], asm["__ZN10CHudGeiger4DrawEf"], asm["__ZN10CHudHealth4DrawEf"], asm["__ZN13CHudSpectator4DrawEf"], asm["__ZN8CHudMenu4DrawEf"], asm["__ZN11CHudMessage4DrawEf"], asm["__ZN12CHudOverview4DrawEf"], asm["__ZN11CHudSayText4DrawEf"], asm["__ZN15CHudStatusIcons4DrawEf"], asm["__ZN13CHudStatusBar4DrawEf"], asm["__ZN8CHudBase4DrawEf"], asm["__ZN9CHudTrain4DrawEf"], asm["__ZN14CHudScoreboard4DrawEf"], asm["__ZN8CHudMOTD4DrawEf"], b32, b32, b32, b32, b32, b32, b32, b32, b32, b32, b32, b32 ];
  var SIDE_FUNCTION_TABLE_viiddd = [ b33, asm["__ZN12CBaseMonster12PlaySentenceEPKcfff"] ];
  var SIDE_FUNCTION_TABLE_iiidiiiddi = [ b34 ];
  var SIDE_FUNCTION_TABLE_iii = [ b35, asm["__ZN17CBasePlayerWeapon4SaveER5CSave"], asm["__ZN17CBasePlayerWeapon7RestoreER8CRestore"], asm["__ZN11CBaseEntity11IsTriggeredEPS_"], asm["__ZN11CBaseEntity13AddPlayerItemEP15CBasePlayerItem"], asm["__ZN11CBaseEntity16RemovePlayerItemEP15CBasePlayerItem"], asm["__ZN11CBaseEntity11DamageDecalEi"], asm["__ZN11CBaseEntity10OnControlsEP9entvars_s"], asm["__ZN11CBaseEntity9HasTargetEj"], asm["__ZN11CBaseEntity8FVisibleEPS_"], asm["__ZN11CBaseEntity8FVisibleERK6Vector"], asm["__ZN9CCrossbow11AddToPlayerEP11CBasePlayer"], asm["__ZN17CBasePlayerWeapon12AddDuplicateEP15CBasePlayerItem"], asm["__ZN9CCrossbow11GetItemInfoEP8ItemInfo"], asm["__ZN17CBasePlayerWeapon16UpdateClientDataEP11CBasePlayer"], asm["__ZN17CBasePlayerWeapon11ExtractAmmoEPS_"], asm["__ZN17CBasePlayerWeapon15ExtractClipAmmoEPS_"], asm["__ZN11CBaseEntity4SaveER5CSave"], asm["__ZN11CBaseEntity7RestoreER8CRestore"], asm["__ZN13CCrossbowAmmo7AddAmmoEP11CBaseEntity"], asm["__ZN17CBasePlayerWeapon11AddToPlayerEP11CBasePlayer"], asm["__ZN8CCrowbar11GetItemInfoEP8ItemInfo"], asm["__ZN5CEgon11AddToPlayerEP11CBasePlayer"], asm["__ZN5CEgon11GetItemInfoEP8ItemInfo"], asm["__ZN9CEgonAmmo7AddAmmoEP11CBaseEntity"], asm["__ZN6CGauss11AddToPlayerEP11CBasePlayer"], asm["__ZN6CGauss11GetItemInfoEP8ItemInfo"], asm["__ZN10CGaussAmmo7AddAmmoEP11CBaseEntity"], asm["__ZN12CHandGrenade11GetItemInfoEP8ItemInfo"], asm["__ZN10CBaseDelay4SaveER5CSave"], asm["__ZN10CBaseDelay7RestoreER8CRestore"], asm["__ZN14CBaseAnimating4SaveER5CSave"], asm["__ZN14CBaseAnimating7RestoreER8CRestore"], asm["__ZN11CBaseToggle4SaveER5CSave"], asm["__ZN11CBaseToggle7RestoreER8CRestore"], asm["__ZN12CBaseMonster4SaveER5CSave"], asm["__ZN12CBaseMonster7RestoreER8CRestore"], asm["__ZN12CBaseMonster13IRelationshipEP11CBaseEntity"], asm["__ZN12CBaseMonster11FInViewConeEP11CBaseEntity"], asm["__ZN12CBaseMonster11FInViewConeEP6Vector"], asm["__ZN12CBaseMonster16ScheduleFromNameEPKc"], asm["__ZN12CBaseMonster17GetScheduleOfTypeEi"], asm["__ZN12CBaseMonster15CanPlaySentenceEi"], asm["__ZN12CBaseMonster10CheckEnemyEP11CBaseEntity"], asm["__ZN12CBaseMonster14FValidateCoverERK6Vector"], asm["__ZN12CBaseMonster17FValidateHintTypeEs"], asm["__ZN15CBasePlayerItem11GetItemInfoEP8ItemInfo"], asm["__ZN15CBasePlayerItem4SaveER5CSave"], asm["__ZN15CBasePlayerItem7RestoreER8CRestore"], asm["__ZN15CBasePlayerItem11AddToPlayerEP11CBasePlayer"], asm["__ZN15CBasePlayerItem12AddDuplicateEPS_"], asm["__ZN15CBasePlayerItem16UpdateClientDataEP11CBasePlayer"], asm["__ZN15CBasePlayerAmmo7AddAmmoEP11CBaseEntity"], asm["__ZN11CBasePlayer4SaveER5CSave"], asm["__ZN11CBasePlayer7RestoreER8CRestore"], asm["__ZN11CBasePlayer13AddPlayerItemEP15CBasePlayerItem"], asm["__ZN11CBasePlayer16RemovePlayerItemEP15CBasePlayerItem"], asm["__ZN5CHgun11AddToPlayerEP11CBasePlayer"], asm["__ZN5CHgun11GetItemInfoEP8ItemInfo"], asm["__ZN4CMP511AddToPlayerEP11CBasePlayer"], asm["__ZN4CMP511GetItemInfoEP8ItemInfo"], asm["__ZN12CMP5AmmoClip7AddAmmoEP11CBaseEntity"], asm["__ZN13CMP5Chainammo7AddAmmoEP11CBaseEntity"], asm["__ZN15CMP5AmmoGrenade7AddAmmoEP11CBaseEntity"], asm["__ZN7CPython11AddToPlayerEP11CBasePlayer"], asm["__ZN7CPython11GetItemInfoEP8ItemInfo"], asm["__ZN11CPythonAmmo7AddAmmoEP11CBaseEntity"], asm["__ZN4CRpg11AddToPlayerEP11CBasePlayer"], asm["__ZN4CRpg11GetItemInfoEP8ItemInfo"], asm["__ZN8CRpgAmmo7AddAmmoEP11CBaseEntity"], asm["__ZN8CSatchel11AddToPlayerEP11CBasePlayer"], asm["__ZN8CSatchel12AddDuplicateEP15CBasePlayerItem"], asm["__ZN8CSatchel11GetItemInfoEP8ItemInfo"], asm["__ZN8CShotgun11AddToPlayerEP11CBasePlayer"], asm["__ZN8CShotgun11GetItemInfoEP8ItemInfo"], asm["__ZN12CShotgunAmmo7AddAmmoEP11CBaseEntity"], asm["__ZN7CSqueak11GetItemInfoEP8ItemInfo"], asm["__ZN9CTripmine11GetItemInfoEP8ItemInfo"], asm["__ZN6CGlock11GetItemInfoEP8ItemInfo"], asm["__ZN10CGlockAmmo7AddAmmoEP11CBaseEntity"], asm["__Z18R_StudioDrawPlayeriP14entity_state_s"], asm["__ZN20CStudioModelRenderer15StudioDrawModelEi"], b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35, b35 ];
  var SIDE_FUNCTION_TABLE_dii = [ b36, asm["__ZN12CBaseMonster9ChangeYawEi"], asm["__ZN20CStudioModelRenderer19StudioEstimateFrameEP16mstudioseqdesc_t"], b36 ];
  var SIDE_FUNCTION_TABLE_viiidiiddiiii = [ b37, asm["__Z17HUD_PlaybackEventiPK7edict_stfPfS2_ffiiii"] ];
  var SIDE_FUNCTION_TABLE_d = [ b38 ];
  var SIDE_FUNCTION_TABLE_viii = [ b39, asm["__ZN11CBaseEntity6KilledEP9entvars_si"], asm["__ZN11CBaseEntity9AddPointsEii"], asm["__ZN11CBaseEntity15AddPointsToTeamEii"], asm["__ZN11CBaseEntity10BodyTargetERK6Vector"], asm["__ZN8CGrenade6KilledEP9entvars_si"], asm["__ZN12CBaseMonster10BodyTargetERK6Vector"], asm["__ZN12CBaseMonster6KilledEP9entvars_si"], asm["__ZN11CBasePlayer6KilledEP9entvars_si"], asm["__ZN11CBasePlayer9AddPointsEii"], asm["__ZN11CBasePlayer15AddPointsToTeamEii"], asm["__ZN11CBasePlayer10BodyTargetERK6Vector"], asm["__ZN20CStudioModelRenderer17StudioFxTransformEP11cl_entity_sPA4_f"], asm["__Z12AlertMessage10ALERT_TYPEPcz"], b39, b39 ];
  var SIDE_FUNCTION_TABLE_i = [ b40 ];
  var SIDE_FUNCTION_TABLE_iiiii = [ b41, asm["__ZN11CBaseEntity8GiveAmmoEiPci"], asm["__ZN11CBasePlayer8GiveAmmoEiPci"], b41 ];
  var SIDE_FUNCTION_TABLE_viiid = [ b42, asm["__ZN12CBaseMonster11MoveExecuteEP11CBaseEntityRK6Vectorf"] ];
  var SIDE_FUNCTION_TABLE_vdddd = [ b43 ];
  var SIDE_FUNCTION_TABLE_vdd = [ b44 ];
  var SIDE_FUNCTION_TABLE_v = [ b45, asm["__Z15__CmdFunc_Slot1v"], asm["__Z15__CmdFunc_Slot2v"], asm["__Z15__CmdFunc_Slot3v"], asm["__Z15__CmdFunc_Slot4v"], asm["__Z15__CmdFunc_Slot5v"], asm["__Z15__CmdFunc_Slot6v"], asm["__Z15__CmdFunc_Slot7v"], asm["__Z15__CmdFunc_Slot8v"], asm["__Z15__CmdFunc_Slot9v"], asm["__Z16__CmdFunc_Slot10v"], asm["__Z15__CmdFunc_Closev"], asm["__Z20__CmdFunc_NextWeaponv"], asm["__Z20__CmdFunc_PrevWeaponv"], asm["__Z25__CmdFunc_OpenCommandMenuv"], asm["__Z26__CmdFunc_CloseCommandMenuv"], asm["__Z31__CmdFunc_ForceCloseCommandMenuv"], asm["__Z28__CmdFunc_InputPlayerSpecialv"], asm["__Z29__CmdFunc_ToggleServerBrowserv"], asm["__Z13SpectatorModev"], asm["__Z14SpectatorSprayv"], asm["__Z13SpectatorHelpv"], asm["__Z13SpectatorMenuv"], asm["__Z12ToggleScoresv"], asm["__Z15CAM_PitchUpDownv"], asm["__Z13CAM_PitchUpUpv"], asm["__Z17CAM_PitchDownDownv"], asm["__Z15CAM_PitchDownUpv"], asm["__Z15CAM_YawLeftDownv"], asm["__Z13CAM_YawLeftUpv"], asm["__Z16CAM_YawRightDownv"], asm["__Z14CAM_YawRightUpv"], asm["__Z10CAM_InDownv"], asm["__Z8CAM_InUpv"], asm["__Z11CAM_OutDownv"], asm["__Z9CAM_OutUpv"], asm["__Z17CAM_ToThirdPersonv"], asm["__Z17CAM_ToFirstPersonv"], asm["__Z18CAM_StartMouseMovev"], asm["__Z16CAM_EndMouseMovev"], asm["__Z17CAM_StartDistancev"], asm["__Z15CAM_EndDistancev"], asm["__Z16CAM_ToggleSnaptov"], asm["__Z9IN_UpDownv"], asm["__Z7IN_UpUpv"], asm["__Z11IN_DownDownv"], asm["__Z9IN_DownUpv"], asm["__Z11IN_LeftDownv"], asm["__Z9IN_LeftUpv"], asm["__Z12IN_RightDownv"], asm["__Z10IN_RightUpv"], asm["__Z14IN_ForwardDownv"], asm["__Z12IN_ForwardUpv"], asm["__Z11IN_BackDownv"], asm["__Z9IN_BackUpv"], asm["__Z13IN_LookupDownv"], asm["__Z11IN_LookupUpv"], asm["__Z15IN_LookdownDownv"], asm["__Z13IN_LookdownUpv"], asm["__Z13IN_StrafeDownv"], asm["__Z11IN_StrafeUpv"], asm["__Z15IN_MoveleftDownv"], asm["__Z13IN_MoveleftUpv"], asm["__Z16IN_MoverightDownv"], asm["__Z14IN_MoverightUpv"], asm["__Z12IN_SpeedDownv"], asm["__Z10IN_SpeedUpv"], asm["__Z13IN_AttackDownv"], asm["__Z11IN_AttackUpv"], asm["__Z14IN_Attack2Downv"], asm["__Z12IN_Attack2Upv"], asm["__Z10IN_UseDownv"], asm["__Z8IN_UseUpv"], asm["__Z11IN_JumpDownv"], asm["__Z9IN_JumpUpv"], asm["__Z10IN_Impulsev"], asm["__Z12IN_KLookDownv"], asm["__Z10IN_KLookUpv"], asm["__Z12IN_MLookDownv"], asm["__Z10IN_MLookUpv"], asm["__Z12IN_JLookDownv"], asm["__Z10IN_JLookUpv"], asm["__Z11IN_DuckDownv"], asm["__Z9IN_DuckUpv"], asm["__Z13IN_ReloadDownv"], asm["__Z11IN_ReloadUpv"], asm["__Z11IN_Alt1Downv"], asm["__Z9IN_Alt1Upv"], asm["__Z12IN_GraphDownv"], asm["__Z10IN_GraphUpv"], asm["__Z12IN_BreakDownv"], asm["__Z10IN_BreakUpv"], asm["__Z20__CmdFunc_ShowScoresv"], asm["__Z20__CmdFunc_HideScoresv"], b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45, b45 ];
  var SIDE_FUNCTION_TABLE_vdi = [ b46 ];
  var SIDE_FUNCTION_TABLE_viiddii = [ b47 ];
  var SIDE_FUNCTION_TABLE_vidiii = [ b48, asm["__ZN11CBaseEntity10TraceBleedEf6VectorP11TraceResulti"] ];
  var SIDE_FUNCTION_TABLE_viiii = [ b49, asm["__ZN17CBasePlayerWeapon14SendWeaponAnimEiii"], asm["__ZN20CStudioModelRenderer17StudioPlayerBlendEP16mstudioseqdesc_tPiPf"], b49 ];
  Module["dynCall_iiiiiiii"] = dynCall_iiiiiiii;
  Module["dynCall_viiiii"] = dynCall_viiiii;
  Module["dynCall_vddd"] = dynCall_vddd;
  Module["dynCall_vid"] = dynCall_vid;
  Module["dynCall_iiiidi"] = dynCall_iiiidi;
  Module["dynCall_vi"] = dynCall_vi;
  Module["dynCall_iiiidd"] = dynCall_iiiidd;
  Module["dynCall_vii"] = dynCall_vii;
  Module["dynCall_iiiiiii"] = dynCall_iiiiiii;
  Module["dynCall_ii"] = dynCall_ii;
  Module["dynCall_viiiiidddid"] = dynCall_viiiiidddid;
  Module["dynCall_viidiii"] = dynCall_viidiii;
  Module["dynCall_iidd"] = dynCall_iidd;
  Module["dynCall_viidiiii"] = dynCall_viidiiii;
  Module["dynCall_iidi"] = dynCall_iidi;
  Module["dynCall_viidddii"] = dynCall_viidddii;
  Module["dynCall_iiiidddddidddd"] = dynCall_iiiidddddidddd;
  Module["dynCall_iiiiii"] = dynCall_iiiiii;
  Module["dynCall_vidi"] = dynCall_vidi;
  Module["dynCall_vidiiii"] = dynCall_vidiiii;
  Module["dynCall_iiiidii"] = dynCall_iiiidii;
  Module["dynCall_vidd"] = dynCall_vidd;
  Module["dynCall_iiii"] = dynCall_iiii;
  Module["dynCall_viiiiddii"] = dynCall_viiiiddii;
  Module["dynCall_viiiiid"] = dynCall_viiiiid;
  Module["dynCall_viiiiiiii"] = dynCall_viiiiiiii;
  Module["dynCall_diiii"] = dynCall_diiii;
  Module["dynCall_ddd"] = dynCall_ddd;
  Module["dynCall_viid"] = dynCall_viid;
  Module["dynCall_di"] = dynCall_di;
  Module["dynCall_viiiid"] = dynCall_viiiid;
  Module["dynCall_viidii"] = dynCall_viidii;
  Module["dynCall_iid"] = dynCall_iid;
  Module["dynCall_viiddd"] = dynCall_viiddd;
  Module["dynCall_iiidiiiddi"] = dynCall_iiidiiiddi;
  Module["dynCall_iii"] = dynCall_iii;
  Module["dynCall_dii"] = dynCall_dii;
  Module["dynCall_viiidiiddiiii"] = dynCall_viiidiiddiiii;
  Module["dynCall_d"] = dynCall_d;
  Module["dynCall_viii"] = dynCall_viii;
  Module["dynCall_i"] = dynCall_i;
  Module["dynCall_iiiii"] = dynCall_iiiii;
  Module["dynCall_viiid"] = dynCall_viiid;
  Module["dynCall_vdddd"] = dynCall_vdddd;
  Module["dynCall_vdd"] = dynCall_vdd;
  Module["dynCall_v"] = dynCall_v;
  Module["dynCall_vdi"] = dynCall_vdi;
  Module["dynCall_viiddii"] = dynCall_viiddii;
  Module["dynCall_vidiii"] = dynCall_vidiii;
  Module["dynCall_viiii"] = dynCall_viiii;
  Module["FUNCTION_TABLE_iiiiiiii"] = SIDE_FUNCTION_TABLE_iiiiiiii;
  Module["FUNCTION_TABLE_viiiii"] = SIDE_FUNCTION_TABLE_viiiii;
  Module["FUNCTION_TABLE_vddd"] = SIDE_FUNCTION_TABLE_vddd;
  Module["FUNCTION_TABLE_vid"] = SIDE_FUNCTION_TABLE_vid;
  Module["FUNCTION_TABLE_iiiidi"] = SIDE_FUNCTION_TABLE_iiiidi;
  Module["FUNCTION_TABLE_vi"] = SIDE_FUNCTION_TABLE_vi;
  Module["FUNCTION_TABLE_iiiidd"] = SIDE_FUNCTION_TABLE_iiiidd;
  Module["FUNCTION_TABLE_vii"] = SIDE_FUNCTION_TABLE_vii;
  Module["FUNCTION_TABLE_iiiiiii"] = SIDE_FUNCTION_TABLE_iiiiiii;
  Module["FUNCTION_TABLE_ii"] = SIDE_FUNCTION_TABLE_ii;
  Module["FUNCTION_TABLE_viiiiidddid"] = SIDE_FUNCTION_TABLE_viiiiidddid;
  Module["FUNCTION_TABLE_viidiii"] = SIDE_FUNCTION_TABLE_viidiii;
  Module["FUNCTION_TABLE_iidd"] = SIDE_FUNCTION_TABLE_iidd;
  Module["FUNCTION_TABLE_viidiiii"] = SIDE_FUNCTION_TABLE_viidiiii;
  Module["FUNCTION_TABLE_iidi"] = SIDE_FUNCTION_TABLE_iidi;
  Module["FUNCTION_TABLE_viidddii"] = SIDE_FUNCTION_TABLE_viidddii;
  Module["FUNCTION_TABLE_iiiidddddidddd"] = SIDE_FUNCTION_TABLE_iiiidddddidddd;
  Module["FUNCTION_TABLE_iiiiii"] = SIDE_FUNCTION_TABLE_iiiiii;
  Module["FUNCTION_TABLE_vidi"] = SIDE_FUNCTION_TABLE_vidi;
  Module["FUNCTION_TABLE_vidiiii"] = SIDE_FUNCTION_TABLE_vidiiii;
  Module["FUNCTION_TABLE_iiiidii"] = SIDE_FUNCTION_TABLE_iiiidii;
  Module["FUNCTION_TABLE_vidd"] = SIDE_FUNCTION_TABLE_vidd;
  Module["FUNCTION_TABLE_iiii"] = SIDE_FUNCTION_TABLE_iiii;
  Module["FUNCTION_TABLE_viiiiddii"] = SIDE_FUNCTION_TABLE_viiiiddii;
  Module["FUNCTION_TABLE_viiiiid"] = SIDE_FUNCTION_TABLE_viiiiid;
  Module["FUNCTION_TABLE_viiiiiiii"] = SIDE_FUNCTION_TABLE_viiiiiiii;
  Module["FUNCTION_TABLE_diiii"] = SIDE_FUNCTION_TABLE_diiii;
  Module["FUNCTION_TABLE_ddd"] = SIDE_FUNCTION_TABLE_ddd;
  Module["FUNCTION_TABLE_viid"] = SIDE_FUNCTION_TABLE_viid;
  Module["FUNCTION_TABLE_di"] = SIDE_FUNCTION_TABLE_di;
  Module["FUNCTION_TABLE_viiiid"] = SIDE_FUNCTION_TABLE_viiiid;
  Module["FUNCTION_TABLE_viidii"] = SIDE_FUNCTION_TABLE_viidii;
  Module["FUNCTION_TABLE_iid"] = SIDE_FUNCTION_TABLE_iid;
  Module["FUNCTION_TABLE_viiddd"] = SIDE_FUNCTION_TABLE_viiddd;
  Module["FUNCTION_TABLE_iiidiiiddi"] = SIDE_FUNCTION_TABLE_iiidiiiddi;
  Module["FUNCTION_TABLE_iii"] = SIDE_FUNCTION_TABLE_iii;
  Module["FUNCTION_TABLE_dii"] = SIDE_FUNCTION_TABLE_dii;
  Module["FUNCTION_TABLE_viiidiiddiiii"] = SIDE_FUNCTION_TABLE_viiidiiddiiii;
  Module["FUNCTION_TABLE_d"] = SIDE_FUNCTION_TABLE_d;
  Module["FUNCTION_TABLE_viii"] = SIDE_FUNCTION_TABLE_viii;
  Module["FUNCTION_TABLE_i"] = SIDE_FUNCTION_TABLE_i;
  Module["FUNCTION_TABLE_iiiii"] = SIDE_FUNCTION_TABLE_iiiii;
  Module["FUNCTION_TABLE_viiid"] = SIDE_FUNCTION_TABLE_viiid;
  Module["FUNCTION_TABLE_vdddd"] = SIDE_FUNCTION_TABLE_vdddd;
  Module["FUNCTION_TABLE_vdd"] = SIDE_FUNCTION_TABLE_vdd;
  Module["FUNCTION_TABLE_v"] = SIDE_FUNCTION_TABLE_v;
  Module["FUNCTION_TABLE_vdi"] = SIDE_FUNCTION_TABLE_vdi;
  Module["FUNCTION_TABLE_viiddii"] = SIDE_FUNCTION_TABLE_viiddii;
  Module["FUNCTION_TABLE_vidiii"] = SIDE_FUNCTION_TABLE_vidiii;
  Module["FUNCTION_TABLE_viiii"] = SIDE_FUNCTION_TABLE_viiii;
  var NAMED_GLOBALS = {
   "_ZTS9CCrossbow": 36624,
   "_ZTS14CBaseAnimating": 37890,
   "rgDeathNoticeList": 92912,
   "g_Mp5": 23576,
   "v_centerspeed": 116332,
   "g_lastFOV": 93760,
   "_ZTS14CHudScoreboard": 44860,
   "_ZTI8CHudMenu": 17264,
   "g_Satchel": 25276,
   "g_Egon": 24632,
   "_ZTI9CTripmine": 504,
   "_ZTS11CHudBattery": 40136,
   "_ZTV14CBaseAnimating": 20484,
   "_ZTI15CHudTextMessage": 17368,
   "giDmgHeight": 93732,
   "v_iroll_cycle": 36108,
   "g_hud_text_color": 93744,
   "_ZTI8CHudAmmo": 552,
   "gMobileEngfuncs": 92876,
   "_ZTS4CRpg": 38810,
   "_ZTV10CGaussAmmo": 19404,
   "g_ColorGrey": 34988,
   "cl_bobup": 116344,
   "in_alt1": 94260,
   "cam_idealyaw": 93776,
   "g_StudioRenderer": 640,
   "_ZTI15CBasePlayerItem": 232,
   "_ZTI11CBaseToggle": 168,
   "gSkillData": 59016,
   "nanmask": 36520,
   "_ZTI12CShotgunAmmo": 472,
   "c_minyaw": 93804,
   "_ZTS13CMP5Chainammo": 38504,
   "_ZTS9CTripmine": 39410,
   "_ZTV8CCrowbar": 18040,
   "vJumpAngles": 116224,
   "_ZN15CBasePlayerItem13ItemInfoArrayE": 57608,
   "_ZTS10CGaussAmmo": 37801,
   "_ZTV12CHandGrenade": 19644,
   "rel_yaw": 118476,
   "cl_showpacketloss": 118500,
   "_ZTS13CHudStatusBar": 43556,
   "in_speed": 94152,
   "_ZTS14CHudFlashlight": 40460,
   "v_resetCamera": 36084,
   "vJumpOrigin": 116212,
   "g_Python": 23368,
   "vec3_origin": 121124,
   "in_attack2": 94200,
   "_ZTI4CMP5": 296,
   "cl_anglespeedkey": 94e3,
   "_ZTS10CHudHealth": 40592,
   "studio": 35088,
   "_ZTV8CShotgun": 31840,
   "g_iUser2": 121108,
   "g_iUser3": 121112,
   "g_iUser1": 121104,
   "v_ipitch_level": 36188,
   "g_HGun": 24868,
   "_ZTS11CBasePlayer": 38152,
   "_ZTS20CStudioModelRenderer": 43744,
   "_ZTV11CBaseToggle": 20724,
   "in_impulse": 93932,
   "c_mindistance": 93812,
   "_ZTV15CHudDeathNotice": 35e3,
   "v_angles": 116248,
   "_ZTS10CBaseDelay": 37877,
   "_ZTS9CHudTrain": 43820,
   "c_maxyaw": 93800,
   "HISTORY_DRAW_TIME": 33872,
   "_ZTS7CSqueak": 39372,
   "_ZTV15CHudStatusIcons": 35768,
   "gHUD": 46040,
   "in_jump": 94176,
   "_ZTI17CBasePlayerWeapon": 216,
   "in_lookdown": 94104,
   "lookspring": 93960,
   "in_forward": 94068,
   "_ZTV11CHudMessage": 35648,
   "_ZTS11CBaseEntity": 37863,
   "in_attack": 94188,
   "iMouseInUse": 93836,
   "cam_snapto": 93772,
   "g_Crossbow": 23784,
   "gpGlobals": 57604,
   "_ZTV8CSatchel": 31472,
   "giBucketHeight": 92104,
   "_ZTV11CHudBattery": 33876,
   "_ZTV8CHudMOTD": 36384,
   "cam_mousemove": 93832,
   "_ZTI11CPythonAmmo": 376,
   "_ZTI11CBaseEntity": 128,
   "_ZTI8CShotgun": 456,
   "in_joystick": 118456,
   "_ZTV11CBaseEntity": 20012,
   "v_cameraMode": 36080,
   "gHR": 92140,
   "cl_chasedist": 116352,
   "seed_table": 33916,
   "_ZTS15CHudTextMessage": 43775,
   "ghsprBuckets": 92120,
   "m_forward": 93948,
   "_ZTS12CHandGrenade": 37848,
   "_ZTV14CHudScoreboard": 36344,
   "_ZTI8CRpgAmmo": 408,
   "ac_forwardmove": 118464,
   "_ZTI10CBaseDelay": 136,
   "gEngfuncs": 92340,
   "_ZTI10CHudGeiger": 17216,
   "ac_movecount": 118472,
   "_ZTS10CHudGeiger": 40531,
   "_ZTI15CBasePlayerAmmo": 248,
   "_ZTS12CBaseMonster": 37931,
   "g_iAlive": 35044,
   "_ZTV12CMP5AmmoClip": 29024,
   "v_lastAngles": 116284,
   "v_lastDistance": 116300,
   "_ZTI10CGaussAmmo": 96,
   "_ZTS13CCrossbowAmmo": 36635,
   "g_engfuncs": 56972,
   "_ZTS10CGlockAmmo": 39645,
   "_ZTV8CRpgAmmo": 30720,
   "previousorigin": 59364,
   "m_yaw": 93944,
   "_ZTI6CGauss": 80,
   "cl_laddermode": 118460,
   "v_sim_org": 116272,
   "cam_ofs": 93816,
   "cl_sidespeed": 93984,
   "g_vecZero": 56956,
   "g_iSwing": 56816,
   "_ZTI8CHudBase": 568,
   "_ZTI11CBasePlayer": 264,
   "c_minpitch": 93796,
   "c_maxdistance": 93808,
   "g_onladder": 121140,
   "v_centermove": 116328,
   "gpLastSel": 81324,
   "_ZTV15CMP5AmmoGrenade": 29504,
   "in_up": 94212,
   "_ZTV10CBaseDelay": 20248,
   "_ZTV15CBasePlayerItem": 22352,
   "_ZTI14CBaseAnimating": 152,
   "in_down": 94224,
   "_ZTS17CBasePlayerWeapon": 37946,
   "in_use": 94164,
   "g_Tripmine": 25472,
   "_ZTS9CEgonAmmo": 36873,
   "pmove": 121136,
   "vecNewViewAngles": 116176,
   "g_iTeamNumber": 121116,
   "_ZTV8CHudAmmo": 33792,
   "iHasNewViewOrigin": 116204,
   "_ZTV12CBaseMonster": 21476,
   "m_pitch": 93940,
   "_ZTS8CGrenade": 37921,
   "v_cl_angles": 116260,
   "lookstrafe": 93956,
   "g_szPrelocalisedMenuString": 125465,
   "in_moveright": 94128,
   "v_iyaw_cycle": 36088,
   "_ZTV9CEgonAmmo": 18776,
   "_ZTS15CBasePlayerItem": 37966,
   "_ZTS13CHudSpectator": 42069,
   "in_back": 94080,
   "v_cameraFocusAngle": 36076,
   "in_cancel": 93936,
   "cam_command": 93768,
   "g_Rpg": 24200,
   "giBucketWidth": 92108,
   "_ZTV14CSatchelCharge": 30960,
   "_ZTI11CHudBattery": 592,
   "_ZTI14CHudFlashlight": 624,
   "_ZTV6CGlock": 33184,
   "_ZTI12CBaseMonster": 200,
   "pBeam2": 56824,
   "_ZTI13CHudSpectator": 17248,
   "_ZTI8CSatchel": 440,
   "_ZTS24CGameStudioModelRenderer": 40477,
   "legs_bones": 35848,
   "_ZTS6CGlock": 39616,
   "_ZTV11CBasePlayer": 25876,
   "g_runfuncs": 92896,
   "gpActiveSel": 81320,
   "v_iyaw_level": 36148,
   "cam_idealpitch": 93780,
   "_ZTS8CShotgun": 39236,
   "_ZTI14CHudScoreboard": 17400,
   "cl_forwardspeed": 93976,
   "g_pCustomMessage": 94324,
   "cam_contain": 93788,
   "_ZTS14CSatchelCharge": 38953,
   "_ZTS8CRpgAmmo": 38837,
   "_ZTI6CGlock": 520,
   "g_kbkeys": 94308,
   "_ZTI8CCrowbar": 32,
   "g_demosniperangles": 93712,
   "_ZTV13CMP5Chainammo": 29264,
   "_ZTS12CShotgunAmmo": 39267,
   "g_finalstate": 92900,
   "giDmgFlags": 35252,
   "_ZTS5CEgon": 36866,
   "ev_punchangle": 116304,
   "_ZTV17CHudAmmoSecondary": 33832,
   "cl_vsmoothing": 94004,
   "v_origin": 116236,
   "_ZTI4CRpg": 392,
   "_ZTS15CMP5AmmoGrenade": 38543,
   "_ZTV5CHgun": 28288,
   "_ZTS12CMP5AmmoClip": 38466,
   "_ZTI8CGrenade": 184,
   "_ZTV9CHudTrain": 36032,
   "in_klook": 94020,
   "_ZTS15CHudDeathNotice": 40340,
   "_ZTV10CGlockAmmo": 33552,
   "_ZTV12CHudOverview": 35688,
   "_ZTI5CHgun": 280,
   "in_moveleft": 94116,
   "_ZTI11CHudSayText": 17312,
   "v_frametime": 116296,
   "_ZTI12CMP5AmmoClip": 312,
   "v_ipitch_cycle": 36128,
   "v_iroll_level": 36168,
   "sensitivity": 118452,
   "giABHeight": 92112,
   "g_flApplyVel": 59356,
   "_ZTS8CCrowbar": 36818,
   "_ZTS11CHudSayText": 43444,
   "_ZTI9CEgonAmmo": 64,
   "v_cameraRelaxAngle": 36072,
   "gWR": 81328,
   "_ZTV13CHudSpectator": 35564,
   "_ZTV7CPython": 29744,
   "in_graph": 94296,
   "g_Crowbar": 23108,
   "_ZTV10CHudGeiger": 35212,
   "_ZTI15CHudStatusIcons": 17328,
   "_ZTI20CStudioModelRenderer": 17360,
   "_ZTS6CGauss": 37770,
   "_ZTI24CGameStudioModelRenderer": 17200,
   "g_pCustomText": 125977,
   "in_mlook": 94008,
   "_ZTI9CHudTrain": 17384,
   "_ZTS11CPythonAmmo": 38711,
   "c_maxpitch": 93792,
   "_ZTV17CBasePlayerWeapon": 21984,
   "grgLogoFrame": 35340,
   "_ZTI9CCrossbow": 0,
   "g_ColorRed": 34952,
   "_ZTV13CCrossbowAmmo": 17800,
   "g_iPlayerClass": 121120,
   "m_side": 93952,
   "v_idlescale": 116356,
   "_ZTV5CEgon": 18408,
   "_ZTV8CGrenade": 20964,
   "_ZTV9CCrossbow": 17432,
   "g_weaponselect": 92100,
   "cl_backspeed": 93980,
   "iIsSpectator": 116208,
   "_ZTV15CBasePlayerAmmo": 22664,
   "pBeam": 56820,
   "cl_pitchup": 93964,
   "cam_distancemove": 93840,
   "_ZTS8CHudAmmo": 40023,
   "g_demosniperorg": 93700,
   "_ZTS4CMP5": 38460,
   "g_demosniperdamage": 93696,
   "IEngineStudio": 94440,
   "_ZTS15CHudStatusIcons": 43495,
   "_ZTV4CMP5": 28656,
   "g_ColorBlue": 34940,
   "cl_pitchdown": 93968,
   "g_TeamInfo": 118504,
   "in_right": 94056,
   "_ZTS8CHudBase": 40033,
   "SCOREBOARD_WIDTH": 36340,
   "_ZTS11CHudMessage": 43326,
   "in_fov": 93764,
   "cam_mouse": 93852,
   "_ZTV24CGameStudioModelRenderer": 35100,
   "cl_bob": 116340,
   "_ZTV6CGauss": 19036,
   "cl_waterdist": 116348,
   "_ZTV11CPythonAmmo": 30112,
   "cl_yawspeed": 93992,
   "g_Snark": 25672,
   "cam_thirdperson": 93828,
   "in_reload": 94248,
   "iHasNewViewAngles": 116188,
   "g_Gauss": 24412,
   "vecNewViewOrigin": 116192,
   "g_Shotgun": 23988,
   "_ZTI7CSqueak": 488,
   "_ZTS17CHudAmmoSecondary": 40066,
   "in_strafe": 94140,
   "ac_sidemove": 118468,
   "cam_idealdist": 93784,
   "g_irunninggausspred": 59360,
   "_ZTV9CTripmine": 32816,
   "cl_lw": 93756,
   "_ZTI7CPython": 360,
   "in_jlook": 94032,
   "_ZTI12CHudOverview": 17296,
   "g_szMenuString": 124953,
   "_ZTV20CStudioModelRenderer": 35880,
   "_ZTV4CRpg": 30352,
   "cl_movespeedkey": 93988,
   "g_demosniper": 93692,
   "_ZTS8CHudMenu": 43244,
   "_ZTS12CHudOverview": 43376,
   "g_PlayerExtraInfo": 122336,
   "g_ColorGreen": 34964,
   "giDmgWidth": 93736,
   "_ZTI10CHudHealth": 17232,
   "_ZTS7CPython": 38702,
   "_ZTI13CMP5Chainammo": 328,
   "_ZTI15CHudDeathNotice": 608,
   "cl_pitchspeed": 93996,
   "g_Glock": 22904,
   "g_ColorYellow": 34976,
   "g_PlayerInfoList": 54736,
   "_ZTI10CGlockAmmo": 536,
   "_ZTS15CBasePlayerAmmo": 37984,
   "_ZTI13CCrossbowAmmo": 16,
   "iJumpSpectator": 121144,
   "in_break": 94284,
   "scr_ofsy": 116320,
   "scr_ofsx": 116316,
   "scr_ofsz": 116324,
   "g_demozoom": 93724,
   "_ZTS11CBaseToggle": 37907,
   "_ZTV7CSqueak": 32448,
   "_ZTI11CHudMessage": 17280,
   "_ZTV14CHudFlashlight": 35048,
   "_ZTI14CSatchelCharge": 424,
   "rel_pitch": 118480,
   "_ZTI12CHandGrenade": 112,
   "cam_old_mouse_y": 93848,
   "cam_old_mouse_x": 93844,
   "_ZTI15CMP5AmmoGrenade": 344,
   "_ZTS8CHudMOTD": 44882,
   "_ZTV15CHudTextMessage": 35992,
   "in_lookup": 94092,
   "in_score": 94272,
   "_ZTI13CHudStatusBar": 17344,
   "g_pCustomName": 35644,
   "dead_viewangles": 118484,
   "g_fireAnims1": 19016,
   "g_fireAnims2": 19032,
   "cl_upspeed": 93972,
   "_ZTI8CHudMOTD": 17416,
   "_ZTV8CHudMenu": 35604,
   "cl_bobcycle": 116336,
   "in_left": 94044,
   "g_HandGren": 25080,
   "in_duck": 94236,
   "_ZTV11CHudSayText": 35728,
   "giABWidth": 92116,
   "_ZTI5CEgon": 48,
   "_ZTV12CShotgunAmmo": 32208,
   "_ZTS8CSatchel": 39011,
   "hud_textmode": 93740,
   "gmsgWeapPickup": 56968,
   "_ZTV10CHudHealth": 35300,
   "_ZTI17CHudAmmoSecondary": 576,
   "_ZTS5CHgun": 38239,
   "_ZTV13CHudStatusBar": 35808
  };
  for (var named in NAMED_GLOBALS) {
   Module["_" + named] = gb + NAMED_GLOBALS[named];
  }
  Module["NAMED_GLOBALS"] = NAMED_GLOBALS;
  Module["__ZN24CGameStudioModelRendererC1Ev"] = Module["__ZN24CGameStudioModelRendererC2Ev"];
  Module["__ZN4CHudD1Ev"] = Module["__ZN4CHudD2Ev"];
  Module["__ZN20CStudioModelRendererC1Ev"] = Module["__ZN20CStudioModelRendererC2Ev"];
  Module["__ZN20CStudioModelRendererD1Ev"] = Module["__ZN20CStudioModelRendererD2Ev"];
  Runtime.registerFunctions([ "iiiiiiii", "viiiii", "vddd", "vid", "iiiidi", "vi", "iiiidd", "vii", "iiiiiii", "ii", "viiiiidddid", "viidiii", "iidd", "viidiiii", "iidi", "viidddii", "iiiidddddidddd", "iiiiii", "vidi", "vidiiii", "iiiidii", "vidd", "iiii", "viiiiddii", "viiiiid", "viiiiiiii", "diiii", "ddd", "viid", "di", "viiiid", "viidii", "iid", "viiddd", "iiidiiiddi", "iii", "dii", "viiidiiddiiii", "d", "viii", "i", "iiiii", "viiid", "vdddd", "vdd", "v", "vdi", "viiddii", "vidiii", "viiii" ], Module);
  __ATPRERUN__.push(runPostSets);
  if (runtimeInitialized) {
   callRuntimeCallbacks(__ATPRERUN__);
   callRuntimeCallbacks(__ATINIT__);
  }
  return Module;
 });
 var lib_module = newModule(Runtime.alignFunctionTables(), Module);
 var handle = 1;
 var filename = "client";
 for (var key in Module.DLFCN.loadedLibs) {
  if (Module.DLFCN.loadedLibs.hasOwnProperty(key)) handle++;
 }
 Module.DLFCN.loadedLibs[handle] = {
  refcount: 999,
  name: filename,
  module: lib_module,
  cached_functions: {}
 };
 Module.DLFCN.loadedLibNames[filename] = handle;
 Module.print("Module " + filename + " loaded as " + handle);
}




